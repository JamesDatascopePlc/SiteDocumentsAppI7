{
    "pipes": [
        {
            "name": "FilterOutPipe",
            "id": "pipe-FilterOutPipe-6803932f0d06d66718724214489b565ff71ed78ed7c0164b8049a06e8e829854f45df0ab9cb91016cc545b8edc85094411cf82ce7c518eec3f50faab0810e56b",
            "file": "src/app/shared/pipes/filter-out/filter-out.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "values",
                            "type": "T[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "predicate",
                            "type": "Partial<T>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "T[]",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "values",
                            "type": "T[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "predicate",
                            "type": "Partial<T>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "filterOut",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\nimport { isMatch } from 'lodash-es';\n\n@Pipe({\n  name: 'filterOut',\n  standalone: true\n})\nexport class FilterOutPipe implements PipeTransform {\n  transform<T extends object>(values: T[], predicate: Partial<T>): T[] {\n    return values.filter(val => !isMatch(val, predicate));\n  }\n}\n"
        },
        {
            "name": "FilterPipe",
            "id": "pipe-FilterPipe-4722f39f2e2625debf46825c6210912bc3a806be8ce2dba87eb6ec5b07630eed4662962a0e0bb99b36a8c6391742396bf76e048b67a79ca8bdaeec23ea51d249",
            "file": "src/app/shared/pipes/filter/filter.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "values",
                            "type": "T[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "predicate",
                            "type": "Partial<T>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "T[]",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "values",
                            "type": "T[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "predicate",
                            "type": "Partial<T>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "filter",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\nimport { isMatch } from 'lodash-es';\n\n@Pipe({\n  name: 'filter',\n  standalone: true\n})\nexport class FilterPipe implements PipeTransform {\n  transform<T extends object>(values: T[], predicate: Partial<T>): T[] {\n    return values.filter(val => isMatch(val, predicate));\n  }\n}\n"
        },
        {
            "name": "FindPipe",
            "id": "pipe-FindPipe-d4a38f5d453c530a3dbfa3fa0a90878b8088745e0502d83c5d7ed5388d8da4f1e9d73a62f9474d425f02f383f9c7c7a0a598977ac570c916244321cf368be491",
            "file": "src/app/shared/pipes/find/find.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "Observable<T[]>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "predicate",
                            "type": "Partial<T>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "Observable<T[]>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "predicate",
                            "type": "Partial<T>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "find",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\r\nimport { find } from 'lodash-es';\r\nimport { Observable, map } from 'rxjs';\r\n\r\n@Pipe({\r\n  name: 'find',\r\n  standalone: true\r\n})\r\nexport class FindPipe implements PipeTransform {\r\n\r\n  transform<T>(value: Observable<T[]>, predicate: Partial<T>) {\r\n    return value.pipe(\r\n      map(vals => find(vals, predicate) as T)\r\n    );\r\n  }\r\n\r\n}\r\n"
        },
        {
            "name": "FusePipe",
            "id": "pipe-FusePipe-eaeff7fe451d2ea1bf3a4ae9610ac1d03fe3f9a0b17673f0a562a2619219c148ddf4ad65ac50cebe037890f4f874df5f05463dc7aaabd1f40bf5dcd313c87979",
            "file": "src/app/shared/pipes/fuse/fuse.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "values",
                            "type": "T[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "options",
                            "type": "FuseOptions<T>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "T[]",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "values",
                            "type": "T[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "options",
                            "type": "FuseOptions<T>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "values",
                            "type": "Observable<T[]>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "options",
                            "type": "FuseOptions<T>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T[]>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "values",
                            "type": "Observable<T[]>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "options",
                            "type": "FuseOptions<T>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "values",
                            "type": "Observable<T[]> | T[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "options",
                            "type": "FuseOptions<T>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable | []",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "values",
                            "type": "Observable<T[]> | T[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "options",
                            "type": "FuseOptions<T>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "fuse",
            "sourceCode": "import { Pipe, PipeTransform } from \"@angular/core\";\r\nimport Fuse from 'fuse.js'\r\nimport { Observable, map } from \"rxjs\";\r\n\r\nexport interface FuseOptions<T> extends Omit<Fuse.IFuseOptions<T>, \"keys\"> {\r\n  search: string | null | undefined,\r\n  keys?: keyof T | Array<keyof T>\r\n}\r\n\r\n@Pipe({\r\n  name: \"fuse\",\r\n  standalone: true\r\n})\r\nexport class FusePipe implements PipeTransform {\r\n  transform<T>(values: T[], options: FuseOptions<T>): T[] \r\n  transform<T>(values: Observable<T[]>, options: FuseOptions<T>): Observable<T[]>\r\n  transform<T>(values: Observable<T[]> | T[], options: FuseOptions<T>): Observable<T[]> | T[] {\r\n    if (options.search == null || options.search.length === 0)\r\n      return values;\r\n    \r\n    return values instanceof Observable\r\n      ? values.pipe(\r\n        map(vals => new Fuse(vals, { \r\n          threshold: .1,\r\n          ignoreLocation: true,\r\n          ...options as Fuse.IFuseOptions<T>\r\n        })\r\n        .search(options.search!)\r\n        .map(val => val.item))\r\n      )\r\n      : new Fuse(values, { \r\n          threshold: .1,\r\n          ignoreLocation: true,\r\n          ...options as Fuse.IFuseOptions<T>\r\n        })\r\n        .search(options.search)\r\n        .map(val => val.item);\r\n  }\r\n}\r\n"
        },
        {
            "name": "ToStringValuesPipe",
            "id": "pipe-ToStringValuesPipe-380f5b68e8141f0b4f936b56d625d534b7f601afcf62b560d7e8883996608c457146182225ff8c6e9e5cefc62c4716de5a19d5e418bc2bc7b2eac276c9541056",
            "file": "src/app/shared/pipes/to-string-values/to-string-values.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "values",
                            "type": "T[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "values",
                            "type": "T[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "toStringValues",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\r\nimport { mapValues } from 'lodash-es';\r\n\r\n@Pipe({\r\n  name: 'toStringValues',\r\n  standalone: true\r\n})\r\nexport class ToStringValuesPipe implements PipeTransform {\r\n\r\n  transform<T extends object>(values: T[]) {\r\n    return values?.map(obj => mapValues(obj, val => val + \"\"));\r\n  }\r\n\r\n}\r\n"
        },
        {
            "name": "UtcDatePipe",
            "id": "pipe-UtcDatePipe-3df2da5943619820a08b43305a8b943b552901f746286765109aff8863f88916365dd7ef2c842b01f39b0c91904703a1d8ee240fc41b06d4ed1fc45b97f21c8f",
            "file": "src/app/shared/pipes/utc-date/utc-date.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "utcDate",
            "sourceCode": "import { Pipe, PipeTransform } from \"@angular/core\";\r\n\r\n@Pipe({\r\n  name: 'utcDate',\r\n  standalone: true\r\n})\r\nexport class UtcDatePipe implements PipeTransform {\r\n  transform(value: Date) {\r\n    return value.toFormat(\"yyyy-MM-dd\")\r\n  }\r\n}"
        },
        {
            "name": "UtcDateTimePipe",
            "id": "pipe-UtcDateTimePipe-f4ce147d888d6f615bc29a992c446868ddd63bb235fa8e74e9d5305ccde0ba63cbd294f0f07e53af0115241c96b85d95d9623a594f615956a20e13e9c6c15533",
            "file": "src/app/shared/pipes/utc-datetime/utc-date-time.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "utcDateTime",
            "sourceCode": "import { Pipe, PipeTransform } from \"@angular/core\";\r\n\r\n@Pipe({\r\n  name: 'utcDateTime',\r\n  standalone: true\r\n})\r\nexport class UtcDateTimePipe implements PipeTransform {\r\n  transform(value: Date) {\r\n    return value.toFormat(\"yyyy-MM-dd HH:mm\");\r\n  }\r\n}"
        }
    ],
    "interfaces": [
        {
            "name": "AdapterConfig",
            "id": "interface-AdapterConfig-0245decb74ff5f3ca0c9255691faf819bed16b92334744dbe9f804aa7db115409ca1924b9762501471b29d079440a22ba77ba5d00f5954c26e9a260d4ef122d2",
            "file": "src/app/shared/states/adapter-config.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface AdapterConfig<TValue, TState, TProps> {\r\n  name: string,\r\n  initialValue: TValue,\r\n  props?: (state: TState) => TProps\r\n}",
            "properties": [
                {
                    "name": "initialValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TValue",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "props",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": true,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AddDocumentLevelImageCommand",
            "id": "interface-AddDocumentLevelImageCommand-365a8577f60b1a5676ee257c18cffc94cddc0aa6a8cb8a569dabac5882a4d87e6637713972fe7ca92e543914b997cd444c6ccd267e57a24da6a490be70cafd73",
            "file": "src/app/core/http/site-document.api.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { environment } from \"src/environments/environment\";\r\nimport { createApi } from \"./create-api\";\r\nimport { SiteDocument } from \"../stores/site-document/models\";\r\nimport { memoize } from \"lodash-es\";\r\nimport { trackSend, track } from \"src/app/shared/rxjs\";\r\nimport { concat, map } from \"rxjs\";\r\n\r\nexport interface AddDocumentLevelImageCommand {\r\n  documentId: number,\r\n  base64: string,\r\n  imageNo: number\r\n}\r\n\r\nexport interface AddQuestionLevelImageCommand {\r\n  fileName: string,\r\n  siteDocumentTypeId: number,\r\n  base64: string\r\n}\r\n\r\nexport const useSiteDocumentApi = createApi({\r\n  baseUrl: `${environment.siteDocsApi}/SiteDocumentApi`,\r\n  endpoints: ({ get, post }) => ({\r\n    getCompletedDocument: get<SiteDocument, { id: number }>(\"GetCompletedDocument\"),\r\n    uploadDocument: post<{ documentId: number }, { document: SiteDocument }>({ path: \"UploadCompletedDocument\" }),\r\n    uploadDocumentImage: post<void, AddDocumentLevelImageCommand>({ path: \"AddDocumentLevelImage\" }),\r\n    uploadQuestionImage: post<void, AddQuestionLevelImageCommand>({ path: \"AddQuestionLevelImage\" })\r\n  })\r\n});\r\n\r\nexport const useSpecificDocument = memoize((id: number) => {\r\n  const { getCompletedDocument } = useSiteDocumentApi();\r\n\r\n  return track(() => getCompletedDocument({ id }));\r\n});\r\n\r\nexport const useUploadDocument = memoize(() => {\r\n  const { uploadDocument } = useSiteDocumentApi();\r\n\r\n  return trackSend({\r\n    fn: (param: { document: SiteDocument }) => uploadDocument({ document: param.document }).pipe(\r\n      map(({ documentId }) => ({\r\n        submissionId: documentId,\r\n        document: param.document,\r\n        questions: param.document.Pages\r\n          .flatMap(p => p.Sections)\r\n          .flatMap(s => s.Questions)\r\n      }))\r\n    )\r\n  })\r\n});\r\n\r\nexport const useUploadDocumentImages = memoize(() => {\r\n  const { uploadDocumentImage } = useSiteDocumentApi();\r\n\r\n  return trackSend({\r\n    fn: (params: AddDocumentLevelImageCommand[]) => {\r\n      const uploads = params.map(p => uploadDocumentImage(p))\r\n\r\n      return concat(...uploads);\r\n    }\r\n  });\r\n});\r\n\r\nexport const useUploadQuestionImages = memoize(() => {\r\n  const { uploadQuestionImage } = useSiteDocumentApi();\r\n\r\n  return trackSend({\r\n    fn: (params: AddQuestionLevelImageCommand[]) => {\r\n      const uploads = params.map(p => uploadQuestionImage(p))\r\n    \r\n      return concat(...uploads);\r\n    }\r\n  });\r\n});",
            "properties": [
                {
                    "name": "base64",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "documentId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "imageNo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AddQuestionLevelImageCommand",
            "id": "interface-AddQuestionLevelImageCommand-365a8577f60b1a5676ee257c18cffc94cddc0aa6a8cb8a569dabac5882a4d87e6637713972fe7ca92e543914b997cd444c6ccd267e57a24da6a490be70cafd73",
            "file": "src/app/core/http/site-document.api.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { environment } from \"src/environments/environment\";\r\nimport { createApi } from \"./create-api\";\r\nimport { SiteDocument } from \"../stores/site-document/models\";\r\nimport { memoize } from \"lodash-es\";\r\nimport { trackSend, track } from \"src/app/shared/rxjs\";\r\nimport { concat, map } from \"rxjs\";\r\n\r\nexport interface AddDocumentLevelImageCommand {\r\n  documentId: number,\r\n  base64: string,\r\n  imageNo: number\r\n}\r\n\r\nexport interface AddQuestionLevelImageCommand {\r\n  fileName: string,\r\n  siteDocumentTypeId: number,\r\n  base64: string\r\n}\r\n\r\nexport const useSiteDocumentApi = createApi({\r\n  baseUrl: `${environment.siteDocsApi}/SiteDocumentApi`,\r\n  endpoints: ({ get, post }) => ({\r\n    getCompletedDocument: get<SiteDocument, { id: number }>(\"GetCompletedDocument\"),\r\n    uploadDocument: post<{ documentId: number }, { document: SiteDocument }>({ path: \"UploadCompletedDocument\" }),\r\n    uploadDocumentImage: post<void, AddDocumentLevelImageCommand>({ path: \"AddDocumentLevelImage\" }),\r\n    uploadQuestionImage: post<void, AddQuestionLevelImageCommand>({ path: \"AddQuestionLevelImage\" })\r\n  })\r\n});\r\n\r\nexport const useSpecificDocument = memoize((id: number) => {\r\n  const { getCompletedDocument } = useSiteDocumentApi();\r\n\r\n  return track(() => getCompletedDocument({ id }));\r\n});\r\n\r\nexport const useUploadDocument = memoize(() => {\r\n  const { uploadDocument } = useSiteDocumentApi();\r\n\r\n  return trackSend({\r\n    fn: (param: { document: SiteDocument }) => uploadDocument({ document: param.document }).pipe(\r\n      map(({ documentId }) => ({\r\n        submissionId: documentId,\r\n        document: param.document,\r\n        questions: param.document.Pages\r\n          .flatMap(p => p.Sections)\r\n          .flatMap(s => s.Questions)\r\n      }))\r\n    )\r\n  })\r\n});\r\n\r\nexport const useUploadDocumentImages = memoize(() => {\r\n  const { uploadDocumentImage } = useSiteDocumentApi();\r\n\r\n  return trackSend({\r\n    fn: (params: AddDocumentLevelImageCommand[]) => {\r\n      const uploads = params.map(p => uploadDocumentImage(p))\r\n\r\n      return concat(...uploads);\r\n    }\r\n  });\r\n});\r\n\r\nexport const useUploadQuestionImages = memoize(() => {\r\n  const { uploadQuestionImage } = useSiteDocumentApi();\r\n\r\n  return trackSend({\r\n    fn: (params: AddQuestionLevelImageCommand[]) => {\r\n      const uploads = params.map(p => uploadQuestionImage(p))\r\n    \r\n      return concat(...uploads);\r\n    }\r\n  });\r\n});",
            "properties": [
                {
                    "name": "base64",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "fileName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "siteDocumentTypeId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Area",
            "id": "interface-Area-853a61b57e97b1015338c1b3ad545ff7256fef0ca9acee4db5fd449e1c7e81fa68592cbea8c7e1b7dbac8501a6598d2487ebbfe41af8e6a90d93a03da6fa4117",
            "file": "src/app/core/stores/user/user.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\r\nimport { inject, Injectable } from \"@angular/core\";\r\nimport { createStore, propsFactory } from \"@ngneat/elf\";\r\nimport { localStorageStrategy, persistState } from \"@ngneat/elf-persist-state\";\r\nimport { combineLatest, Observable, switchMap } from \"rxjs\";\r\nimport { getDeviceString, getDeviceUuid } from \"src/app/shared/plugins/device.plugin\";\r\nimport { pipeTap, selector } from \"src/app/shared/rxjs\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\nexport interface User {\r\n  Id: number,\r\n  LastName: string,\r\n  FirstName: string,\r\n  CompanyId: number,\r\n  CompanyName: string,\r\n  Colour: string,\r\n  FontColour: string,\r\n  Token: string,\r\n  Pin: string,\r\n  Site: Site,\r\n  DocumentListingTab: \"Recent\" | \"Pinned\" | \"Issued\",\r\n  IsInSupervisorRole: boolean,\r\n  HasRegisteredPlayerId: number,\r\n  HasAssets: boolean,\r\n  HasAssetCreation: boolean,\r\n  HasDocQrCodes: boolean,\r\n  HasHadWifiPreferenceChecked: boolean,\r\n  HasUpdateableDocs: boolean,\r\n  HasDocQueues: boolean,\r\n  HasCompanies: boolean,\r\n  HasDataTouchAreas: boolean,\r\n  HasQueueSupervisors: boolean,\r\n  HasCategoryActioners: boolean,\r\n  UserSites: Site[],\r\n  UserCompanies: Company[],\r\n  HasPlanningMeeting: boolean,\r\n  HasReviewMeeting: boolean,\r\n  HasCollabPlanning: boolean,\r\n  HasRandomOperativebarcodes: boolean,\r\n  HasLiveQueues: boolean,\r\n  HasResAreas:boolean,\r\n  HasHideOperativeScan: boolean,\r\n  HasSites: boolean,\r\n  HasDocDrop: boolean,\r\n  HasBasicOpInfo: boolean,\r\n  HasSimpleSwipes: boolean,\r\n  HasProjectsOnDocDrop: boolean,\r\n  HasCustomLookups: boolean,\r\n  HasTemplateSender: boolean,\r\n  HasMyOpInfo: boolean,\r\n  HasViewDocumentAsSinglePage: boolean,\r\n  HasShowParentAnswersOnChildDoc: boolean,\r\n  HasCompanySelectWithOtherOption:boolean,\r\n  HideSearchOnOperativeInfo: boolean,\r\n  HideSearchOnOperativeAccess: boolean,\r\n  CanAddOperativesToDocsByName: boolean,\r\n  HasRamsList: boolean,\r\n  CanAddAsssetsToDocsByName: boolean,\r\n  ShowWeightingsOnApp: boolean,\r\n  TemplatesLastUpdate: Date,\r\n  Url: string,\r\n  UseFingerReader: boolean,\r\n  SelectedSite?: Site,\r\n  NavTab: \"Modules\" | \"Documents\",\r\n  NumberOfTemplates: number,\r\n  DownloadedTemplates: number,\r\n  //PermittedCategories: DocCategory[],\r\n  HasOperativeInfo: boolean,\r\n  CanOffHireAssets: boolean,\r\n  CanViewOtherOperativeInfo: boolean,\r\n  CanModifyOperativeQRs: boolean,\r\n  CanAddQRsToAssets: boolean\r\n}\r\n\r\nexport interface Site {\r\n  Id: number,\r\n  Name: string\r\n}\r\n\r\nexport interface Company {\r\n  Id: number,\r\n  Name: string\r\n}\r\n\r\nexport interface Area {\r\n  Id: number,\r\n  SiteId: number,\r\n  Name: string\r\n}\r\n\r\nconst {\r\n  withAppUser, \r\n  selectAppUser, \r\n  setAppUser\r\n} = propsFactory(\"appUser\", { initialValue: null as User | null });\r\n\r\nconst store = createStore(\r\n  { name: \"user\" },\r\n  withAppUser()\r\n);\r\n\r\nconst userSelector = selector(store.pipe(selectAppUser()));\r\nconst sites$ = userSelector(user => user?.UserSites || []);\r\n\r\nconst setAppUserUpdate = pipeTap<User>(user => store.update(setAppUser(user)));\r\n\r\npersistState(store, {\r\n  key: \"user\",\r\n  storage: localStorageStrategy\r\n});\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class UserStore {\r\n  httpClient = inject(HttpClient);\r\n\r\n  user$ = store.pipe(selectAppUser());\r\n  sites$ = sites$;\r\n  companies$ = userSelector(user => user?.UserCompanies || []);\r\n\r\n  getUserRequest$ = (action$: Observable<{ token: string, pin: string }>) => combineLatest({\r\n    login: action$,\r\n    deviceId: getDeviceUuid(),\r\n    deviceString: getDeviceString() \r\n  }).pipe(\r\n    switchMap(({ login, deviceId, deviceString }) => this.httpClient.post<User>(`${environment.siteDocsApi}/LoginApi/LoginSiteDocumentsApp`, {\r\n      deviceId,\r\n      deviceString\r\n    }, {\r\n      headers: {\r\n        appToken: login.token,\r\n        appPin: login.pin\r\n      }\r\n    })),\r\n    setAppUserUpdate()\r\n  );\r\n}",
            "properties": [
                {
                    "name": "Id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 86
                },
                {
                    "name": "Name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 88
                },
                {
                    "name": "SiteId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 87
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Asset",
            "id": "interface-Asset-a52368188db70615199462d1820e2f7a4c9fb0ef9ccd543a2af089de46af3b4510b4c3a4d17d53f2054bd20a50bde41baf896abe984ffb7f45ba40a25ad8c67a",
            "file": "src/app/core/stores/asset/asset.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { createStore } from \"@ngneat/elf\";\r\nimport { selectAllEntities, withEntities } from \"@ngneat/elf-entities\";\r\nimport { memoize } from \"lodash-es\";\r\nimport { createPipe } from \"src/app/shared/rxjs\";\r\n\r\nexport interface Asset {\r\n  Id : number,\r\n  TypeName: string,\r\n  Registration: string | null\r\n}\r\n\r\nexport interface AssetGroup {\r\n  GroupId: number,\r\n  GroupName: string,\r\n  SiteId: number\r\n  Types: AssetType[]\r\n}\r\n\r\nexport interface AssetType {\r\n  Id: number,\r\n  Description: string,\r\n  GroupId: number\r\n}\r\n\r\nexport interface AssetInspectionSchedule {\r\n  ScheduleID: number,\r\n  ScheduleName: string\r\n}\r\n\r\nexport const useAssetStore = memoize(() => {\r\n  const store = createStore(\r\n    { name: \"assets\" },\r\n    withEntities<Asset, \"Id\">({ idKey: \"Id\" })\r\n  );\r\n\r\n  return {\r\n    data: createPipe(store.pipe(selectAllEntities())),\r\n    update: store.update.bind(store)\r\n  }\r\n});",
            "properties": [
                {
                    "name": "Id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "Registration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "TypeName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AssetGroup",
            "id": "interface-AssetGroup-9c0a0c16c69962295b316d0cbbc096bf2144709234d615c291801beb99da0966cbc9896b592f0f473761ef4ca12212337e504455c05a1aedd6e20488031aeb1c",
            "file": "src/app/core/http/asset.api.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Asset } from \"../stores/asset/asset.store\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { createApi } from \"./create-api\";\r\nimport { memoize } from \"lodash-es\";\r\nimport { track } from \"src/app/shared/rxjs\";\r\nimport { trackSend } from \"src/app/shared/rxjs\";\r\nimport { of } from \"rxjs\";\r\n\r\nexport interface GetAssetsByRegistrationParams { \r\n  searchString: string, \r\n  siteId?: number \r\n}\r\n\r\nexport interface GetAssetsByTypeParams { \r\n  typeId: number, \r\n  siteId?: number \r\n}\r\n\r\nexport interface AssetGroup {\r\n  GroupID: number,\r\n  GroupName: string,\r\n  SiteID: number\r\n}\r\n\r\nexport interface AssetType {\r\n  Id: number,\r\n  Description: string,\r\n  GroupID: number\r\n}\r\n\r\nexport interface AssetInspectionSchedule {\r\n  ScheduleID: number;\r\n  ScheduleName: string;\r\n  Active: boolean;\r\n}\r\n\r\nexport interface Detail {\r\n  Title: string,\r\n}\r\n\r\nexport interface DetailListItem {\r\n  Content: string;\r\n}\r\n\r\nexport interface GetAssetDetailsByAssetIdQuery {\r\n  id: number;\r\n}\r\n\r\nexport interface GetAssetDetailsByTagQuery {\r\n  tag: string;\r\n}\r\n\r\nexport interface DetailsListItem {\r\n  Icon: string;\r\n  CssClass: string;\r\n  Content: string;\r\n  Date: Date;\r\n  IconStyle: { [key: string]: string };\r\n  Id: number;\r\n  StringId?: string;\r\n  ListItemType: string;\r\n}\r\n\r\nexport interface DetailsList {\r\n  Title: string;\r\n  ListItems: DetailsListItem[];\r\n}\r\n\r\nexport interface AssetInfo {\r\n  ID: number;\r\n  AssetID: string;\r\n  AcquiredDate: Date;\r\n  DateOnSite: Date;\r\n  DateOffHired: Date;\r\n  TypeName: string;\r\n  Registration: string;\r\n  QRCode: string;\r\n  SiteID: number;\r\n  AssetFileName: string;\r\n  DetailsLists: DetailsList[];\r\n  Base64Img: Nullable<string>;\r\n  PurchaseValue: string;\r\n  AssetNotes: string;\r\n  Location: string;\r\n  TemplateIDs: number[];\r\n}\r\n\r\nexport const useAssetApi = createApi({\r\n  baseUrl: `${environment.siteDocsApi}/AssetApi`,\r\n  endpoints: ({ get }) => ({\r\n    getAssetDetailsByAssetId: get<AssetInfo, GetAssetDetailsByAssetIdQuery>(\"AssetDetailsByAssetId\"),\r\n    getAssetDetailsByTag: get<AssetInfo, GetAssetDetailsByTagQuery>(\"AssetDetailsByTag\"),\r\n    getAssetsByRegistration: get<Asset[], GetAssetsByRegistrationParams>(\"GetAssetsByReg\"),\r\n    getAssetsByType: get<Asset[], GetAssetsByTypeParams>(\"getAssetsByType\"),\r\n    getAssetGroups: get<AssetGroup[]>(\"GetAssetGroups\"),\r\n    getAssetTypes: get<AssetType[]>(\"GetAssetTypes\"),\r\n    getAssetInspectionSchedules: get<AssetInspectionSchedule[]>(\"GetAssetInspectionSchedules\")\r\n  })\r\n});\r\n\r\nexport const useAssetDetailsById = memoize((assetId: Nullable<number>) => {\r\n  const { getAssetDetailsByAssetId } = useAssetApi();\r\n\r\n  return track(() => assetId != null\r\n    ? getAssetDetailsByAssetId({ id: assetId })\r\n    : of(null)\r\n  )\r\n});\r\n\r\nexport const useAssetDetailsByTag = memoize((tag: Nullable<string>) => {\r\n  const { getAssetDetailsByTag } = useAssetApi();\r\n\r\n  return track(() => tag != null \r\n    ? getAssetDetailsByTag({ tag }) \r\n    : of(null)\r\n  );\r\n})\r\n\r\nexport const useFetchAssetsByRegistration = memoize((binding: Func<GetAssetsByRegistrationParams>) => {\r\n  const { getAssetsByRegistration } = useAssetApi();\r\n\r\n  return trackSend({\r\n    binding,\r\n    fn: params => getAssetsByRegistration(params)\r\n  });\r\n})\r\n\r\nexport const useFetchAssetsByType = memoize((binding: Func<Partial<GetAssetsByTypeParams>>) => {\r\n  const { getAssetsByType } = useAssetApi();\r\n\r\n  return trackSend({\r\n    binding,\r\n    fn: params => getAssetsByType(params as GetAssetsByTypeParams)\r\n  })\r\n});\r\n\r\nexport const useAssetGroups = memoize(() => {\r\n  const { getAssetGroups } = useAssetApi();\r\n\r\n  const assetGroups = track(() => getAssetGroups());\r\n\r\n  return {\r\n    ...assetGroups,\r\n    options: assetGroups.data(groups => groups.map(g => \r\n      ({\r\n        GroupId: g.GroupID.toString(),\r\n        GroupName: g.GroupName\r\n      })\r\n    ))\r\n  }\r\n});\r\n\r\nexport const useAssetTypes = memoize(() => {\r\n  const { getAssetTypes } = useAssetApi();\r\n\r\n  const assetTypes = track(() => getAssetTypes());\r\n\r\n  return {\r\n    ...assetTypes,\r\n    options: assetTypes.data(types => types.map(t => \r\n      ({\r\n        Id: t.Id.toString(),\r\n        Description: t.Description\r\n      })\r\n    ))\r\n  }\r\n});\r\n\r\nexport const useAssetInspectionSchedules = memoize(() => {\r\n  const { getAssetInspectionSchedules } = useAssetApi();\r\n\r\n  const inspectionSchedules = track(() => getAssetInspectionSchedules());\r\n\r\n  return {\r\n    ...inspectionSchedules,\r\n    options: inspectionSchedules.data(schedules => schedules.map(s => \r\n      ({\r\n        ScheduleId: s.ScheduleID.toString(),\r\n        ScheduleName: s.ScheduleName\r\n      })\r\n    ))\r\n  }\r\n});",
            "properties": [
                {
                    "name": "GroupID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "GroupName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "SiteID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AssetGroup",
            "id": "interface-AssetGroup-a52368188db70615199462d1820e2f7a4c9fb0ef9ccd543a2af089de46af3b4510b4c3a4d17d53f2054bd20a50bde41baf896abe984ffb7f45ba40a25ad8c67a-1",
            "file": "src/app/core/stores/asset/asset.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { createStore } from \"@ngneat/elf\";\r\nimport { selectAllEntities, withEntities } from \"@ngneat/elf-entities\";\r\nimport { memoize } from \"lodash-es\";\r\nimport { createPipe } from \"src/app/shared/rxjs\";\r\n\r\nexport interface Asset {\r\n  Id : number,\r\n  TypeName: string,\r\n  Registration: string | null\r\n}\r\n\r\nexport interface AssetGroup {\r\n  GroupId: number,\r\n  GroupName: string,\r\n  SiteId: number\r\n  Types: AssetType[]\r\n}\r\n\r\nexport interface AssetType {\r\n  Id: number,\r\n  Description: string,\r\n  GroupId: number\r\n}\r\n\r\nexport interface AssetInspectionSchedule {\r\n  ScheduleID: number,\r\n  ScheduleName: string\r\n}\r\n\r\nexport const useAssetStore = memoize(() => {\r\n  const store = createStore(\r\n    { name: \"assets\" },\r\n    withEntities<Asset, \"Id\">({ idKey: \"Id\" })\r\n  );\r\n\r\n  return {\r\n    data: createPipe(store.pipe(selectAllEntities())),\r\n    update: store.update.bind(store)\r\n  }\r\n});",
            "properties": [
                {
                    "name": "GroupId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "GroupName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "SiteId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "Types",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AssetType[]",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "AssetGroup-1"
        },
        {
            "name": "AssetInfo",
            "id": "interface-AssetInfo-9c0a0c16c69962295b316d0cbbc096bf2144709234d615c291801beb99da0966cbc9896b592f0f473761ef4ca12212337e504455c05a1aedd6e20488031aeb1c",
            "file": "src/app/core/http/asset.api.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Asset } from \"../stores/asset/asset.store\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { createApi } from \"./create-api\";\r\nimport { memoize } from \"lodash-es\";\r\nimport { track } from \"src/app/shared/rxjs\";\r\nimport { trackSend } from \"src/app/shared/rxjs\";\r\nimport { of } from \"rxjs\";\r\n\r\nexport interface GetAssetsByRegistrationParams { \r\n  searchString: string, \r\n  siteId?: number \r\n}\r\n\r\nexport interface GetAssetsByTypeParams { \r\n  typeId: number, \r\n  siteId?: number \r\n}\r\n\r\nexport interface AssetGroup {\r\n  GroupID: number,\r\n  GroupName: string,\r\n  SiteID: number\r\n}\r\n\r\nexport interface AssetType {\r\n  Id: number,\r\n  Description: string,\r\n  GroupID: number\r\n}\r\n\r\nexport interface AssetInspectionSchedule {\r\n  ScheduleID: number;\r\n  ScheduleName: string;\r\n  Active: boolean;\r\n}\r\n\r\nexport interface Detail {\r\n  Title: string,\r\n}\r\n\r\nexport interface DetailListItem {\r\n  Content: string;\r\n}\r\n\r\nexport interface GetAssetDetailsByAssetIdQuery {\r\n  id: number;\r\n}\r\n\r\nexport interface GetAssetDetailsByTagQuery {\r\n  tag: string;\r\n}\r\n\r\nexport interface DetailsListItem {\r\n  Icon: string;\r\n  CssClass: string;\r\n  Content: string;\r\n  Date: Date;\r\n  IconStyle: { [key: string]: string };\r\n  Id: number;\r\n  StringId?: string;\r\n  ListItemType: string;\r\n}\r\n\r\nexport interface DetailsList {\r\n  Title: string;\r\n  ListItems: DetailsListItem[];\r\n}\r\n\r\nexport interface AssetInfo {\r\n  ID: number;\r\n  AssetID: string;\r\n  AcquiredDate: Date;\r\n  DateOnSite: Date;\r\n  DateOffHired: Date;\r\n  TypeName: string;\r\n  Registration: string;\r\n  QRCode: string;\r\n  SiteID: number;\r\n  AssetFileName: string;\r\n  DetailsLists: DetailsList[];\r\n  Base64Img: Nullable<string>;\r\n  PurchaseValue: string;\r\n  AssetNotes: string;\r\n  Location: string;\r\n  TemplateIDs: number[];\r\n}\r\n\r\nexport const useAssetApi = createApi({\r\n  baseUrl: `${environment.siteDocsApi}/AssetApi`,\r\n  endpoints: ({ get }) => ({\r\n    getAssetDetailsByAssetId: get<AssetInfo, GetAssetDetailsByAssetIdQuery>(\"AssetDetailsByAssetId\"),\r\n    getAssetDetailsByTag: get<AssetInfo, GetAssetDetailsByTagQuery>(\"AssetDetailsByTag\"),\r\n    getAssetsByRegistration: get<Asset[], GetAssetsByRegistrationParams>(\"GetAssetsByReg\"),\r\n    getAssetsByType: get<Asset[], GetAssetsByTypeParams>(\"getAssetsByType\"),\r\n    getAssetGroups: get<AssetGroup[]>(\"GetAssetGroups\"),\r\n    getAssetTypes: get<AssetType[]>(\"GetAssetTypes\"),\r\n    getAssetInspectionSchedules: get<AssetInspectionSchedule[]>(\"GetAssetInspectionSchedules\")\r\n  })\r\n});\r\n\r\nexport const useAssetDetailsById = memoize((assetId: Nullable<number>) => {\r\n  const { getAssetDetailsByAssetId } = useAssetApi();\r\n\r\n  return track(() => assetId != null\r\n    ? getAssetDetailsByAssetId({ id: assetId })\r\n    : of(null)\r\n  )\r\n});\r\n\r\nexport const useAssetDetailsByTag = memoize((tag: Nullable<string>) => {\r\n  const { getAssetDetailsByTag } = useAssetApi();\r\n\r\n  return track(() => tag != null \r\n    ? getAssetDetailsByTag({ tag }) \r\n    : of(null)\r\n  );\r\n})\r\n\r\nexport const useFetchAssetsByRegistration = memoize((binding: Func<GetAssetsByRegistrationParams>) => {\r\n  const { getAssetsByRegistration } = useAssetApi();\r\n\r\n  return trackSend({\r\n    binding,\r\n    fn: params => getAssetsByRegistration(params)\r\n  });\r\n})\r\n\r\nexport const useFetchAssetsByType = memoize((binding: Func<Partial<GetAssetsByTypeParams>>) => {\r\n  const { getAssetsByType } = useAssetApi();\r\n\r\n  return trackSend({\r\n    binding,\r\n    fn: params => getAssetsByType(params as GetAssetsByTypeParams)\r\n  })\r\n});\r\n\r\nexport const useAssetGroups = memoize(() => {\r\n  const { getAssetGroups } = useAssetApi();\r\n\r\n  const assetGroups = track(() => getAssetGroups());\r\n\r\n  return {\r\n    ...assetGroups,\r\n    options: assetGroups.data(groups => groups.map(g => \r\n      ({\r\n        GroupId: g.GroupID.toString(),\r\n        GroupName: g.GroupName\r\n      })\r\n    ))\r\n  }\r\n});\r\n\r\nexport const useAssetTypes = memoize(() => {\r\n  const { getAssetTypes } = useAssetApi();\r\n\r\n  const assetTypes = track(() => getAssetTypes());\r\n\r\n  return {\r\n    ...assetTypes,\r\n    options: assetTypes.data(types => types.map(t => \r\n      ({\r\n        Id: t.Id.toString(),\r\n        Description: t.Description\r\n      })\r\n    ))\r\n  }\r\n});\r\n\r\nexport const useAssetInspectionSchedules = memoize(() => {\r\n  const { getAssetInspectionSchedules } = useAssetApi();\r\n\r\n  const inspectionSchedules = track(() => getAssetInspectionSchedules());\r\n\r\n  return {\r\n    ...inspectionSchedules,\r\n    options: inspectionSchedules.data(schedules => schedules.map(s => \r\n      ({\r\n        ScheduleId: s.ScheduleID.toString(),\r\n        ScheduleName: s.ScheduleName\r\n      })\r\n    ))\r\n  }\r\n});",
            "properties": [
                {
                    "name": "AcquiredDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 72
                },
                {
                    "name": "AssetFileName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 79
                },
                {
                    "name": "AssetID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 71
                },
                {
                    "name": "AssetNotes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 83
                },
                {
                    "name": "Base64Img",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Nullable<string>",
                    "optional": false,
                    "description": "",
                    "line": 81
                },
                {
                    "name": "DateOffHired",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 74
                },
                {
                    "name": "DateOnSite",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 73
                },
                {
                    "name": "DetailsLists",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DetailsList[]",
                    "optional": false,
                    "description": "",
                    "line": 80
                },
                {
                    "name": "ID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 70
                },
                {
                    "name": "Location",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 84
                },
                {
                    "name": "PurchaseValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 82
                },
                {
                    "name": "QRCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 77
                },
                {
                    "name": "Registration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 76
                },
                {
                    "name": "SiteID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 78
                },
                {
                    "name": "TemplateIDs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number[]",
                    "optional": false,
                    "description": "",
                    "line": 85
                },
                {
                    "name": "TypeName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 75
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AssetInspectionSchedule",
            "id": "interface-AssetInspectionSchedule-9c0a0c16c69962295b316d0cbbc096bf2144709234d615c291801beb99da0966cbc9896b592f0f473761ef4ca12212337e504455c05a1aedd6e20488031aeb1c",
            "file": "src/app/core/http/asset.api.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Asset } from \"../stores/asset/asset.store\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { createApi } from \"./create-api\";\r\nimport { memoize } from \"lodash-es\";\r\nimport { track } from \"src/app/shared/rxjs\";\r\nimport { trackSend } from \"src/app/shared/rxjs\";\r\nimport { of } from \"rxjs\";\r\n\r\nexport interface GetAssetsByRegistrationParams { \r\n  searchString: string, \r\n  siteId?: number \r\n}\r\n\r\nexport interface GetAssetsByTypeParams { \r\n  typeId: number, \r\n  siteId?: number \r\n}\r\n\r\nexport interface AssetGroup {\r\n  GroupID: number,\r\n  GroupName: string,\r\n  SiteID: number\r\n}\r\n\r\nexport interface AssetType {\r\n  Id: number,\r\n  Description: string,\r\n  GroupID: number\r\n}\r\n\r\nexport interface AssetInspectionSchedule {\r\n  ScheduleID: number;\r\n  ScheduleName: string;\r\n  Active: boolean;\r\n}\r\n\r\nexport interface Detail {\r\n  Title: string,\r\n}\r\n\r\nexport interface DetailListItem {\r\n  Content: string;\r\n}\r\n\r\nexport interface GetAssetDetailsByAssetIdQuery {\r\n  id: number;\r\n}\r\n\r\nexport interface GetAssetDetailsByTagQuery {\r\n  tag: string;\r\n}\r\n\r\nexport interface DetailsListItem {\r\n  Icon: string;\r\n  CssClass: string;\r\n  Content: string;\r\n  Date: Date;\r\n  IconStyle: { [key: string]: string };\r\n  Id: number;\r\n  StringId?: string;\r\n  ListItemType: string;\r\n}\r\n\r\nexport interface DetailsList {\r\n  Title: string;\r\n  ListItems: DetailsListItem[];\r\n}\r\n\r\nexport interface AssetInfo {\r\n  ID: number;\r\n  AssetID: string;\r\n  AcquiredDate: Date;\r\n  DateOnSite: Date;\r\n  DateOffHired: Date;\r\n  TypeName: string;\r\n  Registration: string;\r\n  QRCode: string;\r\n  SiteID: number;\r\n  AssetFileName: string;\r\n  DetailsLists: DetailsList[];\r\n  Base64Img: Nullable<string>;\r\n  PurchaseValue: string;\r\n  AssetNotes: string;\r\n  Location: string;\r\n  TemplateIDs: number[];\r\n}\r\n\r\nexport const useAssetApi = createApi({\r\n  baseUrl: `${environment.siteDocsApi}/AssetApi`,\r\n  endpoints: ({ get }) => ({\r\n    getAssetDetailsByAssetId: get<AssetInfo, GetAssetDetailsByAssetIdQuery>(\"AssetDetailsByAssetId\"),\r\n    getAssetDetailsByTag: get<AssetInfo, GetAssetDetailsByTagQuery>(\"AssetDetailsByTag\"),\r\n    getAssetsByRegistration: get<Asset[], GetAssetsByRegistrationParams>(\"GetAssetsByReg\"),\r\n    getAssetsByType: get<Asset[], GetAssetsByTypeParams>(\"getAssetsByType\"),\r\n    getAssetGroups: get<AssetGroup[]>(\"GetAssetGroups\"),\r\n    getAssetTypes: get<AssetType[]>(\"GetAssetTypes\"),\r\n    getAssetInspectionSchedules: get<AssetInspectionSchedule[]>(\"GetAssetInspectionSchedules\")\r\n  })\r\n});\r\n\r\nexport const useAssetDetailsById = memoize((assetId: Nullable<number>) => {\r\n  const { getAssetDetailsByAssetId } = useAssetApi();\r\n\r\n  return track(() => assetId != null\r\n    ? getAssetDetailsByAssetId({ id: assetId })\r\n    : of(null)\r\n  )\r\n});\r\n\r\nexport const useAssetDetailsByTag = memoize((tag: Nullable<string>) => {\r\n  const { getAssetDetailsByTag } = useAssetApi();\r\n\r\n  return track(() => tag != null \r\n    ? getAssetDetailsByTag({ tag }) \r\n    : of(null)\r\n  );\r\n})\r\n\r\nexport const useFetchAssetsByRegistration = memoize((binding: Func<GetAssetsByRegistrationParams>) => {\r\n  const { getAssetsByRegistration } = useAssetApi();\r\n\r\n  return trackSend({\r\n    binding,\r\n    fn: params => getAssetsByRegistration(params)\r\n  });\r\n})\r\n\r\nexport const useFetchAssetsByType = memoize((binding: Func<Partial<GetAssetsByTypeParams>>) => {\r\n  const { getAssetsByType } = useAssetApi();\r\n\r\n  return trackSend({\r\n    binding,\r\n    fn: params => getAssetsByType(params as GetAssetsByTypeParams)\r\n  })\r\n});\r\n\r\nexport const useAssetGroups = memoize(() => {\r\n  const { getAssetGroups } = useAssetApi();\r\n\r\n  const assetGroups = track(() => getAssetGroups());\r\n\r\n  return {\r\n    ...assetGroups,\r\n    options: assetGroups.data(groups => groups.map(g => \r\n      ({\r\n        GroupId: g.GroupID.toString(),\r\n        GroupName: g.GroupName\r\n      })\r\n    ))\r\n  }\r\n});\r\n\r\nexport const useAssetTypes = memoize(() => {\r\n  const { getAssetTypes } = useAssetApi();\r\n\r\n  const assetTypes = track(() => getAssetTypes());\r\n\r\n  return {\r\n    ...assetTypes,\r\n    options: assetTypes.data(types => types.map(t => \r\n      ({\r\n        Id: t.Id.toString(),\r\n        Description: t.Description\r\n      })\r\n    ))\r\n  }\r\n});\r\n\r\nexport const useAssetInspectionSchedules = memoize(() => {\r\n  const { getAssetInspectionSchedules } = useAssetApi();\r\n\r\n  const inspectionSchedules = track(() => getAssetInspectionSchedules());\r\n\r\n  return {\r\n    ...inspectionSchedules,\r\n    options: inspectionSchedules.data(schedules => schedules.map(s => \r\n      ({\r\n        ScheduleId: s.ScheduleID.toString(),\r\n        ScheduleName: s.ScheduleName\r\n      })\r\n    ))\r\n  }\r\n});",
            "properties": [
                {
                    "name": "Active",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "ScheduleID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "ScheduleName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 33
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AssetInspectionSchedule",
            "id": "interface-AssetInspectionSchedule-a52368188db70615199462d1820e2f7a4c9fb0ef9ccd543a2af089de46af3b4510b4c3a4d17d53f2054bd20a50bde41baf896abe984ffb7f45ba40a25ad8c67a-1",
            "file": "src/app/core/stores/asset/asset.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { createStore } from \"@ngneat/elf\";\r\nimport { selectAllEntities, withEntities } from \"@ngneat/elf-entities\";\r\nimport { memoize } from \"lodash-es\";\r\nimport { createPipe } from \"src/app/shared/rxjs\";\r\n\r\nexport interface Asset {\r\n  Id : number,\r\n  TypeName: string,\r\n  Registration: string | null\r\n}\r\n\r\nexport interface AssetGroup {\r\n  GroupId: number,\r\n  GroupName: string,\r\n  SiteId: number\r\n  Types: AssetType[]\r\n}\r\n\r\nexport interface AssetType {\r\n  Id: number,\r\n  Description: string,\r\n  GroupId: number\r\n}\r\n\r\nexport interface AssetInspectionSchedule {\r\n  ScheduleID: number,\r\n  ScheduleName: string\r\n}\r\n\r\nexport const useAssetStore = memoize(() => {\r\n  const store = createStore(\r\n    { name: \"assets\" },\r\n    withEntities<Asset, \"Id\">({ idKey: \"Id\" })\r\n  );\r\n\r\n  return {\r\n    data: createPipe(store.pipe(selectAllEntities())),\r\n    update: store.update.bind(store)\r\n  }\r\n});",
            "properties": [
                {
                    "name": "ScheduleID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "ScheduleName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "AssetInspectionSchedule-1"
        },
        {
            "name": "AssetType",
            "id": "interface-AssetType-9c0a0c16c69962295b316d0cbbc096bf2144709234d615c291801beb99da0966cbc9896b592f0f473761ef4ca12212337e504455c05a1aedd6e20488031aeb1c",
            "file": "src/app/core/http/asset.api.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Asset } from \"../stores/asset/asset.store\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { createApi } from \"./create-api\";\r\nimport { memoize } from \"lodash-es\";\r\nimport { track } from \"src/app/shared/rxjs\";\r\nimport { trackSend } from \"src/app/shared/rxjs\";\r\nimport { of } from \"rxjs\";\r\n\r\nexport interface GetAssetsByRegistrationParams { \r\n  searchString: string, \r\n  siteId?: number \r\n}\r\n\r\nexport interface GetAssetsByTypeParams { \r\n  typeId: number, \r\n  siteId?: number \r\n}\r\n\r\nexport interface AssetGroup {\r\n  GroupID: number,\r\n  GroupName: string,\r\n  SiteID: number\r\n}\r\n\r\nexport interface AssetType {\r\n  Id: number,\r\n  Description: string,\r\n  GroupID: number\r\n}\r\n\r\nexport interface AssetInspectionSchedule {\r\n  ScheduleID: number;\r\n  ScheduleName: string;\r\n  Active: boolean;\r\n}\r\n\r\nexport interface Detail {\r\n  Title: string,\r\n}\r\n\r\nexport interface DetailListItem {\r\n  Content: string;\r\n}\r\n\r\nexport interface GetAssetDetailsByAssetIdQuery {\r\n  id: number;\r\n}\r\n\r\nexport interface GetAssetDetailsByTagQuery {\r\n  tag: string;\r\n}\r\n\r\nexport interface DetailsListItem {\r\n  Icon: string;\r\n  CssClass: string;\r\n  Content: string;\r\n  Date: Date;\r\n  IconStyle: { [key: string]: string };\r\n  Id: number;\r\n  StringId?: string;\r\n  ListItemType: string;\r\n}\r\n\r\nexport interface DetailsList {\r\n  Title: string;\r\n  ListItems: DetailsListItem[];\r\n}\r\n\r\nexport interface AssetInfo {\r\n  ID: number;\r\n  AssetID: string;\r\n  AcquiredDate: Date;\r\n  DateOnSite: Date;\r\n  DateOffHired: Date;\r\n  TypeName: string;\r\n  Registration: string;\r\n  QRCode: string;\r\n  SiteID: number;\r\n  AssetFileName: string;\r\n  DetailsLists: DetailsList[];\r\n  Base64Img: Nullable<string>;\r\n  PurchaseValue: string;\r\n  AssetNotes: string;\r\n  Location: string;\r\n  TemplateIDs: number[];\r\n}\r\n\r\nexport const useAssetApi = createApi({\r\n  baseUrl: `${environment.siteDocsApi}/AssetApi`,\r\n  endpoints: ({ get }) => ({\r\n    getAssetDetailsByAssetId: get<AssetInfo, GetAssetDetailsByAssetIdQuery>(\"AssetDetailsByAssetId\"),\r\n    getAssetDetailsByTag: get<AssetInfo, GetAssetDetailsByTagQuery>(\"AssetDetailsByTag\"),\r\n    getAssetsByRegistration: get<Asset[], GetAssetsByRegistrationParams>(\"GetAssetsByReg\"),\r\n    getAssetsByType: get<Asset[], GetAssetsByTypeParams>(\"getAssetsByType\"),\r\n    getAssetGroups: get<AssetGroup[]>(\"GetAssetGroups\"),\r\n    getAssetTypes: get<AssetType[]>(\"GetAssetTypes\"),\r\n    getAssetInspectionSchedules: get<AssetInspectionSchedule[]>(\"GetAssetInspectionSchedules\")\r\n  })\r\n});\r\n\r\nexport const useAssetDetailsById = memoize((assetId: Nullable<number>) => {\r\n  const { getAssetDetailsByAssetId } = useAssetApi();\r\n\r\n  return track(() => assetId != null\r\n    ? getAssetDetailsByAssetId({ id: assetId })\r\n    : of(null)\r\n  )\r\n});\r\n\r\nexport const useAssetDetailsByTag = memoize((tag: Nullable<string>) => {\r\n  const { getAssetDetailsByTag } = useAssetApi();\r\n\r\n  return track(() => tag != null \r\n    ? getAssetDetailsByTag({ tag }) \r\n    : of(null)\r\n  );\r\n})\r\n\r\nexport const useFetchAssetsByRegistration = memoize((binding: Func<GetAssetsByRegistrationParams>) => {\r\n  const { getAssetsByRegistration } = useAssetApi();\r\n\r\n  return trackSend({\r\n    binding,\r\n    fn: params => getAssetsByRegistration(params)\r\n  });\r\n})\r\n\r\nexport const useFetchAssetsByType = memoize((binding: Func<Partial<GetAssetsByTypeParams>>) => {\r\n  const { getAssetsByType } = useAssetApi();\r\n\r\n  return trackSend({\r\n    binding,\r\n    fn: params => getAssetsByType(params as GetAssetsByTypeParams)\r\n  })\r\n});\r\n\r\nexport const useAssetGroups = memoize(() => {\r\n  const { getAssetGroups } = useAssetApi();\r\n\r\n  const assetGroups = track(() => getAssetGroups());\r\n\r\n  return {\r\n    ...assetGroups,\r\n    options: assetGroups.data(groups => groups.map(g => \r\n      ({\r\n        GroupId: g.GroupID.toString(),\r\n        GroupName: g.GroupName\r\n      })\r\n    ))\r\n  }\r\n});\r\n\r\nexport const useAssetTypes = memoize(() => {\r\n  const { getAssetTypes } = useAssetApi();\r\n\r\n  const assetTypes = track(() => getAssetTypes());\r\n\r\n  return {\r\n    ...assetTypes,\r\n    options: assetTypes.data(types => types.map(t => \r\n      ({\r\n        Id: t.Id.toString(),\r\n        Description: t.Description\r\n      })\r\n    ))\r\n  }\r\n});\r\n\r\nexport const useAssetInspectionSchedules = memoize(() => {\r\n  const { getAssetInspectionSchedules } = useAssetApi();\r\n\r\n  const inspectionSchedules = track(() => getAssetInspectionSchedules());\r\n\r\n  return {\r\n    ...inspectionSchedules,\r\n    options: inspectionSchedules.data(schedules => schedules.map(s => \r\n      ({\r\n        ScheduleId: s.ScheduleID.toString(),\r\n        ScheduleName: s.ScheduleName\r\n      })\r\n    ))\r\n  }\r\n});",
            "properties": [
                {
                    "name": "Description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "GroupID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "Id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 26
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AssetType",
            "id": "interface-AssetType-a52368188db70615199462d1820e2f7a4c9fb0ef9ccd543a2af089de46af3b4510b4c3a4d17d53f2054bd20a50bde41baf896abe984ffb7f45ba40a25ad8c67a-1",
            "file": "src/app/core/stores/asset/asset.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { createStore } from \"@ngneat/elf\";\r\nimport { selectAllEntities, withEntities } from \"@ngneat/elf-entities\";\r\nimport { memoize } from \"lodash-es\";\r\nimport { createPipe } from \"src/app/shared/rxjs\";\r\n\r\nexport interface Asset {\r\n  Id : number,\r\n  TypeName: string,\r\n  Registration: string | null\r\n}\r\n\r\nexport interface AssetGroup {\r\n  GroupId: number,\r\n  GroupName: string,\r\n  SiteId: number\r\n  Types: AssetType[]\r\n}\r\n\r\nexport interface AssetType {\r\n  Id: number,\r\n  Description: string,\r\n  GroupId: number\r\n}\r\n\r\nexport interface AssetInspectionSchedule {\r\n  ScheduleID: number,\r\n  ScheduleName: string\r\n}\r\n\r\nexport const useAssetStore = memoize(() => {\r\n  const store = createStore(\r\n    { name: \"assets\" },\r\n    withEntities<Asset, \"Id\">({ idKey: \"Id\" })\r\n  );\r\n\r\n  return {\r\n    data: createPipe(store.pipe(selectAllEntities())),\r\n    update: store.update.bind(store)\r\n  }\r\n});",
            "properties": [
                {
                    "name": "Description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "GroupId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "Id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "AssetType-1"
        },
        {
            "name": "BooleanState",
            "id": "interface-BooleanState-c4d2886ffa0583c246e0cc2f356d63b24f3996db3d35f014ef1d40185ce698861e00f785bfe0e3af33dc412b6c2c401744304fab78073ea2c29aadb756d411ad",
            "file": "src/app/shared/states/boolean.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { createStore, propsFactory } from \"@ngneat/elf\";\r\nimport { Observable } from \"rxjs\";\r\nimport { AdapterConfig } from \"./adapter-config.model\";\r\n\r\nexport interface BooleanState {\r\n  value$: Observable<boolean>,\r\n  toggle: () => void,\r\n  set: (value: boolean) => void\r\n}\r\n\r\nexport function booleanState<TProps = {}>({ name, initialValue, props }: AdapterConfig<boolean, BooleanState, TProps>): TProps & BooleanState {\r\n  const propsFn = props != null \r\n    ? props\r\n    : () => ({});\r\n\r\n    const { \r\n      withBoolean,\r\n      selectBoolean,\r\n      setBoolean\r\n    } = propsFactory(\"boolean\", {\r\n      initialValue\r\n    });\r\n  \r\n    const store = createStore(\r\n      { name }, \r\n      withBoolean()\r\n    );\r\n  \r\n    const state: BooleanState = {\r\n      value$: store.pipe(selectBoolean()),\r\n      toggle: () => store.update(setBoolean(state => !state.boolean)),\r\n      set: (val: boolean) => store.update(setBoolean(val))\r\n    };\r\n\r\n    return {\r\n      ...propsFn(state),\r\n      ...state\r\n    } as TProps & BooleanState;\r\n}",
            "properties": [
                {
                    "name": "set",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "toggle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "value$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "BuildApi",
            "id": "interface-BuildApi-03c89532528436e62b7092d571fe08b27a8f5dae1cf6778b1a9e9522c21f16d1467d2b378775faf6257600168e2971dcde4dbcd23197484bc4215a43cf3a11f8",
            "file": "src/app/core/http/create-api.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\r\nimport { inject } from \"@angular/core\";\r\nimport { mapValues, memoize, omitBy } from \"lodash-es\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nexport type AspNetData<T> = {\r\n  [name in keyof T]: T[name] extends Date | undefined | null \r\n    ? string \r\n    : T[name] \r\n}\r\n\r\nexport interface GetRequestOptions<TParams> {\r\n  path: string,\r\n  query?: (params: TParams) => object,\r\n  headers?: (params: TParams) => object\r\n}\r\n\r\nexport interface PostRequestOptions<TParams> {\r\n  path: string,\r\n  body?: (params: TParams) => object,\r\n  headers?: (params: TParams) => object\r\n}\r\n\r\nexport interface BuildApi {\r\n  get: <TResponse, TParams = object | void>(getOptions: string | GetRequestOptions<TParams>) => (params: TParams) => Observable<TResponse>\r\n  post: <TResponse, TParams = object | void>(postOptions: PostRequestOptions<TParams>) => (params: TParams) => Observable<TResponse>\r\n}\r\n\r\nexport interface CreateApiOptions<TApi> {\r\n  baseUrl: string,\r\n  headers?: object,\r\n  endpoints: (build: BuildApi) => TApi\r\n}\r\n\r\nexport type Params = {\r\n  [param: string]: string | number | boolean | ReadonlyArray<string | number | boolean>\r\n}\r\n\r\nexport function createBuildApi<TApi>(options: CreateApiOptions<TApi>): BuildApi {\r\n  const http = inject(HttpClient);\r\n\r\n  return {\r\n    get: <TResponse, TParams = object | void>(getOptions: string | GetRequestOptions<TParams>) => \r\n      typeof getOptions === \"string\" \r\n        ? () => http.get<TResponse>(`${options.baseUrl}/${getOptions}`)\r\n        : (params: TParams) => http.get<TResponse>(`${options.baseUrl}/${getOptions.path}`, {\r\n            headers: getOptions.headers != null \r\n              ? mapValues(omitBy(getOptions.headers(params) as Params, val => val == null), val => val.toString()) \r\n              : {},\r\n            params: getOptions.query != null \r\n              ? getOptions.query(params) as Params\r\n              : params != null\r\n              ? omitBy(params, val => val == null) as Params\r\n              : {}\r\n        }),\r\n    post: <TResponse, TParams = object | void>(postOptions: PostRequestOptions<TParams>) =>\r\n      (params: TParams) => {\r\n        debugger;\r\n        return http.post<TResponse>(\r\n          `${options.baseUrl}/${postOptions.path}`, \r\n          postOptions.body != null\r\n            ? postOptions.body(params)\r\n            : params != null\r\n            ? omitBy(params, val => val == null)\r\n            : {}, \r\n          {\r\n            headers: postOptions.headers != null \r\n            ? mapValues(omitBy(postOptions.headers(params) as Params, val => val == null), val => val.toString()) \r\n            : {}\r\n          }\r\n        );\r\n      } \r\n  }\r\n}\r\n\r\nexport function createApi<TApi>(options: CreateApiOptions<TApi>) {\r\n  return memoize(() => {\r\n    const build = createBuildApi(options);\r\n\r\n    return options.endpoints(build);\r\n  });\r\n}",
            "properties": [
                {
                    "name": "get",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "post",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 26
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "CalculateOptions",
            "id": "interface-CalculateOptions-f4df5c9dcb02239bb6e199140a6e1a086adf5941677fc4491229fb2313ecded1ef8fafc17b37907d63acbc490c46dd07b3c232bfb8454c071f9bd3eb6da830c0",
            "file": "src/app/shared/rxjs/calculate.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Observable, map } from \"rxjs\";\r\nimport { createPipe } from \"./use\";\r\n\r\nexport interface CalculateOptions<T, R> {\r\n  value: Func<T>,\r\n  when: Observable<R>\r\n}\r\n\r\nexport function calculate<T, R>({ value, when }: CalculateOptions<T, R>) {\r\n  return createPipe(when.pipe(\r\n    map(() => value())\r\n  ));\r\n}",
            "properties": [
                {
                    "name": "value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Func<T>",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "when",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<R>",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "CascadeOption",
            "id": "interface-CascadeOption-c7959f7440ffcc3f7e62a4ddc4c7de3b0161d7b2e791d3c870e61d9c7beefced3f38a328f62f1a879861bd7f2b720c6a0a83bd38547d74e5da6d4aabfde0f9ba",
            "file": "src/app/core/stores/site-document/models/site-document.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { PointGroup } from \"signature_pad\";\r\n\r\nexport interface SiteDocument {\r\n  DocumentID: number;\r\n  DocumentTitle: string;\r\n  Subtitle: string;\r\n  Preamble: string;\r\n  Pinned: boolean;\r\n  Pages: Page[];\r\n  AllowAnon: boolean;\r\n  RemainAnon: boolean;\r\n  ChildTemplateID: number;\r\n  Queues: Queue[],\r\n  DocumentGroup: string;\r\n  DocumentCategory?: number;\r\n  CanCreateHotspot: boolean;\r\n  CanBeAddedToHotspot?: boolean;\r\n  CanBeSavedAsDraft?: boolean;\r\n  CanAddActionerFromApp: boolean;\r\n  CanAddCategoryActioner: boolean;\r\n  CanCreateAssetsFromDocument: boolean;\r\n  CanHaveQueueDuration: boolean;\r\n  CanHaveDocumentLevelImages: boolean;\r\n  CanHaveDocLevelPhotoRoll: boolean;\r\n  CurrentActionerOperativeID?: number;\r\n  CompanyActionerId?: number;\r\n  ShowDocLevelPhotoButtonAtStartOfDoc: boolean;\r\n  CanAddAsset?: boolean;\r\n  CanAddOperative?: boolean;\r\n  CanHaveCompanyActioner: boolean;\r\n  MetaData: Partial<SiteDocumentMetaData>;\r\n  SiteDocumentType: number,\r\n  SiteId?: number;\r\n  AutoQueueID?: number;\r\n  QueueDuration?: QueueDuration;\r\n  DocumentResponsibilityAreaTypeId?: number;\r\n  DocumentResponsibilityAreaId?: number;\r\n  ReqGps: boolean;\r\n  PageIdx: number;\r\n  Images: string[];\r\n}\r\n\r\nexport interface Queue {\r\n  Id: number,\r\n  Name: string\r\n}\r\n\r\nexport interface QueueDuration {\r\n  Value: number;\r\n  Type: \"Mins\" | \"Hours\" | \"Days\";\r\n}\r\n\r\nexport interface SiteDocumentImage {\r\n  Id: string,\r\n  DocumentId: number,\r\n  Base64: string,\r\n}\r\n\r\nexport interface SiteDocumentMetaData {\r\n  ActionerText: string;\r\n  CanBeEditableDocument: boolean;\r\n  CannotAddSelfAsActioner: boolean;\r\n  ColourHex: string;\r\n  QueueSelectorTitle: string;\r\n  HasSiteList: boolean;\r\n  SiteListTitle: string;\r\n  UsesRadioGroupTable: boolean;\r\n}\r\n\r\nexport interface SiteDocumentAsset {\r\n  AssetID: number;\r\n  Tag: string;\r\n  Name: string;\r\n  QRCode?: string;\r\n  TemplateID?: number;\r\n}\r\n\r\nexport interface SiteDocumentOperative {\r\n  AttendeeID: number;\r\n  Name: string;\r\n  DateAttended: Date;\r\n}\r\n\r\nexport interface Page {\r\n  PageID: number;\r\n  PageTitle: string;\r\n  PageNo: number;\r\n  Sections: Section[];\r\n  Hidden: boolean;\r\n}\r\n\r\nexport interface Section {\r\n  SectionID: number;\r\n  SectionNo: number;\r\n  SectionTitle: string;\r\n  Questions: Question[];\r\n  SectionQuestiontype: QuestionType;\r\n  IsRepeatable: boolean;\r\n  TableTitles: string[];\r\n  Hidden: boolean;\r\n}\r\n\r\nexport enum QuestionType {\r\n  Label = 0,\r\n  Checkbox = 1,\r\n  RadioGroup = 2,\r\n  Textbox = 3,\r\n  TextArea = 4,\r\n  Select = 5,\r\n  CheckboxTextbox = 6,\r\n  RadioGroupTextbox = 7,\r\n  Date = 8,\r\n  DateTime = 9,\r\n  OperativeList = 10,\r\n  WallOfText = 11,\r\n  Number = 12,\r\n  CascadeDropdown = 13,\r\n  LinkedBool = 16,\r\n  AssetList = 17,\r\n  LinkedDates = 18,\r\n  Signature = 19,\r\n  CompanySelect = 21,\r\n  AreaSelect = 22,\r\n  AssetGroupsAndTypes = 25,\r\n  AssetInspectionSchedule = 26,\r\n  ProjectSelect = 27,\r\n  RamsSelect = 28,\r\n  SelectText = 29,\r\n  CascadeDropdownText = 30,\r\n  MultiCascade = 31,\r\n  Time = 32,\r\n  LinkedTimes = 33,\r\n  HraSelect = 34,\r\n  MultiCheckbox = 35,\r\n  LinkedDateAndTime = 36\r\n}\r\n\r\nexport interface Question {\r\n  QuestionID: number;\r\n  QuestionText: string;\r\n  CascadeOptionsText: string;\r\n  CommentsText: string;\r\n  Assets: SiteDocumentAsset[];\r\n  Operatives: SiteDocumentOperative[];\r\n  Required: boolean;\r\n  AnswerText: string;\r\n  AdditionalText?: string;\r\n  MoreAdditionalText?: string;\r\n  DateAndTime: Nullable<Date>;\r\n  DateAndTime2: Nullable<Date>;\r\n  NumberVal?: number;\r\n  OptionVal?: string | null;\r\n  SelectedOptionText?: Nullable<string>;\r\n  SelectedCascadeOptionText?: Nullable<string>;\r\n  File?: Nullable<string>;\r\n  Img?: Nullable<string>;\r\n  AnswerOptions: SelectOption[];\r\n  CascadeOptions: CascadeOption[];\r\n  CascadeOptionVal?: string | null;\r\n  YesNoNA: boolean | null;\r\n  CanHaveImg: boolean;\r\n  CanHaveFiles: boolean;\r\n  CanUsePhotoLib: boolean;\r\n  SignatureArray?: number[];\r\n  SignaturePoints?: PointGroup[];\r\n  SignatureDataUrl?: string;\r\n  ValidationData: ValidationData[];\r\n  Hidden: boolean;\r\n  Disabled?: boolean;\r\n}\r\n\r\nexport function useValidationData(rules: ValidationData[]) {\r\n  const min = rules.find(r => r.Key === \"Min\")?.Value.toNumber();\r\n  const max = rules.find(r => r.Key === \"Max\")?.Value.toNumber();\r\n\r\n  return {\r\n    min,\r\n    max\r\n  }\r\n}\r\n\r\nexport function minDate(question: Question) {\r\n  const min = question.ValidationData.find(r => r.Key === \"Min\")?.Value.toNumber();\r\n\r\n  return min != null\r\n    ? new Date().subtrackHours(min)\r\n    : null;\r\n}\r\n\r\nexport function maxDate(question: Question) {\r\n  const max = question.ValidationData.find(r => r.Key === \"Max\")?.Value.toNumber();\r\n\r\n  return max != null\r\n    ? new Date().addHours(max)\r\n    : null;\r\n}\r\n\r\nexport function spreadDate(question: Question) {\r\n  const spread = question.ValidationData.find(r => r.Key === \"Spread\")?.Value.toNumber();\r\n  const max = question.ValidationData.find(r => r.Key === \"Max\")?.Value.toNumber();  \r\n\r\n  const hours = spread != null && max != null\r\n    ? spread > max\r\n      ? spread\r\n      : max\r\n    : spread != null\r\n      ? spread\r\n      : max;\r\n\r\n  return hours != null\r\n    ? new Date().addHours(hours)\r\n    : null;\r\n}\r\n\r\nexport interface ValidationData {\r\n  Key: \"Min\" | \"Max\" | \"Spread\",\r\n  Value: string,\r\n  Msg: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  Active?: boolean;\r\n  Text: string;\r\n  Val: string;\r\n  MetaData?: any;\r\n  OptionsMetadataJson?: string;\r\n}\r\n\r\nexport interface SelectOptionMetaData {\r\n  ColourHex?: string;\r\n}\r\n\r\nexport interface CascadeOption { \r\n  ParentVal: string, \r\n  Text: string, \r\n  Val: string \r\n}",
            "properties": [
                {
                    "name": "ParentVal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 234
                },
                {
                    "name": "Text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 235
                },
                {
                    "name": "Val",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 236
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "CategoryActioner",
            "id": "interface-CategoryActioner-fb41735136026b3490a14a8dffa2381b7db49beddf7a0c8e9f1246692df4635421abae3b9a737b90c0a2b077e881a0619acba014f177fec8eafda9a4f53edaee",
            "file": "src/app/core/stores/category-actioners/category-actioners.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface CategoryActioner {\r\n  Id: number,\r\n  Name: string,\r\n  CategoryId: number\r\n}",
            "properties": [
                {
                    "name": "CategoryId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "Id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "Name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Company",
            "id": "interface-Company-853a61b57e97b1015338c1b3ad545ff7256fef0ca9acee4db5fd449e1c7e81fa68592cbea8c7e1b7dbac8501a6598d2487ebbfe41af8e6a90d93a03da6fa4117",
            "file": "src/app/core/stores/user/user.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\r\nimport { inject, Injectable } from \"@angular/core\";\r\nimport { createStore, propsFactory } from \"@ngneat/elf\";\r\nimport { localStorageStrategy, persistState } from \"@ngneat/elf-persist-state\";\r\nimport { combineLatest, Observable, switchMap } from \"rxjs\";\r\nimport { getDeviceString, getDeviceUuid } from \"src/app/shared/plugins/device.plugin\";\r\nimport { pipeTap, selector } from \"src/app/shared/rxjs\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\nexport interface User {\r\n  Id: number,\r\n  LastName: string,\r\n  FirstName: string,\r\n  CompanyId: number,\r\n  CompanyName: string,\r\n  Colour: string,\r\n  FontColour: string,\r\n  Token: string,\r\n  Pin: string,\r\n  Site: Site,\r\n  DocumentListingTab: \"Recent\" | \"Pinned\" | \"Issued\",\r\n  IsInSupervisorRole: boolean,\r\n  HasRegisteredPlayerId: number,\r\n  HasAssets: boolean,\r\n  HasAssetCreation: boolean,\r\n  HasDocQrCodes: boolean,\r\n  HasHadWifiPreferenceChecked: boolean,\r\n  HasUpdateableDocs: boolean,\r\n  HasDocQueues: boolean,\r\n  HasCompanies: boolean,\r\n  HasDataTouchAreas: boolean,\r\n  HasQueueSupervisors: boolean,\r\n  HasCategoryActioners: boolean,\r\n  UserSites: Site[],\r\n  UserCompanies: Company[],\r\n  HasPlanningMeeting: boolean,\r\n  HasReviewMeeting: boolean,\r\n  HasCollabPlanning: boolean,\r\n  HasRandomOperativebarcodes: boolean,\r\n  HasLiveQueues: boolean,\r\n  HasResAreas:boolean,\r\n  HasHideOperativeScan: boolean,\r\n  HasSites: boolean,\r\n  HasDocDrop: boolean,\r\n  HasBasicOpInfo: boolean,\r\n  HasSimpleSwipes: boolean,\r\n  HasProjectsOnDocDrop: boolean,\r\n  HasCustomLookups: boolean,\r\n  HasTemplateSender: boolean,\r\n  HasMyOpInfo: boolean,\r\n  HasViewDocumentAsSinglePage: boolean,\r\n  HasShowParentAnswersOnChildDoc: boolean,\r\n  HasCompanySelectWithOtherOption:boolean,\r\n  HideSearchOnOperativeInfo: boolean,\r\n  HideSearchOnOperativeAccess: boolean,\r\n  CanAddOperativesToDocsByName: boolean,\r\n  HasRamsList: boolean,\r\n  CanAddAsssetsToDocsByName: boolean,\r\n  ShowWeightingsOnApp: boolean,\r\n  TemplatesLastUpdate: Date,\r\n  Url: string,\r\n  UseFingerReader: boolean,\r\n  SelectedSite?: Site,\r\n  NavTab: \"Modules\" | \"Documents\",\r\n  NumberOfTemplates: number,\r\n  DownloadedTemplates: number,\r\n  //PermittedCategories: DocCategory[],\r\n  HasOperativeInfo: boolean,\r\n  CanOffHireAssets: boolean,\r\n  CanViewOtherOperativeInfo: boolean,\r\n  CanModifyOperativeQRs: boolean,\r\n  CanAddQRsToAssets: boolean\r\n}\r\n\r\nexport interface Site {\r\n  Id: number,\r\n  Name: string\r\n}\r\n\r\nexport interface Company {\r\n  Id: number,\r\n  Name: string\r\n}\r\n\r\nexport interface Area {\r\n  Id: number,\r\n  SiteId: number,\r\n  Name: string\r\n}\r\n\r\nconst {\r\n  withAppUser, \r\n  selectAppUser, \r\n  setAppUser\r\n} = propsFactory(\"appUser\", { initialValue: null as User | null });\r\n\r\nconst store = createStore(\r\n  { name: \"user\" },\r\n  withAppUser()\r\n);\r\n\r\nconst userSelector = selector(store.pipe(selectAppUser()));\r\nconst sites$ = userSelector(user => user?.UserSites || []);\r\n\r\nconst setAppUserUpdate = pipeTap<User>(user => store.update(setAppUser(user)));\r\n\r\npersistState(store, {\r\n  key: \"user\",\r\n  storage: localStorageStrategy\r\n});\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class UserStore {\r\n  httpClient = inject(HttpClient);\r\n\r\n  user$ = store.pipe(selectAppUser());\r\n  sites$ = sites$;\r\n  companies$ = userSelector(user => user?.UserCompanies || []);\r\n\r\n  getUserRequest$ = (action$: Observable<{ token: string, pin: string }>) => combineLatest({\r\n    login: action$,\r\n    deviceId: getDeviceUuid(),\r\n    deviceString: getDeviceString() \r\n  }).pipe(\r\n    switchMap(({ login, deviceId, deviceString }) => this.httpClient.post<User>(`${environment.siteDocsApi}/LoginApi/LoginSiteDocumentsApp`, {\r\n      deviceId,\r\n      deviceString\r\n    }, {\r\n      headers: {\r\n        appToken: login.token,\r\n        appPin: login.pin\r\n      }\r\n    })),\r\n    setAppUserUpdate()\r\n  );\r\n}",
            "properties": [
                {
                    "name": "Id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 81
                },
                {
                    "name": "Name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 82
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "CreateApiOptions",
            "id": "interface-CreateApiOptions-03c89532528436e62b7092d571fe08b27a8f5dae1cf6778b1a9e9522c21f16d1467d2b378775faf6257600168e2971dcde4dbcd23197484bc4215a43cf3a11f8",
            "file": "src/app/core/http/create-api.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\r\nimport { inject } from \"@angular/core\";\r\nimport { mapValues, memoize, omitBy } from \"lodash-es\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nexport type AspNetData<T> = {\r\n  [name in keyof T]: T[name] extends Date | undefined | null \r\n    ? string \r\n    : T[name] \r\n}\r\n\r\nexport interface GetRequestOptions<TParams> {\r\n  path: string,\r\n  query?: (params: TParams) => object,\r\n  headers?: (params: TParams) => object\r\n}\r\n\r\nexport interface PostRequestOptions<TParams> {\r\n  path: string,\r\n  body?: (params: TParams) => object,\r\n  headers?: (params: TParams) => object\r\n}\r\n\r\nexport interface BuildApi {\r\n  get: <TResponse, TParams = object | void>(getOptions: string | GetRequestOptions<TParams>) => (params: TParams) => Observable<TResponse>\r\n  post: <TResponse, TParams = object | void>(postOptions: PostRequestOptions<TParams>) => (params: TParams) => Observable<TResponse>\r\n}\r\n\r\nexport interface CreateApiOptions<TApi> {\r\n  baseUrl: string,\r\n  headers?: object,\r\n  endpoints: (build: BuildApi) => TApi\r\n}\r\n\r\nexport type Params = {\r\n  [param: string]: string | number | boolean | ReadonlyArray<string | number | boolean>\r\n}\r\n\r\nexport function createBuildApi<TApi>(options: CreateApiOptions<TApi>): BuildApi {\r\n  const http = inject(HttpClient);\r\n\r\n  return {\r\n    get: <TResponse, TParams = object | void>(getOptions: string | GetRequestOptions<TParams>) => \r\n      typeof getOptions === \"string\" \r\n        ? () => http.get<TResponse>(`${options.baseUrl}/${getOptions}`)\r\n        : (params: TParams) => http.get<TResponse>(`${options.baseUrl}/${getOptions.path}`, {\r\n            headers: getOptions.headers != null \r\n              ? mapValues(omitBy(getOptions.headers(params) as Params, val => val == null), val => val.toString()) \r\n              : {},\r\n            params: getOptions.query != null \r\n              ? getOptions.query(params) as Params\r\n              : params != null\r\n              ? omitBy(params, val => val == null) as Params\r\n              : {}\r\n        }),\r\n    post: <TResponse, TParams = object | void>(postOptions: PostRequestOptions<TParams>) =>\r\n      (params: TParams) => {\r\n        debugger;\r\n        return http.post<TResponse>(\r\n          `${options.baseUrl}/${postOptions.path}`, \r\n          postOptions.body != null\r\n            ? postOptions.body(params)\r\n            : params != null\r\n            ? omitBy(params, val => val == null)\r\n            : {}, \r\n          {\r\n            headers: postOptions.headers != null \r\n            ? mapValues(omitBy(postOptions.headers(params) as Params, val => val == null), val => val.toString()) \r\n            : {}\r\n          }\r\n        );\r\n      } \r\n  }\r\n}\r\n\r\nexport function createApi<TApi>(options: CreateApiOptions<TApi>) {\r\n  return memoize(() => {\r\n    const build = createBuildApi(options);\r\n\r\n    return options.endpoints(build);\r\n  });\r\n}",
            "properties": [
                {
                    "name": "baseUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "endpoints",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "headers",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": true,
                    "description": "",
                    "line": 31
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "DataUrlFile",
            "id": "interface-DataUrlFile-72a893f9b32b755dc1fe36e5b3f6b437b2ba78f53017509834bbd9f5c10f723a550ec054aae91e6e10674e584785de02b909c5342982820ab89c416224f1b014",
            "file": "src/app/shared/models/files/data-url-file.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface DataUrlFile extends Pick<File, \"name\" | \"lastModified\" | \"size\" | \"type\"> {\r\n  dataUrl: string\r\n}",
            "properties": [
                {
                    "name": "dataUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "extends": "Pick"
        },
        {
            "name": "Detail",
            "id": "interface-Detail-9c0a0c16c69962295b316d0cbbc096bf2144709234d615c291801beb99da0966cbc9896b592f0f473761ef4ca12212337e504455c05a1aedd6e20488031aeb1c",
            "file": "src/app/core/http/asset.api.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Asset } from \"../stores/asset/asset.store\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { createApi } from \"./create-api\";\r\nimport { memoize } from \"lodash-es\";\r\nimport { track } from \"src/app/shared/rxjs\";\r\nimport { trackSend } from \"src/app/shared/rxjs\";\r\nimport { of } from \"rxjs\";\r\n\r\nexport interface GetAssetsByRegistrationParams { \r\n  searchString: string, \r\n  siteId?: number \r\n}\r\n\r\nexport interface GetAssetsByTypeParams { \r\n  typeId: number, \r\n  siteId?: number \r\n}\r\n\r\nexport interface AssetGroup {\r\n  GroupID: number,\r\n  GroupName: string,\r\n  SiteID: number\r\n}\r\n\r\nexport interface AssetType {\r\n  Id: number,\r\n  Description: string,\r\n  GroupID: number\r\n}\r\n\r\nexport interface AssetInspectionSchedule {\r\n  ScheduleID: number;\r\n  ScheduleName: string;\r\n  Active: boolean;\r\n}\r\n\r\nexport interface Detail {\r\n  Title: string,\r\n}\r\n\r\nexport interface DetailListItem {\r\n  Content: string;\r\n}\r\n\r\nexport interface GetAssetDetailsByAssetIdQuery {\r\n  id: number;\r\n}\r\n\r\nexport interface GetAssetDetailsByTagQuery {\r\n  tag: string;\r\n}\r\n\r\nexport interface DetailsListItem {\r\n  Icon: string;\r\n  CssClass: string;\r\n  Content: string;\r\n  Date: Date;\r\n  IconStyle: { [key: string]: string };\r\n  Id: number;\r\n  StringId?: string;\r\n  ListItemType: string;\r\n}\r\n\r\nexport interface DetailsList {\r\n  Title: string;\r\n  ListItems: DetailsListItem[];\r\n}\r\n\r\nexport interface AssetInfo {\r\n  ID: number;\r\n  AssetID: string;\r\n  AcquiredDate: Date;\r\n  DateOnSite: Date;\r\n  DateOffHired: Date;\r\n  TypeName: string;\r\n  Registration: string;\r\n  QRCode: string;\r\n  SiteID: number;\r\n  AssetFileName: string;\r\n  DetailsLists: DetailsList[];\r\n  Base64Img: Nullable<string>;\r\n  PurchaseValue: string;\r\n  AssetNotes: string;\r\n  Location: string;\r\n  TemplateIDs: number[];\r\n}\r\n\r\nexport const useAssetApi = createApi({\r\n  baseUrl: `${environment.siteDocsApi}/AssetApi`,\r\n  endpoints: ({ get }) => ({\r\n    getAssetDetailsByAssetId: get<AssetInfo, GetAssetDetailsByAssetIdQuery>(\"AssetDetailsByAssetId\"),\r\n    getAssetDetailsByTag: get<AssetInfo, GetAssetDetailsByTagQuery>(\"AssetDetailsByTag\"),\r\n    getAssetsByRegistration: get<Asset[], GetAssetsByRegistrationParams>(\"GetAssetsByReg\"),\r\n    getAssetsByType: get<Asset[], GetAssetsByTypeParams>(\"getAssetsByType\"),\r\n    getAssetGroups: get<AssetGroup[]>(\"GetAssetGroups\"),\r\n    getAssetTypes: get<AssetType[]>(\"GetAssetTypes\"),\r\n    getAssetInspectionSchedules: get<AssetInspectionSchedule[]>(\"GetAssetInspectionSchedules\")\r\n  })\r\n});\r\n\r\nexport const useAssetDetailsById = memoize((assetId: Nullable<number>) => {\r\n  const { getAssetDetailsByAssetId } = useAssetApi();\r\n\r\n  return track(() => assetId != null\r\n    ? getAssetDetailsByAssetId({ id: assetId })\r\n    : of(null)\r\n  )\r\n});\r\n\r\nexport const useAssetDetailsByTag = memoize((tag: Nullable<string>) => {\r\n  const { getAssetDetailsByTag } = useAssetApi();\r\n\r\n  return track(() => tag != null \r\n    ? getAssetDetailsByTag({ tag }) \r\n    : of(null)\r\n  );\r\n})\r\n\r\nexport const useFetchAssetsByRegistration = memoize((binding: Func<GetAssetsByRegistrationParams>) => {\r\n  const { getAssetsByRegistration } = useAssetApi();\r\n\r\n  return trackSend({\r\n    binding,\r\n    fn: params => getAssetsByRegistration(params)\r\n  });\r\n})\r\n\r\nexport const useFetchAssetsByType = memoize((binding: Func<Partial<GetAssetsByTypeParams>>) => {\r\n  const { getAssetsByType } = useAssetApi();\r\n\r\n  return trackSend({\r\n    binding,\r\n    fn: params => getAssetsByType(params as GetAssetsByTypeParams)\r\n  })\r\n});\r\n\r\nexport const useAssetGroups = memoize(() => {\r\n  const { getAssetGroups } = useAssetApi();\r\n\r\n  const assetGroups = track(() => getAssetGroups());\r\n\r\n  return {\r\n    ...assetGroups,\r\n    options: assetGroups.data(groups => groups.map(g => \r\n      ({\r\n        GroupId: g.GroupID.toString(),\r\n        GroupName: g.GroupName\r\n      })\r\n    ))\r\n  }\r\n});\r\n\r\nexport const useAssetTypes = memoize(() => {\r\n  const { getAssetTypes } = useAssetApi();\r\n\r\n  const assetTypes = track(() => getAssetTypes());\r\n\r\n  return {\r\n    ...assetTypes,\r\n    options: assetTypes.data(types => types.map(t => \r\n      ({\r\n        Id: t.Id.toString(),\r\n        Description: t.Description\r\n      })\r\n    ))\r\n  }\r\n});\r\n\r\nexport const useAssetInspectionSchedules = memoize(() => {\r\n  const { getAssetInspectionSchedules } = useAssetApi();\r\n\r\n  const inspectionSchedules = track(() => getAssetInspectionSchedules());\r\n\r\n  return {\r\n    ...inspectionSchedules,\r\n    options: inspectionSchedules.data(schedules => schedules.map(s => \r\n      ({\r\n        ScheduleId: s.ScheduleID.toString(),\r\n        ScheduleName: s.ScheduleName\r\n      })\r\n    ))\r\n  }\r\n});",
            "properties": [
                {
                    "name": "Title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 38
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "DetailListItem",
            "id": "interface-DetailListItem-9c0a0c16c69962295b316d0cbbc096bf2144709234d615c291801beb99da0966cbc9896b592f0f473761ef4ca12212337e504455c05a1aedd6e20488031aeb1c",
            "file": "src/app/core/http/asset.api.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Asset } from \"../stores/asset/asset.store\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { createApi } from \"./create-api\";\r\nimport { memoize } from \"lodash-es\";\r\nimport { track } from \"src/app/shared/rxjs\";\r\nimport { trackSend } from \"src/app/shared/rxjs\";\r\nimport { of } from \"rxjs\";\r\n\r\nexport interface GetAssetsByRegistrationParams { \r\n  searchString: string, \r\n  siteId?: number \r\n}\r\n\r\nexport interface GetAssetsByTypeParams { \r\n  typeId: number, \r\n  siteId?: number \r\n}\r\n\r\nexport interface AssetGroup {\r\n  GroupID: number,\r\n  GroupName: string,\r\n  SiteID: number\r\n}\r\n\r\nexport interface AssetType {\r\n  Id: number,\r\n  Description: string,\r\n  GroupID: number\r\n}\r\n\r\nexport interface AssetInspectionSchedule {\r\n  ScheduleID: number;\r\n  ScheduleName: string;\r\n  Active: boolean;\r\n}\r\n\r\nexport interface Detail {\r\n  Title: string,\r\n}\r\n\r\nexport interface DetailListItem {\r\n  Content: string;\r\n}\r\n\r\nexport interface GetAssetDetailsByAssetIdQuery {\r\n  id: number;\r\n}\r\n\r\nexport interface GetAssetDetailsByTagQuery {\r\n  tag: string;\r\n}\r\n\r\nexport interface DetailsListItem {\r\n  Icon: string;\r\n  CssClass: string;\r\n  Content: string;\r\n  Date: Date;\r\n  IconStyle: { [key: string]: string };\r\n  Id: number;\r\n  StringId?: string;\r\n  ListItemType: string;\r\n}\r\n\r\nexport interface DetailsList {\r\n  Title: string;\r\n  ListItems: DetailsListItem[];\r\n}\r\n\r\nexport interface AssetInfo {\r\n  ID: number;\r\n  AssetID: string;\r\n  AcquiredDate: Date;\r\n  DateOnSite: Date;\r\n  DateOffHired: Date;\r\n  TypeName: string;\r\n  Registration: string;\r\n  QRCode: string;\r\n  SiteID: number;\r\n  AssetFileName: string;\r\n  DetailsLists: DetailsList[];\r\n  Base64Img: Nullable<string>;\r\n  PurchaseValue: string;\r\n  AssetNotes: string;\r\n  Location: string;\r\n  TemplateIDs: number[];\r\n}\r\n\r\nexport const useAssetApi = createApi({\r\n  baseUrl: `${environment.siteDocsApi}/AssetApi`,\r\n  endpoints: ({ get }) => ({\r\n    getAssetDetailsByAssetId: get<AssetInfo, GetAssetDetailsByAssetIdQuery>(\"AssetDetailsByAssetId\"),\r\n    getAssetDetailsByTag: get<AssetInfo, GetAssetDetailsByTagQuery>(\"AssetDetailsByTag\"),\r\n    getAssetsByRegistration: get<Asset[], GetAssetsByRegistrationParams>(\"GetAssetsByReg\"),\r\n    getAssetsByType: get<Asset[], GetAssetsByTypeParams>(\"getAssetsByType\"),\r\n    getAssetGroups: get<AssetGroup[]>(\"GetAssetGroups\"),\r\n    getAssetTypes: get<AssetType[]>(\"GetAssetTypes\"),\r\n    getAssetInspectionSchedules: get<AssetInspectionSchedule[]>(\"GetAssetInspectionSchedules\")\r\n  })\r\n});\r\n\r\nexport const useAssetDetailsById = memoize((assetId: Nullable<number>) => {\r\n  const { getAssetDetailsByAssetId } = useAssetApi();\r\n\r\n  return track(() => assetId != null\r\n    ? getAssetDetailsByAssetId({ id: assetId })\r\n    : of(null)\r\n  )\r\n});\r\n\r\nexport const useAssetDetailsByTag = memoize((tag: Nullable<string>) => {\r\n  const { getAssetDetailsByTag } = useAssetApi();\r\n\r\n  return track(() => tag != null \r\n    ? getAssetDetailsByTag({ tag }) \r\n    : of(null)\r\n  );\r\n})\r\n\r\nexport const useFetchAssetsByRegistration = memoize((binding: Func<GetAssetsByRegistrationParams>) => {\r\n  const { getAssetsByRegistration } = useAssetApi();\r\n\r\n  return trackSend({\r\n    binding,\r\n    fn: params => getAssetsByRegistration(params)\r\n  });\r\n})\r\n\r\nexport const useFetchAssetsByType = memoize((binding: Func<Partial<GetAssetsByTypeParams>>) => {\r\n  const { getAssetsByType } = useAssetApi();\r\n\r\n  return trackSend({\r\n    binding,\r\n    fn: params => getAssetsByType(params as GetAssetsByTypeParams)\r\n  })\r\n});\r\n\r\nexport const useAssetGroups = memoize(() => {\r\n  const { getAssetGroups } = useAssetApi();\r\n\r\n  const assetGroups = track(() => getAssetGroups());\r\n\r\n  return {\r\n    ...assetGroups,\r\n    options: assetGroups.data(groups => groups.map(g => \r\n      ({\r\n        GroupId: g.GroupID.toString(),\r\n        GroupName: g.GroupName\r\n      })\r\n    ))\r\n  }\r\n});\r\n\r\nexport const useAssetTypes = memoize(() => {\r\n  const { getAssetTypes } = useAssetApi();\r\n\r\n  const assetTypes = track(() => getAssetTypes());\r\n\r\n  return {\r\n    ...assetTypes,\r\n    options: assetTypes.data(types => types.map(t => \r\n      ({\r\n        Id: t.Id.toString(),\r\n        Description: t.Description\r\n      })\r\n    ))\r\n  }\r\n});\r\n\r\nexport const useAssetInspectionSchedules = memoize(() => {\r\n  const { getAssetInspectionSchedules } = useAssetApi();\r\n\r\n  const inspectionSchedules = track(() => getAssetInspectionSchedules());\r\n\r\n  return {\r\n    ...inspectionSchedules,\r\n    options: inspectionSchedules.data(schedules => schedules.map(s => \r\n      ({\r\n        ScheduleId: s.ScheduleID.toString(),\r\n        ScheduleName: s.ScheduleName\r\n      })\r\n    ))\r\n  }\r\n});",
            "properties": [
                {
                    "name": "Content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 42
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "DetailsList",
            "id": "interface-DetailsList-9c0a0c16c69962295b316d0cbbc096bf2144709234d615c291801beb99da0966cbc9896b592f0f473761ef4ca12212337e504455c05a1aedd6e20488031aeb1c",
            "file": "src/app/core/http/asset.api.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Asset } from \"../stores/asset/asset.store\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { createApi } from \"./create-api\";\r\nimport { memoize } from \"lodash-es\";\r\nimport { track } from \"src/app/shared/rxjs\";\r\nimport { trackSend } from \"src/app/shared/rxjs\";\r\nimport { of } from \"rxjs\";\r\n\r\nexport interface GetAssetsByRegistrationParams { \r\n  searchString: string, \r\n  siteId?: number \r\n}\r\n\r\nexport interface GetAssetsByTypeParams { \r\n  typeId: number, \r\n  siteId?: number \r\n}\r\n\r\nexport interface AssetGroup {\r\n  GroupID: number,\r\n  GroupName: string,\r\n  SiteID: number\r\n}\r\n\r\nexport interface AssetType {\r\n  Id: number,\r\n  Description: string,\r\n  GroupID: number\r\n}\r\n\r\nexport interface AssetInspectionSchedule {\r\n  ScheduleID: number;\r\n  ScheduleName: string;\r\n  Active: boolean;\r\n}\r\n\r\nexport interface Detail {\r\n  Title: string,\r\n}\r\n\r\nexport interface DetailListItem {\r\n  Content: string;\r\n}\r\n\r\nexport interface GetAssetDetailsByAssetIdQuery {\r\n  id: number;\r\n}\r\n\r\nexport interface GetAssetDetailsByTagQuery {\r\n  tag: string;\r\n}\r\n\r\nexport interface DetailsListItem {\r\n  Icon: string;\r\n  CssClass: string;\r\n  Content: string;\r\n  Date: Date;\r\n  IconStyle: { [key: string]: string };\r\n  Id: number;\r\n  StringId?: string;\r\n  ListItemType: string;\r\n}\r\n\r\nexport interface DetailsList {\r\n  Title: string;\r\n  ListItems: DetailsListItem[];\r\n}\r\n\r\nexport interface AssetInfo {\r\n  ID: number;\r\n  AssetID: string;\r\n  AcquiredDate: Date;\r\n  DateOnSite: Date;\r\n  DateOffHired: Date;\r\n  TypeName: string;\r\n  Registration: string;\r\n  QRCode: string;\r\n  SiteID: number;\r\n  AssetFileName: string;\r\n  DetailsLists: DetailsList[];\r\n  Base64Img: Nullable<string>;\r\n  PurchaseValue: string;\r\n  AssetNotes: string;\r\n  Location: string;\r\n  TemplateIDs: number[];\r\n}\r\n\r\nexport const useAssetApi = createApi({\r\n  baseUrl: `${environment.siteDocsApi}/AssetApi`,\r\n  endpoints: ({ get }) => ({\r\n    getAssetDetailsByAssetId: get<AssetInfo, GetAssetDetailsByAssetIdQuery>(\"AssetDetailsByAssetId\"),\r\n    getAssetDetailsByTag: get<AssetInfo, GetAssetDetailsByTagQuery>(\"AssetDetailsByTag\"),\r\n    getAssetsByRegistration: get<Asset[], GetAssetsByRegistrationParams>(\"GetAssetsByReg\"),\r\n    getAssetsByType: get<Asset[], GetAssetsByTypeParams>(\"getAssetsByType\"),\r\n    getAssetGroups: get<AssetGroup[]>(\"GetAssetGroups\"),\r\n    getAssetTypes: get<AssetType[]>(\"GetAssetTypes\"),\r\n    getAssetInspectionSchedules: get<AssetInspectionSchedule[]>(\"GetAssetInspectionSchedules\")\r\n  })\r\n});\r\n\r\nexport const useAssetDetailsById = memoize((assetId: Nullable<number>) => {\r\n  const { getAssetDetailsByAssetId } = useAssetApi();\r\n\r\n  return track(() => assetId != null\r\n    ? getAssetDetailsByAssetId({ id: assetId })\r\n    : of(null)\r\n  )\r\n});\r\n\r\nexport const useAssetDetailsByTag = memoize((tag: Nullable<string>) => {\r\n  const { getAssetDetailsByTag } = useAssetApi();\r\n\r\n  return track(() => tag != null \r\n    ? getAssetDetailsByTag({ tag }) \r\n    : of(null)\r\n  );\r\n})\r\n\r\nexport const useFetchAssetsByRegistration = memoize((binding: Func<GetAssetsByRegistrationParams>) => {\r\n  const { getAssetsByRegistration } = useAssetApi();\r\n\r\n  return trackSend({\r\n    binding,\r\n    fn: params => getAssetsByRegistration(params)\r\n  });\r\n})\r\n\r\nexport const useFetchAssetsByType = memoize((binding: Func<Partial<GetAssetsByTypeParams>>) => {\r\n  const { getAssetsByType } = useAssetApi();\r\n\r\n  return trackSend({\r\n    binding,\r\n    fn: params => getAssetsByType(params as GetAssetsByTypeParams)\r\n  })\r\n});\r\n\r\nexport const useAssetGroups = memoize(() => {\r\n  const { getAssetGroups } = useAssetApi();\r\n\r\n  const assetGroups = track(() => getAssetGroups());\r\n\r\n  return {\r\n    ...assetGroups,\r\n    options: assetGroups.data(groups => groups.map(g => \r\n      ({\r\n        GroupId: g.GroupID.toString(),\r\n        GroupName: g.GroupName\r\n      })\r\n    ))\r\n  }\r\n});\r\n\r\nexport const useAssetTypes = memoize(() => {\r\n  const { getAssetTypes } = useAssetApi();\r\n\r\n  const assetTypes = track(() => getAssetTypes());\r\n\r\n  return {\r\n    ...assetTypes,\r\n    options: assetTypes.data(types => types.map(t => \r\n      ({\r\n        Id: t.Id.toString(),\r\n        Description: t.Description\r\n      })\r\n    ))\r\n  }\r\n});\r\n\r\nexport const useAssetInspectionSchedules = memoize(() => {\r\n  const { getAssetInspectionSchedules } = useAssetApi();\r\n\r\n  const inspectionSchedules = track(() => getAssetInspectionSchedules());\r\n\r\n  return {\r\n    ...inspectionSchedules,\r\n    options: inspectionSchedules.data(schedules => schedules.map(s => \r\n      ({\r\n        ScheduleId: s.ScheduleID.toString(),\r\n        ScheduleName: s.ScheduleName\r\n      })\r\n    ))\r\n  }\r\n});",
            "properties": [
                {
                    "name": "ListItems",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DetailsListItem[]",
                    "optional": false,
                    "description": "",
                    "line": 66
                },
                {
                    "name": "Title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 65
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "DetailsListItem",
            "id": "interface-DetailsListItem-9c0a0c16c69962295b316d0cbbc096bf2144709234d615c291801beb99da0966cbc9896b592f0f473761ef4ca12212337e504455c05a1aedd6e20488031aeb1c",
            "file": "src/app/core/http/asset.api.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Asset } from \"../stores/asset/asset.store\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { createApi } from \"./create-api\";\r\nimport { memoize } from \"lodash-es\";\r\nimport { track } from \"src/app/shared/rxjs\";\r\nimport { trackSend } from \"src/app/shared/rxjs\";\r\nimport { of } from \"rxjs\";\r\n\r\nexport interface GetAssetsByRegistrationParams { \r\n  searchString: string, \r\n  siteId?: number \r\n}\r\n\r\nexport interface GetAssetsByTypeParams { \r\n  typeId: number, \r\n  siteId?: number \r\n}\r\n\r\nexport interface AssetGroup {\r\n  GroupID: number,\r\n  GroupName: string,\r\n  SiteID: number\r\n}\r\n\r\nexport interface AssetType {\r\n  Id: number,\r\n  Description: string,\r\n  GroupID: number\r\n}\r\n\r\nexport interface AssetInspectionSchedule {\r\n  ScheduleID: number;\r\n  ScheduleName: string;\r\n  Active: boolean;\r\n}\r\n\r\nexport interface Detail {\r\n  Title: string,\r\n}\r\n\r\nexport interface DetailListItem {\r\n  Content: string;\r\n}\r\n\r\nexport interface GetAssetDetailsByAssetIdQuery {\r\n  id: number;\r\n}\r\n\r\nexport interface GetAssetDetailsByTagQuery {\r\n  tag: string;\r\n}\r\n\r\nexport interface DetailsListItem {\r\n  Icon: string;\r\n  CssClass: string;\r\n  Content: string;\r\n  Date: Date;\r\n  IconStyle: { [key: string]: string };\r\n  Id: number;\r\n  StringId?: string;\r\n  ListItemType: string;\r\n}\r\n\r\nexport interface DetailsList {\r\n  Title: string;\r\n  ListItems: DetailsListItem[];\r\n}\r\n\r\nexport interface AssetInfo {\r\n  ID: number;\r\n  AssetID: string;\r\n  AcquiredDate: Date;\r\n  DateOnSite: Date;\r\n  DateOffHired: Date;\r\n  TypeName: string;\r\n  Registration: string;\r\n  QRCode: string;\r\n  SiteID: number;\r\n  AssetFileName: string;\r\n  DetailsLists: DetailsList[];\r\n  Base64Img: Nullable<string>;\r\n  PurchaseValue: string;\r\n  AssetNotes: string;\r\n  Location: string;\r\n  TemplateIDs: number[];\r\n}\r\n\r\nexport const useAssetApi = createApi({\r\n  baseUrl: `${environment.siteDocsApi}/AssetApi`,\r\n  endpoints: ({ get }) => ({\r\n    getAssetDetailsByAssetId: get<AssetInfo, GetAssetDetailsByAssetIdQuery>(\"AssetDetailsByAssetId\"),\r\n    getAssetDetailsByTag: get<AssetInfo, GetAssetDetailsByTagQuery>(\"AssetDetailsByTag\"),\r\n    getAssetsByRegistration: get<Asset[], GetAssetsByRegistrationParams>(\"GetAssetsByReg\"),\r\n    getAssetsByType: get<Asset[], GetAssetsByTypeParams>(\"getAssetsByType\"),\r\n    getAssetGroups: get<AssetGroup[]>(\"GetAssetGroups\"),\r\n    getAssetTypes: get<AssetType[]>(\"GetAssetTypes\"),\r\n    getAssetInspectionSchedules: get<AssetInspectionSchedule[]>(\"GetAssetInspectionSchedules\")\r\n  })\r\n});\r\n\r\nexport const useAssetDetailsById = memoize((assetId: Nullable<number>) => {\r\n  const { getAssetDetailsByAssetId } = useAssetApi();\r\n\r\n  return track(() => assetId != null\r\n    ? getAssetDetailsByAssetId({ id: assetId })\r\n    : of(null)\r\n  )\r\n});\r\n\r\nexport const useAssetDetailsByTag = memoize((tag: Nullable<string>) => {\r\n  const { getAssetDetailsByTag } = useAssetApi();\r\n\r\n  return track(() => tag != null \r\n    ? getAssetDetailsByTag({ tag }) \r\n    : of(null)\r\n  );\r\n})\r\n\r\nexport const useFetchAssetsByRegistration = memoize((binding: Func<GetAssetsByRegistrationParams>) => {\r\n  const { getAssetsByRegistration } = useAssetApi();\r\n\r\n  return trackSend({\r\n    binding,\r\n    fn: params => getAssetsByRegistration(params)\r\n  });\r\n})\r\n\r\nexport const useFetchAssetsByType = memoize((binding: Func<Partial<GetAssetsByTypeParams>>) => {\r\n  const { getAssetsByType } = useAssetApi();\r\n\r\n  return trackSend({\r\n    binding,\r\n    fn: params => getAssetsByType(params as GetAssetsByTypeParams)\r\n  })\r\n});\r\n\r\nexport const useAssetGroups = memoize(() => {\r\n  const { getAssetGroups } = useAssetApi();\r\n\r\n  const assetGroups = track(() => getAssetGroups());\r\n\r\n  return {\r\n    ...assetGroups,\r\n    options: assetGroups.data(groups => groups.map(g => \r\n      ({\r\n        GroupId: g.GroupID.toString(),\r\n        GroupName: g.GroupName\r\n      })\r\n    ))\r\n  }\r\n});\r\n\r\nexport const useAssetTypes = memoize(() => {\r\n  const { getAssetTypes } = useAssetApi();\r\n\r\n  const assetTypes = track(() => getAssetTypes());\r\n\r\n  return {\r\n    ...assetTypes,\r\n    options: assetTypes.data(types => types.map(t => \r\n      ({\r\n        Id: t.Id.toString(),\r\n        Description: t.Description\r\n      })\r\n    ))\r\n  }\r\n});\r\n\r\nexport const useAssetInspectionSchedules = memoize(() => {\r\n  const { getAssetInspectionSchedules } = useAssetApi();\r\n\r\n  const inspectionSchedules = track(() => getAssetInspectionSchedules());\r\n\r\n  return {\r\n    ...inspectionSchedules,\r\n    options: inspectionSchedules.data(schedules => schedules.map(s => \r\n      ({\r\n        ScheduleId: s.ScheduleID.toString(),\r\n        ScheduleName: s.ScheduleName\r\n      })\r\n    ))\r\n  }\r\n});",
            "properties": [
                {
                    "name": "Content",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "CssClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "Date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "Icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "IconStyle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "Id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 59
                },
                {
                    "name": "ListItemType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "StringId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 60
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "DocumentBuilderOptions",
            "id": "interface-DocumentBuilderOptions-58aa953ae0b92dac0705448b6cea2b7ea0924be3a7ed31006cafdf7952ea957960e49fb3817740c047d8c75d5d3992d9a2fae1f2d5344d9ab40836fb89a81507",
            "file": "src/app/core/pages/document-builder/document-builder.page.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { IfComponent, ToggleButtonComponent } from \"src/app/shared/components\";\r\nimport { importNgSwitch, importRxTemplate } from \"src/app/shared/imports\";\r\nimport { ChildDocumentCardComponent, DocumentNavigationComponent, DocumentPageComponent, DocumentSectionComponent, QuestionsTemplateDirective, importInfoTypes, importInputTypes, importQuestionTypes } from \"./components\";\r\nimport { QuestionType } from \"../../stores/site-document/models\";\r\nimport { isMobileApp } from \"src/app/shared/plugins/platform.plugin\";\r\nimport { importDocumentBuilderModals } from \"./modals\";\r\nimport { useTemplate } from \"../../http/template.api\";\r\nimport { param, param$, useGoRelative } from \"src/app/shared/route\";\r\nimport { AddQuestionLevelImageCommand, useSpecificDocument, useUploadDocument, useUploadQuestionImages } from \"../../http/site-document.api\";\r\nimport { useUpdateDocMove } from \"../../http/queues.api\";\r\nimport { filter, map } from \"rxjs\";\r\nimport { takeUntilDestroyed } from \"@angular/core/rxjs-interop\";\r\n\r\n@Component({\r\n  selector: 'document-builder-page',\r\n  template: `\r\n    <ion-header>\r\n      <ion-toolbar *rxIf=\"document.data(); let document\">\r\n        <ion-buttons slot=\"start\">\r\n          <ion-button>\r\n            <ion-icon name=\"arrow-back-outline\" />\r\n          </ion-button>\r\n        </ion-buttons>\r\n        <ion-title class=\"ion-text-center ion-text-wrap\">\r\n          {{ document.DocumentTitle }}\r\n        </ion-title>\r\n        <ion-buttons slot=\"end\">\r\n          <toggle-button [(checked)]=\"options.inSinglePageMode\" icon=\"reader\" />\r\n\r\n          <toggle-button \r\n            *rxIf=\"isMobileApp\" \r\n            [(checked)]=\"document.Pinned\" \r\n            icon=\"bookmark\" />\r\n        </ion-buttons>\r\n      </ion-toolbar>\r\n    </ion-header>\r\n\r\n    <ion-content *rxIf=\"document.data(); let document\" class=\"ion-padding\">\r\n      <preamble [subtitle]=\"document.Subtitle\" [text]=\"document.Preamble\" />\r\n\r\n      <require-gps *rxIf=\"document.ReqGps\" />\r\n\r\n      <actioner-select\r\n         *rxIf=\"document.CanAddActionerFromApp\"\r\n         [(actionerId)]=\"document.CurrentActionerOperativeID\"\r\n         [title]=\"document.MetaData.ActionerText\"\r\n         [hideMyself]=\"document.MetaData.CannotAddSelfAsActioner || false\" />\r\n      \r\n      <category-actioner-select \r\n        *rxIf=\"document.CanAddCategoryActioner && document.DocumentCategory != null\" \r\n        [title]=\"document.MetaData.ActionerText\"\r\n        [(actionerId)]=\"document.CurrentActionerOperativeID\"\r\n        [categoryId]=\"document.DocumentCategory\"\r\n        [hideMyself]=\"document.MetaData.CannotAddSelfAsActioner || false\" />\r\n      \r\n      <company-actioner-select \r\n        *rxIf=\"document.CanHaveCompanyActioner\"\r\n        [title]=\"document.MetaData.ActionerText\"\r\n        [(companyId)]=\"document.CompanyActionerId\" />\r\n      \r\n      <responsibility-area-select \r\n        *rxIf=\"document.DocumentResponsibilityAreaTypeId != null\" \r\n        [responsibilityAreaTypeId]=\"document.DocumentResponsibilityAreaTypeId\"\r\n        [(responsibilityAreaId)]=\"document.DocumentResponsibilityAreaId\"/>\r\n\r\n      <queue-select \r\n        *rxIf=\"document.Queues && document.Queues.length > 0\"\r\n        [queues]=\"document.Queues\"\r\n        [(queueId)]=\"document.AutoQueueID\" />\r\n      \r\n      <site-select \r\n        *rxIf=\"document.MetaData?.HasSiteList\"\r\n        [title]=\"document.MetaData.SiteListTitle\"\r\n        [(siteId)]=\"document.SiteId\" />\r\n      \r\n      <queue-duration \r\n        *rxIf=\"document.CanHaveQueueDuration && document.QueueDuration != null\"\r\n        [(type)]=\"document.QueueDuration!.Type\"\r\n        [(duration)]=\"document.QueueDuration!.Value\" />\r\n\r\n      <document-image-upload *rxIf=\"document.CanHaveDocumentLevelImages && document.ShowDocLevelPhotoButtonAtStartOfDoc\" [(images)]=\"document.Images\" />\r\n\r\n      <document-page *rxFor=\"let page of document.Pages; index as idx\" [page]=\"page\" [hidden]=\"!options.inSinglePageMode && document.PageIdx !== page.PageNo\">\r\n        <document-section *rxFor=\"let section of page.Sections\" [section]=\"section\">\r\n          <ng-template [ngSwitch]=\"section.SectionQuestiontype\" [questions]=\"section.Questions\" let-question>\r\n            <label-question *ngSwitchCase=\"QuestionType.Label\" [question]=\"question\" />\r\n            <checkbox-question *ngSwitchCase=\"QuestionType.Checkbox\" [question]=\"question\" />\r\n            \r\n            <if *ngSwitchCase=\"QuestionType.RadioGroup\" [condition]=\"document.MetaData.UsesRadioGroupTable === true\">\r\n              <radio-table-question show [question]=\"question\" />\r\n              <radio-group-question else [section]=\"section\" [question]=\"question\" />\r\n            </if>\r\n\r\n            <textarea-question *ngSwitchCase=\"QuestionType.TextArea\" [question]=\"question\" />\r\n            <select-question *ngSwitchCase=\"QuestionType.Select\" [question]=\"question\" />\r\n            <checkbox-question *ngSwitchCase=\"QuestionType.CheckboxTextbox\" [question]=\"question\" />\r\n\r\n            <if *ngSwitchCase=\"QuestionType.RadioGroupTextbox\" [condition]=\"document.MetaData.UsesRadioGroupTable === true\">\r\n              <radio-table-textbox-question show [question]=\"question\" />\r\n              <radio-group-textbox-question else [question]=\"question\" [section]=\"section\" />\r\n            </if>\r\n\r\n            <date-question *ngSwitchCase=\"QuestionType.Date\" [question]=\"question\" />\r\n            <datetime-question *ngSwitchCase=\"QuestionType.DateTime\" [question]=\"question\" />\r\n            <operative-list-question *ngSwitchCase=\"QuestionType.OperativeList\" [question]=\"question\" />\r\n            <number-question *ngSwitchCase=\"QuestionType.Number\" [question]=\"question\" />\r\n            <asset-list-question *ngSwitchCase=\"QuestionType.AssetList\" [question]=\"question\" />\r\n            <linked-dates-question *ngSwitchCase=\"QuestionType.LinkedDates\" [question]=\"question\" />\r\n            <signature-question *ngSwitchCase=\"QuestionType.Signature\" [question]=\"question\" />\r\n            <company-select-question *ngSwitchCase=\"QuestionType.CompanySelect\" [question]=\"question\" />\r\n            <area-select-question *ngSwitchCase=\"QuestionType.AreaSelect\" [question]=\"question\" />\r\n            <asset-groups-and-types-question *ngSwitchCase=\"QuestionType.AssetGroupsAndTypes\" [question]=\"question\" />\r\n            <select-text-question *ngSwitchCase=\"QuestionType.SelectText\" [question]=\"question\" />\r\n            <time-question *ngSwitchCase=\"QuestionType.Time\" [question]=\"question\" />\r\n            <linked-times-question *ngSwitchCase=\"QuestionType.LinkedTimes\" [question]=\"question\" />\r\n            <hra-select-question *ngSwitchCase=\"QuestionType.HraSelect\" [question]=\"question\" />\r\n            <linked-datetime-question *ngSwitchCase=\"QuestionType.LinkedDateAndTime\" [question]=\"question\" />\r\n          </ng-template>\r\n        </document-section>\r\n      </document-page>\r\n\r\n      <child-document-card *rxIf=\"document.ChildTemplateID > 0\" [templateId]=\"document.ChildTemplateID\" />\r\n\r\n      <remain-anonymous *rxIf=\"document.AllowAnon\" [(isTicked)]=\"document.RemainAnon\" />\r\n\r\n      <document-image-upload *rxIf=\"document.CanHaveDocumentLevelImages && !document.ShowDocLevelPhotoButtonAtStartOfDoc\" [(images)]=\"document.Images\" />\r\n\r\n      <ion-button \r\n        *rxIf=\"options.inSinglePageMode || document.PageIdx === document.Pages.length\" \r\n        class=\"ion-margin-vertical\" \r\n        expand=\"full\">\r\n        Submit\r\n      </ion-button>\r\n    </ion-content>\r\n\r\n    <ng-container *rxIf=\"document.data(); let doc\">\r\n      <ion-footer *rxIf=\"!options.inSinglePageMode && doc.Pages.length > 0\">\r\n        <document-navigation [pages]=\"doc.Pages\" [(index)]=\"doc.PageIdx\" />\r\n      </ion-footer>\r\n    </ng-container>\r\n\r\n    <template-menu-modal \r\n      *rxLet=\"id$; let id\" \r\n      [isOpen]=\"id == null\"\r\n      (select)=\"goRelative({ \r\n        queryParams: { id: $event },\r\n        queryParamsHandling: 'merge',\r\n        skipLocationChange: true \r\n      })\" />\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    ...importNgSwitch(),\r\n    IfComponent,\r\n    ToggleButtonComponent,\r\n    DocumentNavigationComponent,\r\n    DocumentPageComponent,\r\n    DocumentSectionComponent,\r\n    ChildDocumentCardComponent,\r\n    QuestionsTemplateDirective,\r\n    ...importInfoTypes(),\r\n    ...importInputTypes(),\r\n    ...importQuestionTypes(),\r\n    ...importDocumentBuilderModals()\r\n  ]\r\n})\r\nexport class DocumentBuilderPage {\r\n  QuestionType = QuestionType;\r\n  isMobileApp = isMobileApp();\r\n  goRelative = useGoRelative();\r\n\r\n  uploadDocument = useUploadDocument();\r\n  updateDocMove = useUpdateDocMove();\r\n  uploadQuestionImgs = useUploadQuestionImages();\r\n\r\n  options: DocumentBuilderOptions = {\r\n    inSinglePageMode: false\r\n  }\r\n\r\n  id$ = param$(\"id\", id => id?.toNumber());\r\n  parentDocId = param(\"parentDocumentId\")?.toNumber();\r\n  specificId = param(\"specificId\")?.toNumber();\r\n  queueId = param(\"queueId\")?.toNumber();\r\n  toSuccessQueue = param(\"toSuccessQueue\")?.toBoolean();\r\n  token = param(\"token\");\r\n\r\n  document = this.specificId != null \r\n    ? useSpecificDocument(this.specificId)\r\n    : useTemplate(this.id$);\r\n\r\n  effects = [\r\n    this.uploadDocument.data().pipe(\r\n      takeUntilDestroyed(),\r\n      filter(() => this.queueId != null && this.toSuccessQueue != null)\r\n    )\r\n    .subscribe(({ submissionId }) => this.updateDocMove.send({\r\n      documentId: submissionId,\r\n      queueId: this.queueId,\r\n      note: null,\r\n      success: this.toSuccessQueue,\r\n      img64: null\r\n    })),\r\n\r\n    this.uploadDocument.data().pipe(\r\n      takeUntilDestroyed(),\r\n      map(({ document, questions }) => \r\n      ({\r\n        document,\r\n        questions: questions.filter(q => q.Img != null)\r\n      })),\r\n      filter(({ questions }) => questions.length > 0),\r\n      map(({ document, questions }) => questions.map(q => \r\n        ({\r\n          base64: q.Img,\r\n          siteDocumentTypeId: document.SiteDocumentType,\r\n          fileName: q.QuestionID.toString()\r\n        }) as AddQuestionLevelImageCommand)\r\n      )\r\n    )\r\n    .subscribe(uploads => this.uploadQuestionImgs.send(uploads))\r\n  ];\r\n}\r\n\r\ninterface DocumentBuilderOptions {\r\n  inSinglePageMode: boolean\r\n}",
            "properties": [
                {
                    "name": "inSinglePageMode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 230
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "FuseOptions",
            "id": "interface-FuseOptions-eaeff7fe451d2ea1bf3a4ae9610ac1d03fe3f9a0b17673f0a562a2619219c148ddf4ad65ac50cebe037890f4f874df5f05463dc7aaabd1f40bf5dcd313c87979",
            "file": "src/app/shared/pipes/fuse/fuse.pipe.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Pipe, PipeTransform } from \"@angular/core\";\r\nimport Fuse from 'fuse.js'\r\nimport { Observable, map } from \"rxjs\";\r\n\r\nexport interface FuseOptions<T> extends Omit<Fuse.IFuseOptions<T>, \"keys\"> {\r\n  search: string | null | undefined,\r\n  keys?: keyof T | Array<keyof T>\r\n}\r\n\r\n@Pipe({\r\n  name: \"fuse\",\r\n  standalone: true\r\n})\r\nexport class FusePipe implements PipeTransform {\r\n  transform<T>(values: T[], options: FuseOptions<T>): T[] \r\n  transform<T>(values: Observable<T[]>, options: FuseOptions<T>): Observable<T[]>\r\n  transform<T>(values: Observable<T[]> | T[], options: FuseOptions<T>): Observable<T[]> | T[] {\r\n    if (options.search == null || options.search.length === 0)\r\n      return values;\r\n    \r\n    return values instanceof Observable\r\n      ? values.pipe(\r\n        map(vals => new Fuse(vals, { \r\n          threshold: .1,\r\n          ignoreLocation: true,\r\n          ...options as Fuse.IFuseOptions<T>\r\n        })\r\n        .search(options.search!)\r\n        .map(val => val.item))\r\n      )\r\n      : new Fuse(values, { \r\n          threshold: .1,\r\n          ignoreLocation: true,\r\n          ...options as Fuse.IFuseOptions<T>\r\n        })\r\n        .search(options.search)\r\n        .map(val => val.item);\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "keys",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | Array<T>",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "search",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null | undefined",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "extends": "Omit"
        },
        {
            "name": "GetAssetDetailsByAssetIdQuery",
            "id": "interface-GetAssetDetailsByAssetIdQuery-9c0a0c16c69962295b316d0cbbc096bf2144709234d615c291801beb99da0966cbc9896b592f0f473761ef4ca12212337e504455c05a1aedd6e20488031aeb1c",
            "file": "src/app/core/http/asset.api.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Asset } from \"../stores/asset/asset.store\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { createApi } from \"./create-api\";\r\nimport { memoize } from \"lodash-es\";\r\nimport { track } from \"src/app/shared/rxjs\";\r\nimport { trackSend } from \"src/app/shared/rxjs\";\r\nimport { of } from \"rxjs\";\r\n\r\nexport interface GetAssetsByRegistrationParams { \r\n  searchString: string, \r\n  siteId?: number \r\n}\r\n\r\nexport interface GetAssetsByTypeParams { \r\n  typeId: number, \r\n  siteId?: number \r\n}\r\n\r\nexport interface AssetGroup {\r\n  GroupID: number,\r\n  GroupName: string,\r\n  SiteID: number\r\n}\r\n\r\nexport interface AssetType {\r\n  Id: number,\r\n  Description: string,\r\n  GroupID: number\r\n}\r\n\r\nexport interface AssetInspectionSchedule {\r\n  ScheduleID: number;\r\n  ScheduleName: string;\r\n  Active: boolean;\r\n}\r\n\r\nexport interface Detail {\r\n  Title: string,\r\n}\r\n\r\nexport interface DetailListItem {\r\n  Content: string;\r\n}\r\n\r\nexport interface GetAssetDetailsByAssetIdQuery {\r\n  id: number;\r\n}\r\n\r\nexport interface GetAssetDetailsByTagQuery {\r\n  tag: string;\r\n}\r\n\r\nexport interface DetailsListItem {\r\n  Icon: string;\r\n  CssClass: string;\r\n  Content: string;\r\n  Date: Date;\r\n  IconStyle: { [key: string]: string };\r\n  Id: number;\r\n  StringId?: string;\r\n  ListItemType: string;\r\n}\r\n\r\nexport interface DetailsList {\r\n  Title: string;\r\n  ListItems: DetailsListItem[];\r\n}\r\n\r\nexport interface AssetInfo {\r\n  ID: number;\r\n  AssetID: string;\r\n  AcquiredDate: Date;\r\n  DateOnSite: Date;\r\n  DateOffHired: Date;\r\n  TypeName: string;\r\n  Registration: string;\r\n  QRCode: string;\r\n  SiteID: number;\r\n  AssetFileName: string;\r\n  DetailsLists: DetailsList[];\r\n  Base64Img: Nullable<string>;\r\n  PurchaseValue: string;\r\n  AssetNotes: string;\r\n  Location: string;\r\n  TemplateIDs: number[];\r\n}\r\n\r\nexport const useAssetApi = createApi({\r\n  baseUrl: `${environment.siteDocsApi}/AssetApi`,\r\n  endpoints: ({ get }) => ({\r\n    getAssetDetailsByAssetId: get<AssetInfo, GetAssetDetailsByAssetIdQuery>(\"AssetDetailsByAssetId\"),\r\n    getAssetDetailsByTag: get<AssetInfo, GetAssetDetailsByTagQuery>(\"AssetDetailsByTag\"),\r\n    getAssetsByRegistration: get<Asset[], GetAssetsByRegistrationParams>(\"GetAssetsByReg\"),\r\n    getAssetsByType: get<Asset[], GetAssetsByTypeParams>(\"getAssetsByType\"),\r\n    getAssetGroups: get<AssetGroup[]>(\"GetAssetGroups\"),\r\n    getAssetTypes: get<AssetType[]>(\"GetAssetTypes\"),\r\n    getAssetInspectionSchedules: get<AssetInspectionSchedule[]>(\"GetAssetInspectionSchedules\")\r\n  })\r\n});\r\n\r\nexport const useAssetDetailsById = memoize((assetId: Nullable<number>) => {\r\n  const { getAssetDetailsByAssetId } = useAssetApi();\r\n\r\n  return track(() => assetId != null\r\n    ? getAssetDetailsByAssetId({ id: assetId })\r\n    : of(null)\r\n  )\r\n});\r\n\r\nexport const useAssetDetailsByTag = memoize((tag: Nullable<string>) => {\r\n  const { getAssetDetailsByTag } = useAssetApi();\r\n\r\n  return track(() => tag != null \r\n    ? getAssetDetailsByTag({ tag }) \r\n    : of(null)\r\n  );\r\n})\r\n\r\nexport const useFetchAssetsByRegistration = memoize((binding: Func<GetAssetsByRegistrationParams>) => {\r\n  const { getAssetsByRegistration } = useAssetApi();\r\n\r\n  return trackSend({\r\n    binding,\r\n    fn: params => getAssetsByRegistration(params)\r\n  });\r\n})\r\n\r\nexport const useFetchAssetsByType = memoize((binding: Func<Partial<GetAssetsByTypeParams>>) => {\r\n  const { getAssetsByType } = useAssetApi();\r\n\r\n  return trackSend({\r\n    binding,\r\n    fn: params => getAssetsByType(params as GetAssetsByTypeParams)\r\n  })\r\n});\r\n\r\nexport const useAssetGroups = memoize(() => {\r\n  const { getAssetGroups } = useAssetApi();\r\n\r\n  const assetGroups = track(() => getAssetGroups());\r\n\r\n  return {\r\n    ...assetGroups,\r\n    options: assetGroups.data(groups => groups.map(g => \r\n      ({\r\n        GroupId: g.GroupID.toString(),\r\n        GroupName: g.GroupName\r\n      })\r\n    ))\r\n  }\r\n});\r\n\r\nexport const useAssetTypes = memoize(() => {\r\n  const { getAssetTypes } = useAssetApi();\r\n\r\n  const assetTypes = track(() => getAssetTypes());\r\n\r\n  return {\r\n    ...assetTypes,\r\n    options: assetTypes.data(types => types.map(t => \r\n      ({\r\n        Id: t.Id.toString(),\r\n        Description: t.Description\r\n      })\r\n    ))\r\n  }\r\n});\r\n\r\nexport const useAssetInspectionSchedules = memoize(() => {\r\n  const { getAssetInspectionSchedules } = useAssetApi();\r\n\r\n  const inspectionSchedules = track(() => getAssetInspectionSchedules());\r\n\r\n  return {\r\n    ...inspectionSchedules,\r\n    options: inspectionSchedules.data(schedules => schedules.map(s => \r\n      ({\r\n        ScheduleId: s.ScheduleID.toString(),\r\n        ScheduleName: s.ScheduleName\r\n      })\r\n    ))\r\n  }\r\n});",
            "properties": [
                {
                    "name": "id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 46
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "GetAssetDetailsByTagQuery",
            "id": "interface-GetAssetDetailsByTagQuery-9c0a0c16c69962295b316d0cbbc096bf2144709234d615c291801beb99da0966cbc9896b592f0f473761ef4ca12212337e504455c05a1aedd6e20488031aeb1c",
            "file": "src/app/core/http/asset.api.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Asset } from \"../stores/asset/asset.store\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { createApi } from \"./create-api\";\r\nimport { memoize } from \"lodash-es\";\r\nimport { track } from \"src/app/shared/rxjs\";\r\nimport { trackSend } from \"src/app/shared/rxjs\";\r\nimport { of } from \"rxjs\";\r\n\r\nexport interface GetAssetsByRegistrationParams { \r\n  searchString: string, \r\n  siteId?: number \r\n}\r\n\r\nexport interface GetAssetsByTypeParams { \r\n  typeId: number, \r\n  siteId?: number \r\n}\r\n\r\nexport interface AssetGroup {\r\n  GroupID: number,\r\n  GroupName: string,\r\n  SiteID: number\r\n}\r\n\r\nexport interface AssetType {\r\n  Id: number,\r\n  Description: string,\r\n  GroupID: number\r\n}\r\n\r\nexport interface AssetInspectionSchedule {\r\n  ScheduleID: number;\r\n  ScheduleName: string;\r\n  Active: boolean;\r\n}\r\n\r\nexport interface Detail {\r\n  Title: string,\r\n}\r\n\r\nexport interface DetailListItem {\r\n  Content: string;\r\n}\r\n\r\nexport interface GetAssetDetailsByAssetIdQuery {\r\n  id: number;\r\n}\r\n\r\nexport interface GetAssetDetailsByTagQuery {\r\n  tag: string;\r\n}\r\n\r\nexport interface DetailsListItem {\r\n  Icon: string;\r\n  CssClass: string;\r\n  Content: string;\r\n  Date: Date;\r\n  IconStyle: { [key: string]: string };\r\n  Id: number;\r\n  StringId?: string;\r\n  ListItemType: string;\r\n}\r\n\r\nexport interface DetailsList {\r\n  Title: string;\r\n  ListItems: DetailsListItem[];\r\n}\r\n\r\nexport interface AssetInfo {\r\n  ID: number;\r\n  AssetID: string;\r\n  AcquiredDate: Date;\r\n  DateOnSite: Date;\r\n  DateOffHired: Date;\r\n  TypeName: string;\r\n  Registration: string;\r\n  QRCode: string;\r\n  SiteID: number;\r\n  AssetFileName: string;\r\n  DetailsLists: DetailsList[];\r\n  Base64Img: Nullable<string>;\r\n  PurchaseValue: string;\r\n  AssetNotes: string;\r\n  Location: string;\r\n  TemplateIDs: number[];\r\n}\r\n\r\nexport const useAssetApi = createApi({\r\n  baseUrl: `${environment.siteDocsApi}/AssetApi`,\r\n  endpoints: ({ get }) => ({\r\n    getAssetDetailsByAssetId: get<AssetInfo, GetAssetDetailsByAssetIdQuery>(\"AssetDetailsByAssetId\"),\r\n    getAssetDetailsByTag: get<AssetInfo, GetAssetDetailsByTagQuery>(\"AssetDetailsByTag\"),\r\n    getAssetsByRegistration: get<Asset[], GetAssetsByRegistrationParams>(\"GetAssetsByReg\"),\r\n    getAssetsByType: get<Asset[], GetAssetsByTypeParams>(\"getAssetsByType\"),\r\n    getAssetGroups: get<AssetGroup[]>(\"GetAssetGroups\"),\r\n    getAssetTypes: get<AssetType[]>(\"GetAssetTypes\"),\r\n    getAssetInspectionSchedules: get<AssetInspectionSchedule[]>(\"GetAssetInspectionSchedules\")\r\n  })\r\n});\r\n\r\nexport const useAssetDetailsById = memoize((assetId: Nullable<number>) => {\r\n  const { getAssetDetailsByAssetId } = useAssetApi();\r\n\r\n  return track(() => assetId != null\r\n    ? getAssetDetailsByAssetId({ id: assetId })\r\n    : of(null)\r\n  )\r\n});\r\n\r\nexport const useAssetDetailsByTag = memoize((tag: Nullable<string>) => {\r\n  const { getAssetDetailsByTag } = useAssetApi();\r\n\r\n  return track(() => tag != null \r\n    ? getAssetDetailsByTag({ tag }) \r\n    : of(null)\r\n  );\r\n})\r\n\r\nexport const useFetchAssetsByRegistration = memoize((binding: Func<GetAssetsByRegistrationParams>) => {\r\n  const { getAssetsByRegistration } = useAssetApi();\r\n\r\n  return trackSend({\r\n    binding,\r\n    fn: params => getAssetsByRegistration(params)\r\n  });\r\n})\r\n\r\nexport const useFetchAssetsByType = memoize((binding: Func<Partial<GetAssetsByTypeParams>>) => {\r\n  const { getAssetsByType } = useAssetApi();\r\n\r\n  return trackSend({\r\n    binding,\r\n    fn: params => getAssetsByType(params as GetAssetsByTypeParams)\r\n  })\r\n});\r\n\r\nexport const useAssetGroups = memoize(() => {\r\n  const { getAssetGroups } = useAssetApi();\r\n\r\n  const assetGroups = track(() => getAssetGroups());\r\n\r\n  return {\r\n    ...assetGroups,\r\n    options: assetGroups.data(groups => groups.map(g => \r\n      ({\r\n        GroupId: g.GroupID.toString(),\r\n        GroupName: g.GroupName\r\n      })\r\n    ))\r\n  }\r\n});\r\n\r\nexport const useAssetTypes = memoize(() => {\r\n  const { getAssetTypes } = useAssetApi();\r\n\r\n  const assetTypes = track(() => getAssetTypes());\r\n\r\n  return {\r\n    ...assetTypes,\r\n    options: assetTypes.data(types => types.map(t => \r\n      ({\r\n        Id: t.Id.toString(),\r\n        Description: t.Description\r\n      })\r\n    ))\r\n  }\r\n});\r\n\r\nexport const useAssetInspectionSchedules = memoize(() => {\r\n  const { getAssetInspectionSchedules } = useAssetApi();\r\n\r\n  const inspectionSchedules = track(() => getAssetInspectionSchedules());\r\n\r\n  return {\r\n    ...inspectionSchedules,\r\n    options: inspectionSchedules.data(schedules => schedules.map(s => \r\n      ({\r\n        ScheduleId: s.ScheduleID.toString(),\r\n        ScheduleName: s.ScheduleName\r\n      })\r\n    ))\r\n  }\r\n});",
            "properties": [
                {
                    "name": "tag",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 50
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "GetAssetsByRegistrationParams",
            "id": "interface-GetAssetsByRegistrationParams-9c0a0c16c69962295b316d0cbbc096bf2144709234d615c291801beb99da0966cbc9896b592f0f473761ef4ca12212337e504455c05a1aedd6e20488031aeb1c",
            "file": "src/app/core/http/asset.api.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Asset } from \"../stores/asset/asset.store\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { createApi } from \"./create-api\";\r\nimport { memoize } from \"lodash-es\";\r\nimport { track } from \"src/app/shared/rxjs\";\r\nimport { trackSend } from \"src/app/shared/rxjs\";\r\nimport { of } from \"rxjs\";\r\n\r\nexport interface GetAssetsByRegistrationParams { \r\n  searchString: string, \r\n  siteId?: number \r\n}\r\n\r\nexport interface GetAssetsByTypeParams { \r\n  typeId: number, \r\n  siteId?: number \r\n}\r\n\r\nexport interface AssetGroup {\r\n  GroupID: number,\r\n  GroupName: string,\r\n  SiteID: number\r\n}\r\n\r\nexport interface AssetType {\r\n  Id: number,\r\n  Description: string,\r\n  GroupID: number\r\n}\r\n\r\nexport interface AssetInspectionSchedule {\r\n  ScheduleID: number;\r\n  ScheduleName: string;\r\n  Active: boolean;\r\n}\r\n\r\nexport interface Detail {\r\n  Title: string,\r\n}\r\n\r\nexport interface DetailListItem {\r\n  Content: string;\r\n}\r\n\r\nexport interface GetAssetDetailsByAssetIdQuery {\r\n  id: number;\r\n}\r\n\r\nexport interface GetAssetDetailsByTagQuery {\r\n  tag: string;\r\n}\r\n\r\nexport interface DetailsListItem {\r\n  Icon: string;\r\n  CssClass: string;\r\n  Content: string;\r\n  Date: Date;\r\n  IconStyle: { [key: string]: string };\r\n  Id: number;\r\n  StringId?: string;\r\n  ListItemType: string;\r\n}\r\n\r\nexport interface DetailsList {\r\n  Title: string;\r\n  ListItems: DetailsListItem[];\r\n}\r\n\r\nexport interface AssetInfo {\r\n  ID: number;\r\n  AssetID: string;\r\n  AcquiredDate: Date;\r\n  DateOnSite: Date;\r\n  DateOffHired: Date;\r\n  TypeName: string;\r\n  Registration: string;\r\n  QRCode: string;\r\n  SiteID: number;\r\n  AssetFileName: string;\r\n  DetailsLists: DetailsList[];\r\n  Base64Img: Nullable<string>;\r\n  PurchaseValue: string;\r\n  AssetNotes: string;\r\n  Location: string;\r\n  TemplateIDs: number[];\r\n}\r\n\r\nexport const useAssetApi = createApi({\r\n  baseUrl: `${environment.siteDocsApi}/AssetApi`,\r\n  endpoints: ({ get }) => ({\r\n    getAssetDetailsByAssetId: get<AssetInfo, GetAssetDetailsByAssetIdQuery>(\"AssetDetailsByAssetId\"),\r\n    getAssetDetailsByTag: get<AssetInfo, GetAssetDetailsByTagQuery>(\"AssetDetailsByTag\"),\r\n    getAssetsByRegistration: get<Asset[], GetAssetsByRegistrationParams>(\"GetAssetsByReg\"),\r\n    getAssetsByType: get<Asset[], GetAssetsByTypeParams>(\"getAssetsByType\"),\r\n    getAssetGroups: get<AssetGroup[]>(\"GetAssetGroups\"),\r\n    getAssetTypes: get<AssetType[]>(\"GetAssetTypes\"),\r\n    getAssetInspectionSchedules: get<AssetInspectionSchedule[]>(\"GetAssetInspectionSchedules\")\r\n  })\r\n});\r\n\r\nexport const useAssetDetailsById = memoize((assetId: Nullable<number>) => {\r\n  const { getAssetDetailsByAssetId } = useAssetApi();\r\n\r\n  return track(() => assetId != null\r\n    ? getAssetDetailsByAssetId({ id: assetId })\r\n    : of(null)\r\n  )\r\n});\r\n\r\nexport const useAssetDetailsByTag = memoize((tag: Nullable<string>) => {\r\n  const { getAssetDetailsByTag } = useAssetApi();\r\n\r\n  return track(() => tag != null \r\n    ? getAssetDetailsByTag({ tag }) \r\n    : of(null)\r\n  );\r\n})\r\n\r\nexport const useFetchAssetsByRegistration = memoize((binding: Func<GetAssetsByRegistrationParams>) => {\r\n  const { getAssetsByRegistration } = useAssetApi();\r\n\r\n  return trackSend({\r\n    binding,\r\n    fn: params => getAssetsByRegistration(params)\r\n  });\r\n})\r\n\r\nexport const useFetchAssetsByType = memoize((binding: Func<Partial<GetAssetsByTypeParams>>) => {\r\n  const { getAssetsByType } = useAssetApi();\r\n\r\n  return trackSend({\r\n    binding,\r\n    fn: params => getAssetsByType(params as GetAssetsByTypeParams)\r\n  })\r\n});\r\n\r\nexport const useAssetGroups = memoize(() => {\r\n  const { getAssetGroups } = useAssetApi();\r\n\r\n  const assetGroups = track(() => getAssetGroups());\r\n\r\n  return {\r\n    ...assetGroups,\r\n    options: assetGroups.data(groups => groups.map(g => \r\n      ({\r\n        GroupId: g.GroupID.toString(),\r\n        GroupName: g.GroupName\r\n      })\r\n    ))\r\n  }\r\n});\r\n\r\nexport const useAssetTypes = memoize(() => {\r\n  const { getAssetTypes } = useAssetApi();\r\n\r\n  const assetTypes = track(() => getAssetTypes());\r\n\r\n  return {\r\n    ...assetTypes,\r\n    options: assetTypes.data(types => types.map(t => \r\n      ({\r\n        Id: t.Id.toString(),\r\n        Description: t.Description\r\n      })\r\n    ))\r\n  }\r\n});\r\n\r\nexport const useAssetInspectionSchedules = memoize(() => {\r\n  const { getAssetInspectionSchedules } = useAssetApi();\r\n\r\n  const inspectionSchedules = track(() => getAssetInspectionSchedules());\r\n\r\n  return {\r\n    ...inspectionSchedules,\r\n    options: inspectionSchedules.data(schedules => schedules.map(s => \r\n      ({\r\n        ScheduleId: s.ScheduleID.toString(),\r\n        ScheduleName: s.ScheduleName\r\n      })\r\n    ))\r\n  }\r\n});",
            "properties": [
                {
                    "name": "searchString",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "siteId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "GetAssetsByTypeParams",
            "id": "interface-GetAssetsByTypeParams-9c0a0c16c69962295b316d0cbbc096bf2144709234d615c291801beb99da0966cbc9896b592f0f473761ef4ca12212337e504455c05a1aedd6e20488031aeb1c",
            "file": "src/app/core/http/asset.api.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Asset } from \"../stores/asset/asset.store\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { createApi } from \"./create-api\";\r\nimport { memoize } from \"lodash-es\";\r\nimport { track } from \"src/app/shared/rxjs\";\r\nimport { trackSend } from \"src/app/shared/rxjs\";\r\nimport { of } from \"rxjs\";\r\n\r\nexport interface GetAssetsByRegistrationParams { \r\n  searchString: string, \r\n  siteId?: number \r\n}\r\n\r\nexport interface GetAssetsByTypeParams { \r\n  typeId: number, \r\n  siteId?: number \r\n}\r\n\r\nexport interface AssetGroup {\r\n  GroupID: number,\r\n  GroupName: string,\r\n  SiteID: number\r\n}\r\n\r\nexport interface AssetType {\r\n  Id: number,\r\n  Description: string,\r\n  GroupID: number\r\n}\r\n\r\nexport interface AssetInspectionSchedule {\r\n  ScheduleID: number;\r\n  ScheduleName: string;\r\n  Active: boolean;\r\n}\r\n\r\nexport interface Detail {\r\n  Title: string,\r\n}\r\n\r\nexport interface DetailListItem {\r\n  Content: string;\r\n}\r\n\r\nexport interface GetAssetDetailsByAssetIdQuery {\r\n  id: number;\r\n}\r\n\r\nexport interface GetAssetDetailsByTagQuery {\r\n  tag: string;\r\n}\r\n\r\nexport interface DetailsListItem {\r\n  Icon: string;\r\n  CssClass: string;\r\n  Content: string;\r\n  Date: Date;\r\n  IconStyle: { [key: string]: string };\r\n  Id: number;\r\n  StringId?: string;\r\n  ListItemType: string;\r\n}\r\n\r\nexport interface DetailsList {\r\n  Title: string;\r\n  ListItems: DetailsListItem[];\r\n}\r\n\r\nexport interface AssetInfo {\r\n  ID: number;\r\n  AssetID: string;\r\n  AcquiredDate: Date;\r\n  DateOnSite: Date;\r\n  DateOffHired: Date;\r\n  TypeName: string;\r\n  Registration: string;\r\n  QRCode: string;\r\n  SiteID: number;\r\n  AssetFileName: string;\r\n  DetailsLists: DetailsList[];\r\n  Base64Img: Nullable<string>;\r\n  PurchaseValue: string;\r\n  AssetNotes: string;\r\n  Location: string;\r\n  TemplateIDs: number[];\r\n}\r\n\r\nexport const useAssetApi = createApi({\r\n  baseUrl: `${environment.siteDocsApi}/AssetApi`,\r\n  endpoints: ({ get }) => ({\r\n    getAssetDetailsByAssetId: get<AssetInfo, GetAssetDetailsByAssetIdQuery>(\"AssetDetailsByAssetId\"),\r\n    getAssetDetailsByTag: get<AssetInfo, GetAssetDetailsByTagQuery>(\"AssetDetailsByTag\"),\r\n    getAssetsByRegistration: get<Asset[], GetAssetsByRegistrationParams>(\"GetAssetsByReg\"),\r\n    getAssetsByType: get<Asset[], GetAssetsByTypeParams>(\"getAssetsByType\"),\r\n    getAssetGroups: get<AssetGroup[]>(\"GetAssetGroups\"),\r\n    getAssetTypes: get<AssetType[]>(\"GetAssetTypes\"),\r\n    getAssetInspectionSchedules: get<AssetInspectionSchedule[]>(\"GetAssetInspectionSchedules\")\r\n  })\r\n});\r\n\r\nexport const useAssetDetailsById = memoize((assetId: Nullable<number>) => {\r\n  const { getAssetDetailsByAssetId } = useAssetApi();\r\n\r\n  return track(() => assetId != null\r\n    ? getAssetDetailsByAssetId({ id: assetId })\r\n    : of(null)\r\n  )\r\n});\r\n\r\nexport const useAssetDetailsByTag = memoize((tag: Nullable<string>) => {\r\n  const { getAssetDetailsByTag } = useAssetApi();\r\n\r\n  return track(() => tag != null \r\n    ? getAssetDetailsByTag({ tag }) \r\n    : of(null)\r\n  );\r\n})\r\n\r\nexport const useFetchAssetsByRegistration = memoize((binding: Func<GetAssetsByRegistrationParams>) => {\r\n  const { getAssetsByRegistration } = useAssetApi();\r\n\r\n  return trackSend({\r\n    binding,\r\n    fn: params => getAssetsByRegistration(params)\r\n  });\r\n})\r\n\r\nexport const useFetchAssetsByType = memoize((binding: Func<Partial<GetAssetsByTypeParams>>) => {\r\n  const { getAssetsByType } = useAssetApi();\r\n\r\n  return trackSend({\r\n    binding,\r\n    fn: params => getAssetsByType(params as GetAssetsByTypeParams)\r\n  })\r\n});\r\n\r\nexport const useAssetGroups = memoize(() => {\r\n  const { getAssetGroups } = useAssetApi();\r\n\r\n  const assetGroups = track(() => getAssetGroups());\r\n\r\n  return {\r\n    ...assetGroups,\r\n    options: assetGroups.data(groups => groups.map(g => \r\n      ({\r\n        GroupId: g.GroupID.toString(),\r\n        GroupName: g.GroupName\r\n      })\r\n    ))\r\n  }\r\n});\r\n\r\nexport const useAssetTypes = memoize(() => {\r\n  const { getAssetTypes } = useAssetApi();\r\n\r\n  const assetTypes = track(() => getAssetTypes());\r\n\r\n  return {\r\n    ...assetTypes,\r\n    options: assetTypes.data(types => types.map(t => \r\n      ({\r\n        Id: t.Id.toString(),\r\n        Description: t.Description\r\n      })\r\n    ))\r\n  }\r\n});\r\n\r\nexport const useAssetInspectionSchedules = memoize(() => {\r\n  const { getAssetInspectionSchedules } = useAssetApi();\r\n\r\n  const inspectionSchedules = track(() => getAssetInspectionSchedules());\r\n\r\n  return {\r\n    ...inspectionSchedules,\r\n    options: inspectionSchedules.data(schedules => schedules.map(s => \r\n      ({\r\n        ScheduleId: s.ScheduleID.toString(),\r\n        ScheduleName: s.ScheduleName\r\n      })\r\n    ))\r\n  }\r\n});",
            "properties": [
                {
                    "name": "siteId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "typeId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "GetCategoryActionerParams",
            "id": "interface-GetCategoryActionerParams-fc859f3974b123a71e097e509bf1d5ebde1cde471e5c3e5bb14ef15db008072f63a8effda77516cd7c79f8df9639abebef974f9995e4ffe5fd48a609550bf96b",
            "file": "src/app/core/http/login.api.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { environment } from \"src/environments/environment\";\r\nimport { Area, Company, Site } from \"../stores/user/user.store\";\r\nimport { AspNetData, createApi } from \"./create-api\";\r\nimport { CategoryActioner } from \"../stores/category-actioners/category-actioners.store\";\r\nimport { memoize } from \"lodash-es\";\r\nimport { track } from \"src/app/shared/rxjs\";\r\nimport { BehaviorSubject, map } from \"rxjs\";\r\n\r\nexport interface RamsItem {\r\n  Reference: string,\r\n  Description: string,\r\n  SiteId: number,\r\n  ExpiryDate: Date | null\r\n}\r\n\r\nexport interface GetCategoryActionerParams {\r\n  categoryId: number\r\n}\r\n\r\nexport interface ResponsibilityAreaType {\r\n  Id: number,\r\n  TypeName: string,\r\n  AppQuestionText: string,\r\n  Areas: ResponsibilityArea[]\r\n}\r\n\r\nexport interface ResponsibilityArea {\r\n  Id: number,\r\n  Name: string,\r\n  DocResAreaTypeId: number,\r\n  SiteId?: number\r\n}\r\n\r\nexport const useLoginApi = createApi({\r\n  baseUrl: `${environment.siteDocsApi}/LoginApi`,\r\n  endpoints: ({ get }) => ({\r\n    getCompanies: get<Company[]>(\"GetCompanies\"),\r\n    getSites: get<Site[]>(\"GetSites\"),\r\n    getAreas: get<Area[]>(\"GetAreas\"),\r\n    getRams: get<AspNetData<RamsItem>[]>(\"GetRams\"),\r\n    getCategoryActioners: get<CategoryActioner[], GetCategoryActionerParams>(\"GetCategoryActioners\"),\r\n    getResAreaTypes: get<ResponsibilityAreaType[]>(\"GetResAreas\")\r\n  })\r\n});\r\n\r\nexport const useSites = memoize(() => {\r\n  const { getSites } = useLoginApi();\r\n\r\n  return track(() => getSites());\r\n});\r\n\r\nexport const useCompanies = memoize(() => {\r\n  const { getCompanies } = useLoginApi();\r\n\r\n  return track(() => getCompanies());\r\n});\r\n\r\nexport const useAreas = memoize(() => {\r\n  const { getAreas } = useLoginApi();\r\n\r\n  return track(() => getAreas());\r\n});\r\n\r\nexport const useRams = memoize(() => {\r\n  const { getRams } = useLoginApi();\r\n\r\n  const rams = track(() => getRams().pipe(\r\n    map(rams => rams.map(r => ({\r\n      ...r,\r\n      ExpiryDate: r.ExpiryDate?.toDate()\r\n    })))\r\n  ));\r\n\r\n  return {\r\n    ...rams,\r\n    thatArentExpiredToday: rams.data(items => items.filter(item => item.ExpiryDate == null || item.ExpiryDate.isEqualOrAfterToday()))\r\n  }\r\n});\r\n\r\n\r\nexport const useCategoryActioners = memoize((categoryId: Nullable<number>) => {\r\n  const loginApi = useLoginApi();\r\n\r\n  return track(() => categoryId != null \r\n    ? loginApi.getCategoryActioners({ categoryId })\r\n    : new BehaviorSubject([]))\r\n});\r\n\r\nexport const useResAreaTypes = memoize(() => {\r\n  const { getResAreaTypes } = useLoginApi();\r\n\r\n  const resAreaTypes = track(() => getResAreaTypes());\r\n\r\n  return {\r\n    ...resAreaTypes,\r\n    find: (predicate: (value: ResponsibilityAreaType, index: number) => boolean) => resAreaTypes.data(types => types.find(predicate)),\r\n    areas: resAreaTypes.data(types => types.flatMap(t => t.Areas))\r\n  }\r\n})",
            "properties": [
                {
                    "name": "categoryId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "GetRequestOptions",
            "id": "interface-GetRequestOptions-03c89532528436e62b7092d571fe08b27a8f5dae1cf6778b1a9e9522c21f16d1467d2b378775faf6257600168e2971dcde4dbcd23197484bc4215a43cf3a11f8",
            "file": "src/app/core/http/create-api.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\r\nimport { inject } from \"@angular/core\";\r\nimport { mapValues, memoize, omitBy } from \"lodash-es\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nexport type AspNetData<T> = {\r\n  [name in keyof T]: T[name] extends Date | undefined | null \r\n    ? string \r\n    : T[name] \r\n}\r\n\r\nexport interface GetRequestOptions<TParams> {\r\n  path: string,\r\n  query?: (params: TParams) => object,\r\n  headers?: (params: TParams) => object\r\n}\r\n\r\nexport interface PostRequestOptions<TParams> {\r\n  path: string,\r\n  body?: (params: TParams) => object,\r\n  headers?: (params: TParams) => object\r\n}\r\n\r\nexport interface BuildApi {\r\n  get: <TResponse, TParams = object | void>(getOptions: string | GetRequestOptions<TParams>) => (params: TParams) => Observable<TResponse>\r\n  post: <TResponse, TParams = object | void>(postOptions: PostRequestOptions<TParams>) => (params: TParams) => Observable<TResponse>\r\n}\r\n\r\nexport interface CreateApiOptions<TApi> {\r\n  baseUrl: string,\r\n  headers?: object,\r\n  endpoints: (build: BuildApi) => TApi\r\n}\r\n\r\nexport type Params = {\r\n  [param: string]: string | number | boolean | ReadonlyArray<string | number | boolean>\r\n}\r\n\r\nexport function createBuildApi<TApi>(options: CreateApiOptions<TApi>): BuildApi {\r\n  const http = inject(HttpClient);\r\n\r\n  return {\r\n    get: <TResponse, TParams = object | void>(getOptions: string | GetRequestOptions<TParams>) => \r\n      typeof getOptions === \"string\" \r\n        ? () => http.get<TResponse>(`${options.baseUrl}/${getOptions}`)\r\n        : (params: TParams) => http.get<TResponse>(`${options.baseUrl}/${getOptions.path}`, {\r\n            headers: getOptions.headers != null \r\n              ? mapValues(omitBy(getOptions.headers(params) as Params, val => val == null), val => val.toString()) \r\n              : {},\r\n            params: getOptions.query != null \r\n              ? getOptions.query(params) as Params\r\n              : params != null\r\n              ? omitBy(params, val => val == null) as Params\r\n              : {}\r\n        }),\r\n    post: <TResponse, TParams = object | void>(postOptions: PostRequestOptions<TParams>) =>\r\n      (params: TParams) => {\r\n        debugger;\r\n        return http.post<TResponse>(\r\n          `${options.baseUrl}/${postOptions.path}`, \r\n          postOptions.body != null\r\n            ? postOptions.body(params)\r\n            : params != null\r\n            ? omitBy(params, val => val == null)\r\n            : {}, \r\n          {\r\n            headers: postOptions.headers != null \r\n            ? mapValues(omitBy(postOptions.headers(params) as Params, val => val == null), val => val.toString()) \r\n            : {}\r\n          }\r\n        );\r\n      } \r\n  }\r\n}\r\n\r\nexport function createApi<TApi>(options: CreateApiOptions<TApi>) {\r\n  return memoize(() => {\r\n    const build = createBuildApi(options);\r\n\r\n    return options.endpoints(build);\r\n  });\r\n}",
            "properties": [
                {
                    "name": "headers",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "path",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "query",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": true,
                    "description": "",
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "HighRiskActivity",
            "id": "interface-HighRiskActivity-6a4e1d240ba3ffd8e6a8a52979a172bf4fba46a9385e476aab68b1bb46f6850bdce1e09cea10033d3e73c796c6a3182025900f7112ef5dac86dc2527c00a5863",
            "file": "src/app/core/http/collab-plan.api.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { environment } from \"src/environments/environment\";\r\nimport { createApi } from \"./create-api\";\r\nimport { memoize } from \"lodash-es\";\r\nimport { track } from \"src/app/shared/rxjs/track\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\n\r\nexport interface HotspotProject {\r\n  ID: number,\r\n  Name: string,\r\n  ProjectType: number,\r\n  SiteId: number\r\n}\r\n\r\nexport interface HighRiskActivity {\r\n  Id: number,\r\n  AreaName: string,\r\n  SiteId: number\r\n}\r\n\r\nexport const useCollabPlanApi = createApi({\r\n  baseUrl: `${environment.siteDocsApi}/CollabPlanApi`,\r\n  endpoints: ({ get }) => ({\r\n    getProjects: get<HotspotProject[], { siteId: number }>(\"GetProjects\"),\r\n    getHighRiskActivities: get<HighRiskActivity[], { siteId: number }>(\"GetHighRiskActivities\")\r\n  })\r\n});\r\n\r\nexport const useProjects = memoize((siteId: Nullable<number>) => {\r\n  const { getProjects } = useCollabPlanApi();\r\n\r\n  return track(() => siteId != null \r\n    ? getProjects({ siteId })\r\n    : new BehaviorSubject([])\r\n  );\r\n});\r\n\r\nexport const useHighRiskActivities = memoize((siteId: Nullable<number>) => {\r\n  const { getHighRiskActivities } = useCollabPlanApi();\r\n\r\n  return track(() => siteId != null\r\n    ? getHighRiskActivities({ siteId })\r\n    : new BehaviorSubject([])\r\n  );\r\n})",
            "properties": [
                {
                    "name": "AreaName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "Id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "SiteId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "HotspotProject",
            "id": "interface-HotspotProject-6a4e1d240ba3ffd8e6a8a52979a172bf4fba46a9385e476aab68b1bb46f6850bdce1e09cea10033d3e73c796c6a3182025900f7112ef5dac86dc2527c00a5863",
            "file": "src/app/core/http/collab-plan.api.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { environment } from \"src/environments/environment\";\r\nimport { createApi } from \"./create-api\";\r\nimport { memoize } from \"lodash-es\";\r\nimport { track } from \"src/app/shared/rxjs/track\";\r\nimport { BehaviorSubject } from \"rxjs\";\r\n\r\nexport interface HotspotProject {\r\n  ID: number,\r\n  Name: string,\r\n  ProjectType: number,\r\n  SiteId: number\r\n}\r\n\r\nexport interface HighRiskActivity {\r\n  Id: number,\r\n  AreaName: string,\r\n  SiteId: number\r\n}\r\n\r\nexport const useCollabPlanApi = createApi({\r\n  baseUrl: `${environment.siteDocsApi}/CollabPlanApi`,\r\n  endpoints: ({ get }) => ({\r\n    getProjects: get<HotspotProject[], { siteId: number }>(\"GetProjects\"),\r\n    getHighRiskActivities: get<HighRiskActivity[], { siteId: number }>(\"GetHighRiskActivities\")\r\n  })\r\n});\r\n\r\nexport const useProjects = memoize((siteId: Nullable<number>) => {\r\n  const { getProjects } = useCollabPlanApi();\r\n\r\n  return track(() => siteId != null \r\n    ? getProjects({ siteId })\r\n    : new BehaviorSubject([])\r\n  );\r\n});\r\n\r\nexport const useHighRiskActivities = memoize((siteId: Nullable<number>) => {\r\n  const { getHighRiskActivities } = useCollabPlanApi();\r\n\r\n  return track(() => siteId != null\r\n    ? getHighRiskActivities({ siteId })\r\n    : new BehaviorSubject([])\r\n  );\r\n})",
            "properties": [
                {
                    "name": "ID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "Name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "ProjectType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "SiteId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Login",
            "id": "interface-Login-0c175f4d91d8299f50d75d0f6f2f2e3cb47a635247f2e608433414047ec3acaf7ec835fc3d009ee0f26d18001db265a0912e8bdb854090833891fc09c8327d24",
            "file": "src/app/core/stores/user/login.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { memoize } from \"lodash-es\"\n\nexport interface Login {\n  loginId: number,\n  typeId: number,\n  siteId: number,\n  hotspotId: number,\n  parentDocId: number,\n  tokenId?: number,\n  issuedToId?: number\n}\n\nexport const useLogin = memoize(() => {\n  \n});",
            "properties": [
                {
                    "name": "hotspotId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "issuedToId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "loginId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "parentDocId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "siteId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "tokenId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "typeId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "NumberState",
            "id": "interface-NumberState-08ac5100878d5ecdc96750e0cb4703ba5b848a4a3ad01aadc5d7bed2535b5a0386836b46ba1ce7d17e6f1a44eab134e6973f0d7b8212c8e0e993dcb26aea81ed",
            "file": "src/app/shared/states/number.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { createStore, propsFactory } from \"@ngneat/elf\";\r\nimport { Observable, map, shareReplay } from \"rxjs\";\r\nimport { AdapterConfig } from \"./adapter-config.model\";\r\n\r\nexport interface NumberState {\r\n  value$: Observable<number>,\r\n  increment: () => void,\r\n  decrement: () => void,\r\n  is$: (predicate: (value: number) => boolean) => Observable<boolean>,\r\n  set: (value: number) => void\r\n}\r\n\r\nexport function numberState<TProps = {}>({ name, initialValue, props }: AdapterConfig<number, NumberState, TProps>): TProps & NumberState {\r\n  const propsFn = props != null \r\n    ? props\r\n    : () => ({}); \r\n\r\n  const {\r\n    withNumber,\r\n    selectNumber,\r\n    setNumber\r\n  } = propsFactory(\"number\", {\r\n    initialValue\r\n  });\r\n\r\n  const store = createStore(\r\n    { name },\r\n    withNumber()\r\n  );\r\n\r\n  const state: NumberState = {\r\n    value$: store.pipe(selectNumber(), shareReplay()),\r\n    increment: () => store.update(setNumber(state => state.number + 1)),\r\n    decrement: () => store.update(setNumber(state => state.number - 1)),\r\n    is$: (predicate: (value: number) => boolean) => store.pipe(\r\n      selectNumber(),\r\n      map(predicate)\r\n    ),\r\n    set: (value: number) => store.update(setNumber(value))\r\n  }\r\n  \r\n  return {\r\n    ...propsFn(state),\r\n    ...state\r\n  } as TProps & NumberState\r\n}",
            "properties": [
                {
                    "name": "decrement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "increment",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "is$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "set",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "value$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<number>",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Observable",
            "id": "interface-Observable-ae19dc1ac8115542c5f547ee406b2385f26e04543466d7b99371850766b8fe04ac67f419d8de8697d3bec9cabb8bc0134c686174261ffd9b980e202cad0131a9",
            "file": "src/polyfills.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import './zone-flags';\r\n\r\n/***************************************************************************************************\r\n * Zone JS is required by default for Angular itself.\r\n */\r\nimport 'zone.js';  // Included with Angular CLI.\r\n\r\n\r\n/***************************************************************************************************\r\n * APPLICATION IMPORTS\r\n */\r\n\r\nimport { Observable, OperatorFunction, map } from \"rxjs\";\r\n\r\nexport type ToPipe<T> = ReturnType<typeof toPipe<T>>;\r\n\r\nexport function toPipe<T>(s: Observable<T>) {\r\n  function pipe<R>(fn: (arg: T) => R): ToPipe<R>;\r\n  function pipe(): Observable<T>;\r\n  function pipe<A>(op1: OperatorFunction<T, A>): ToPipe<A>;\r\n  function pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): ToPipe<B>;\r\n  function pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): ToPipe<C>;\r\n  function pipe<A, B, C, D>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>): ToPipe<D>;\r\n  function pipe<A, B, C, D, E>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>): ToPipe<E>;\r\n  function pipe<A, B, C, D, E, F>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>): ToPipe<F>;\r\n  function pipe<A, B, C, D, E, F, G>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>): ToPipe<G>;\r\n  function pipe<R>(...args: any): any {\r\n    if (args.length === 0) {\r\n      return s;\r\n    }\r\n    \r\n    if (typeof args[0] === \"function\") {\r\n      const fn: (arg: T) => R = args[0];\r\n      return toPipe(s.pipe(map(fn)));\r\n    }\r\n\r\n    return toPipe(s.pipe.apply(s, args));\r\n  }\r\n\r\n  return pipe;\r\n}\r\n\r\n\r\ndeclare module \"rxjs\" {\r\n  interface Observable<T> {\r\n    toPipe(): ToPipe<T>\r\n  }\r\n}\r\n\r\nObservable.prototype.toPipe = function<T>(this: Observable<T>) {\r\n  return toPipe(this);\r\n}",
            "properties": [],
            "indexSignatures": [],
            "kind": 167,
            "methods": [
                {
                    "name": "toPipe",
                    "args": [],
                    "optional": false,
                    "returnType": "ToPipe<T>",
                    "typeParameters": [],
                    "line": 90,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ]
        },
        {
            "name": "Operative",
            "id": "interface-Operative-837b85cd5bdfc3cb7f5edf25e02262804b5924d7ee1973fabf7b01d99a6c170271afbf070d38f4cc9b7f8abf135e2033f9ca58e4089f3d708ab2ce2211bc6cf4",
            "file": "src/app/core/stores/operative/operatives.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { createStore } from \"@ngneat/elf\";\r\nimport { selectAllEntities, withEntities } from \"@ngneat/elf-entities\";\r\nimport { memoize } from \"lodash-es\";\r\n\r\nexport interface Operative {\r\n  ID: number,\r\n  Name: string\r\n}\r\n\r\nexport const useOperativeStore = memoize(() => {\r\n  const store = createStore(\r\n    { name: \"operatives\" },\r\n    withEntities<Operative, \"ID\">({ idKey: \"ID\" })\r\n  );\r\n\r\n  return {\r\n    data: store.pipe(selectAllEntities()).toPipe(),\r\n    update: store.update.bind(store)\r\n  }\r\n});",
            "properties": [
                {
                    "name": "ID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "Name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "OperativeSearchParams",
            "id": "interface-OperativeSearchParams-fc2ef999aee6a78212c58ad6d023e10a58726ac2bce4a91466b42a738748666e1a6c0fad3d2279fe31dd4b1912bdaee14ea7fd6fd59241cd083de715232b93e9",
            "file": "src/app/core/http/operative.api.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { environment } from \"src/environments/environment\";\r\nimport { createApi } from \"./create-api\";\r\nimport { memoize } from \"lodash-es\";\r\nimport { trackSend } from \"src/app/shared/rxjs\";\r\n\r\nexport interface OperativeSearchParams {\r\n  search: string,\r\n  noAppLimit: boolean,\r\n  siteId?: number\r\n}\r\n\r\nexport interface OperativeSearchResult {\r\n  ID: number,\r\n  Name: string,\r\n  CompanyName: string,\r\n  HasQRCode: boolean,\r\n  HasAppAccess: boolean\r\n}\r\n\r\nexport const useOperativeApi = createApi({\r\n  baseUrl: `${environment.siteDocsApi}/OperativeApi`,\r\n  endpoints: ({ get }) => ({\r\n    getOperativesByName: get<OperativeSearchResult[], OperativeSearchParams>(\"GetOperativesByName\")\r\n  })\r\n});\r\n\r\nexport const useFetchOperativesByName = memoize((binding: () => OperativeSearchParams) => {\r\n  const { getOperativesByName } = useOperativeApi();\r\n\r\n  return trackSend({\r\n    binding,\r\n    fn: params => getOperativesByName(params)\r\n  })\r\n});",
            "properties": [
                {
                    "name": "noAppLimit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "search",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "siteId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "OperativeSearchResult",
            "id": "interface-OperativeSearchResult-fc2ef999aee6a78212c58ad6d023e10a58726ac2bce4a91466b42a738748666e1a6c0fad3d2279fe31dd4b1912bdaee14ea7fd6fd59241cd083de715232b93e9",
            "file": "src/app/core/http/operative.api.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { environment } from \"src/environments/environment\";\r\nimport { createApi } from \"./create-api\";\r\nimport { memoize } from \"lodash-es\";\r\nimport { trackSend } from \"src/app/shared/rxjs\";\r\n\r\nexport interface OperativeSearchParams {\r\n  search: string,\r\n  noAppLimit: boolean,\r\n  siteId?: number\r\n}\r\n\r\nexport interface OperativeSearchResult {\r\n  ID: number,\r\n  Name: string,\r\n  CompanyName: string,\r\n  HasQRCode: boolean,\r\n  HasAppAccess: boolean\r\n}\r\n\r\nexport const useOperativeApi = createApi({\r\n  baseUrl: `${environment.siteDocsApi}/OperativeApi`,\r\n  endpoints: ({ get }) => ({\r\n    getOperativesByName: get<OperativeSearchResult[], OperativeSearchParams>(\"GetOperativesByName\")\r\n  })\r\n});\r\n\r\nexport const useFetchOperativesByName = memoize((binding: () => OperativeSearchParams) => {\r\n  const { getOperativesByName } = useOperativeApi();\r\n\r\n  return trackSend({\r\n    binding,\r\n    fn: params => getOperativesByName(params)\r\n  })\r\n});",
            "properties": [
                {
                    "name": "CompanyName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "HasAppAccess",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "HasQRCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "ID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "Name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Page",
            "id": "interface-Page-c7959f7440ffcc3f7e62a4ddc4c7de3b0161d7b2e791d3c870e61d9c7beefced3f38a328f62f1a879861bd7f2b720c6a0a83bd38547d74e5da6d4aabfde0f9ba",
            "file": "src/app/core/stores/site-document/models/site-document.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { PointGroup } from \"signature_pad\";\r\n\r\nexport interface SiteDocument {\r\n  DocumentID: number;\r\n  DocumentTitle: string;\r\n  Subtitle: string;\r\n  Preamble: string;\r\n  Pinned: boolean;\r\n  Pages: Page[];\r\n  AllowAnon: boolean;\r\n  RemainAnon: boolean;\r\n  ChildTemplateID: number;\r\n  Queues: Queue[],\r\n  DocumentGroup: string;\r\n  DocumentCategory?: number;\r\n  CanCreateHotspot: boolean;\r\n  CanBeAddedToHotspot?: boolean;\r\n  CanBeSavedAsDraft?: boolean;\r\n  CanAddActionerFromApp: boolean;\r\n  CanAddCategoryActioner: boolean;\r\n  CanCreateAssetsFromDocument: boolean;\r\n  CanHaveQueueDuration: boolean;\r\n  CanHaveDocumentLevelImages: boolean;\r\n  CanHaveDocLevelPhotoRoll: boolean;\r\n  CurrentActionerOperativeID?: number;\r\n  CompanyActionerId?: number;\r\n  ShowDocLevelPhotoButtonAtStartOfDoc: boolean;\r\n  CanAddAsset?: boolean;\r\n  CanAddOperative?: boolean;\r\n  CanHaveCompanyActioner: boolean;\r\n  MetaData: Partial<SiteDocumentMetaData>;\r\n  SiteDocumentType: number,\r\n  SiteId?: number;\r\n  AutoQueueID?: number;\r\n  QueueDuration?: QueueDuration;\r\n  DocumentResponsibilityAreaTypeId?: number;\r\n  DocumentResponsibilityAreaId?: number;\r\n  ReqGps: boolean;\r\n  PageIdx: number;\r\n  Images: string[];\r\n}\r\n\r\nexport interface Queue {\r\n  Id: number,\r\n  Name: string\r\n}\r\n\r\nexport interface QueueDuration {\r\n  Value: number;\r\n  Type: \"Mins\" | \"Hours\" | \"Days\";\r\n}\r\n\r\nexport interface SiteDocumentImage {\r\n  Id: string,\r\n  DocumentId: number,\r\n  Base64: string,\r\n}\r\n\r\nexport interface SiteDocumentMetaData {\r\n  ActionerText: string;\r\n  CanBeEditableDocument: boolean;\r\n  CannotAddSelfAsActioner: boolean;\r\n  ColourHex: string;\r\n  QueueSelectorTitle: string;\r\n  HasSiteList: boolean;\r\n  SiteListTitle: string;\r\n  UsesRadioGroupTable: boolean;\r\n}\r\n\r\nexport interface SiteDocumentAsset {\r\n  AssetID: number;\r\n  Tag: string;\r\n  Name: string;\r\n  QRCode?: string;\r\n  TemplateID?: number;\r\n}\r\n\r\nexport interface SiteDocumentOperative {\r\n  AttendeeID: number;\r\n  Name: string;\r\n  DateAttended: Date;\r\n}\r\n\r\nexport interface Page {\r\n  PageID: number;\r\n  PageTitle: string;\r\n  PageNo: number;\r\n  Sections: Section[];\r\n  Hidden: boolean;\r\n}\r\n\r\nexport interface Section {\r\n  SectionID: number;\r\n  SectionNo: number;\r\n  SectionTitle: string;\r\n  Questions: Question[];\r\n  SectionQuestiontype: QuestionType;\r\n  IsRepeatable: boolean;\r\n  TableTitles: string[];\r\n  Hidden: boolean;\r\n}\r\n\r\nexport enum QuestionType {\r\n  Label = 0,\r\n  Checkbox = 1,\r\n  RadioGroup = 2,\r\n  Textbox = 3,\r\n  TextArea = 4,\r\n  Select = 5,\r\n  CheckboxTextbox = 6,\r\n  RadioGroupTextbox = 7,\r\n  Date = 8,\r\n  DateTime = 9,\r\n  OperativeList = 10,\r\n  WallOfText = 11,\r\n  Number = 12,\r\n  CascadeDropdown = 13,\r\n  LinkedBool = 16,\r\n  AssetList = 17,\r\n  LinkedDates = 18,\r\n  Signature = 19,\r\n  CompanySelect = 21,\r\n  AreaSelect = 22,\r\n  AssetGroupsAndTypes = 25,\r\n  AssetInspectionSchedule = 26,\r\n  ProjectSelect = 27,\r\n  RamsSelect = 28,\r\n  SelectText = 29,\r\n  CascadeDropdownText = 30,\r\n  MultiCascade = 31,\r\n  Time = 32,\r\n  LinkedTimes = 33,\r\n  HraSelect = 34,\r\n  MultiCheckbox = 35,\r\n  LinkedDateAndTime = 36\r\n}\r\n\r\nexport interface Question {\r\n  QuestionID: number;\r\n  QuestionText: string;\r\n  CascadeOptionsText: string;\r\n  CommentsText: string;\r\n  Assets: SiteDocumentAsset[];\r\n  Operatives: SiteDocumentOperative[];\r\n  Required: boolean;\r\n  AnswerText: string;\r\n  AdditionalText?: string;\r\n  MoreAdditionalText?: string;\r\n  DateAndTime: Nullable<Date>;\r\n  DateAndTime2: Nullable<Date>;\r\n  NumberVal?: number;\r\n  OptionVal?: string | null;\r\n  SelectedOptionText?: Nullable<string>;\r\n  SelectedCascadeOptionText?: Nullable<string>;\r\n  File?: Nullable<string>;\r\n  Img?: Nullable<string>;\r\n  AnswerOptions: SelectOption[];\r\n  CascadeOptions: CascadeOption[];\r\n  CascadeOptionVal?: string | null;\r\n  YesNoNA: boolean | null;\r\n  CanHaveImg: boolean;\r\n  CanHaveFiles: boolean;\r\n  CanUsePhotoLib: boolean;\r\n  SignatureArray?: number[];\r\n  SignaturePoints?: PointGroup[];\r\n  SignatureDataUrl?: string;\r\n  ValidationData: ValidationData[];\r\n  Hidden: boolean;\r\n  Disabled?: boolean;\r\n}\r\n\r\nexport function useValidationData(rules: ValidationData[]) {\r\n  const min = rules.find(r => r.Key === \"Min\")?.Value.toNumber();\r\n  const max = rules.find(r => r.Key === \"Max\")?.Value.toNumber();\r\n\r\n  return {\r\n    min,\r\n    max\r\n  }\r\n}\r\n\r\nexport function minDate(question: Question) {\r\n  const min = question.ValidationData.find(r => r.Key === \"Min\")?.Value.toNumber();\r\n\r\n  return min != null\r\n    ? new Date().subtrackHours(min)\r\n    : null;\r\n}\r\n\r\nexport function maxDate(question: Question) {\r\n  const max = question.ValidationData.find(r => r.Key === \"Max\")?.Value.toNumber();\r\n\r\n  return max != null\r\n    ? new Date().addHours(max)\r\n    : null;\r\n}\r\n\r\nexport function spreadDate(question: Question) {\r\n  const spread = question.ValidationData.find(r => r.Key === \"Spread\")?.Value.toNumber();\r\n  const max = question.ValidationData.find(r => r.Key === \"Max\")?.Value.toNumber();  \r\n\r\n  const hours = spread != null && max != null\r\n    ? spread > max\r\n      ? spread\r\n      : max\r\n    : spread != null\r\n      ? spread\r\n      : max;\r\n\r\n  return hours != null\r\n    ? new Date().addHours(hours)\r\n    : null;\r\n}\r\n\r\nexport interface ValidationData {\r\n  Key: \"Min\" | \"Max\" | \"Spread\",\r\n  Value: string,\r\n  Msg: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  Active?: boolean;\r\n  Text: string;\r\n  Val: string;\r\n  MetaData?: any;\r\n  OptionsMetadataJson?: string;\r\n}\r\n\r\nexport interface SelectOptionMetaData {\r\n  ColourHex?: string;\r\n}\r\n\r\nexport interface CascadeOption { \r\n  ParentVal: string, \r\n  Text: string, \r\n  Val: string \r\n}",
            "properties": [
                {
                    "name": "Hidden",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 89
                },
                {
                    "name": "PageID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 85
                },
                {
                    "name": "PageNo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 87
                },
                {
                    "name": "PageTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 86
                },
                {
                    "name": "Sections",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Section[]",
                    "optional": false,
                    "description": "",
                    "line": 88
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "PaginatedList",
            "id": "interface-PaginatedList-7731104ece926c5bf6db944b2db8a1a00beed638dc451d7059660d038311b647d6ee121301ca4223b701dbfb44daf1c400f4ae6fb89f1133509c53cc576b1a28",
            "file": "src/app/core/http/template.api.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable, inject } from \"@angular/core\";\r\nimport { SiteDocument } from \"../stores/site-document/models\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { EMPTY, Observable, expand, map, of, reduce, switchMap } from \"rxjs\";\r\nimport { memoize, orderBy } from \"lodash-es\";\r\nimport { createApi } from \"./create-api\";\r\nimport { track } from \"src/app/shared/rxjs\";\r\nimport { param } from \"src/app/shared/route\";\r\n\r\nexport interface TemplateItem {\r\n  Id: number,\r\n  Title: string\r\n}\r\n\r\nexport interface PaginatedList<T> {\r\n  Items: T[],\r\n  PageNumber: number,\r\n  TotalPage: number,\r\n  TotalCount: number,\r\n  HasPreviousPage: boolean,\r\n  HasNextPage: boolean\r\n}\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class TemplateApi {\r\n  protected httpClient = inject(HttpClient);\r\n\r\n  getTemplates() {\r\n    return this.httpClient.get<PaginatedList<SiteDocument>>(`${environment.siteDocsApi}/TemplateApi/GetLatestTemplatesWithPagination`, {\r\n      params: {\r\n        pageNumber: 1,\r\n        pageSize: 20\r\n      }\r\n    }).pipe(\r\n      expand((res, idx) => res.HasNextPage\r\n        ? this.httpClient.get<PaginatedList<SiteDocument>>(`${environment.siteDocsApi}/TemplateApi/GetLatestTemplatesWithPagination`, {\r\n          params: {\r\n            pageNumber: idx + 2,\r\n            pageSize: 20\r\n          }\r\n        })\r\n        : EMPTY\r\n      ),\r\n      map(res => res.Items),\r\n      reduce((acc, docs) => [...acc, ...docs]),\r\n      map(tpls => orderBy(tpls, \"DocumentTitle\"))\r\n    )\r\n  }\r\n\r\n  getTemplate(params: { id: number }) {\r\n    return this.httpClient.get<SiteDocument>(`${environment.siteDocsApi}/TemplateApi/GetDocumentTemplate`, {\r\n      params: {\r\n        id: params.id.toString()\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport const useTemplateApi = createApi({\r\n  baseUrl: `${environment.siteDocsApi}/TemplateApi`,\r\n  endpoints: ({ get }) => ({\r\n    getAllTemplates: get<TemplateItem[]>(\"GetAllTemplates\"),\r\n    getTemplate: get<SiteDocument, { id: number }>(\"GetDocumentTemplate\"),\r\n  })\r\n});\r\n\r\nexport const useAllTemplates = memoize(() => {\r\n  const { getAllTemplates } = useTemplateApi();\r\n\r\n  return track(() => getAllTemplates());\r\n});\r\n\r\nexport const useTemplate = (id$: Observable<Nullable<number>>) => {\r\n  const { getTemplate } = useTemplateApi();\r\n  const loginId = param(\"loginId\") || 0;\r\n\r\n  return track(() => id$.pipe(\r\n    switchMap(id => id != null \r\n      ? getTemplate({ id }).pipe(\r\n        map(doc => ({\r\n          ...doc,\r\n          Images: [],\r\n          GroupedDocumentID: `${loginId}_${Date.now()}`,\r\n          QueueDuration: doc.CanHaveQueueDuration \r\n            ? { Value: 0, Type: \"Mins\" }\r\n            : null,\r\n          PageIdx: 1\r\n        }) as SiteDocument)\r\n      )\r\n      : of(null)\r\n    )\r\n  ));\r\n};",
            "properties": [
                {
                    "name": "HasNextPage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "HasPreviousPage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "Items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "PageNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "TotalCount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "TotalPage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "PaginatedList",
            "id": "interface-PaginatedList-3084e6343640c1d985ee6d921f0244966eac9eeeff7e45d217e76908f5b85c0bea650f16111ecf8e72912845dfce9de64e5ade2291e1efb8e02fec6cef91fc9e-1",
            "file": "src/app/core/pages/document-builder/modals/template-menu/template-menu.modal.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { useAllTemplates } from \"src/app/core/http/template.api\";\r\nimport { importRxTemplate, importRxFixedVirtualScroll } from \"src/app/shared/imports\";\r\nimport { FusePipe } from \"src/app/shared/pipes\";\r\n\r\nexport interface PaginatedList<T> {\r\n  Items: T[],\r\n  PageNumber: number,\r\n  TotalPage: number,\r\n  TotalCount: number,\r\n  HasPreviousPage: boolean,\r\n  HasNextPage: boolean\r\n}\r\n\r\n@Component({\r\n  selector: \"template-menu-modal\",\r\n  template: `\r\n    <ion-modal #modal [isOpen]=\"isOpen\">\r\n      <ng-template>\r\n        <ion-header>\r\n          <ion-toolbar>\r\n            <ion-title class=\"text-center\">\r\n              Templates\r\n              <ion-spinner *rxIf=\"templates.isLoading()\" class=\"float-right\" />\r\n            </ion-title>\r\n          </ion-toolbar>\r\n          <ion-toolbar>\r\n            <ion-searchbar [(ngModel)]=\"search\" debounce=\"300\" />\r\n          </ion-toolbar>\r\n        </ion-header>\r\n\r\n        <ion-content class=\"ion-padding\">\r\n          <ion-list class=\"h-full\">\r\n            <rx-virtual-scroll-viewport [itemSize]=\"50\">\r\n              <ion-item *rxVirtualFor=\"let template of templates.data()\r\n              | fuse: {\r\n                search: search,\r\n                keys: ['Title']\r\n              }\" \r\n              class=\"w-full\" \r\n              (click)=\"select.emit(template.Id); modal.dismiss()\" \r\n              button>\r\n                {{ template.Title }}\r\n              </ion-item>\r\n            </rx-virtual-scroll-viewport>\r\n          </ion-list>\r\n        </ion-content>\r\n      </ng-template>\r\n    </ion-modal>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    ...importRxFixedVirtualScroll(),\r\n    FormsModule,\r\n    FusePipe\r\n  ]\r\n})\r\nexport class TemplateMenuModal {\r\n  templates = useAllTemplates();\r\n\r\n  @Input()\r\n  isOpen: boolean = false;\r\n  search: string = \"\";\r\n\r\n  @Output()\r\n  select = new EventEmitter<number>();\r\n}\r\n",
            "properties": [
                {
                    "name": "HasNextPage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "HasPreviousPage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "Items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "PageNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "TotalCount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "TotalPage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "PaginatedList-1"
        },
        {
            "name": "PostRequestOptions",
            "id": "interface-PostRequestOptions-03c89532528436e62b7092d571fe08b27a8f5dae1cf6778b1a9e9522c21f16d1467d2b378775faf6257600168e2971dcde4dbcd23197484bc4215a43cf3a11f8",
            "file": "src/app/core/http/create-api.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\r\nimport { inject } from \"@angular/core\";\r\nimport { mapValues, memoize, omitBy } from \"lodash-es\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nexport type AspNetData<T> = {\r\n  [name in keyof T]: T[name] extends Date | undefined | null \r\n    ? string \r\n    : T[name] \r\n}\r\n\r\nexport interface GetRequestOptions<TParams> {\r\n  path: string,\r\n  query?: (params: TParams) => object,\r\n  headers?: (params: TParams) => object\r\n}\r\n\r\nexport interface PostRequestOptions<TParams> {\r\n  path: string,\r\n  body?: (params: TParams) => object,\r\n  headers?: (params: TParams) => object\r\n}\r\n\r\nexport interface BuildApi {\r\n  get: <TResponse, TParams = object | void>(getOptions: string | GetRequestOptions<TParams>) => (params: TParams) => Observable<TResponse>\r\n  post: <TResponse, TParams = object | void>(postOptions: PostRequestOptions<TParams>) => (params: TParams) => Observable<TResponse>\r\n}\r\n\r\nexport interface CreateApiOptions<TApi> {\r\n  baseUrl: string,\r\n  headers?: object,\r\n  endpoints: (build: BuildApi) => TApi\r\n}\r\n\r\nexport type Params = {\r\n  [param: string]: string | number | boolean | ReadonlyArray<string | number | boolean>\r\n}\r\n\r\nexport function createBuildApi<TApi>(options: CreateApiOptions<TApi>): BuildApi {\r\n  const http = inject(HttpClient);\r\n\r\n  return {\r\n    get: <TResponse, TParams = object | void>(getOptions: string | GetRequestOptions<TParams>) => \r\n      typeof getOptions === \"string\" \r\n        ? () => http.get<TResponse>(`${options.baseUrl}/${getOptions}`)\r\n        : (params: TParams) => http.get<TResponse>(`${options.baseUrl}/${getOptions.path}`, {\r\n            headers: getOptions.headers != null \r\n              ? mapValues(omitBy(getOptions.headers(params) as Params, val => val == null), val => val.toString()) \r\n              : {},\r\n            params: getOptions.query != null \r\n              ? getOptions.query(params) as Params\r\n              : params != null\r\n              ? omitBy(params, val => val == null) as Params\r\n              : {}\r\n        }),\r\n    post: <TResponse, TParams = object | void>(postOptions: PostRequestOptions<TParams>) =>\r\n      (params: TParams) => {\r\n        debugger;\r\n        return http.post<TResponse>(\r\n          `${options.baseUrl}/${postOptions.path}`, \r\n          postOptions.body != null\r\n            ? postOptions.body(params)\r\n            : params != null\r\n            ? omitBy(params, val => val == null)\r\n            : {}, \r\n          {\r\n            headers: postOptions.headers != null \r\n            ? mapValues(omitBy(postOptions.headers(params) as Params, val => val == null), val => val.toString()) \r\n            : {}\r\n          }\r\n        );\r\n      } \r\n  }\r\n}\r\n\r\nexport function createApi<TApi>(options: CreateApiOptions<TApi>) {\r\n  return memoize(() => {\r\n    const build = createBuildApi(options);\r\n\r\n    return options.endpoints(build);\r\n  });\r\n}",
            "properties": [
                {
                    "name": "body",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": true,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "headers",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": true,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "path",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Question",
            "id": "interface-Question-c7959f7440ffcc3f7e62a4ddc4c7de3b0161d7b2e791d3c870e61d9c7beefced3f38a328f62f1a879861bd7f2b720c6a0a83bd38547d74e5da6d4aabfde0f9ba",
            "file": "src/app/core/stores/site-document/models/site-document.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { PointGroup } from \"signature_pad\";\r\n\r\nexport interface SiteDocument {\r\n  DocumentID: number;\r\n  DocumentTitle: string;\r\n  Subtitle: string;\r\n  Preamble: string;\r\n  Pinned: boolean;\r\n  Pages: Page[];\r\n  AllowAnon: boolean;\r\n  RemainAnon: boolean;\r\n  ChildTemplateID: number;\r\n  Queues: Queue[],\r\n  DocumentGroup: string;\r\n  DocumentCategory?: number;\r\n  CanCreateHotspot: boolean;\r\n  CanBeAddedToHotspot?: boolean;\r\n  CanBeSavedAsDraft?: boolean;\r\n  CanAddActionerFromApp: boolean;\r\n  CanAddCategoryActioner: boolean;\r\n  CanCreateAssetsFromDocument: boolean;\r\n  CanHaveQueueDuration: boolean;\r\n  CanHaveDocumentLevelImages: boolean;\r\n  CanHaveDocLevelPhotoRoll: boolean;\r\n  CurrentActionerOperativeID?: number;\r\n  CompanyActionerId?: number;\r\n  ShowDocLevelPhotoButtonAtStartOfDoc: boolean;\r\n  CanAddAsset?: boolean;\r\n  CanAddOperative?: boolean;\r\n  CanHaveCompanyActioner: boolean;\r\n  MetaData: Partial<SiteDocumentMetaData>;\r\n  SiteDocumentType: number,\r\n  SiteId?: number;\r\n  AutoQueueID?: number;\r\n  QueueDuration?: QueueDuration;\r\n  DocumentResponsibilityAreaTypeId?: number;\r\n  DocumentResponsibilityAreaId?: number;\r\n  ReqGps: boolean;\r\n  PageIdx: number;\r\n  Images: string[];\r\n}\r\n\r\nexport interface Queue {\r\n  Id: number,\r\n  Name: string\r\n}\r\n\r\nexport interface QueueDuration {\r\n  Value: number;\r\n  Type: \"Mins\" | \"Hours\" | \"Days\";\r\n}\r\n\r\nexport interface SiteDocumentImage {\r\n  Id: string,\r\n  DocumentId: number,\r\n  Base64: string,\r\n}\r\n\r\nexport interface SiteDocumentMetaData {\r\n  ActionerText: string;\r\n  CanBeEditableDocument: boolean;\r\n  CannotAddSelfAsActioner: boolean;\r\n  ColourHex: string;\r\n  QueueSelectorTitle: string;\r\n  HasSiteList: boolean;\r\n  SiteListTitle: string;\r\n  UsesRadioGroupTable: boolean;\r\n}\r\n\r\nexport interface SiteDocumentAsset {\r\n  AssetID: number;\r\n  Tag: string;\r\n  Name: string;\r\n  QRCode?: string;\r\n  TemplateID?: number;\r\n}\r\n\r\nexport interface SiteDocumentOperative {\r\n  AttendeeID: number;\r\n  Name: string;\r\n  DateAttended: Date;\r\n}\r\n\r\nexport interface Page {\r\n  PageID: number;\r\n  PageTitle: string;\r\n  PageNo: number;\r\n  Sections: Section[];\r\n  Hidden: boolean;\r\n}\r\n\r\nexport interface Section {\r\n  SectionID: number;\r\n  SectionNo: number;\r\n  SectionTitle: string;\r\n  Questions: Question[];\r\n  SectionQuestiontype: QuestionType;\r\n  IsRepeatable: boolean;\r\n  TableTitles: string[];\r\n  Hidden: boolean;\r\n}\r\n\r\nexport enum QuestionType {\r\n  Label = 0,\r\n  Checkbox = 1,\r\n  RadioGroup = 2,\r\n  Textbox = 3,\r\n  TextArea = 4,\r\n  Select = 5,\r\n  CheckboxTextbox = 6,\r\n  RadioGroupTextbox = 7,\r\n  Date = 8,\r\n  DateTime = 9,\r\n  OperativeList = 10,\r\n  WallOfText = 11,\r\n  Number = 12,\r\n  CascadeDropdown = 13,\r\n  LinkedBool = 16,\r\n  AssetList = 17,\r\n  LinkedDates = 18,\r\n  Signature = 19,\r\n  CompanySelect = 21,\r\n  AreaSelect = 22,\r\n  AssetGroupsAndTypes = 25,\r\n  AssetInspectionSchedule = 26,\r\n  ProjectSelect = 27,\r\n  RamsSelect = 28,\r\n  SelectText = 29,\r\n  CascadeDropdownText = 30,\r\n  MultiCascade = 31,\r\n  Time = 32,\r\n  LinkedTimes = 33,\r\n  HraSelect = 34,\r\n  MultiCheckbox = 35,\r\n  LinkedDateAndTime = 36\r\n}\r\n\r\nexport interface Question {\r\n  QuestionID: number;\r\n  QuestionText: string;\r\n  CascadeOptionsText: string;\r\n  CommentsText: string;\r\n  Assets: SiteDocumentAsset[];\r\n  Operatives: SiteDocumentOperative[];\r\n  Required: boolean;\r\n  AnswerText: string;\r\n  AdditionalText?: string;\r\n  MoreAdditionalText?: string;\r\n  DateAndTime: Nullable<Date>;\r\n  DateAndTime2: Nullable<Date>;\r\n  NumberVal?: number;\r\n  OptionVal?: string | null;\r\n  SelectedOptionText?: Nullable<string>;\r\n  SelectedCascadeOptionText?: Nullable<string>;\r\n  File?: Nullable<string>;\r\n  Img?: Nullable<string>;\r\n  AnswerOptions: SelectOption[];\r\n  CascadeOptions: CascadeOption[];\r\n  CascadeOptionVal?: string | null;\r\n  YesNoNA: boolean | null;\r\n  CanHaveImg: boolean;\r\n  CanHaveFiles: boolean;\r\n  CanUsePhotoLib: boolean;\r\n  SignatureArray?: number[];\r\n  SignaturePoints?: PointGroup[];\r\n  SignatureDataUrl?: string;\r\n  ValidationData: ValidationData[];\r\n  Hidden: boolean;\r\n  Disabled?: boolean;\r\n}\r\n\r\nexport function useValidationData(rules: ValidationData[]) {\r\n  const min = rules.find(r => r.Key === \"Min\")?.Value.toNumber();\r\n  const max = rules.find(r => r.Key === \"Max\")?.Value.toNumber();\r\n\r\n  return {\r\n    min,\r\n    max\r\n  }\r\n}\r\n\r\nexport function minDate(question: Question) {\r\n  const min = question.ValidationData.find(r => r.Key === \"Min\")?.Value.toNumber();\r\n\r\n  return min != null\r\n    ? new Date().subtrackHours(min)\r\n    : null;\r\n}\r\n\r\nexport function maxDate(question: Question) {\r\n  const max = question.ValidationData.find(r => r.Key === \"Max\")?.Value.toNumber();\r\n\r\n  return max != null\r\n    ? new Date().addHours(max)\r\n    : null;\r\n}\r\n\r\nexport function spreadDate(question: Question) {\r\n  const spread = question.ValidationData.find(r => r.Key === \"Spread\")?.Value.toNumber();\r\n  const max = question.ValidationData.find(r => r.Key === \"Max\")?.Value.toNumber();  \r\n\r\n  const hours = spread != null && max != null\r\n    ? spread > max\r\n      ? spread\r\n      : max\r\n    : spread != null\r\n      ? spread\r\n      : max;\r\n\r\n  return hours != null\r\n    ? new Date().addHours(hours)\r\n    : null;\r\n}\r\n\r\nexport interface ValidationData {\r\n  Key: \"Min\" | \"Max\" | \"Spread\",\r\n  Value: string,\r\n  Msg: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  Active?: boolean;\r\n  Text: string;\r\n  Val: string;\r\n  MetaData?: any;\r\n  OptionsMetadataJson?: string;\r\n}\r\n\r\nexport interface SelectOptionMetaData {\r\n  ColourHex?: string;\r\n}\r\n\r\nexport interface CascadeOption { \r\n  ParentVal: string, \r\n  Text: string, \r\n  Val: string \r\n}",
            "properties": [
                {
                    "name": "AdditionalText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 147
                },
                {
                    "name": "AnswerOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SelectOption[]",
                    "optional": false,
                    "description": "",
                    "line": 157
                },
                {
                    "name": "AnswerText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 146
                },
                {
                    "name": "Assets",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SiteDocumentAsset[]",
                    "optional": false,
                    "description": "",
                    "line": 143
                },
                {
                    "name": "CanHaveFiles",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 162
                },
                {
                    "name": "CanHaveImg",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 161
                },
                {
                    "name": "CanUsePhotoLib",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 163
                },
                {
                    "name": "CascadeOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CascadeOption[]",
                    "optional": false,
                    "description": "",
                    "line": 158
                },
                {
                    "name": "CascadeOptionsText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 141
                },
                {
                    "name": "CascadeOptionVal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": true,
                    "description": "",
                    "line": 159
                },
                {
                    "name": "CommentsText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 142
                },
                {
                    "name": "DateAndTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Nullable<Date>",
                    "optional": false,
                    "description": "",
                    "line": 149
                },
                {
                    "name": "DateAndTime2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Nullable<Date>",
                    "optional": false,
                    "description": "",
                    "line": 150
                },
                {
                    "name": "Disabled",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 169
                },
                {
                    "name": "File",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Nullable<string>",
                    "optional": true,
                    "description": "",
                    "line": 155
                },
                {
                    "name": "Hidden",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 168
                },
                {
                    "name": "Img",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Nullable<string>",
                    "optional": true,
                    "description": "",
                    "line": 156
                },
                {
                    "name": "MoreAdditionalText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 148
                },
                {
                    "name": "NumberVal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 151
                },
                {
                    "name": "Operatives",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SiteDocumentOperative[]",
                    "optional": false,
                    "description": "",
                    "line": 144
                },
                {
                    "name": "OptionVal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": true,
                    "description": "",
                    "line": 152
                },
                {
                    "name": "QuestionID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 139
                },
                {
                    "name": "QuestionText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 140
                },
                {
                    "name": "Required",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 145
                },
                {
                    "name": "SelectedCascadeOptionText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Nullable<string>",
                    "optional": true,
                    "description": "",
                    "line": 154
                },
                {
                    "name": "SelectedOptionText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Nullable<string>",
                    "optional": true,
                    "description": "",
                    "line": 153
                },
                {
                    "name": "SignatureArray",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number[]",
                    "optional": true,
                    "description": "",
                    "line": 164
                },
                {
                    "name": "SignatureDataUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 166
                },
                {
                    "name": "SignaturePoints",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PointGroup[]",
                    "optional": true,
                    "description": "",
                    "line": 165
                },
                {
                    "name": "ValidationData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ValidationData[]",
                    "optional": false,
                    "description": "",
                    "line": 167
                },
                {
                    "name": "YesNoNA",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean | null",
                    "optional": false,
                    "description": "",
                    "line": 160
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "QuestionImage",
            "id": "interface-QuestionImage-b73c321c30eafdf942ccb8cac0bebea10be0b43d12e12e4a8f219add092f85353c0a6c79d649c71b6ffada9938014680d86175de5d40a6465fabce2a90070c94",
            "file": "src/app/core/stores/site-document/question-img/question-img.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { memoize } from \"lodash-es\";\r\nimport { buildStore } from \"src/app/shared/rxjs\";\r\n\r\nexport interface QuestionImage {\r\n  Id: string,\r\n  Base64: string\r\n}\r\n\r\nexport const useQuestionImgStore = memoize(() => {\r\n  const store = buildStore<QuestionImage>(\"question-images\", \"Id\");\r\n\r\n  return store;\r\n});",
            "properties": [
                {
                    "name": "Base64",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "Id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Queue",
            "id": "interface-Queue-c7959f7440ffcc3f7e62a4ddc4c7de3b0161d7b2e791d3c870e61d9c7beefced3f38a328f62f1a879861bd7f2b720c6a0a83bd38547d74e5da6d4aabfde0f9ba",
            "file": "src/app/core/stores/site-document/models/site-document.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { PointGroup } from \"signature_pad\";\r\n\r\nexport interface SiteDocument {\r\n  DocumentID: number;\r\n  DocumentTitle: string;\r\n  Subtitle: string;\r\n  Preamble: string;\r\n  Pinned: boolean;\r\n  Pages: Page[];\r\n  AllowAnon: boolean;\r\n  RemainAnon: boolean;\r\n  ChildTemplateID: number;\r\n  Queues: Queue[],\r\n  DocumentGroup: string;\r\n  DocumentCategory?: number;\r\n  CanCreateHotspot: boolean;\r\n  CanBeAddedToHotspot?: boolean;\r\n  CanBeSavedAsDraft?: boolean;\r\n  CanAddActionerFromApp: boolean;\r\n  CanAddCategoryActioner: boolean;\r\n  CanCreateAssetsFromDocument: boolean;\r\n  CanHaveQueueDuration: boolean;\r\n  CanHaveDocumentLevelImages: boolean;\r\n  CanHaveDocLevelPhotoRoll: boolean;\r\n  CurrentActionerOperativeID?: number;\r\n  CompanyActionerId?: number;\r\n  ShowDocLevelPhotoButtonAtStartOfDoc: boolean;\r\n  CanAddAsset?: boolean;\r\n  CanAddOperative?: boolean;\r\n  CanHaveCompanyActioner: boolean;\r\n  MetaData: Partial<SiteDocumentMetaData>;\r\n  SiteDocumentType: number,\r\n  SiteId?: number;\r\n  AutoQueueID?: number;\r\n  QueueDuration?: QueueDuration;\r\n  DocumentResponsibilityAreaTypeId?: number;\r\n  DocumentResponsibilityAreaId?: number;\r\n  ReqGps: boolean;\r\n  PageIdx: number;\r\n  Images: string[];\r\n}\r\n\r\nexport interface Queue {\r\n  Id: number,\r\n  Name: string\r\n}\r\n\r\nexport interface QueueDuration {\r\n  Value: number;\r\n  Type: \"Mins\" | \"Hours\" | \"Days\";\r\n}\r\n\r\nexport interface SiteDocumentImage {\r\n  Id: string,\r\n  DocumentId: number,\r\n  Base64: string,\r\n}\r\n\r\nexport interface SiteDocumentMetaData {\r\n  ActionerText: string;\r\n  CanBeEditableDocument: boolean;\r\n  CannotAddSelfAsActioner: boolean;\r\n  ColourHex: string;\r\n  QueueSelectorTitle: string;\r\n  HasSiteList: boolean;\r\n  SiteListTitle: string;\r\n  UsesRadioGroupTable: boolean;\r\n}\r\n\r\nexport interface SiteDocumentAsset {\r\n  AssetID: number;\r\n  Tag: string;\r\n  Name: string;\r\n  QRCode?: string;\r\n  TemplateID?: number;\r\n}\r\n\r\nexport interface SiteDocumentOperative {\r\n  AttendeeID: number;\r\n  Name: string;\r\n  DateAttended: Date;\r\n}\r\n\r\nexport interface Page {\r\n  PageID: number;\r\n  PageTitle: string;\r\n  PageNo: number;\r\n  Sections: Section[];\r\n  Hidden: boolean;\r\n}\r\n\r\nexport interface Section {\r\n  SectionID: number;\r\n  SectionNo: number;\r\n  SectionTitle: string;\r\n  Questions: Question[];\r\n  SectionQuestiontype: QuestionType;\r\n  IsRepeatable: boolean;\r\n  TableTitles: string[];\r\n  Hidden: boolean;\r\n}\r\n\r\nexport enum QuestionType {\r\n  Label = 0,\r\n  Checkbox = 1,\r\n  RadioGroup = 2,\r\n  Textbox = 3,\r\n  TextArea = 4,\r\n  Select = 5,\r\n  CheckboxTextbox = 6,\r\n  RadioGroupTextbox = 7,\r\n  Date = 8,\r\n  DateTime = 9,\r\n  OperativeList = 10,\r\n  WallOfText = 11,\r\n  Number = 12,\r\n  CascadeDropdown = 13,\r\n  LinkedBool = 16,\r\n  AssetList = 17,\r\n  LinkedDates = 18,\r\n  Signature = 19,\r\n  CompanySelect = 21,\r\n  AreaSelect = 22,\r\n  AssetGroupsAndTypes = 25,\r\n  AssetInspectionSchedule = 26,\r\n  ProjectSelect = 27,\r\n  RamsSelect = 28,\r\n  SelectText = 29,\r\n  CascadeDropdownText = 30,\r\n  MultiCascade = 31,\r\n  Time = 32,\r\n  LinkedTimes = 33,\r\n  HraSelect = 34,\r\n  MultiCheckbox = 35,\r\n  LinkedDateAndTime = 36\r\n}\r\n\r\nexport interface Question {\r\n  QuestionID: number;\r\n  QuestionText: string;\r\n  CascadeOptionsText: string;\r\n  CommentsText: string;\r\n  Assets: SiteDocumentAsset[];\r\n  Operatives: SiteDocumentOperative[];\r\n  Required: boolean;\r\n  AnswerText: string;\r\n  AdditionalText?: string;\r\n  MoreAdditionalText?: string;\r\n  DateAndTime: Nullable<Date>;\r\n  DateAndTime2: Nullable<Date>;\r\n  NumberVal?: number;\r\n  OptionVal?: string | null;\r\n  SelectedOptionText?: Nullable<string>;\r\n  SelectedCascadeOptionText?: Nullable<string>;\r\n  File?: Nullable<string>;\r\n  Img?: Nullable<string>;\r\n  AnswerOptions: SelectOption[];\r\n  CascadeOptions: CascadeOption[];\r\n  CascadeOptionVal?: string | null;\r\n  YesNoNA: boolean | null;\r\n  CanHaveImg: boolean;\r\n  CanHaveFiles: boolean;\r\n  CanUsePhotoLib: boolean;\r\n  SignatureArray?: number[];\r\n  SignaturePoints?: PointGroup[];\r\n  SignatureDataUrl?: string;\r\n  ValidationData: ValidationData[];\r\n  Hidden: boolean;\r\n  Disabled?: boolean;\r\n}\r\n\r\nexport function useValidationData(rules: ValidationData[]) {\r\n  const min = rules.find(r => r.Key === \"Min\")?.Value.toNumber();\r\n  const max = rules.find(r => r.Key === \"Max\")?.Value.toNumber();\r\n\r\n  return {\r\n    min,\r\n    max\r\n  }\r\n}\r\n\r\nexport function minDate(question: Question) {\r\n  const min = question.ValidationData.find(r => r.Key === \"Min\")?.Value.toNumber();\r\n\r\n  return min != null\r\n    ? new Date().subtrackHours(min)\r\n    : null;\r\n}\r\n\r\nexport function maxDate(question: Question) {\r\n  const max = question.ValidationData.find(r => r.Key === \"Max\")?.Value.toNumber();\r\n\r\n  return max != null\r\n    ? new Date().addHours(max)\r\n    : null;\r\n}\r\n\r\nexport function spreadDate(question: Question) {\r\n  const spread = question.ValidationData.find(r => r.Key === \"Spread\")?.Value.toNumber();\r\n  const max = question.ValidationData.find(r => r.Key === \"Max\")?.Value.toNumber();  \r\n\r\n  const hours = spread != null && max != null\r\n    ? spread > max\r\n      ? spread\r\n      : max\r\n    : spread != null\r\n      ? spread\r\n      : max;\r\n\r\n  return hours != null\r\n    ? new Date().addHours(hours)\r\n    : null;\r\n}\r\n\r\nexport interface ValidationData {\r\n  Key: \"Min\" | \"Max\" | \"Spread\",\r\n  Value: string,\r\n  Msg: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  Active?: boolean;\r\n  Text: string;\r\n  Val: string;\r\n  MetaData?: any;\r\n  OptionsMetadataJson?: string;\r\n}\r\n\r\nexport interface SelectOptionMetaData {\r\n  ColourHex?: string;\r\n}\r\n\r\nexport interface CascadeOption { \r\n  ParentVal: string, \r\n  Text: string, \r\n  Val: string \r\n}",
            "properties": [
                {
                    "name": "Id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "Name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 45
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "QueueDuration",
            "id": "interface-QueueDuration-c7959f7440ffcc3f7e62a4ddc4c7de3b0161d7b2e791d3c870e61d9c7beefced3f38a328f62f1a879861bd7f2b720c6a0a83bd38547d74e5da6d4aabfde0f9ba",
            "file": "src/app/core/stores/site-document/models/site-document.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { PointGroup } from \"signature_pad\";\r\n\r\nexport interface SiteDocument {\r\n  DocumentID: number;\r\n  DocumentTitle: string;\r\n  Subtitle: string;\r\n  Preamble: string;\r\n  Pinned: boolean;\r\n  Pages: Page[];\r\n  AllowAnon: boolean;\r\n  RemainAnon: boolean;\r\n  ChildTemplateID: number;\r\n  Queues: Queue[],\r\n  DocumentGroup: string;\r\n  DocumentCategory?: number;\r\n  CanCreateHotspot: boolean;\r\n  CanBeAddedToHotspot?: boolean;\r\n  CanBeSavedAsDraft?: boolean;\r\n  CanAddActionerFromApp: boolean;\r\n  CanAddCategoryActioner: boolean;\r\n  CanCreateAssetsFromDocument: boolean;\r\n  CanHaveQueueDuration: boolean;\r\n  CanHaveDocumentLevelImages: boolean;\r\n  CanHaveDocLevelPhotoRoll: boolean;\r\n  CurrentActionerOperativeID?: number;\r\n  CompanyActionerId?: number;\r\n  ShowDocLevelPhotoButtonAtStartOfDoc: boolean;\r\n  CanAddAsset?: boolean;\r\n  CanAddOperative?: boolean;\r\n  CanHaveCompanyActioner: boolean;\r\n  MetaData: Partial<SiteDocumentMetaData>;\r\n  SiteDocumentType: number,\r\n  SiteId?: number;\r\n  AutoQueueID?: number;\r\n  QueueDuration?: QueueDuration;\r\n  DocumentResponsibilityAreaTypeId?: number;\r\n  DocumentResponsibilityAreaId?: number;\r\n  ReqGps: boolean;\r\n  PageIdx: number;\r\n  Images: string[];\r\n}\r\n\r\nexport interface Queue {\r\n  Id: number,\r\n  Name: string\r\n}\r\n\r\nexport interface QueueDuration {\r\n  Value: number;\r\n  Type: \"Mins\" | \"Hours\" | \"Days\";\r\n}\r\n\r\nexport interface SiteDocumentImage {\r\n  Id: string,\r\n  DocumentId: number,\r\n  Base64: string,\r\n}\r\n\r\nexport interface SiteDocumentMetaData {\r\n  ActionerText: string;\r\n  CanBeEditableDocument: boolean;\r\n  CannotAddSelfAsActioner: boolean;\r\n  ColourHex: string;\r\n  QueueSelectorTitle: string;\r\n  HasSiteList: boolean;\r\n  SiteListTitle: string;\r\n  UsesRadioGroupTable: boolean;\r\n}\r\n\r\nexport interface SiteDocumentAsset {\r\n  AssetID: number;\r\n  Tag: string;\r\n  Name: string;\r\n  QRCode?: string;\r\n  TemplateID?: number;\r\n}\r\n\r\nexport interface SiteDocumentOperative {\r\n  AttendeeID: number;\r\n  Name: string;\r\n  DateAttended: Date;\r\n}\r\n\r\nexport interface Page {\r\n  PageID: number;\r\n  PageTitle: string;\r\n  PageNo: number;\r\n  Sections: Section[];\r\n  Hidden: boolean;\r\n}\r\n\r\nexport interface Section {\r\n  SectionID: number;\r\n  SectionNo: number;\r\n  SectionTitle: string;\r\n  Questions: Question[];\r\n  SectionQuestiontype: QuestionType;\r\n  IsRepeatable: boolean;\r\n  TableTitles: string[];\r\n  Hidden: boolean;\r\n}\r\n\r\nexport enum QuestionType {\r\n  Label = 0,\r\n  Checkbox = 1,\r\n  RadioGroup = 2,\r\n  Textbox = 3,\r\n  TextArea = 4,\r\n  Select = 5,\r\n  CheckboxTextbox = 6,\r\n  RadioGroupTextbox = 7,\r\n  Date = 8,\r\n  DateTime = 9,\r\n  OperativeList = 10,\r\n  WallOfText = 11,\r\n  Number = 12,\r\n  CascadeDropdown = 13,\r\n  LinkedBool = 16,\r\n  AssetList = 17,\r\n  LinkedDates = 18,\r\n  Signature = 19,\r\n  CompanySelect = 21,\r\n  AreaSelect = 22,\r\n  AssetGroupsAndTypes = 25,\r\n  AssetInspectionSchedule = 26,\r\n  ProjectSelect = 27,\r\n  RamsSelect = 28,\r\n  SelectText = 29,\r\n  CascadeDropdownText = 30,\r\n  MultiCascade = 31,\r\n  Time = 32,\r\n  LinkedTimes = 33,\r\n  HraSelect = 34,\r\n  MultiCheckbox = 35,\r\n  LinkedDateAndTime = 36\r\n}\r\n\r\nexport interface Question {\r\n  QuestionID: number;\r\n  QuestionText: string;\r\n  CascadeOptionsText: string;\r\n  CommentsText: string;\r\n  Assets: SiteDocumentAsset[];\r\n  Operatives: SiteDocumentOperative[];\r\n  Required: boolean;\r\n  AnswerText: string;\r\n  AdditionalText?: string;\r\n  MoreAdditionalText?: string;\r\n  DateAndTime: Nullable<Date>;\r\n  DateAndTime2: Nullable<Date>;\r\n  NumberVal?: number;\r\n  OptionVal?: string | null;\r\n  SelectedOptionText?: Nullable<string>;\r\n  SelectedCascadeOptionText?: Nullable<string>;\r\n  File?: Nullable<string>;\r\n  Img?: Nullable<string>;\r\n  AnswerOptions: SelectOption[];\r\n  CascadeOptions: CascadeOption[];\r\n  CascadeOptionVal?: string | null;\r\n  YesNoNA: boolean | null;\r\n  CanHaveImg: boolean;\r\n  CanHaveFiles: boolean;\r\n  CanUsePhotoLib: boolean;\r\n  SignatureArray?: number[];\r\n  SignaturePoints?: PointGroup[];\r\n  SignatureDataUrl?: string;\r\n  ValidationData: ValidationData[];\r\n  Hidden: boolean;\r\n  Disabled?: boolean;\r\n}\r\n\r\nexport function useValidationData(rules: ValidationData[]) {\r\n  const min = rules.find(r => r.Key === \"Min\")?.Value.toNumber();\r\n  const max = rules.find(r => r.Key === \"Max\")?.Value.toNumber();\r\n\r\n  return {\r\n    min,\r\n    max\r\n  }\r\n}\r\n\r\nexport function minDate(question: Question) {\r\n  const min = question.ValidationData.find(r => r.Key === \"Min\")?.Value.toNumber();\r\n\r\n  return min != null\r\n    ? new Date().subtrackHours(min)\r\n    : null;\r\n}\r\n\r\nexport function maxDate(question: Question) {\r\n  const max = question.ValidationData.find(r => r.Key === \"Max\")?.Value.toNumber();\r\n\r\n  return max != null\r\n    ? new Date().addHours(max)\r\n    : null;\r\n}\r\n\r\nexport function spreadDate(question: Question) {\r\n  const spread = question.ValidationData.find(r => r.Key === \"Spread\")?.Value.toNumber();\r\n  const max = question.ValidationData.find(r => r.Key === \"Max\")?.Value.toNumber();  \r\n\r\n  const hours = spread != null && max != null\r\n    ? spread > max\r\n      ? spread\r\n      : max\r\n    : spread != null\r\n      ? spread\r\n      : max;\r\n\r\n  return hours != null\r\n    ? new Date().addHours(hours)\r\n    : null;\r\n}\r\n\r\nexport interface ValidationData {\r\n  Key: \"Min\" | \"Max\" | \"Spread\",\r\n  Value: string,\r\n  Msg: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  Active?: boolean;\r\n  Text: string;\r\n  Val: string;\r\n  MetaData?: any;\r\n  OptionsMetadataJson?: string;\r\n}\r\n\r\nexport interface SelectOptionMetaData {\r\n  ColourHex?: string;\r\n}\r\n\r\nexport interface CascadeOption { \r\n  ParentVal: string, \r\n  Text: string, \r\n  Val: string \r\n}",
            "properties": [
                {
                    "name": "Type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"Mins\" | \"Hours\" | \"Days\"",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "Value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 49
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "QueueMovedInfo",
            "id": "interface-QueueMovedInfo-7a10aa12ff27527eb09d15655a13296f3272a657e306bf0abfb2f9a70c9852030897580ab65b24ca7e541325f18b988a6a64f9a868257762d328635a65970529",
            "file": "src/app/core/http/queues.api.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { environment } from \"src/environments/environment\";\r\nimport { createApi } from \"./create-api\";\r\nimport { memoize } from \"lodash-es\";\r\nimport { trackSend } from \"src/app/shared/rxjs\";\r\n\r\nexport interface UpdateDocMoveCommand {\r\n  documentId: number,\r\n  queueId: number,\r\n  success: boolean,\r\n  note: Nullable<string>,\r\n  img64: Nullable<string>\r\n}\r\n\r\nexport interface QueueMovedInfo {\r\n  Message: string,\r\n  MovedToQueueId: number\r\n}\r\n\r\nexport const useQueuesApi = createApi({\r\n  baseUrl: `${environment.siteDocsApi}/QueuesApi`,\r\n  endpoints: ({ post }) => ({\r\n    updateDocMove: post<QueueMovedInfo, UpdateDocMoveCommand>({ path: \"UpdateDocMove\" })\r\n  })\r\n});\r\n\r\nexport const useUpdateDocMove = memoize(() => {\r\n  const { updateDocMove } = useQueuesApi();\r\n\r\n  return trackSend({\r\n    fn: (params: UpdateDocMoveCommand) => updateDocMove(params)\r\n  });\r\n});",
            "properties": [
                {
                    "name": "Message",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "MovedToQueueId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "RamsItem",
            "id": "interface-RamsItem-fc859f3974b123a71e097e509bf1d5ebde1cde471e5c3e5bb14ef15db008072f63a8effda77516cd7c79f8df9639abebef974f9995e4ffe5fd48a609550bf96b",
            "file": "src/app/core/http/login.api.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { environment } from \"src/environments/environment\";\r\nimport { Area, Company, Site } from \"../stores/user/user.store\";\r\nimport { AspNetData, createApi } from \"./create-api\";\r\nimport { CategoryActioner } from \"../stores/category-actioners/category-actioners.store\";\r\nimport { memoize } from \"lodash-es\";\r\nimport { track } from \"src/app/shared/rxjs\";\r\nimport { BehaviorSubject, map } from \"rxjs\";\r\n\r\nexport interface RamsItem {\r\n  Reference: string,\r\n  Description: string,\r\n  SiteId: number,\r\n  ExpiryDate: Date | null\r\n}\r\n\r\nexport interface GetCategoryActionerParams {\r\n  categoryId: number\r\n}\r\n\r\nexport interface ResponsibilityAreaType {\r\n  Id: number,\r\n  TypeName: string,\r\n  AppQuestionText: string,\r\n  Areas: ResponsibilityArea[]\r\n}\r\n\r\nexport interface ResponsibilityArea {\r\n  Id: number,\r\n  Name: string,\r\n  DocResAreaTypeId: number,\r\n  SiteId?: number\r\n}\r\n\r\nexport const useLoginApi = createApi({\r\n  baseUrl: `${environment.siteDocsApi}/LoginApi`,\r\n  endpoints: ({ get }) => ({\r\n    getCompanies: get<Company[]>(\"GetCompanies\"),\r\n    getSites: get<Site[]>(\"GetSites\"),\r\n    getAreas: get<Area[]>(\"GetAreas\"),\r\n    getRams: get<AspNetData<RamsItem>[]>(\"GetRams\"),\r\n    getCategoryActioners: get<CategoryActioner[], GetCategoryActionerParams>(\"GetCategoryActioners\"),\r\n    getResAreaTypes: get<ResponsibilityAreaType[]>(\"GetResAreas\")\r\n  })\r\n});\r\n\r\nexport const useSites = memoize(() => {\r\n  const { getSites } = useLoginApi();\r\n\r\n  return track(() => getSites());\r\n});\r\n\r\nexport const useCompanies = memoize(() => {\r\n  const { getCompanies } = useLoginApi();\r\n\r\n  return track(() => getCompanies());\r\n});\r\n\r\nexport const useAreas = memoize(() => {\r\n  const { getAreas } = useLoginApi();\r\n\r\n  return track(() => getAreas());\r\n});\r\n\r\nexport const useRams = memoize(() => {\r\n  const { getRams } = useLoginApi();\r\n\r\n  const rams = track(() => getRams().pipe(\r\n    map(rams => rams.map(r => ({\r\n      ...r,\r\n      ExpiryDate: r.ExpiryDate?.toDate()\r\n    })))\r\n  ));\r\n\r\n  return {\r\n    ...rams,\r\n    thatArentExpiredToday: rams.data(items => items.filter(item => item.ExpiryDate == null || item.ExpiryDate.isEqualOrAfterToday()))\r\n  }\r\n});\r\n\r\n\r\nexport const useCategoryActioners = memoize((categoryId: Nullable<number>) => {\r\n  const loginApi = useLoginApi();\r\n\r\n  return track(() => categoryId != null \r\n    ? loginApi.getCategoryActioners({ categoryId })\r\n    : new BehaviorSubject([]))\r\n});\r\n\r\nexport const useResAreaTypes = memoize(() => {\r\n  const { getResAreaTypes } = useLoginApi();\r\n\r\n  const resAreaTypes = track(() => getResAreaTypes());\r\n\r\n  return {\r\n    ...resAreaTypes,\r\n    find: (predicate: (value: ResponsibilityAreaType, index: number) => boolean) => resAreaTypes.data(types => types.find(predicate)),\r\n    areas: resAreaTypes.data(types => types.flatMap(t => t.Areas))\r\n  }\r\n})",
            "properties": [
                {
                    "name": "Description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "ExpiryDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date | null",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "Reference",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "SiteId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Request",
            "id": "interface-Request-b15720cc36c571580a641c16e74110c410fb41ebbe94d91cd35c1dccc228e7e3a0b2bdb7655614ea04c800da332e66e3844344cac42d20f59dfa980855948942",
            "file": "src/app/core/http/api.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable, inject } from \"@angular/core\";\r\nimport { Params } from \"@angular/router\";\r\nimport { omitBy } from \"lodash-es\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nexport interface Request<TParams> {\r\n  path: string,\r\n  params?: (params: TParams) => object,\r\n  headers?: (params: TParams) => object\r\n}\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class Api {\r\n  httpClient = inject(HttpClient);\r\n  baseUrl: string = \"\";\r\n\r\n  get<R>(path: string): Func<Observable<R>>\r\n  get<R, T>(opts: Request<T>): Func<Observable<R>, T>\r\n  get<R, T>(opts: string | Request<T>): Func<Observable<R>> | Func<Observable<R>, T> {\r\n    return typeof opts === \"string\"\r\n      ? () => this.httpClient.get<R>(`${this.baseUrl}/${opts}`)\r\n      : (params: T) => this.httpClient.get<R>(`${this.baseUrl}/${opts.path}`, {\r\n        params: opts.params != null\r\n          ? opts.params(params) as Params\r\n          : params != null\r\n          ? omitBy(params, val => val == null) as Params\r\n          : {}\r\n      });\r\n  }\r\n\r\n  post<R>(path: string): Func<Observable<R>>\r\n  post<R, T>(opts: Request<T>): Func<Observable<R>, T>\r\n  post<R, T>(opts: string | Request<T>): Func<Observable<R>> | Func<Observable<R>, T> {\r\n    return typeof opts === \"string\"\r\n      ? () => this.httpClient.post<R>(`${this.baseUrl}/${opts}`, {})\r\n      : (params: T) => this.httpClient.post<R>(`${this.baseUrl}/${opts.path}`, \r\n        opts.params != null\r\n          ? opts.params(params) as Params\r\n          : params != null\r\n          ? omitBy(params, val => val == null) as Params\r\n          : {}\r\n      )\r\n  }\r\n}\r\n\r\nexport function useApi(baseUrl: string) {\r\n  const api = inject(Api);\r\n\r\n  api.baseUrl = baseUrl;\r\n  return api;\r\n}",
            "properties": [
                {
                    "name": "headers",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "params",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": true,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "path",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ResponsibilityArea",
            "id": "interface-ResponsibilityArea-fc859f3974b123a71e097e509bf1d5ebde1cde471e5c3e5bb14ef15db008072f63a8effda77516cd7c79f8df9639abebef974f9995e4ffe5fd48a609550bf96b",
            "file": "src/app/core/http/login.api.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { environment } from \"src/environments/environment\";\r\nimport { Area, Company, Site } from \"../stores/user/user.store\";\r\nimport { AspNetData, createApi } from \"./create-api\";\r\nimport { CategoryActioner } from \"../stores/category-actioners/category-actioners.store\";\r\nimport { memoize } from \"lodash-es\";\r\nimport { track } from \"src/app/shared/rxjs\";\r\nimport { BehaviorSubject, map } from \"rxjs\";\r\n\r\nexport interface RamsItem {\r\n  Reference: string,\r\n  Description: string,\r\n  SiteId: number,\r\n  ExpiryDate: Date | null\r\n}\r\n\r\nexport interface GetCategoryActionerParams {\r\n  categoryId: number\r\n}\r\n\r\nexport interface ResponsibilityAreaType {\r\n  Id: number,\r\n  TypeName: string,\r\n  AppQuestionText: string,\r\n  Areas: ResponsibilityArea[]\r\n}\r\n\r\nexport interface ResponsibilityArea {\r\n  Id: number,\r\n  Name: string,\r\n  DocResAreaTypeId: number,\r\n  SiteId?: number\r\n}\r\n\r\nexport const useLoginApi = createApi({\r\n  baseUrl: `${environment.siteDocsApi}/LoginApi`,\r\n  endpoints: ({ get }) => ({\r\n    getCompanies: get<Company[]>(\"GetCompanies\"),\r\n    getSites: get<Site[]>(\"GetSites\"),\r\n    getAreas: get<Area[]>(\"GetAreas\"),\r\n    getRams: get<AspNetData<RamsItem>[]>(\"GetRams\"),\r\n    getCategoryActioners: get<CategoryActioner[], GetCategoryActionerParams>(\"GetCategoryActioners\"),\r\n    getResAreaTypes: get<ResponsibilityAreaType[]>(\"GetResAreas\")\r\n  })\r\n});\r\n\r\nexport const useSites = memoize(() => {\r\n  const { getSites } = useLoginApi();\r\n\r\n  return track(() => getSites());\r\n});\r\n\r\nexport const useCompanies = memoize(() => {\r\n  const { getCompanies } = useLoginApi();\r\n\r\n  return track(() => getCompanies());\r\n});\r\n\r\nexport const useAreas = memoize(() => {\r\n  const { getAreas } = useLoginApi();\r\n\r\n  return track(() => getAreas());\r\n});\r\n\r\nexport const useRams = memoize(() => {\r\n  const { getRams } = useLoginApi();\r\n\r\n  const rams = track(() => getRams().pipe(\r\n    map(rams => rams.map(r => ({\r\n      ...r,\r\n      ExpiryDate: r.ExpiryDate?.toDate()\r\n    })))\r\n  ));\r\n\r\n  return {\r\n    ...rams,\r\n    thatArentExpiredToday: rams.data(items => items.filter(item => item.ExpiryDate == null || item.ExpiryDate.isEqualOrAfterToday()))\r\n  }\r\n});\r\n\r\n\r\nexport const useCategoryActioners = memoize((categoryId: Nullable<number>) => {\r\n  const loginApi = useLoginApi();\r\n\r\n  return track(() => categoryId != null \r\n    ? loginApi.getCategoryActioners({ categoryId })\r\n    : new BehaviorSubject([]))\r\n});\r\n\r\nexport const useResAreaTypes = memoize(() => {\r\n  const { getResAreaTypes } = useLoginApi();\r\n\r\n  const resAreaTypes = track(() => getResAreaTypes());\r\n\r\n  return {\r\n    ...resAreaTypes,\r\n    find: (predicate: (value: ResponsibilityAreaType, index: number) => boolean) => resAreaTypes.data(types => types.find(predicate)),\r\n    areas: resAreaTypes.data(types => types.flatMap(t => t.Areas))\r\n  }\r\n})",
            "properties": [
                {
                    "name": "DocResAreaTypeId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "Id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "Name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "SiteId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 31
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ResponsibilityArea",
            "id": "interface-ResponsibilityArea-939de3da069ba66b6240a9296476df2f670a51cbe802dc1846bbf6fbfea2389c84b5753e87e9023e3428fa08653289eeb418e48939e792a252b3ed0722c45877-1",
            "file": "src/app/core/stores/responsibility-area-types/responsibility-area-types.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\";\r\nimport { createStore } from \"@ngneat/elf\";\r\nimport { selectAllEntities, withEntities } from \"@ngneat/elf-entities\";\r\nimport { map } from \"rxjs\";\r\n\r\nexport interface ResponsibilityArea {\r\n  Id: number,\r\n  Name: string,\r\n  DocResAreaTypeId: number,\r\n  SiteId?: number\r\n}\r\n\r\nexport interface ResponsibilityAreaType {\r\n  Id: number,\r\n  TypeName: string,\r\n  AppQuestionText: string,\r\n  Areas: ResponsibilityArea[]\r\n}\r\n\r\nconst store = createStore(\r\n  { name: \"responsibility-area-types\" },\r\n  withEntities<ResponsibilityAreaType, \"Id\">({ idKey: \"Id\" })\r\n);\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class ResponsibilityAreaTypesStore {\r\n  responsibilityAreaTypes$ = store.pipe(selectAllEntities());\r\n  responsibilityAreaTypeById$ = (id: number) => this.responsibilityAreaTypes$.pipe(\r\n    map(resAreaTypes => resAreaTypes.find(t => t.Id === id))\r\n  );\r\n}\r\n",
            "properties": [
                {
                    "name": "DocResAreaTypeId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "Id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "Name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "SiteId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "ResponsibilityArea-1"
        },
        {
            "name": "ResponsibilityAreaType",
            "id": "interface-ResponsibilityAreaType-fc859f3974b123a71e097e509bf1d5ebde1cde471e5c3e5bb14ef15db008072f63a8effda77516cd7c79f8df9639abebef974f9995e4ffe5fd48a609550bf96b",
            "file": "src/app/core/http/login.api.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { environment } from \"src/environments/environment\";\r\nimport { Area, Company, Site } from \"../stores/user/user.store\";\r\nimport { AspNetData, createApi } from \"./create-api\";\r\nimport { CategoryActioner } from \"../stores/category-actioners/category-actioners.store\";\r\nimport { memoize } from \"lodash-es\";\r\nimport { track } from \"src/app/shared/rxjs\";\r\nimport { BehaviorSubject, map } from \"rxjs\";\r\n\r\nexport interface RamsItem {\r\n  Reference: string,\r\n  Description: string,\r\n  SiteId: number,\r\n  ExpiryDate: Date | null\r\n}\r\n\r\nexport interface GetCategoryActionerParams {\r\n  categoryId: number\r\n}\r\n\r\nexport interface ResponsibilityAreaType {\r\n  Id: number,\r\n  TypeName: string,\r\n  AppQuestionText: string,\r\n  Areas: ResponsibilityArea[]\r\n}\r\n\r\nexport interface ResponsibilityArea {\r\n  Id: number,\r\n  Name: string,\r\n  DocResAreaTypeId: number,\r\n  SiteId?: number\r\n}\r\n\r\nexport const useLoginApi = createApi({\r\n  baseUrl: `${environment.siteDocsApi}/LoginApi`,\r\n  endpoints: ({ get }) => ({\r\n    getCompanies: get<Company[]>(\"GetCompanies\"),\r\n    getSites: get<Site[]>(\"GetSites\"),\r\n    getAreas: get<Area[]>(\"GetAreas\"),\r\n    getRams: get<AspNetData<RamsItem>[]>(\"GetRams\"),\r\n    getCategoryActioners: get<CategoryActioner[], GetCategoryActionerParams>(\"GetCategoryActioners\"),\r\n    getResAreaTypes: get<ResponsibilityAreaType[]>(\"GetResAreas\")\r\n  })\r\n});\r\n\r\nexport const useSites = memoize(() => {\r\n  const { getSites } = useLoginApi();\r\n\r\n  return track(() => getSites());\r\n});\r\n\r\nexport const useCompanies = memoize(() => {\r\n  const { getCompanies } = useLoginApi();\r\n\r\n  return track(() => getCompanies());\r\n});\r\n\r\nexport const useAreas = memoize(() => {\r\n  const { getAreas } = useLoginApi();\r\n\r\n  return track(() => getAreas());\r\n});\r\n\r\nexport const useRams = memoize(() => {\r\n  const { getRams } = useLoginApi();\r\n\r\n  const rams = track(() => getRams().pipe(\r\n    map(rams => rams.map(r => ({\r\n      ...r,\r\n      ExpiryDate: r.ExpiryDate?.toDate()\r\n    })))\r\n  ));\r\n\r\n  return {\r\n    ...rams,\r\n    thatArentExpiredToday: rams.data(items => items.filter(item => item.ExpiryDate == null || item.ExpiryDate.isEqualOrAfterToday()))\r\n  }\r\n});\r\n\r\n\r\nexport const useCategoryActioners = memoize((categoryId: Nullable<number>) => {\r\n  const loginApi = useLoginApi();\r\n\r\n  return track(() => categoryId != null \r\n    ? loginApi.getCategoryActioners({ categoryId })\r\n    : new BehaviorSubject([]))\r\n});\r\n\r\nexport const useResAreaTypes = memoize(() => {\r\n  const { getResAreaTypes } = useLoginApi();\r\n\r\n  const resAreaTypes = track(() => getResAreaTypes());\r\n\r\n  return {\r\n    ...resAreaTypes,\r\n    find: (predicate: (value: ResponsibilityAreaType, index: number) => boolean) => resAreaTypes.data(types => types.find(predicate)),\r\n    areas: resAreaTypes.data(types => types.flatMap(t => t.Areas))\r\n  }\r\n})",
            "properties": [
                {
                    "name": "AppQuestionText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "Areas",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ResponsibilityArea[]",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "Id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "TypeName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ResponsibilityAreaType",
            "id": "interface-ResponsibilityAreaType-939de3da069ba66b6240a9296476df2f670a51cbe802dc1846bbf6fbfea2389c84b5753e87e9023e3428fa08653289eeb418e48939e792a252b3ed0722c45877-1",
            "file": "src/app/core/stores/responsibility-area-types/responsibility-area-types.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\";\r\nimport { createStore } from \"@ngneat/elf\";\r\nimport { selectAllEntities, withEntities } from \"@ngneat/elf-entities\";\r\nimport { map } from \"rxjs\";\r\n\r\nexport interface ResponsibilityArea {\r\n  Id: number,\r\n  Name: string,\r\n  DocResAreaTypeId: number,\r\n  SiteId?: number\r\n}\r\n\r\nexport interface ResponsibilityAreaType {\r\n  Id: number,\r\n  TypeName: string,\r\n  AppQuestionText: string,\r\n  Areas: ResponsibilityArea[]\r\n}\r\n\r\nconst store = createStore(\r\n  { name: \"responsibility-area-types\" },\r\n  withEntities<ResponsibilityAreaType, \"Id\">({ idKey: \"Id\" })\r\n);\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class ResponsibilityAreaTypesStore {\r\n  responsibilityAreaTypes$ = store.pipe(selectAllEntities());\r\n  responsibilityAreaTypeById$ = (id: number) => this.responsibilityAreaTypes$.pipe(\r\n    map(resAreaTypes => resAreaTypes.find(t => t.Id === id))\r\n  );\r\n}\r\n",
            "properties": [
                {
                    "name": "AppQuestionText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "Areas",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ResponsibilityArea[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "Id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "TypeName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "ResponsibilityAreaType-1"
        },
        {
            "name": "SearchEntitiesType",
            "id": "interface-SearchEntitiesType-2e50ce7c6b5b004936ea8217210e3b1cc5b95e2c9e42c273120bfac43a66bb250c30427e91b8d2c9d2092689922f548e964925711c3f829e3ce66985d78aa119",
            "file": "src/app/shared/states/search-results.adapter.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Store, StoreDef } from \"@ngneat/elf\";\r\nimport { entitiesPropsFactory, selectAllEntities, setEntities } from \"@ngneat/elf-entities\";\r\nimport { pipeTap } from \"../rxjs\";\r\n\r\nconst { SearchResultEntitiesRef, withSearchResultEntities } = entitiesPropsFactory(\"SearchResult\")\r\n\r\nexport interface SearchEntitiesType<TResult> {\r\n  SearchResultEntities: Record<number, TResult>,\r\n  SearchResultIds: number[]\r\n}\r\n\r\nfunction searchResultsAdapt<TResult, TState extends SearchEntitiesType<TResult>>(store: Store<StoreDef<TState>>) {\r\n  return {\r\n    searchResults$: () => store.pipe(selectAllEntities({ ref: SearchResultEntitiesRef })),\r\n    setSearchResults: pipeTap<TResult[]>(results => store.update(\r\n      setEntities(results, { ref: SearchResultEntitiesRef })\r\n    ))\r\n  }\r\n}\r\n\r\nexport function searchResultsAdapter() {\r\n  return {\r\n    SearchResultEntitiesRef,\r\n    withSearchResultEntities,\r\n    searchResultsAdapt\r\n  }\r\n}",
            "properties": [
                {
                    "name": "SearchResultEntities",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<number | TResult>",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "SearchResultIds",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Section",
            "id": "interface-Section-c7959f7440ffcc3f7e62a4ddc4c7de3b0161d7b2e791d3c870e61d9c7beefced3f38a328f62f1a879861bd7f2b720c6a0a83bd38547d74e5da6d4aabfde0f9ba",
            "file": "src/app/core/stores/site-document/models/site-document.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { PointGroup } from \"signature_pad\";\r\n\r\nexport interface SiteDocument {\r\n  DocumentID: number;\r\n  DocumentTitle: string;\r\n  Subtitle: string;\r\n  Preamble: string;\r\n  Pinned: boolean;\r\n  Pages: Page[];\r\n  AllowAnon: boolean;\r\n  RemainAnon: boolean;\r\n  ChildTemplateID: number;\r\n  Queues: Queue[],\r\n  DocumentGroup: string;\r\n  DocumentCategory?: number;\r\n  CanCreateHotspot: boolean;\r\n  CanBeAddedToHotspot?: boolean;\r\n  CanBeSavedAsDraft?: boolean;\r\n  CanAddActionerFromApp: boolean;\r\n  CanAddCategoryActioner: boolean;\r\n  CanCreateAssetsFromDocument: boolean;\r\n  CanHaveQueueDuration: boolean;\r\n  CanHaveDocumentLevelImages: boolean;\r\n  CanHaveDocLevelPhotoRoll: boolean;\r\n  CurrentActionerOperativeID?: number;\r\n  CompanyActionerId?: number;\r\n  ShowDocLevelPhotoButtonAtStartOfDoc: boolean;\r\n  CanAddAsset?: boolean;\r\n  CanAddOperative?: boolean;\r\n  CanHaveCompanyActioner: boolean;\r\n  MetaData: Partial<SiteDocumentMetaData>;\r\n  SiteDocumentType: number,\r\n  SiteId?: number;\r\n  AutoQueueID?: number;\r\n  QueueDuration?: QueueDuration;\r\n  DocumentResponsibilityAreaTypeId?: number;\r\n  DocumentResponsibilityAreaId?: number;\r\n  ReqGps: boolean;\r\n  PageIdx: number;\r\n  Images: string[];\r\n}\r\n\r\nexport interface Queue {\r\n  Id: number,\r\n  Name: string\r\n}\r\n\r\nexport interface QueueDuration {\r\n  Value: number;\r\n  Type: \"Mins\" | \"Hours\" | \"Days\";\r\n}\r\n\r\nexport interface SiteDocumentImage {\r\n  Id: string,\r\n  DocumentId: number,\r\n  Base64: string,\r\n}\r\n\r\nexport interface SiteDocumentMetaData {\r\n  ActionerText: string;\r\n  CanBeEditableDocument: boolean;\r\n  CannotAddSelfAsActioner: boolean;\r\n  ColourHex: string;\r\n  QueueSelectorTitle: string;\r\n  HasSiteList: boolean;\r\n  SiteListTitle: string;\r\n  UsesRadioGroupTable: boolean;\r\n}\r\n\r\nexport interface SiteDocumentAsset {\r\n  AssetID: number;\r\n  Tag: string;\r\n  Name: string;\r\n  QRCode?: string;\r\n  TemplateID?: number;\r\n}\r\n\r\nexport interface SiteDocumentOperative {\r\n  AttendeeID: number;\r\n  Name: string;\r\n  DateAttended: Date;\r\n}\r\n\r\nexport interface Page {\r\n  PageID: number;\r\n  PageTitle: string;\r\n  PageNo: number;\r\n  Sections: Section[];\r\n  Hidden: boolean;\r\n}\r\n\r\nexport interface Section {\r\n  SectionID: number;\r\n  SectionNo: number;\r\n  SectionTitle: string;\r\n  Questions: Question[];\r\n  SectionQuestiontype: QuestionType;\r\n  IsRepeatable: boolean;\r\n  TableTitles: string[];\r\n  Hidden: boolean;\r\n}\r\n\r\nexport enum QuestionType {\r\n  Label = 0,\r\n  Checkbox = 1,\r\n  RadioGroup = 2,\r\n  Textbox = 3,\r\n  TextArea = 4,\r\n  Select = 5,\r\n  CheckboxTextbox = 6,\r\n  RadioGroupTextbox = 7,\r\n  Date = 8,\r\n  DateTime = 9,\r\n  OperativeList = 10,\r\n  WallOfText = 11,\r\n  Number = 12,\r\n  CascadeDropdown = 13,\r\n  LinkedBool = 16,\r\n  AssetList = 17,\r\n  LinkedDates = 18,\r\n  Signature = 19,\r\n  CompanySelect = 21,\r\n  AreaSelect = 22,\r\n  AssetGroupsAndTypes = 25,\r\n  AssetInspectionSchedule = 26,\r\n  ProjectSelect = 27,\r\n  RamsSelect = 28,\r\n  SelectText = 29,\r\n  CascadeDropdownText = 30,\r\n  MultiCascade = 31,\r\n  Time = 32,\r\n  LinkedTimes = 33,\r\n  HraSelect = 34,\r\n  MultiCheckbox = 35,\r\n  LinkedDateAndTime = 36\r\n}\r\n\r\nexport interface Question {\r\n  QuestionID: number;\r\n  QuestionText: string;\r\n  CascadeOptionsText: string;\r\n  CommentsText: string;\r\n  Assets: SiteDocumentAsset[];\r\n  Operatives: SiteDocumentOperative[];\r\n  Required: boolean;\r\n  AnswerText: string;\r\n  AdditionalText?: string;\r\n  MoreAdditionalText?: string;\r\n  DateAndTime: Nullable<Date>;\r\n  DateAndTime2: Nullable<Date>;\r\n  NumberVal?: number;\r\n  OptionVal?: string | null;\r\n  SelectedOptionText?: Nullable<string>;\r\n  SelectedCascadeOptionText?: Nullable<string>;\r\n  File?: Nullable<string>;\r\n  Img?: Nullable<string>;\r\n  AnswerOptions: SelectOption[];\r\n  CascadeOptions: CascadeOption[];\r\n  CascadeOptionVal?: string | null;\r\n  YesNoNA: boolean | null;\r\n  CanHaveImg: boolean;\r\n  CanHaveFiles: boolean;\r\n  CanUsePhotoLib: boolean;\r\n  SignatureArray?: number[];\r\n  SignaturePoints?: PointGroup[];\r\n  SignatureDataUrl?: string;\r\n  ValidationData: ValidationData[];\r\n  Hidden: boolean;\r\n  Disabled?: boolean;\r\n}\r\n\r\nexport function useValidationData(rules: ValidationData[]) {\r\n  const min = rules.find(r => r.Key === \"Min\")?.Value.toNumber();\r\n  const max = rules.find(r => r.Key === \"Max\")?.Value.toNumber();\r\n\r\n  return {\r\n    min,\r\n    max\r\n  }\r\n}\r\n\r\nexport function minDate(question: Question) {\r\n  const min = question.ValidationData.find(r => r.Key === \"Min\")?.Value.toNumber();\r\n\r\n  return min != null\r\n    ? new Date().subtrackHours(min)\r\n    : null;\r\n}\r\n\r\nexport function maxDate(question: Question) {\r\n  const max = question.ValidationData.find(r => r.Key === \"Max\")?.Value.toNumber();\r\n\r\n  return max != null\r\n    ? new Date().addHours(max)\r\n    : null;\r\n}\r\n\r\nexport function spreadDate(question: Question) {\r\n  const spread = question.ValidationData.find(r => r.Key === \"Spread\")?.Value.toNumber();\r\n  const max = question.ValidationData.find(r => r.Key === \"Max\")?.Value.toNumber();  \r\n\r\n  const hours = spread != null && max != null\r\n    ? spread > max\r\n      ? spread\r\n      : max\r\n    : spread != null\r\n      ? spread\r\n      : max;\r\n\r\n  return hours != null\r\n    ? new Date().addHours(hours)\r\n    : null;\r\n}\r\n\r\nexport interface ValidationData {\r\n  Key: \"Min\" | \"Max\" | \"Spread\",\r\n  Value: string,\r\n  Msg: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  Active?: boolean;\r\n  Text: string;\r\n  Val: string;\r\n  MetaData?: any;\r\n  OptionsMetadataJson?: string;\r\n}\r\n\r\nexport interface SelectOptionMetaData {\r\n  ColourHex?: string;\r\n}\r\n\r\nexport interface CascadeOption { \r\n  ParentVal: string, \r\n  Text: string, \r\n  Val: string \r\n}",
            "properties": [
                {
                    "name": "Hidden",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 100
                },
                {
                    "name": "IsRepeatable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 98
                },
                {
                    "name": "Questions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Question[]",
                    "optional": false,
                    "description": "",
                    "line": 96
                },
                {
                    "name": "SectionID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 93
                },
                {
                    "name": "SectionNo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 94
                },
                {
                    "name": "SectionQuestiontype",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QuestionType",
                    "optional": false,
                    "description": "",
                    "line": 97
                },
                {
                    "name": "SectionTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 95
                },
                {
                    "name": "TableTitles",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 99
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "SelectOption",
            "id": "interface-SelectOption-c7959f7440ffcc3f7e62a4ddc4c7de3b0161d7b2e791d3c870e61d9c7beefced3f38a328f62f1a879861bd7f2b720c6a0a83bd38547d74e5da6d4aabfde0f9ba",
            "file": "src/app/core/stores/site-document/models/site-document.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { PointGroup } from \"signature_pad\";\r\n\r\nexport interface SiteDocument {\r\n  DocumentID: number;\r\n  DocumentTitle: string;\r\n  Subtitle: string;\r\n  Preamble: string;\r\n  Pinned: boolean;\r\n  Pages: Page[];\r\n  AllowAnon: boolean;\r\n  RemainAnon: boolean;\r\n  ChildTemplateID: number;\r\n  Queues: Queue[],\r\n  DocumentGroup: string;\r\n  DocumentCategory?: number;\r\n  CanCreateHotspot: boolean;\r\n  CanBeAddedToHotspot?: boolean;\r\n  CanBeSavedAsDraft?: boolean;\r\n  CanAddActionerFromApp: boolean;\r\n  CanAddCategoryActioner: boolean;\r\n  CanCreateAssetsFromDocument: boolean;\r\n  CanHaveQueueDuration: boolean;\r\n  CanHaveDocumentLevelImages: boolean;\r\n  CanHaveDocLevelPhotoRoll: boolean;\r\n  CurrentActionerOperativeID?: number;\r\n  CompanyActionerId?: number;\r\n  ShowDocLevelPhotoButtonAtStartOfDoc: boolean;\r\n  CanAddAsset?: boolean;\r\n  CanAddOperative?: boolean;\r\n  CanHaveCompanyActioner: boolean;\r\n  MetaData: Partial<SiteDocumentMetaData>;\r\n  SiteDocumentType: number,\r\n  SiteId?: number;\r\n  AutoQueueID?: number;\r\n  QueueDuration?: QueueDuration;\r\n  DocumentResponsibilityAreaTypeId?: number;\r\n  DocumentResponsibilityAreaId?: number;\r\n  ReqGps: boolean;\r\n  PageIdx: number;\r\n  Images: string[];\r\n}\r\n\r\nexport interface Queue {\r\n  Id: number,\r\n  Name: string\r\n}\r\n\r\nexport interface QueueDuration {\r\n  Value: number;\r\n  Type: \"Mins\" | \"Hours\" | \"Days\";\r\n}\r\n\r\nexport interface SiteDocumentImage {\r\n  Id: string,\r\n  DocumentId: number,\r\n  Base64: string,\r\n}\r\n\r\nexport interface SiteDocumentMetaData {\r\n  ActionerText: string;\r\n  CanBeEditableDocument: boolean;\r\n  CannotAddSelfAsActioner: boolean;\r\n  ColourHex: string;\r\n  QueueSelectorTitle: string;\r\n  HasSiteList: boolean;\r\n  SiteListTitle: string;\r\n  UsesRadioGroupTable: boolean;\r\n}\r\n\r\nexport interface SiteDocumentAsset {\r\n  AssetID: number;\r\n  Tag: string;\r\n  Name: string;\r\n  QRCode?: string;\r\n  TemplateID?: number;\r\n}\r\n\r\nexport interface SiteDocumentOperative {\r\n  AttendeeID: number;\r\n  Name: string;\r\n  DateAttended: Date;\r\n}\r\n\r\nexport interface Page {\r\n  PageID: number;\r\n  PageTitle: string;\r\n  PageNo: number;\r\n  Sections: Section[];\r\n  Hidden: boolean;\r\n}\r\n\r\nexport interface Section {\r\n  SectionID: number;\r\n  SectionNo: number;\r\n  SectionTitle: string;\r\n  Questions: Question[];\r\n  SectionQuestiontype: QuestionType;\r\n  IsRepeatable: boolean;\r\n  TableTitles: string[];\r\n  Hidden: boolean;\r\n}\r\n\r\nexport enum QuestionType {\r\n  Label = 0,\r\n  Checkbox = 1,\r\n  RadioGroup = 2,\r\n  Textbox = 3,\r\n  TextArea = 4,\r\n  Select = 5,\r\n  CheckboxTextbox = 6,\r\n  RadioGroupTextbox = 7,\r\n  Date = 8,\r\n  DateTime = 9,\r\n  OperativeList = 10,\r\n  WallOfText = 11,\r\n  Number = 12,\r\n  CascadeDropdown = 13,\r\n  LinkedBool = 16,\r\n  AssetList = 17,\r\n  LinkedDates = 18,\r\n  Signature = 19,\r\n  CompanySelect = 21,\r\n  AreaSelect = 22,\r\n  AssetGroupsAndTypes = 25,\r\n  AssetInspectionSchedule = 26,\r\n  ProjectSelect = 27,\r\n  RamsSelect = 28,\r\n  SelectText = 29,\r\n  CascadeDropdownText = 30,\r\n  MultiCascade = 31,\r\n  Time = 32,\r\n  LinkedTimes = 33,\r\n  HraSelect = 34,\r\n  MultiCheckbox = 35,\r\n  LinkedDateAndTime = 36\r\n}\r\n\r\nexport interface Question {\r\n  QuestionID: number;\r\n  QuestionText: string;\r\n  CascadeOptionsText: string;\r\n  CommentsText: string;\r\n  Assets: SiteDocumentAsset[];\r\n  Operatives: SiteDocumentOperative[];\r\n  Required: boolean;\r\n  AnswerText: string;\r\n  AdditionalText?: string;\r\n  MoreAdditionalText?: string;\r\n  DateAndTime: Nullable<Date>;\r\n  DateAndTime2: Nullable<Date>;\r\n  NumberVal?: number;\r\n  OptionVal?: string | null;\r\n  SelectedOptionText?: Nullable<string>;\r\n  SelectedCascadeOptionText?: Nullable<string>;\r\n  File?: Nullable<string>;\r\n  Img?: Nullable<string>;\r\n  AnswerOptions: SelectOption[];\r\n  CascadeOptions: CascadeOption[];\r\n  CascadeOptionVal?: string | null;\r\n  YesNoNA: boolean | null;\r\n  CanHaveImg: boolean;\r\n  CanHaveFiles: boolean;\r\n  CanUsePhotoLib: boolean;\r\n  SignatureArray?: number[];\r\n  SignaturePoints?: PointGroup[];\r\n  SignatureDataUrl?: string;\r\n  ValidationData: ValidationData[];\r\n  Hidden: boolean;\r\n  Disabled?: boolean;\r\n}\r\n\r\nexport function useValidationData(rules: ValidationData[]) {\r\n  const min = rules.find(r => r.Key === \"Min\")?.Value.toNumber();\r\n  const max = rules.find(r => r.Key === \"Max\")?.Value.toNumber();\r\n\r\n  return {\r\n    min,\r\n    max\r\n  }\r\n}\r\n\r\nexport function minDate(question: Question) {\r\n  const min = question.ValidationData.find(r => r.Key === \"Min\")?.Value.toNumber();\r\n\r\n  return min != null\r\n    ? new Date().subtrackHours(min)\r\n    : null;\r\n}\r\n\r\nexport function maxDate(question: Question) {\r\n  const max = question.ValidationData.find(r => r.Key === \"Max\")?.Value.toNumber();\r\n\r\n  return max != null\r\n    ? new Date().addHours(max)\r\n    : null;\r\n}\r\n\r\nexport function spreadDate(question: Question) {\r\n  const spread = question.ValidationData.find(r => r.Key === \"Spread\")?.Value.toNumber();\r\n  const max = question.ValidationData.find(r => r.Key === \"Max\")?.Value.toNumber();  \r\n\r\n  const hours = spread != null && max != null\r\n    ? spread > max\r\n      ? spread\r\n      : max\r\n    : spread != null\r\n      ? spread\r\n      : max;\r\n\r\n  return hours != null\r\n    ? new Date().addHours(hours)\r\n    : null;\r\n}\r\n\r\nexport interface ValidationData {\r\n  Key: \"Min\" | \"Max\" | \"Spread\",\r\n  Value: string,\r\n  Msg: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  Active?: boolean;\r\n  Text: string;\r\n  Val: string;\r\n  MetaData?: any;\r\n  OptionsMetadataJson?: string;\r\n}\r\n\r\nexport interface SelectOptionMetaData {\r\n  ColourHex?: string;\r\n}\r\n\r\nexport interface CascadeOption { \r\n  ParentVal: string, \r\n  Text: string, \r\n  Val: string \r\n}",
            "properties": [
                {
                    "name": "Active",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 222
                },
                {
                    "name": "MetaData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 225
                },
                {
                    "name": "OptionsMetadataJson",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 226
                },
                {
                    "name": "Text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 223
                },
                {
                    "name": "Val",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 224
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "SelectOptionMetaData",
            "id": "interface-SelectOptionMetaData-c7959f7440ffcc3f7e62a4ddc4c7de3b0161d7b2e791d3c870e61d9c7beefced3f38a328f62f1a879861bd7f2b720c6a0a83bd38547d74e5da6d4aabfde0f9ba",
            "file": "src/app/core/stores/site-document/models/site-document.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { PointGroup } from \"signature_pad\";\r\n\r\nexport interface SiteDocument {\r\n  DocumentID: number;\r\n  DocumentTitle: string;\r\n  Subtitle: string;\r\n  Preamble: string;\r\n  Pinned: boolean;\r\n  Pages: Page[];\r\n  AllowAnon: boolean;\r\n  RemainAnon: boolean;\r\n  ChildTemplateID: number;\r\n  Queues: Queue[],\r\n  DocumentGroup: string;\r\n  DocumentCategory?: number;\r\n  CanCreateHotspot: boolean;\r\n  CanBeAddedToHotspot?: boolean;\r\n  CanBeSavedAsDraft?: boolean;\r\n  CanAddActionerFromApp: boolean;\r\n  CanAddCategoryActioner: boolean;\r\n  CanCreateAssetsFromDocument: boolean;\r\n  CanHaveQueueDuration: boolean;\r\n  CanHaveDocumentLevelImages: boolean;\r\n  CanHaveDocLevelPhotoRoll: boolean;\r\n  CurrentActionerOperativeID?: number;\r\n  CompanyActionerId?: number;\r\n  ShowDocLevelPhotoButtonAtStartOfDoc: boolean;\r\n  CanAddAsset?: boolean;\r\n  CanAddOperative?: boolean;\r\n  CanHaveCompanyActioner: boolean;\r\n  MetaData: Partial<SiteDocumentMetaData>;\r\n  SiteDocumentType: number,\r\n  SiteId?: number;\r\n  AutoQueueID?: number;\r\n  QueueDuration?: QueueDuration;\r\n  DocumentResponsibilityAreaTypeId?: number;\r\n  DocumentResponsibilityAreaId?: number;\r\n  ReqGps: boolean;\r\n  PageIdx: number;\r\n  Images: string[];\r\n}\r\n\r\nexport interface Queue {\r\n  Id: number,\r\n  Name: string\r\n}\r\n\r\nexport interface QueueDuration {\r\n  Value: number;\r\n  Type: \"Mins\" | \"Hours\" | \"Days\";\r\n}\r\n\r\nexport interface SiteDocumentImage {\r\n  Id: string,\r\n  DocumentId: number,\r\n  Base64: string,\r\n}\r\n\r\nexport interface SiteDocumentMetaData {\r\n  ActionerText: string;\r\n  CanBeEditableDocument: boolean;\r\n  CannotAddSelfAsActioner: boolean;\r\n  ColourHex: string;\r\n  QueueSelectorTitle: string;\r\n  HasSiteList: boolean;\r\n  SiteListTitle: string;\r\n  UsesRadioGroupTable: boolean;\r\n}\r\n\r\nexport interface SiteDocumentAsset {\r\n  AssetID: number;\r\n  Tag: string;\r\n  Name: string;\r\n  QRCode?: string;\r\n  TemplateID?: number;\r\n}\r\n\r\nexport interface SiteDocumentOperative {\r\n  AttendeeID: number;\r\n  Name: string;\r\n  DateAttended: Date;\r\n}\r\n\r\nexport interface Page {\r\n  PageID: number;\r\n  PageTitle: string;\r\n  PageNo: number;\r\n  Sections: Section[];\r\n  Hidden: boolean;\r\n}\r\n\r\nexport interface Section {\r\n  SectionID: number;\r\n  SectionNo: number;\r\n  SectionTitle: string;\r\n  Questions: Question[];\r\n  SectionQuestiontype: QuestionType;\r\n  IsRepeatable: boolean;\r\n  TableTitles: string[];\r\n  Hidden: boolean;\r\n}\r\n\r\nexport enum QuestionType {\r\n  Label = 0,\r\n  Checkbox = 1,\r\n  RadioGroup = 2,\r\n  Textbox = 3,\r\n  TextArea = 4,\r\n  Select = 5,\r\n  CheckboxTextbox = 6,\r\n  RadioGroupTextbox = 7,\r\n  Date = 8,\r\n  DateTime = 9,\r\n  OperativeList = 10,\r\n  WallOfText = 11,\r\n  Number = 12,\r\n  CascadeDropdown = 13,\r\n  LinkedBool = 16,\r\n  AssetList = 17,\r\n  LinkedDates = 18,\r\n  Signature = 19,\r\n  CompanySelect = 21,\r\n  AreaSelect = 22,\r\n  AssetGroupsAndTypes = 25,\r\n  AssetInspectionSchedule = 26,\r\n  ProjectSelect = 27,\r\n  RamsSelect = 28,\r\n  SelectText = 29,\r\n  CascadeDropdownText = 30,\r\n  MultiCascade = 31,\r\n  Time = 32,\r\n  LinkedTimes = 33,\r\n  HraSelect = 34,\r\n  MultiCheckbox = 35,\r\n  LinkedDateAndTime = 36\r\n}\r\n\r\nexport interface Question {\r\n  QuestionID: number;\r\n  QuestionText: string;\r\n  CascadeOptionsText: string;\r\n  CommentsText: string;\r\n  Assets: SiteDocumentAsset[];\r\n  Operatives: SiteDocumentOperative[];\r\n  Required: boolean;\r\n  AnswerText: string;\r\n  AdditionalText?: string;\r\n  MoreAdditionalText?: string;\r\n  DateAndTime: Nullable<Date>;\r\n  DateAndTime2: Nullable<Date>;\r\n  NumberVal?: number;\r\n  OptionVal?: string | null;\r\n  SelectedOptionText?: Nullable<string>;\r\n  SelectedCascadeOptionText?: Nullable<string>;\r\n  File?: Nullable<string>;\r\n  Img?: Nullable<string>;\r\n  AnswerOptions: SelectOption[];\r\n  CascadeOptions: CascadeOption[];\r\n  CascadeOptionVal?: string | null;\r\n  YesNoNA: boolean | null;\r\n  CanHaveImg: boolean;\r\n  CanHaveFiles: boolean;\r\n  CanUsePhotoLib: boolean;\r\n  SignatureArray?: number[];\r\n  SignaturePoints?: PointGroup[];\r\n  SignatureDataUrl?: string;\r\n  ValidationData: ValidationData[];\r\n  Hidden: boolean;\r\n  Disabled?: boolean;\r\n}\r\n\r\nexport function useValidationData(rules: ValidationData[]) {\r\n  const min = rules.find(r => r.Key === \"Min\")?.Value.toNumber();\r\n  const max = rules.find(r => r.Key === \"Max\")?.Value.toNumber();\r\n\r\n  return {\r\n    min,\r\n    max\r\n  }\r\n}\r\n\r\nexport function minDate(question: Question) {\r\n  const min = question.ValidationData.find(r => r.Key === \"Min\")?.Value.toNumber();\r\n\r\n  return min != null\r\n    ? new Date().subtrackHours(min)\r\n    : null;\r\n}\r\n\r\nexport function maxDate(question: Question) {\r\n  const max = question.ValidationData.find(r => r.Key === \"Max\")?.Value.toNumber();\r\n\r\n  return max != null\r\n    ? new Date().addHours(max)\r\n    : null;\r\n}\r\n\r\nexport function spreadDate(question: Question) {\r\n  const spread = question.ValidationData.find(r => r.Key === \"Spread\")?.Value.toNumber();\r\n  const max = question.ValidationData.find(r => r.Key === \"Max\")?.Value.toNumber();  \r\n\r\n  const hours = spread != null && max != null\r\n    ? spread > max\r\n      ? spread\r\n      : max\r\n    : spread != null\r\n      ? spread\r\n      : max;\r\n\r\n  return hours != null\r\n    ? new Date().addHours(hours)\r\n    : null;\r\n}\r\n\r\nexport interface ValidationData {\r\n  Key: \"Min\" | \"Max\" | \"Spread\",\r\n  Value: string,\r\n  Msg: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  Active?: boolean;\r\n  Text: string;\r\n  Val: string;\r\n  MetaData?: any;\r\n  OptionsMetadataJson?: string;\r\n}\r\n\r\nexport interface SelectOptionMetaData {\r\n  ColourHex?: string;\r\n}\r\n\r\nexport interface CascadeOption { \r\n  ParentVal: string, \r\n  Text: string, \r\n  Val: string \r\n}",
            "properties": [
                {
                    "name": "ColourHex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 230
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Site",
            "id": "interface-Site-853a61b57e97b1015338c1b3ad545ff7256fef0ca9acee4db5fd449e1c7e81fa68592cbea8c7e1b7dbac8501a6598d2487ebbfe41af8e6a90d93a03da6fa4117",
            "file": "src/app/core/stores/user/user.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\r\nimport { inject, Injectable } from \"@angular/core\";\r\nimport { createStore, propsFactory } from \"@ngneat/elf\";\r\nimport { localStorageStrategy, persistState } from \"@ngneat/elf-persist-state\";\r\nimport { combineLatest, Observable, switchMap } from \"rxjs\";\r\nimport { getDeviceString, getDeviceUuid } from \"src/app/shared/plugins/device.plugin\";\r\nimport { pipeTap, selector } from \"src/app/shared/rxjs\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\nexport interface User {\r\n  Id: number,\r\n  LastName: string,\r\n  FirstName: string,\r\n  CompanyId: number,\r\n  CompanyName: string,\r\n  Colour: string,\r\n  FontColour: string,\r\n  Token: string,\r\n  Pin: string,\r\n  Site: Site,\r\n  DocumentListingTab: \"Recent\" | \"Pinned\" | \"Issued\",\r\n  IsInSupervisorRole: boolean,\r\n  HasRegisteredPlayerId: number,\r\n  HasAssets: boolean,\r\n  HasAssetCreation: boolean,\r\n  HasDocQrCodes: boolean,\r\n  HasHadWifiPreferenceChecked: boolean,\r\n  HasUpdateableDocs: boolean,\r\n  HasDocQueues: boolean,\r\n  HasCompanies: boolean,\r\n  HasDataTouchAreas: boolean,\r\n  HasQueueSupervisors: boolean,\r\n  HasCategoryActioners: boolean,\r\n  UserSites: Site[],\r\n  UserCompanies: Company[],\r\n  HasPlanningMeeting: boolean,\r\n  HasReviewMeeting: boolean,\r\n  HasCollabPlanning: boolean,\r\n  HasRandomOperativebarcodes: boolean,\r\n  HasLiveQueues: boolean,\r\n  HasResAreas:boolean,\r\n  HasHideOperativeScan: boolean,\r\n  HasSites: boolean,\r\n  HasDocDrop: boolean,\r\n  HasBasicOpInfo: boolean,\r\n  HasSimpleSwipes: boolean,\r\n  HasProjectsOnDocDrop: boolean,\r\n  HasCustomLookups: boolean,\r\n  HasTemplateSender: boolean,\r\n  HasMyOpInfo: boolean,\r\n  HasViewDocumentAsSinglePage: boolean,\r\n  HasShowParentAnswersOnChildDoc: boolean,\r\n  HasCompanySelectWithOtherOption:boolean,\r\n  HideSearchOnOperativeInfo: boolean,\r\n  HideSearchOnOperativeAccess: boolean,\r\n  CanAddOperativesToDocsByName: boolean,\r\n  HasRamsList: boolean,\r\n  CanAddAsssetsToDocsByName: boolean,\r\n  ShowWeightingsOnApp: boolean,\r\n  TemplatesLastUpdate: Date,\r\n  Url: string,\r\n  UseFingerReader: boolean,\r\n  SelectedSite?: Site,\r\n  NavTab: \"Modules\" | \"Documents\",\r\n  NumberOfTemplates: number,\r\n  DownloadedTemplates: number,\r\n  //PermittedCategories: DocCategory[],\r\n  HasOperativeInfo: boolean,\r\n  CanOffHireAssets: boolean,\r\n  CanViewOtherOperativeInfo: boolean,\r\n  CanModifyOperativeQRs: boolean,\r\n  CanAddQRsToAssets: boolean\r\n}\r\n\r\nexport interface Site {\r\n  Id: number,\r\n  Name: string\r\n}\r\n\r\nexport interface Company {\r\n  Id: number,\r\n  Name: string\r\n}\r\n\r\nexport interface Area {\r\n  Id: number,\r\n  SiteId: number,\r\n  Name: string\r\n}\r\n\r\nconst {\r\n  withAppUser, \r\n  selectAppUser, \r\n  setAppUser\r\n} = propsFactory(\"appUser\", { initialValue: null as User | null });\r\n\r\nconst store = createStore(\r\n  { name: \"user\" },\r\n  withAppUser()\r\n);\r\n\r\nconst userSelector = selector(store.pipe(selectAppUser()));\r\nconst sites$ = userSelector(user => user?.UserSites || []);\r\n\r\nconst setAppUserUpdate = pipeTap<User>(user => store.update(setAppUser(user)));\r\n\r\npersistState(store, {\r\n  key: \"user\",\r\n  storage: localStorageStrategy\r\n});\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class UserStore {\r\n  httpClient = inject(HttpClient);\r\n\r\n  user$ = store.pipe(selectAppUser());\r\n  sites$ = sites$;\r\n  companies$ = userSelector(user => user?.UserCompanies || []);\r\n\r\n  getUserRequest$ = (action$: Observable<{ token: string, pin: string }>) => combineLatest({\r\n    login: action$,\r\n    deviceId: getDeviceUuid(),\r\n    deviceString: getDeviceString() \r\n  }).pipe(\r\n    switchMap(({ login, deviceId, deviceString }) => this.httpClient.post<User>(`${environment.siteDocsApi}/LoginApi/LoginSiteDocumentsApp`, {\r\n      deviceId,\r\n      deviceString\r\n    }, {\r\n      headers: {\r\n        appToken: login.token,\r\n        appPin: login.pin\r\n      }\r\n    })),\r\n    setAppUserUpdate()\r\n  );\r\n}",
            "properties": [
                {
                    "name": "Id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 76
                },
                {
                    "name": "Name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 77
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "SiteDocument",
            "id": "interface-SiteDocument-c7959f7440ffcc3f7e62a4ddc4c7de3b0161d7b2e791d3c870e61d9c7beefced3f38a328f62f1a879861bd7f2b720c6a0a83bd38547d74e5da6d4aabfde0f9ba",
            "file": "src/app/core/stores/site-document/models/site-document.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { PointGroup } from \"signature_pad\";\r\n\r\nexport interface SiteDocument {\r\n  DocumentID: number;\r\n  DocumentTitle: string;\r\n  Subtitle: string;\r\n  Preamble: string;\r\n  Pinned: boolean;\r\n  Pages: Page[];\r\n  AllowAnon: boolean;\r\n  RemainAnon: boolean;\r\n  ChildTemplateID: number;\r\n  Queues: Queue[],\r\n  DocumentGroup: string;\r\n  DocumentCategory?: number;\r\n  CanCreateHotspot: boolean;\r\n  CanBeAddedToHotspot?: boolean;\r\n  CanBeSavedAsDraft?: boolean;\r\n  CanAddActionerFromApp: boolean;\r\n  CanAddCategoryActioner: boolean;\r\n  CanCreateAssetsFromDocument: boolean;\r\n  CanHaveQueueDuration: boolean;\r\n  CanHaveDocumentLevelImages: boolean;\r\n  CanHaveDocLevelPhotoRoll: boolean;\r\n  CurrentActionerOperativeID?: number;\r\n  CompanyActionerId?: number;\r\n  ShowDocLevelPhotoButtonAtStartOfDoc: boolean;\r\n  CanAddAsset?: boolean;\r\n  CanAddOperative?: boolean;\r\n  CanHaveCompanyActioner: boolean;\r\n  MetaData: Partial<SiteDocumentMetaData>;\r\n  SiteDocumentType: number,\r\n  SiteId?: number;\r\n  AutoQueueID?: number;\r\n  QueueDuration?: QueueDuration;\r\n  DocumentResponsibilityAreaTypeId?: number;\r\n  DocumentResponsibilityAreaId?: number;\r\n  ReqGps: boolean;\r\n  PageIdx: number;\r\n  Images: string[];\r\n}\r\n\r\nexport interface Queue {\r\n  Id: number,\r\n  Name: string\r\n}\r\n\r\nexport interface QueueDuration {\r\n  Value: number;\r\n  Type: \"Mins\" | \"Hours\" | \"Days\";\r\n}\r\n\r\nexport interface SiteDocumentImage {\r\n  Id: string,\r\n  DocumentId: number,\r\n  Base64: string,\r\n}\r\n\r\nexport interface SiteDocumentMetaData {\r\n  ActionerText: string;\r\n  CanBeEditableDocument: boolean;\r\n  CannotAddSelfAsActioner: boolean;\r\n  ColourHex: string;\r\n  QueueSelectorTitle: string;\r\n  HasSiteList: boolean;\r\n  SiteListTitle: string;\r\n  UsesRadioGroupTable: boolean;\r\n}\r\n\r\nexport interface SiteDocumentAsset {\r\n  AssetID: number;\r\n  Tag: string;\r\n  Name: string;\r\n  QRCode?: string;\r\n  TemplateID?: number;\r\n}\r\n\r\nexport interface SiteDocumentOperative {\r\n  AttendeeID: number;\r\n  Name: string;\r\n  DateAttended: Date;\r\n}\r\n\r\nexport interface Page {\r\n  PageID: number;\r\n  PageTitle: string;\r\n  PageNo: number;\r\n  Sections: Section[];\r\n  Hidden: boolean;\r\n}\r\n\r\nexport interface Section {\r\n  SectionID: number;\r\n  SectionNo: number;\r\n  SectionTitle: string;\r\n  Questions: Question[];\r\n  SectionQuestiontype: QuestionType;\r\n  IsRepeatable: boolean;\r\n  TableTitles: string[];\r\n  Hidden: boolean;\r\n}\r\n\r\nexport enum QuestionType {\r\n  Label = 0,\r\n  Checkbox = 1,\r\n  RadioGroup = 2,\r\n  Textbox = 3,\r\n  TextArea = 4,\r\n  Select = 5,\r\n  CheckboxTextbox = 6,\r\n  RadioGroupTextbox = 7,\r\n  Date = 8,\r\n  DateTime = 9,\r\n  OperativeList = 10,\r\n  WallOfText = 11,\r\n  Number = 12,\r\n  CascadeDropdown = 13,\r\n  LinkedBool = 16,\r\n  AssetList = 17,\r\n  LinkedDates = 18,\r\n  Signature = 19,\r\n  CompanySelect = 21,\r\n  AreaSelect = 22,\r\n  AssetGroupsAndTypes = 25,\r\n  AssetInspectionSchedule = 26,\r\n  ProjectSelect = 27,\r\n  RamsSelect = 28,\r\n  SelectText = 29,\r\n  CascadeDropdownText = 30,\r\n  MultiCascade = 31,\r\n  Time = 32,\r\n  LinkedTimes = 33,\r\n  HraSelect = 34,\r\n  MultiCheckbox = 35,\r\n  LinkedDateAndTime = 36\r\n}\r\n\r\nexport interface Question {\r\n  QuestionID: number;\r\n  QuestionText: string;\r\n  CascadeOptionsText: string;\r\n  CommentsText: string;\r\n  Assets: SiteDocumentAsset[];\r\n  Operatives: SiteDocumentOperative[];\r\n  Required: boolean;\r\n  AnswerText: string;\r\n  AdditionalText?: string;\r\n  MoreAdditionalText?: string;\r\n  DateAndTime: Nullable<Date>;\r\n  DateAndTime2: Nullable<Date>;\r\n  NumberVal?: number;\r\n  OptionVal?: string | null;\r\n  SelectedOptionText?: Nullable<string>;\r\n  SelectedCascadeOptionText?: Nullable<string>;\r\n  File?: Nullable<string>;\r\n  Img?: Nullable<string>;\r\n  AnswerOptions: SelectOption[];\r\n  CascadeOptions: CascadeOption[];\r\n  CascadeOptionVal?: string | null;\r\n  YesNoNA: boolean | null;\r\n  CanHaveImg: boolean;\r\n  CanHaveFiles: boolean;\r\n  CanUsePhotoLib: boolean;\r\n  SignatureArray?: number[];\r\n  SignaturePoints?: PointGroup[];\r\n  SignatureDataUrl?: string;\r\n  ValidationData: ValidationData[];\r\n  Hidden: boolean;\r\n  Disabled?: boolean;\r\n}\r\n\r\nexport function useValidationData(rules: ValidationData[]) {\r\n  const min = rules.find(r => r.Key === \"Min\")?.Value.toNumber();\r\n  const max = rules.find(r => r.Key === \"Max\")?.Value.toNumber();\r\n\r\n  return {\r\n    min,\r\n    max\r\n  }\r\n}\r\n\r\nexport function minDate(question: Question) {\r\n  const min = question.ValidationData.find(r => r.Key === \"Min\")?.Value.toNumber();\r\n\r\n  return min != null\r\n    ? new Date().subtrackHours(min)\r\n    : null;\r\n}\r\n\r\nexport function maxDate(question: Question) {\r\n  const max = question.ValidationData.find(r => r.Key === \"Max\")?.Value.toNumber();\r\n\r\n  return max != null\r\n    ? new Date().addHours(max)\r\n    : null;\r\n}\r\n\r\nexport function spreadDate(question: Question) {\r\n  const spread = question.ValidationData.find(r => r.Key === \"Spread\")?.Value.toNumber();\r\n  const max = question.ValidationData.find(r => r.Key === \"Max\")?.Value.toNumber();  \r\n\r\n  const hours = spread != null && max != null\r\n    ? spread > max\r\n      ? spread\r\n      : max\r\n    : spread != null\r\n      ? spread\r\n      : max;\r\n\r\n  return hours != null\r\n    ? new Date().addHours(hours)\r\n    : null;\r\n}\r\n\r\nexport interface ValidationData {\r\n  Key: \"Min\" | \"Max\" | \"Spread\",\r\n  Value: string,\r\n  Msg: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  Active?: boolean;\r\n  Text: string;\r\n  Val: string;\r\n  MetaData?: any;\r\n  OptionsMetadataJson?: string;\r\n}\r\n\r\nexport interface SelectOptionMetaData {\r\n  ColourHex?: string;\r\n}\r\n\r\nexport interface CascadeOption { \r\n  ParentVal: string, \r\n  Text: string, \r\n  Val: string \r\n}",
            "properties": [
                {
                    "name": "AllowAnon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "AutoQueueID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "CanAddActionerFromApp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "CanAddAsset",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "CanAddCategoryActioner",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "CanAddOperative",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "CanBeAddedToHotspot",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "CanBeSavedAsDraft",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "CanCreateAssetsFromDocument",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "CanCreateHotspot",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "CanHaveCompanyActioner",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "CanHaveDocLevelPhotoRoll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "CanHaveDocumentLevelImages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "CanHaveQueueDuration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "ChildTemplateID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "CompanyActionerId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "CurrentActionerOperativeID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "DocumentCategory",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "DocumentGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "DocumentID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "DocumentResponsibilityAreaId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "DocumentResponsibilityAreaTypeId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "DocumentTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "Images",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "MetaData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<SiteDocumentMetaData>",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "PageIdx",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "Pages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Page[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "Pinned",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "Preamble",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "QueueDuration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QueueDuration",
                    "optional": true,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "Queues",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Queue[]",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "RemainAnon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "ReqGps",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "ShowDocLevelPhotoButtonAtStartOfDoc",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "SiteDocumentType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "SiteId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "Subtitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "SiteDocumentAsset",
            "id": "interface-SiteDocumentAsset-c7959f7440ffcc3f7e62a4ddc4c7de3b0161d7b2e791d3c870e61d9c7beefced3f38a328f62f1a879861bd7f2b720c6a0a83bd38547d74e5da6d4aabfde0f9ba",
            "file": "src/app/core/stores/site-document/models/site-document.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { PointGroup } from \"signature_pad\";\r\n\r\nexport interface SiteDocument {\r\n  DocumentID: number;\r\n  DocumentTitle: string;\r\n  Subtitle: string;\r\n  Preamble: string;\r\n  Pinned: boolean;\r\n  Pages: Page[];\r\n  AllowAnon: boolean;\r\n  RemainAnon: boolean;\r\n  ChildTemplateID: number;\r\n  Queues: Queue[],\r\n  DocumentGroup: string;\r\n  DocumentCategory?: number;\r\n  CanCreateHotspot: boolean;\r\n  CanBeAddedToHotspot?: boolean;\r\n  CanBeSavedAsDraft?: boolean;\r\n  CanAddActionerFromApp: boolean;\r\n  CanAddCategoryActioner: boolean;\r\n  CanCreateAssetsFromDocument: boolean;\r\n  CanHaveQueueDuration: boolean;\r\n  CanHaveDocumentLevelImages: boolean;\r\n  CanHaveDocLevelPhotoRoll: boolean;\r\n  CurrentActionerOperativeID?: number;\r\n  CompanyActionerId?: number;\r\n  ShowDocLevelPhotoButtonAtStartOfDoc: boolean;\r\n  CanAddAsset?: boolean;\r\n  CanAddOperative?: boolean;\r\n  CanHaveCompanyActioner: boolean;\r\n  MetaData: Partial<SiteDocumentMetaData>;\r\n  SiteDocumentType: number,\r\n  SiteId?: number;\r\n  AutoQueueID?: number;\r\n  QueueDuration?: QueueDuration;\r\n  DocumentResponsibilityAreaTypeId?: number;\r\n  DocumentResponsibilityAreaId?: number;\r\n  ReqGps: boolean;\r\n  PageIdx: number;\r\n  Images: string[];\r\n}\r\n\r\nexport interface Queue {\r\n  Id: number,\r\n  Name: string\r\n}\r\n\r\nexport interface QueueDuration {\r\n  Value: number;\r\n  Type: \"Mins\" | \"Hours\" | \"Days\";\r\n}\r\n\r\nexport interface SiteDocumentImage {\r\n  Id: string,\r\n  DocumentId: number,\r\n  Base64: string,\r\n}\r\n\r\nexport interface SiteDocumentMetaData {\r\n  ActionerText: string;\r\n  CanBeEditableDocument: boolean;\r\n  CannotAddSelfAsActioner: boolean;\r\n  ColourHex: string;\r\n  QueueSelectorTitle: string;\r\n  HasSiteList: boolean;\r\n  SiteListTitle: string;\r\n  UsesRadioGroupTable: boolean;\r\n}\r\n\r\nexport interface SiteDocumentAsset {\r\n  AssetID: number;\r\n  Tag: string;\r\n  Name: string;\r\n  QRCode?: string;\r\n  TemplateID?: number;\r\n}\r\n\r\nexport interface SiteDocumentOperative {\r\n  AttendeeID: number;\r\n  Name: string;\r\n  DateAttended: Date;\r\n}\r\n\r\nexport interface Page {\r\n  PageID: number;\r\n  PageTitle: string;\r\n  PageNo: number;\r\n  Sections: Section[];\r\n  Hidden: boolean;\r\n}\r\n\r\nexport interface Section {\r\n  SectionID: number;\r\n  SectionNo: number;\r\n  SectionTitle: string;\r\n  Questions: Question[];\r\n  SectionQuestiontype: QuestionType;\r\n  IsRepeatable: boolean;\r\n  TableTitles: string[];\r\n  Hidden: boolean;\r\n}\r\n\r\nexport enum QuestionType {\r\n  Label = 0,\r\n  Checkbox = 1,\r\n  RadioGroup = 2,\r\n  Textbox = 3,\r\n  TextArea = 4,\r\n  Select = 5,\r\n  CheckboxTextbox = 6,\r\n  RadioGroupTextbox = 7,\r\n  Date = 8,\r\n  DateTime = 9,\r\n  OperativeList = 10,\r\n  WallOfText = 11,\r\n  Number = 12,\r\n  CascadeDropdown = 13,\r\n  LinkedBool = 16,\r\n  AssetList = 17,\r\n  LinkedDates = 18,\r\n  Signature = 19,\r\n  CompanySelect = 21,\r\n  AreaSelect = 22,\r\n  AssetGroupsAndTypes = 25,\r\n  AssetInspectionSchedule = 26,\r\n  ProjectSelect = 27,\r\n  RamsSelect = 28,\r\n  SelectText = 29,\r\n  CascadeDropdownText = 30,\r\n  MultiCascade = 31,\r\n  Time = 32,\r\n  LinkedTimes = 33,\r\n  HraSelect = 34,\r\n  MultiCheckbox = 35,\r\n  LinkedDateAndTime = 36\r\n}\r\n\r\nexport interface Question {\r\n  QuestionID: number;\r\n  QuestionText: string;\r\n  CascadeOptionsText: string;\r\n  CommentsText: string;\r\n  Assets: SiteDocumentAsset[];\r\n  Operatives: SiteDocumentOperative[];\r\n  Required: boolean;\r\n  AnswerText: string;\r\n  AdditionalText?: string;\r\n  MoreAdditionalText?: string;\r\n  DateAndTime: Nullable<Date>;\r\n  DateAndTime2: Nullable<Date>;\r\n  NumberVal?: number;\r\n  OptionVal?: string | null;\r\n  SelectedOptionText?: Nullable<string>;\r\n  SelectedCascadeOptionText?: Nullable<string>;\r\n  File?: Nullable<string>;\r\n  Img?: Nullable<string>;\r\n  AnswerOptions: SelectOption[];\r\n  CascadeOptions: CascadeOption[];\r\n  CascadeOptionVal?: string | null;\r\n  YesNoNA: boolean | null;\r\n  CanHaveImg: boolean;\r\n  CanHaveFiles: boolean;\r\n  CanUsePhotoLib: boolean;\r\n  SignatureArray?: number[];\r\n  SignaturePoints?: PointGroup[];\r\n  SignatureDataUrl?: string;\r\n  ValidationData: ValidationData[];\r\n  Hidden: boolean;\r\n  Disabled?: boolean;\r\n}\r\n\r\nexport function useValidationData(rules: ValidationData[]) {\r\n  const min = rules.find(r => r.Key === \"Min\")?.Value.toNumber();\r\n  const max = rules.find(r => r.Key === \"Max\")?.Value.toNumber();\r\n\r\n  return {\r\n    min,\r\n    max\r\n  }\r\n}\r\n\r\nexport function minDate(question: Question) {\r\n  const min = question.ValidationData.find(r => r.Key === \"Min\")?.Value.toNumber();\r\n\r\n  return min != null\r\n    ? new Date().subtrackHours(min)\r\n    : null;\r\n}\r\n\r\nexport function maxDate(question: Question) {\r\n  const max = question.ValidationData.find(r => r.Key === \"Max\")?.Value.toNumber();\r\n\r\n  return max != null\r\n    ? new Date().addHours(max)\r\n    : null;\r\n}\r\n\r\nexport function spreadDate(question: Question) {\r\n  const spread = question.ValidationData.find(r => r.Key === \"Spread\")?.Value.toNumber();\r\n  const max = question.ValidationData.find(r => r.Key === \"Max\")?.Value.toNumber();  \r\n\r\n  const hours = spread != null && max != null\r\n    ? spread > max\r\n      ? spread\r\n      : max\r\n    : spread != null\r\n      ? spread\r\n      : max;\r\n\r\n  return hours != null\r\n    ? new Date().addHours(hours)\r\n    : null;\r\n}\r\n\r\nexport interface ValidationData {\r\n  Key: \"Min\" | \"Max\" | \"Spread\",\r\n  Value: string,\r\n  Msg: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  Active?: boolean;\r\n  Text: string;\r\n  Val: string;\r\n  MetaData?: any;\r\n  OptionsMetadataJson?: string;\r\n}\r\n\r\nexport interface SelectOptionMetaData {\r\n  ColourHex?: string;\r\n}\r\n\r\nexport interface CascadeOption { \r\n  ParentVal: string, \r\n  Text: string, \r\n  Val: string \r\n}",
            "properties": [
                {
                    "name": "AssetID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 71
                },
                {
                    "name": "Name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 73
                },
                {
                    "name": "QRCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 74
                },
                {
                    "name": "Tag",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 72
                },
                {
                    "name": "TemplateID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 75
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "SiteDocumentImage",
            "id": "interface-SiteDocumentImage-c7959f7440ffcc3f7e62a4ddc4c7de3b0161d7b2e791d3c870e61d9c7beefced3f38a328f62f1a879861bd7f2b720c6a0a83bd38547d74e5da6d4aabfde0f9ba",
            "file": "src/app/core/stores/site-document/models/site-document.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { PointGroup } from \"signature_pad\";\r\n\r\nexport interface SiteDocument {\r\n  DocumentID: number;\r\n  DocumentTitle: string;\r\n  Subtitle: string;\r\n  Preamble: string;\r\n  Pinned: boolean;\r\n  Pages: Page[];\r\n  AllowAnon: boolean;\r\n  RemainAnon: boolean;\r\n  ChildTemplateID: number;\r\n  Queues: Queue[],\r\n  DocumentGroup: string;\r\n  DocumentCategory?: number;\r\n  CanCreateHotspot: boolean;\r\n  CanBeAddedToHotspot?: boolean;\r\n  CanBeSavedAsDraft?: boolean;\r\n  CanAddActionerFromApp: boolean;\r\n  CanAddCategoryActioner: boolean;\r\n  CanCreateAssetsFromDocument: boolean;\r\n  CanHaveQueueDuration: boolean;\r\n  CanHaveDocumentLevelImages: boolean;\r\n  CanHaveDocLevelPhotoRoll: boolean;\r\n  CurrentActionerOperativeID?: number;\r\n  CompanyActionerId?: number;\r\n  ShowDocLevelPhotoButtonAtStartOfDoc: boolean;\r\n  CanAddAsset?: boolean;\r\n  CanAddOperative?: boolean;\r\n  CanHaveCompanyActioner: boolean;\r\n  MetaData: Partial<SiteDocumentMetaData>;\r\n  SiteDocumentType: number,\r\n  SiteId?: number;\r\n  AutoQueueID?: number;\r\n  QueueDuration?: QueueDuration;\r\n  DocumentResponsibilityAreaTypeId?: number;\r\n  DocumentResponsibilityAreaId?: number;\r\n  ReqGps: boolean;\r\n  PageIdx: number;\r\n  Images: string[];\r\n}\r\n\r\nexport interface Queue {\r\n  Id: number,\r\n  Name: string\r\n}\r\n\r\nexport interface QueueDuration {\r\n  Value: number;\r\n  Type: \"Mins\" | \"Hours\" | \"Days\";\r\n}\r\n\r\nexport interface SiteDocumentImage {\r\n  Id: string,\r\n  DocumentId: number,\r\n  Base64: string,\r\n}\r\n\r\nexport interface SiteDocumentMetaData {\r\n  ActionerText: string;\r\n  CanBeEditableDocument: boolean;\r\n  CannotAddSelfAsActioner: boolean;\r\n  ColourHex: string;\r\n  QueueSelectorTitle: string;\r\n  HasSiteList: boolean;\r\n  SiteListTitle: string;\r\n  UsesRadioGroupTable: boolean;\r\n}\r\n\r\nexport interface SiteDocumentAsset {\r\n  AssetID: number;\r\n  Tag: string;\r\n  Name: string;\r\n  QRCode?: string;\r\n  TemplateID?: number;\r\n}\r\n\r\nexport interface SiteDocumentOperative {\r\n  AttendeeID: number;\r\n  Name: string;\r\n  DateAttended: Date;\r\n}\r\n\r\nexport interface Page {\r\n  PageID: number;\r\n  PageTitle: string;\r\n  PageNo: number;\r\n  Sections: Section[];\r\n  Hidden: boolean;\r\n}\r\n\r\nexport interface Section {\r\n  SectionID: number;\r\n  SectionNo: number;\r\n  SectionTitle: string;\r\n  Questions: Question[];\r\n  SectionQuestiontype: QuestionType;\r\n  IsRepeatable: boolean;\r\n  TableTitles: string[];\r\n  Hidden: boolean;\r\n}\r\n\r\nexport enum QuestionType {\r\n  Label = 0,\r\n  Checkbox = 1,\r\n  RadioGroup = 2,\r\n  Textbox = 3,\r\n  TextArea = 4,\r\n  Select = 5,\r\n  CheckboxTextbox = 6,\r\n  RadioGroupTextbox = 7,\r\n  Date = 8,\r\n  DateTime = 9,\r\n  OperativeList = 10,\r\n  WallOfText = 11,\r\n  Number = 12,\r\n  CascadeDropdown = 13,\r\n  LinkedBool = 16,\r\n  AssetList = 17,\r\n  LinkedDates = 18,\r\n  Signature = 19,\r\n  CompanySelect = 21,\r\n  AreaSelect = 22,\r\n  AssetGroupsAndTypes = 25,\r\n  AssetInspectionSchedule = 26,\r\n  ProjectSelect = 27,\r\n  RamsSelect = 28,\r\n  SelectText = 29,\r\n  CascadeDropdownText = 30,\r\n  MultiCascade = 31,\r\n  Time = 32,\r\n  LinkedTimes = 33,\r\n  HraSelect = 34,\r\n  MultiCheckbox = 35,\r\n  LinkedDateAndTime = 36\r\n}\r\n\r\nexport interface Question {\r\n  QuestionID: number;\r\n  QuestionText: string;\r\n  CascadeOptionsText: string;\r\n  CommentsText: string;\r\n  Assets: SiteDocumentAsset[];\r\n  Operatives: SiteDocumentOperative[];\r\n  Required: boolean;\r\n  AnswerText: string;\r\n  AdditionalText?: string;\r\n  MoreAdditionalText?: string;\r\n  DateAndTime: Nullable<Date>;\r\n  DateAndTime2: Nullable<Date>;\r\n  NumberVal?: number;\r\n  OptionVal?: string | null;\r\n  SelectedOptionText?: Nullable<string>;\r\n  SelectedCascadeOptionText?: Nullable<string>;\r\n  File?: Nullable<string>;\r\n  Img?: Nullable<string>;\r\n  AnswerOptions: SelectOption[];\r\n  CascadeOptions: CascadeOption[];\r\n  CascadeOptionVal?: string | null;\r\n  YesNoNA: boolean | null;\r\n  CanHaveImg: boolean;\r\n  CanHaveFiles: boolean;\r\n  CanUsePhotoLib: boolean;\r\n  SignatureArray?: number[];\r\n  SignaturePoints?: PointGroup[];\r\n  SignatureDataUrl?: string;\r\n  ValidationData: ValidationData[];\r\n  Hidden: boolean;\r\n  Disabled?: boolean;\r\n}\r\n\r\nexport function useValidationData(rules: ValidationData[]) {\r\n  const min = rules.find(r => r.Key === \"Min\")?.Value.toNumber();\r\n  const max = rules.find(r => r.Key === \"Max\")?.Value.toNumber();\r\n\r\n  return {\r\n    min,\r\n    max\r\n  }\r\n}\r\n\r\nexport function minDate(question: Question) {\r\n  const min = question.ValidationData.find(r => r.Key === \"Min\")?.Value.toNumber();\r\n\r\n  return min != null\r\n    ? new Date().subtrackHours(min)\r\n    : null;\r\n}\r\n\r\nexport function maxDate(question: Question) {\r\n  const max = question.ValidationData.find(r => r.Key === \"Max\")?.Value.toNumber();\r\n\r\n  return max != null\r\n    ? new Date().addHours(max)\r\n    : null;\r\n}\r\n\r\nexport function spreadDate(question: Question) {\r\n  const spread = question.ValidationData.find(r => r.Key === \"Spread\")?.Value.toNumber();\r\n  const max = question.ValidationData.find(r => r.Key === \"Max\")?.Value.toNumber();  \r\n\r\n  const hours = spread != null && max != null\r\n    ? spread > max\r\n      ? spread\r\n      : max\r\n    : spread != null\r\n      ? spread\r\n      : max;\r\n\r\n  return hours != null\r\n    ? new Date().addHours(hours)\r\n    : null;\r\n}\r\n\r\nexport interface ValidationData {\r\n  Key: \"Min\" | \"Max\" | \"Spread\",\r\n  Value: string,\r\n  Msg: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  Active?: boolean;\r\n  Text: string;\r\n  Val: string;\r\n  MetaData?: any;\r\n  OptionsMetadataJson?: string;\r\n}\r\n\r\nexport interface SelectOptionMetaData {\r\n  ColourHex?: string;\r\n}\r\n\r\nexport interface CascadeOption { \r\n  ParentVal: string, \r\n  Text: string, \r\n  Val: string \r\n}",
            "properties": [
                {
                    "name": "Base64",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "DocumentId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "Id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 54
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "SiteDocumentMetaData",
            "id": "interface-SiteDocumentMetaData-c7959f7440ffcc3f7e62a4ddc4c7de3b0161d7b2e791d3c870e61d9c7beefced3f38a328f62f1a879861bd7f2b720c6a0a83bd38547d74e5da6d4aabfde0f9ba",
            "file": "src/app/core/stores/site-document/models/site-document.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { PointGroup } from \"signature_pad\";\r\n\r\nexport interface SiteDocument {\r\n  DocumentID: number;\r\n  DocumentTitle: string;\r\n  Subtitle: string;\r\n  Preamble: string;\r\n  Pinned: boolean;\r\n  Pages: Page[];\r\n  AllowAnon: boolean;\r\n  RemainAnon: boolean;\r\n  ChildTemplateID: number;\r\n  Queues: Queue[],\r\n  DocumentGroup: string;\r\n  DocumentCategory?: number;\r\n  CanCreateHotspot: boolean;\r\n  CanBeAddedToHotspot?: boolean;\r\n  CanBeSavedAsDraft?: boolean;\r\n  CanAddActionerFromApp: boolean;\r\n  CanAddCategoryActioner: boolean;\r\n  CanCreateAssetsFromDocument: boolean;\r\n  CanHaveQueueDuration: boolean;\r\n  CanHaveDocumentLevelImages: boolean;\r\n  CanHaveDocLevelPhotoRoll: boolean;\r\n  CurrentActionerOperativeID?: number;\r\n  CompanyActionerId?: number;\r\n  ShowDocLevelPhotoButtonAtStartOfDoc: boolean;\r\n  CanAddAsset?: boolean;\r\n  CanAddOperative?: boolean;\r\n  CanHaveCompanyActioner: boolean;\r\n  MetaData: Partial<SiteDocumentMetaData>;\r\n  SiteDocumentType: number,\r\n  SiteId?: number;\r\n  AutoQueueID?: number;\r\n  QueueDuration?: QueueDuration;\r\n  DocumentResponsibilityAreaTypeId?: number;\r\n  DocumentResponsibilityAreaId?: number;\r\n  ReqGps: boolean;\r\n  PageIdx: number;\r\n  Images: string[];\r\n}\r\n\r\nexport interface Queue {\r\n  Id: number,\r\n  Name: string\r\n}\r\n\r\nexport interface QueueDuration {\r\n  Value: number;\r\n  Type: \"Mins\" | \"Hours\" | \"Days\";\r\n}\r\n\r\nexport interface SiteDocumentImage {\r\n  Id: string,\r\n  DocumentId: number,\r\n  Base64: string,\r\n}\r\n\r\nexport interface SiteDocumentMetaData {\r\n  ActionerText: string;\r\n  CanBeEditableDocument: boolean;\r\n  CannotAddSelfAsActioner: boolean;\r\n  ColourHex: string;\r\n  QueueSelectorTitle: string;\r\n  HasSiteList: boolean;\r\n  SiteListTitle: string;\r\n  UsesRadioGroupTable: boolean;\r\n}\r\n\r\nexport interface SiteDocumentAsset {\r\n  AssetID: number;\r\n  Tag: string;\r\n  Name: string;\r\n  QRCode?: string;\r\n  TemplateID?: number;\r\n}\r\n\r\nexport interface SiteDocumentOperative {\r\n  AttendeeID: number;\r\n  Name: string;\r\n  DateAttended: Date;\r\n}\r\n\r\nexport interface Page {\r\n  PageID: number;\r\n  PageTitle: string;\r\n  PageNo: number;\r\n  Sections: Section[];\r\n  Hidden: boolean;\r\n}\r\n\r\nexport interface Section {\r\n  SectionID: number;\r\n  SectionNo: number;\r\n  SectionTitle: string;\r\n  Questions: Question[];\r\n  SectionQuestiontype: QuestionType;\r\n  IsRepeatable: boolean;\r\n  TableTitles: string[];\r\n  Hidden: boolean;\r\n}\r\n\r\nexport enum QuestionType {\r\n  Label = 0,\r\n  Checkbox = 1,\r\n  RadioGroup = 2,\r\n  Textbox = 3,\r\n  TextArea = 4,\r\n  Select = 5,\r\n  CheckboxTextbox = 6,\r\n  RadioGroupTextbox = 7,\r\n  Date = 8,\r\n  DateTime = 9,\r\n  OperativeList = 10,\r\n  WallOfText = 11,\r\n  Number = 12,\r\n  CascadeDropdown = 13,\r\n  LinkedBool = 16,\r\n  AssetList = 17,\r\n  LinkedDates = 18,\r\n  Signature = 19,\r\n  CompanySelect = 21,\r\n  AreaSelect = 22,\r\n  AssetGroupsAndTypes = 25,\r\n  AssetInspectionSchedule = 26,\r\n  ProjectSelect = 27,\r\n  RamsSelect = 28,\r\n  SelectText = 29,\r\n  CascadeDropdownText = 30,\r\n  MultiCascade = 31,\r\n  Time = 32,\r\n  LinkedTimes = 33,\r\n  HraSelect = 34,\r\n  MultiCheckbox = 35,\r\n  LinkedDateAndTime = 36\r\n}\r\n\r\nexport interface Question {\r\n  QuestionID: number;\r\n  QuestionText: string;\r\n  CascadeOptionsText: string;\r\n  CommentsText: string;\r\n  Assets: SiteDocumentAsset[];\r\n  Operatives: SiteDocumentOperative[];\r\n  Required: boolean;\r\n  AnswerText: string;\r\n  AdditionalText?: string;\r\n  MoreAdditionalText?: string;\r\n  DateAndTime: Nullable<Date>;\r\n  DateAndTime2: Nullable<Date>;\r\n  NumberVal?: number;\r\n  OptionVal?: string | null;\r\n  SelectedOptionText?: Nullable<string>;\r\n  SelectedCascadeOptionText?: Nullable<string>;\r\n  File?: Nullable<string>;\r\n  Img?: Nullable<string>;\r\n  AnswerOptions: SelectOption[];\r\n  CascadeOptions: CascadeOption[];\r\n  CascadeOptionVal?: string | null;\r\n  YesNoNA: boolean | null;\r\n  CanHaveImg: boolean;\r\n  CanHaveFiles: boolean;\r\n  CanUsePhotoLib: boolean;\r\n  SignatureArray?: number[];\r\n  SignaturePoints?: PointGroup[];\r\n  SignatureDataUrl?: string;\r\n  ValidationData: ValidationData[];\r\n  Hidden: boolean;\r\n  Disabled?: boolean;\r\n}\r\n\r\nexport function useValidationData(rules: ValidationData[]) {\r\n  const min = rules.find(r => r.Key === \"Min\")?.Value.toNumber();\r\n  const max = rules.find(r => r.Key === \"Max\")?.Value.toNumber();\r\n\r\n  return {\r\n    min,\r\n    max\r\n  }\r\n}\r\n\r\nexport function minDate(question: Question) {\r\n  const min = question.ValidationData.find(r => r.Key === \"Min\")?.Value.toNumber();\r\n\r\n  return min != null\r\n    ? new Date().subtrackHours(min)\r\n    : null;\r\n}\r\n\r\nexport function maxDate(question: Question) {\r\n  const max = question.ValidationData.find(r => r.Key === \"Max\")?.Value.toNumber();\r\n\r\n  return max != null\r\n    ? new Date().addHours(max)\r\n    : null;\r\n}\r\n\r\nexport function spreadDate(question: Question) {\r\n  const spread = question.ValidationData.find(r => r.Key === \"Spread\")?.Value.toNumber();\r\n  const max = question.ValidationData.find(r => r.Key === \"Max\")?.Value.toNumber();  \r\n\r\n  const hours = spread != null && max != null\r\n    ? spread > max\r\n      ? spread\r\n      : max\r\n    : spread != null\r\n      ? spread\r\n      : max;\r\n\r\n  return hours != null\r\n    ? new Date().addHours(hours)\r\n    : null;\r\n}\r\n\r\nexport interface ValidationData {\r\n  Key: \"Min\" | \"Max\" | \"Spread\",\r\n  Value: string,\r\n  Msg: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  Active?: boolean;\r\n  Text: string;\r\n  Val: string;\r\n  MetaData?: any;\r\n  OptionsMetadataJson?: string;\r\n}\r\n\r\nexport interface SelectOptionMetaData {\r\n  ColourHex?: string;\r\n}\r\n\r\nexport interface CascadeOption { \r\n  ParentVal: string, \r\n  Text: string, \r\n  Val: string \r\n}",
            "properties": [
                {
                    "name": "ActionerText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 60
                },
                {
                    "name": "CanBeEditableDocument",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "CannotAddSelfAsActioner",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "ColourHex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 63
                },
                {
                    "name": "HasSiteList",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 65
                },
                {
                    "name": "QueueSelectorTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 64
                },
                {
                    "name": "SiteListTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 66
                },
                {
                    "name": "UsesRadioGroupTable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 67
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "SiteDocumentOperative",
            "id": "interface-SiteDocumentOperative-c7959f7440ffcc3f7e62a4ddc4c7de3b0161d7b2e791d3c870e61d9c7beefced3f38a328f62f1a879861bd7f2b720c6a0a83bd38547d74e5da6d4aabfde0f9ba",
            "file": "src/app/core/stores/site-document/models/site-document.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { PointGroup } from \"signature_pad\";\r\n\r\nexport interface SiteDocument {\r\n  DocumentID: number;\r\n  DocumentTitle: string;\r\n  Subtitle: string;\r\n  Preamble: string;\r\n  Pinned: boolean;\r\n  Pages: Page[];\r\n  AllowAnon: boolean;\r\n  RemainAnon: boolean;\r\n  ChildTemplateID: number;\r\n  Queues: Queue[],\r\n  DocumentGroup: string;\r\n  DocumentCategory?: number;\r\n  CanCreateHotspot: boolean;\r\n  CanBeAddedToHotspot?: boolean;\r\n  CanBeSavedAsDraft?: boolean;\r\n  CanAddActionerFromApp: boolean;\r\n  CanAddCategoryActioner: boolean;\r\n  CanCreateAssetsFromDocument: boolean;\r\n  CanHaveQueueDuration: boolean;\r\n  CanHaveDocumentLevelImages: boolean;\r\n  CanHaveDocLevelPhotoRoll: boolean;\r\n  CurrentActionerOperativeID?: number;\r\n  CompanyActionerId?: number;\r\n  ShowDocLevelPhotoButtonAtStartOfDoc: boolean;\r\n  CanAddAsset?: boolean;\r\n  CanAddOperative?: boolean;\r\n  CanHaveCompanyActioner: boolean;\r\n  MetaData: Partial<SiteDocumentMetaData>;\r\n  SiteDocumentType: number,\r\n  SiteId?: number;\r\n  AutoQueueID?: number;\r\n  QueueDuration?: QueueDuration;\r\n  DocumentResponsibilityAreaTypeId?: number;\r\n  DocumentResponsibilityAreaId?: number;\r\n  ReqGps: boolean;\r\n  PageIdx: number;\r\n  Images: string[];\r\n}\r\n\r\nexport interface Queue {\r\n  Id: number,\r\n  Name: string\r\n}\r\n\r\nexport interface QueueDuration {\r\n  Value: number;\r\n  Type: \"Mins\" | \"Hours\" | \"Days\";\r\n}\r\n\r\nexport interface SiteDocumentImage {\r\n  Id: string,\r\n  DocumentId: number,\r\n  Base64: string,\r\n}\r\n\r\nexport interface SiteDocumentMetaData {\r\n  ActionerText: string;\r\n  CanBeEditableDocument: boolean;\r\n  CannotAddSelfAsActioner: boolean;\r\n  ColourHex: string;\r\n  QueueSelectorTitle: string;\r\n  HasSiteList: boolean;\r\n  SiteListTitle: string;\r\n  UsesRadioGroupTable: boolean;\r\n}\r\n\r\nexport interface SiteDocumentAsset {\r\n  AssetID: number;\r\n  Tag: string;\r\n  Name: string;\r\n  QRCode?: string;\r\n  TemplateID?: number;\r\n}\r\n\r\nexport interface SiteDocumentOperative {\r\n  AttendeeID: number;\r\n  Name: string;\r\n  DateAttended: Date;\r\n}\r\n\r\nexport interface Page {\r\n  PageID: number;\r\n  PageTitle: string;\r\n  PageNo: number;\r\n  Sections: Section[];\r\n  Hidden: boolean;\r\n}\r\n\r\nexport interface Section {\r\n  SectionID: number;\r\n  SectionNo: number;\r\n  SectionTitle: string;\r\n  Questions: Question[];\r\n  SectionQuestiontype: QuestionType;\r\n  IsRepeatable: boolean;\r\n  TableTitles: string[];\r\n  Hidden: boolean;\r\n}\r\n\r\nexport enum QuestionType {\r\n  Label = 0,\r\n  Checkbox = 1,\r\n  RadioGroup = 2,\r\n  Textbox = 3,\r\n  TextArea = 4,\r\n  Select = 5,\r\n  CheckboxTextbox = 6,\r\n  RadioGroupTextbox = 7,\r\n  Date = 8,\r\n  DateTime = 9,\r\n  OperativeList = 10,\r\n  WallOfText = 11,\r\n  Number = 12,\r\n  CascadeDropdown = 13,\r\n  LinkedBool = 16,\r\n  AssetList = 17,\r\n  LinkedDates = 18,\r\n  Signature = 19,\r\n  CompanySelect = 21,\r\n  AreaSelect = 22,\r\n  AssetGroupsAndTypes = 25,\r\n  AssetInspectionSchedule = 26,\r\n  ProjectSelect = 27,\r\n  RamsSelect = 28,\r\n  SelectText = 29,\r\n  CascadeDropdownText = 30,\r\n  MultiCascade = 31,\r\n  Time = 32,\r\n  LinkedTimes = 33,\r\n  HraSelect = 34,\r\n  MultiCheckbox = 35,\r\n  LinkedDateAndTime = 36\r\n}\r\n\r\nexport interface Question {\r\n  QuestionID: number;\r\n  QuestionText: string;\r\n  CascadeOptionsText: string;\r\n  CommentsText: string;\r\n  Assets: SiteDocumentAsset[];\r\n  Operatives: SiteDocumentOperative[];\r\n  Required: boolean;\r\n  AnswerText: string;\r\n  AdditionalText?: string;\r\n  MoreAdditionalText?: string;\r\n  DateAndTime: Nullable<Date>;\r\n  DateAndTime2: Nullable<Date>;\r\n  NumberVal?: number;\r\n  OptionVal?: string | null;\r\n  SelectedOptionText?: Nullable<string>;\r\n  SelectedCascadeOptionText?: Nullable<string>;\r\n  File?: Nullable<string>;\r\n  Img?: Nullable<string>;\r\n  AnswerOptions: SelectOption[];\r\n  CascadeOptions: CascadeOption[];\r\n  CascadeOptionVal?: string | null;\r\n  YesNoNA: boolean | null;\r\n  CanHaveImg: boolean;\r\n  CanHaveFiles: boolean;\r\n  CanUsePhotoLib: boolean;\r\n  SignatureArray?: number[];\r\n  SignaturePoints?: PointGroup[];\r\n  SignatureDataUrl?: string;\r\n  ValidationData: ValidationData[];\r\n  Hidden: boolean;\r\n  Disabled?: boolean;\r\n}\r\n\r\nexport function useValidationData(rules: ValidationData[]) {\r\n  const min = rules.find(r => r.Key === \"Min\")?.Value.toNumber();\r\n  const max = rules.find(r => r.Key === \"Max\")?.Value.toNumber();\r\n\r\n  return {\r\n    min,\r\n    max\r\n  }\r\n}\r\n\r\nexport function minDate(question: Question) {\r\n  const min = question.ValidationData.find(r => r.Key === \"Min\")?.Value.toNumber();\r\n\r\n  return min != null\r\n    ? new Date().subtrackHours(min)\r\n    : null;\r\n}\r\n\r\nexport function maxDate(question: Question) {\r\n  const max = question.ValidationData.find(r => r.Key === \"Max\")?.Value.toNumber();\r\n\r\n  return max != null\r\n    ? new Date().addHours(max)\r\n    : null;\r\n}\r\n\r\nexport function spreadDate(question: Question) {\r\n  const spread = question.ValidationData.find(r => r.Key === \"Spread\")?.Value.toNumber();\r\n  const max = question.ValidationData.find(r => r.Key === \"Max\")?.Value.toNumber();  \r\n\r\n  const hours = spread != null && max != null\r\n    ? spread > max\r\n      ? spread\r\n      : max\r\n    : spread != null\r\n      ? spread\r\n      : max;\r\n\r\n  return hours != null\r\n    ? new Date().addHours(hours)\r\n    : null;\r\n}\r\n\r\nexport interface ValidationData {\r\n  Key: \"Min\" | \"Max\" | \"Spread\",\r\n  Value: string,\r\n  Msg: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  Active?: boolean;\r\n  Text: string;\r\n  Val: string;\r\n  MetaData?: any;\r\n  OptionsMetadataJson?: string;\r\n}\r\n\r\nexport interface SelectOptionMetaData {\r\n  ColourHex?: string;\r\n}\r\n\r\nexport interface CascadeOption { \r\n  ParentVal: string, \r\n  Text: string, \r\n  Val: string \r\n}",
            "properties": [
                {
                    "name": "AttendeeID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 79
                },
                {
                    "name": "DateAttended",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 81
                },
                {
                    "name": "Name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 80
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "TargetEvent",
            "id": "interface-TargetEvent-d8ce4e5a23f6985bd019f1bec5424336d6270524c10493fcde06ec6a16c08d27300fc7b01504d272ab1fb52cc4f4bd58ae56bdfe79d6250aafbf2aa964c4e293",
            "file": "src/app/shared/models/events/target-event.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface TargetEvent<T> {\r\n  target: T\r\n}\r\n",
            "properties": [
                {
                    "name": "target",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "TemplateItem",
            "id": "interface-TemplateItem-7731104ece926c5bf6db944b2db8a1a00beed638dc451d7059660d038311b647d6ee121301ca4223b701dbfb44daf1c400f4ae6fb89f1133509c53cc576b1a28",
            "file": "src/app/core/http/template.api.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable, inject } from \"@angular/core\";\r\nimport { SiteDocument } from \"../stores/site-document/models\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { EMPTY, Observable, expand, map, of, reduce, switchMap } from \"rxjs\";\r\nimport { memoize, orderBy } from \"lodash-es\";\r\nimport { createApi } from \"./create-api\";\r\nimport { track } from \"src/app/shared/rxjs\";\r\nimport { param } from \"src/app/shared/route\";\r\n\r\nexport interface TemplateItem {\r\n  Id: number,\r\n  Title: string\r\n}\r\n\r\nexport interface PaginatedList<T> {\r\n  Items: T[],\r\n  PageNumber: number,\r\n  TotalPage: number,\r\n  TotalCount: number,\r\n  HasPreviousPage: boolean,\r\n  HasNextPage: boolean\r\n}\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class TemplateApi {\r\n  protected httpClient = inject(HttpClient);\r\n\r\n  getTemplates() {\r\n    return this.httpClient.get<PaginatedList<SiteDocument>>(`${environment.siteDocsApi}/TemplateApi/GetLatestTemplatesWithPagination`, {\r\n      params: {\r\n        pageNumber: 1,\r\n        pageSize: 20\r\n      }\r\n    }).pipe(\r\n      expand((res, idx) => res.HasNextPage\r\n        ? this.httpClient.get<PaginatedList<SiteDocument>>(`${environment.siteDocsApi}/TemplateApi/GetLatestTemplatesWithPagination`, {\r\n          params: {\r\n            pageNumber: idx + 2,\r\n            pageSize: 20\r\n          }\r\n        })\r\n        : EMPTY\r\n      ),\r\n      map(res => res.Items),\r\n      reduce((acc, docs) => [...acc, ...docs]),\r\n      map(tpls => orderBy(tpls, \"DocumentTitle\"))\r\n    )\r\n  }\r\n\r\n  getTemplate(params: { id: number }) {\r\n    return this.httpClient.get<SiteDocument>(`${environment.siteDocsApi}/TemplateApi/GetDocumentTemplate`, {\r\n      params: {\r\n        id: params.id.toString()\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport const useTemplateApi = createApi({\r\n  baseUrl: `${environment.siteDocsApi}/TemplateApi`,\r\n  endpoints: ({ get }) => ({\r\n    getAllTemplates: get<TemplateItem[]>(\"GetAllTemplates\"),\r\n    getTemplate: get<SiteDocument, { id: number }>(\"GetDocumentTemplate\"),\r\n  })\r\n});\r\n\r\nexport const useAllTemplates = memoize(() => {\r\n  const { getAllTemplates } = useTemplateApi();\r\n\r\n  return track(() => getAllTemplates());\r\n});\r\n\r\nexport const useTemplate = (id$: Observable<Nullable<number>>) => {\r\n  const { getTemplate } = useTemplateApi();\r\n  const loginId = param(\"loginId\") || 0;\r\n\r\n  return track(() => id$.pipe(\r\n    switchMap(id => id != null \r\n      ? getTemplate({ id }).pipe(\r\n        map(doc => ({\r\n          ...doc,\r\n          Images: [],\r\n          GroupedDocumentID: `${loginId}_${Date.now()}`,\r\n          QueueDuration: doc.CanHaveQueueDuration \r\n            ? { Value: 0, Type: \"Mins\" }\r\n            : null,\r\n          PageIdx: 1\r\n        }) as SiteDocument)\r\n      )\r\n      : of(null)\r\n    )\r\n  ));\r\n};",
            "properties": [
                {
                    "name": "Id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "Title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "TemplateMenuItem",
            "id": "interface-TemplateMenuItem-c2be98fffa7ec3ef9d374c97515526030466fc8b8f692ec4c721d9c75e06b55b91db2588bc54399f129804f9964bc9e7d2971d09806048451193ca2c25e1224b",
            "file": "src/app/core/stores/site-document/form-filler/form-filler.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\r\nimport { inject, Injectable } from \"@angular/core\";\r\nimport { createStore } from \"@ngneat/elf\";\r\nimport { entitiesPropsFactory } from \"@ngneat/elf-entities\";\r\nimport { Observable, switchMap } from \"rxjs\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { withWritingDocument } from \"../props\";\r\nimport { writingDocumentAdapter } from \"../adapters/writing-document.adapter\";\r\nimport { SiteDocument } from \"../models\";\r\n\r\nexport interface TemplateMenuItem {\r\n  Id: number;\r\n  Title: string;\r\n  SiteDocumentType: number;\r\n  RevNo: number;\r\n}\r\n\r\nconst { withTemplateMenuEntities } = entitiesPropsFactory(\"templateMenu\");\r\n\r\nconst store = createStore(\r\n  { name: \"form-filler\" },\r\n  withWritingDocument(null as SiteDocument | null),\r\n  withTemplateMenuEntities<TemplateMenuItem, \"Id\">({ idKey: \"Id\", initialValue: [] })\r\n);\r\n\r\nconst { \r\n  selectWritingDocument, \r\n  setWritingDocument \r\n} = writingDocumentAdapter(store);\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class FormFillerStore {\r\n  protected http = inject(HttpClient);\r\n\r\n  writingDocument$ = selectWritingDocument();\r\n\r\n  getTemplateRequest$ = (action$: Observable<number>) => action$.pipe(\r\n    switchMap(id => this.http.get<SiteDocument>(`${environment.siteDocsApi}/TemplateApi/GetDocumentTemplate`, {\r\n      params: {\r\n        id: id!.toString()\r\n      }\r\n    })),\r\n    setWritingDocument()\r\n  );\r\n\r\n  getTemplatesRequest$ = () => this.http.get<SiteDocument[]>(`${environment.siteDocsApi}/TemplateApi/`).pipe(\r\n    \r\n  );\r\n\r\n  submitDocument$ = (action$: Observable<SiteDocument>) => action$.pipe(\r\n    switchMap(doc => this.http.post<number>(`${environment.siteDocsApi}/TemplateApi/UploadDocument`, doc))\r\n  );\r\n}",
            "properties": [
                {
                    "name": "Id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "RevNo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "SiteDocumentType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "Title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "TemplateMenuItem",
            "id": "interface-TemplateMenuItem-c86354364b6b3d193563e8480ebd82ec9f5afd4b337ff3335f21f07773abf5051d3e7e713c849024a59fc6b33242400400e65266ffa8e384125d7cbc99ddda10-1",
            "file": "src/app/core/stores/site-document/form-filler/adapters/template-menu.adapter.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Store, StoreDef } from \"@ngneat/elf\";\r\nimport { entitiesPropsFactory, selectAllEntities, setEntities } from \"@ngneat/elf-entities\";\r\nimport { pipeTap } from \"src/app/shared/rxjs\";\r\n\r\nexport interface TemplateMenuItem {\r\n  Id: number;\r\n  Title: string;\r\n  SiteDocumentType: number;\r\n  RevNo: number;\r\n}\r\n\r\nconst { templateMenuEntitiesRef, withTemplateMenuEntities } = entitiesPropsFactory(\"templateMenu\");\r\n\r\nexport { withTemplateMenuEntities }\r\n\r\nexport function templateMenuAdapter(store: Store<StoreDef>) {\r\n  return {\r\n    selectTemplateMenu: () => store.pipe(selectAllEntities({ ref: templateMenuEntitiesRef })),\r\n    setTemplateMenu: pipeTap<TemplateMenuItem[]>(templates => store.update(setEntities(templates, { ref: templateMenuEntitiesRef })))\r\n  }\r\n}",
            "properties": [
                {
                    "name": "Id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "RevNo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "SiteDocumentType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "Title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "TemplateMenuItem-1"
        },
        {
            "name": "Tracking",
            "id": "interface-Tracking-f79511361431f6d777bb80945c699668d55f5129422aca87933dd810d6488276ab2ccb8675ad06b1aee232e03165130c1df9faac90003cb2fa8e0febc6e1d6cf",
            "file": "src/app/shared/rxjs/track.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { EMPTY, Observable, Subject, catchError, merge, mergeMap, of, shareReplay, tap } from \"rxjs\";\r\nimport { use, UseOf, UsePipe, createPipe } from \"../rxjs\";\r\n\r\nexport type TrackingStatus = \"Idle\" | \"Success\" | \"Error\" | \"Loading\";\r\n\r\nexport interface Tracking<T> {\r\n  status: UseOf<TrackingStatus>,\r\n  error: UseOf<unknown>,\r\n  data: UsePipe<T>\r\n  isIdle: UsePipe<boolean>,\r\n  isSuccess: UsePipe<boolean>,\r\n  isError: UsePipe<boolean>,\r\n  isLoading: UsePipe<boolean>\r\n}\r\n\r\nexport interface TrackingOptions<TParams, TResult> {\r\n  deps: Observable<TParams>[],\r\n  fn: (params: TParams) => Observable<TResult>\r\n}\r\n\r\nexport function track<TResult>(fn: () => Observable<TResult>): Tracking<TResult>;\r\nexport function track<TParams, TResult>(options: TrackingOptions<TParams, TResult>): Tracking<TResult>;\r\nexport function track<TParams, TResult>(param: TrackingOptions<TParams, TResult> | (() => Observable<TResult>)): Tracking<TResult> {\r\n  const status = use<TrackingStatus>(\"Idle\");\r\n  const error = use<unknown>();\r\n  const trackingFn = typeof param === \"function\" \r\n    ? () => {\r\n      status.next(\"Loading\");\r\n      return param();\r\n    }\r\n    : () => merge(...param.deps).pipe(\r\n      tap(() => status.next(\"Loading\")),\r\n      mergeMap(params => param.fn(params))\r\n    );\r\n    \r\n\r\n  return {\r\n    status,\r\n    data: createPipe(trackingFn().pipe(\r\n      tap(() => status.next(\"Success\")),\r\n      catchError(err => {\r\n        console.error(err);\r\n        status.next(\"Error\");\r\n        error.next(err);\r\n\r\n        return EMPTY;\r\n      }),\r\n      shareReplay()\r\n    )),\r\n    error,\r\n    isIdle: status(s => s === \"Idle\"),\r\n    isSuccess: status(s => s === \"Success\"),\r\n    isError: status(s => s === \"Error\"),\r\n    isLoading: status(s => s === \"Loading\")\r\n  }\r\n}\r\n\r\nexport function trackOf<T>(value: T) {\r\n  return track(() => of(value));\r\n}\r\n\r\nexport function trackSend<TParams, TResult>(options: {\r\n  binding?: () => TParams,\r\n  fn: (params: TParams) => Observable<TResult>\r\n}) {\r\n  const params$ = new Subject<TParams>();\r\n\r\n  const tracking = track({\r\n    deps: [params$],\r\n    fn: params => options.fn(params)\r\n  });\r\n  let binding = options.binding == null \r\n    ? () => ({})\r\n    : options.binding; \r\n\r\n  return {\r\n    ...tracking,\r\n    send: (params?: Partial<TParams>) => {\r\n      params$.next({\r\n        ...binding(),\r\n        ...params\r\n      } as TParams);\r\n    }\r\n  }\r\n}",
            "properties": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UsePipe<T>",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UseOf<>",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "isError",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UsePipe<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "isIdle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UsePipe<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "isLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UsePipe<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "isSuccess",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UsePipe<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UseOf<TrackingStatus>",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "TrackingOptions",
            "id": "interface-TrackingOptions-f79511361431f6d777bb80945c699668d55f5129422aca87933dd810d6488276ab2ccb8675ad06b1aee232e03165130c1df9faac90003cb2fa8e0febc6e1d6cf",
            "file": "src/app/shared/rxjs/track.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { EMPTY, Observable, Subject, catchError, merge, mergeMap, of, shareReplay, tap } from \"rxjs\";\r\nimport { use, UseOf, UsePipe, createPipe } from \"../rxjs\";\r\n\r\nexport type TrackingStatus = \"Idle\" | \"Success\" | \"Error\" | \"Loading\";\r\n\r\nexport interface Tracking<T> {\r\n  status: UseOf<TrackingStatus>,\r\n  error: UseOf<unknown>,\r\n  data: UsePipe<T>\r\n  isIdle: UsePipe<boolean>,\r\n  isSuccess: UsePipe<boolean>,\r\n  isError: UsePipe<boolean>,\r\n  isLoading: UsePipe<boolean>\r\n}\r\n\r\nexport interface TrackingOptions<TParams, TResult> {\r\n  deps: Observable<TParams>[],\r\n  fn: (params: TParams) => Observable<TResult>\r\n}\r\n\r\nexport function track<TResult>(fn: () => Observable<TResult>): Tracking<TResult>;\r\nexport function track<TParams, TResult>(options: TrackingOptions<TParams, TResult>): Tracking<TResult>;\r\nexport function track<TParams, TResult>(param: TrackingOptions<TParams, TResult> | (() => Observable<TResult>)): Tracking<TResult> {\r\n  const status = use<TrackingStatus>(\"Idle\");\r\n  const error = use<unknown>();\r\n  const trackingFn = typeof param === \"function\" \r\n    ? () => {\r\n      status.next(\"Loading\");\r\n      return param();\r\n    }\r\n    : () => merge(...param.deps).pipe(\r\n      tap(() => status.next(\"Loading\")),\r\n      mergeMap(params => param.fn(params))\r\n    );\r\n    \r\n\r\n  return {\r\n    status,\r\n    data: createPipe(trackingFn().pipe(\r\n      tap(() => status.next(\"Success\")),\r\n      catchError(err => {\r\n        console.error(err);\r\n        status.next(\"Error\");\r\n        error.next(err);\r\n\r\n        return EMPTY;\r\n      }),\r\n      shareReplay()\r\n    )),\r\n    error,\r\n    isIdle: status(s => s === \"Idle\"),\r\n    isSuccess: status(s => s === \"Success\"),\r\n    isError: status(s => s === \"Error\"),\r\n    isLoading: status(s => s === \"Loading\")\r\n  }\r\n}\r\n\r\nexport function trackOf<T>(value: T) {\r\n  return track(() => of(value));\r\n}\r\n\r\nexport function trackSend<TParams, TResult>(options: {\r\n  binding?: () => TParams,\r\n  fn: (params: TParams) => Observable<TResult>\r\n}) {\r\n  const params$ = new Subject<TParams>();\r\n\r\n  const tracking = track({\r\n    deps: [params$],\r\n    fn: params => options.fn(params)\r\n  });\r\n  let binding = options.binding == null \r\n    ? () => ({})\r\n    : options.binding; \r\n\r\n  return {\r\n    ...tracking,\r\n    send: (params?: Partial<TParams>) => {\r\n      params$.next({\r\n        ...binding(),\r\n        ...params\r\n      } as TParams);\r\n    }\r\n  }\r\n}",
            "properties": [
                {
                    "name": "deps",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<TParams>[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "fn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "UpdateDocMoveCommand",
            "id": "interface-UpdateDocMoveCommand-7a10aa12ff27527eb09d15655a13296f3272a657e306bf0abfb2f9a70c9852030897580ab65b24ca7e541325f18b988a6a64f9a868257762d328635a65970529",
            "file": "src/app/core/http/queues.api.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { environment } from \"src/environments/environment\";\r\nimport { createApi } from \"./create-api\";\r\nimport { memoize } from \"lodash-es\";\r\nimport { trackSend } from \"src/app/shared/rxjs\";\r\n\r\nexport interface UpdateDocMoveCommand {\r\n  documentId: number,\r\n  queueId: number,\r\n  success: boolean,\r\n  note: Nullable<string>,\r\n  img64: Nullable<string>\r\n}\r\n\r\nexport interface QueueMovedInfo {\r\n  Message: string,\r\n  MovedToQueueId: number\r\n}\r\n\r\nexport const useQueuesApi = createApi({\r\n  baseUrl: `${environment.siteDocsApi}/QueuesApi`,\r\n  endpoints: ({ post }) => ({\r\n    updateDocMove: post<QueueMovedInfo, UpdateDocMoveCommand>({ path: \"UpdateDocMove\" })\r\n  })\r\n});\r\n\r\nexport const useUpdateDocMove = memoize(() => {\r\n  const { updateDocMove } = useQueuesApi();\r\n\r\n  return trackSend({\r\n    fn: (params: UpdateDocMoveCommand) => updateDocMove(params)\r\n  });\r\n});",
            "properties": [
                {
                    "name": "documentId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "img64",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Nullable<string>",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "note",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Nullable<string>",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "queueId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "success",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "User",
            "id": "interface-User-853a61b57e97b1015338c1b3ad545ff7256fef0ca9acee4db5fd449e1c7e81fa68592cbea8c7e1b7dbac8501a6598d2487ebbfe41af8e6a90d93a03da6fa4117",
            "file": "src/app/core/stores/user/user.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\r\nimport { inject, Injectable } from \"@angular/core\";\r\nimport { createStore, propsFactory } from \"@ngneat/elf\";\r\nimport { localStorageStrategy, persistState } from \"@ngneat/elf-persist-state\";\r\nimport { combineLatest, Observable, switchMap } from \"rxjs\";\r\nimport { getDeviceString, getDeviceUuid } from \"src/app/shared/plugins/device.plugin\";\r\nimport { pipeTap, selector } from \"src/app/shared/rxjs\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\nexport interface User {\r\n  Id: number,\r\n  LastName: string,\r\n  FirstName: string,\r\n  CompanyId: number,\r\n  CompanyName: string,\r\n  Colour: string,\r\n  FontColour: string,\r\n  Token: string,\r\n  Pin: string,\r\n  Site: Site,\r\n  DocumentListingTab: \"Recent\" | \"Pinned\" | \"Issued\",\r\n  IsInSupervisorRole: boolean,\r\n  HasRegisteredPlayerId: number,\r\n  HasAssets: boolean,\r\n  HasAssetCreation: boolean,\r\n  HasDocQrCodes: boolean,\r\n  HasHadWifiPreferenceChecked: boolean,\r\n  HasUpdateableDocs: boolean,\r\n  HasDocQueues: boolean,\r\n  HasCompanies: boolean,\r\n  HasDataTouchAreas: boolean,\r\n  HasQueueSupervisors: boolean,\r\n  HasCategoryActioners: boolean,\r\n  UserSites: Site[],\r\n  UserCompanies: Company[],\r\n  HasPlanningMeeting: boolean,\r\n  HasReviewMeeting: boolean,\r\n  HasCollabPlanning: boolean,\r\n  HasRandomOperativebarcodes: boolean,\r\n  HasLiveQueues: boolean,\r\n  HasResAreas:boolean,\r\n  HasHideOperativeScan: boolean,\r\n  HasSites: boolean,\r\n  HasDocDrop: boolean,\r\n  HasBasicOpInfo: boolean,\r\n  HasSimpleSwipes: boolean,\r\n  HasProjectsOnDocDrop: boolean,\r\n  HasCustomLookups: boolean,\r\n  HasTemplateSender: boolean,\r\n  HasMyOpInfo: boolean,\r\n  HasViewDocumentAsSinglePage: boolean,\r\n  HasShowParentAnswersOnChildDoc: boolean,\r\n  HasCompanySelectWithOtherOption:boolean,\r\n  HideSearchOnOperativeInfo: boolean,\r\n  HideSearchOnOperativeAccess: boolean,\r\n  CanAddOperativesToDocsByName: boolean,\r\n  HasRamsList: boolean,\r\n  CanAddAsssetsToDocsByName: boolean,\r\n  ShowWeightingsOnApp: boolean,\r\n  TemplatesLastUpdate: Date,\r\n  Url: string,\r\n  UseFingerReader: boolean,\r\n  SelectedSite?: Site,\r\n  NavTab: \"Modules\" | \"Documents\",\r\n  NumberOfTemplates: number,\r\n  DownloadedTemplates: number,\r\n  //PermittedCategories: DocCategory[],\r\n  HasOperativeInfo: boolean,\r\n  CanOffHireAssets: boolean,\r\n  CanViewOtherOperativeInfo: boolean,\r\n  CanModifyOperativeQRs: boolean,\r\n  CanAddQRsToAssets: boolean\r\n}\r\n\r\nexport interface Site {\r\n  Id: number,\r\n  Name: string\r\n}\r\n\r\nexport interface Company {\r\n  Id: number,\r\n  Name: string\r\n}\r\n\r\nexport interface Area {\r\n  Id: number,\r\n  SiteId: number,\r\n  Name: string\r\n}\r\n\r\nconst {\r\n  withAppUser, \r\n  selectAppUser, \r\n  setAppUser\r\n} = propsFactory(\"appUser\", { initialValue: null as User | null });\r\n\r\nconst store = createStore(\r\n  { name: \"user\" },\r\n  withAppUser()\r\n);\r\n\r\nconst userSelector = selector(store.pipe(selectAppUser()));\r\nconst sites$ = userSelector(user => user?.UserSites || []);\r\n\r\nconst setAppUserUpdate = pipeTap<User>(user => store.update(setAppUser(user)));\r\n\r\npersistState(store, {\r\n  key: \"user\",\r\n  storage: localStorageStrategy\r\n});\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class UserStore {\r\n  httpClient = inject(HttpClient);\r\n\r\n  user$ = store.pipe(selectAppUser());\r\n  sites$ = sites$;\r\n  companies$ = userSelector(user => user?.UserCompanies || []);\r\n\r\n  getUserRequest$ = (action$: Observable<{ token: string, pin: string }>) => combineLatest({\r\n    login: action$,\r\n    deviceId: getDeviceUuid(),\r\n    deviceString: getDeviceString() \r\n  }).pipe(\r\n    switchMap(({ login, deviceId, deviceString }) => this.httpClient.post<User>(`${environment.siteDocsApi}/LoginApi/LoginSiteDocumentsApp`, {\r\n      deviceId,\r\n      deviceString\r\n    }, {\r\n      headers: {\r\n        appToken: login.token,\r\n        appPin: login.pin\r\n      }\r\n    })),\r\n    setAppUserUpdate()\r\n  );\r\n}",
            "properties": [
                {
                    "name": "CanAddAsssetsToDocsByName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "CanAddOperativesToDocsByName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "CanAddQRsToAssets",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 72
                },
                {
                    "name": "CanModifyOperativeQRs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 71
                },
                {
                    "name": "CanOffHireAssets",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 69
                },
                {
                    "name": "CanViewOtherOperativeInfo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 70
                },
                {
                    "name": "Colour",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "CompanyId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "CompanyName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "DocumentListingTab",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"Recent\" | \"Pinned\" | \"Issued\"",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "DownloadedTemplates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 66
                },
                {
                    "name": "FirstName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "FontColour",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "HasAssetCreation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "HasAssets",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "HasBasicOpInfo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "HasCategoryActioners",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "HasCollabPlanning",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "HasCompanies",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "HasCompanySelectWithOtherOption",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "HasCustomLookups",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "HasDataTouchAreas",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "HasDocDrop",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "HasDocQrCodes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "HasDocQueues",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "HasHadWifiPreferenceChecked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "HasHideOperativeScan",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "HasLiveQueues",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "HasMyOpInfo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "HasOperativeInfo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 68
                },
                {
                    "name": "HasPlanningMeeting",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "HasProjectsOnDocDrop",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "HasQueueSupervisors",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "HasRamsList",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "HasRandomOperativebarcodes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "HasRegisteredPlayerId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "HasResAreas",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "HasReviewMeeting",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "HasShowParentAnswersOnChildDoc",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "HasSimpleSwipes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "HasSites",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "HasTemplateSender",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "HasUpdateableDocs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "HasViewDocumentAsSinglePage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "HideSearchOnOperativeAccess",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "HideSearchOnOperativeInfo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "Id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "IsInSupervisorRole",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "LastName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "NavTab",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"Modules\" | \"Documents\"",
                    "optional": false,
                    "description": "",
                    "line": 64
                },
                {
                    "name": "NumberOfTemplates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 65
                },
                {
                    "name": "Pin",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "SelectedSite",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Site",
                    "optional": true,
                    "description": "",
                    "line": 63
                },
                {
                    "name": "ShowWeightingsOnApp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 59
                },
                {
                    "name": "Site",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Site",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "TemplatesLastUpdate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 60
                },
                {
                    "name": "Token",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "Url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "UseFingerReader",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "UserCompanies",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Company[]",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "UserSites",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Site[]",
                    "optional": false,
                    "description": "",
                    "line": 34
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ValidationData",
            "id": "interface-ValidationData-c7959f7440ffcc3f7e62a4ddc4c7de3b0161d7b2e791d3c870e61d9c7beefced3f38a328f62f1a879861bd7f2b720c6a0a83bd38547d74e5da6d4aabfde0f9ba",
            "file": "src/app/core/stores/site-document/models/site-document.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { PointGroup } from \"signature_pad\";\r\n\r\nexport interface SiteDocument {\r\n  DocumentID: number;\r\n  DocumentTitle: string;\r\n  Subtitle: string;\r\n  Preamble: string;\r\n  Pinned: boolean;\r\n  Pages: Page[];\r\n  AllowAnon: boolean;\r\n  RemainAnon: boolean;\r\n  ChildTemplateID: number;\r\n  Queues: Queue[],\r\n  DocumentGroup: string;\r\n  DocumentCategory?: number;\r\n  CanCreateHotspot: boolean;\r\n  CanBeAddedToHotspot?: boolean;\r\n  CanBeSavedAsDraft?: boolean;\r\n  CanAddActionerFromApp: boolean;\r\n  CanAddCategoryActioner: boolean;\r\n  CanCreateAssetsFromDocument: boolean;\r\n  CanHaveQueueDuration: boolean;\r\n  CanHaveDocumentLevelImages: boolean;\r\n  CanHaveDocLevelPhotoRoll: boolean;\r\n  CurrentActionerOperativeID?: number;\r\n  CompanyActionerId?: number;\r\n  ShowDocLevelPhotoButtonAtStartOfDoc: boolean;\r\n  CanAddAsset?: boolean;\r\n  CanAddOperative?: boolean;\r\n  CanHaveCompanyActioner: boolean;\r\n  MetaData: Partial<SiteDocumentMetaData>;\r\n  SiteDocumentType: number,\r\n  SiteId?: number;\r\n  AutoQueueID?: number;\r\n  QueueDuration?: QueueDuration;\r\n  DocumentResponsibilityAreaTypeId?: number;\r\n  DocumentResponsibilityAreaId?: number;\r\n  ReqGps: boolean;\r\n  PageIdx: number;\r\n  Images: string[];\r\n}\r\n\r\nexport interface Queue {\r\n  Id: number,\r\n  Name: string\r\n}\r\n\r\nexport interface QueueDuration {\r\n  Value: number;\r\n  Type: \"Mins\" | \"Hours\" | \"Days\";\r\n}\r\n\r\nexport interface SiteDocumentImage {\r\n  Id: string,\r\n  DocumentId: number,\r\n  Base64: string,\r\n}\r\n\r\nexport interface SiteDocumentMetaData {\r\n  ActionerText: string;\r\n  CanBeEditableDocument: boolean;\r\n  CannotAddSelfAsActioner: boolean;\r\n  ColourHex: string;\r\n  QueueSelectorTitle: string;\r\n  HasSiteList: boolean;\r\n  SiteListTitle: string;\r\n  UsesRadioGroupTable: boolean;\r\n}\r\n\r\nexport interface SiteDocumentAsset {\r\n  AssetID: number;\r\n  Tag: string;\r\n  Name: string;\r\n  QRCode?: string;\r\n  TemplateID?: number;\r\n}\r\n\r\nexport interface SiteDocumentOperative {\r\n  AttendeeID: number;\r\n  Name: string;\r\n  DateAttended: Date;\r\n}\r\n\r\nexport interface Page {\r\n  PageID: number;\r\n  PageTitle: string;\r\n  PageNo: number;\r\n  Sections: Section[];\r\n  Hidden: boolean;\r\n}\r\n\r\nexport interface Section {\r\n  SectionID: number;\r\n  SectionNo: number;\r\n  SectionTitle: string;\r\n  Questions: Question[];\r\n  SectionQuestiontype: QuestionType;\r\n  IsRepeatable: boolean;\r\n  TableTitles: string[];\r\n  Hidden: boolean;\r\n}\r\n\r\nexport enum QuestionType {\r\n  Label = 0,\r\n  Checkbox = 1,\r\n  RadioGroup = 2,\r\n  Textbox = 3,\r\n  TextArea = 4,\r\n  Select = 5,\r\n  CheckboxTextbox = 6,\r\n  RadioGroupTextbox = 7,\r\n  Date = 8,\r\n  DateTime = 9,\r\n  OperativeList = 10,\r\n  WallOfText = 11,\r\n  Number = 12,\r\n  CascadeDropdown = 13,\r\n  LinkedBool = 16,\r\n  AssetList = 17,\r\n  LinkedDates = 18,\r\n  Signature = 19,\r\n  CompanySelect = 21,\r\n  AreaSelect = 22,\r\n  AssetGroupsAndTypes = 25,\r\n  AssetInspectionSchedule = 26,\r\n  ProjectSelect = 27,\r\n  RamsSelect = 28,\r\n  SelectText = 29,\r\n  CascadeDropdownText = 30,\r\n  MultiCascade = 31,\r\n  Time = 32,\r\n  LinkedTimes = 33,\r\n  HraSelect = 34,\r\n  MultiCheckbox = 35,\r\n  LinkedDateAndTime = 36\r\n}\r\n\r\nexport interface Question {\r\n  QuestionID: number;\r\n  QuestionText: string;\r\n  CascadeOptionsText: string;\r\n  CommentsText: string;\r\n  Assets: SiteDocumentAsset[];\r\n  Operatives: SiteDocumentOperative[];\r\n  Required: boolean;\r\n  AnswerText: string;\r\n  AdditionalText?: string;\r\n  MoreAdditionalText?: string;\r\n  DateAndTime: Nullable<Date>;\r\n  DateAndTime2: Nullable<Date>;\r\n  NumberVal?: number;\r\n  OptionVal?: string | null;\r\n  SelectedOptionText?: Nullable<string>;\r\n  SelectedCascadeOptionText?: Nullable<string>;\r\n  File?: Nullable<string>;\r\n  Img?: Nullable<string>;\r\n  AnswerOptions: SelectOption[];\r\n  CascadeOptions: CascadeOption[];\r\n  CascadeOptionVal?: string | null;\r\n  YesNoNA: boolean | null;\r\n  CanHaveImg: boolean;\r\n  CanHaveFiles: boolean;\r\n  CanUsePhotoLib: boolean;\r\n  SignatureArray?: number[];\r\n  SignaturePoints?: PointGroup[];\r\n  SignatureDataUrl?: string;\r\n  ValidationData: ValidationData[];\r\n  Hidden: boolean;\r\n  Disabled?: boolean;\r\n}\r\n\r\nexport function useValidationData(rules: ValidationData[]) {\r\n  const min = rules.find(r => r.Key === \"Min\")?.Value.toNumber();\r\n  const max = rules.find(r => r.Key === \"Max\")?.Value.toNumber();\r\n\r\n  return {\r\n    min,\r\n    max\r\n  }\r\n}\r\n\r\nexport function minDate(question: Question) {\r\n  const min = question.ValidationData.find(r => r.Key === \"Min\")?.Value.toNumber();\r\n\r\n  return min != null\r\n    ? new Date().subtrackHours(min)\r\n    : null;\r\n}\r\n\r\nexport function maxDate(question: Question) {\r\n  const max = question.ValidationData.find(r => r.Key === \"Max\")?.Value.toNumber();\r\n\r\n  return max != null\r\n    ? new Date().addHours(max)\r\n    : null;\r\n}\r\n\r\nexport function spreadDate(question: Question) {\r\n  const spread = question.ValidationData.find(r => r.Key === \"Spread\")?.Value.toNumber();\r\n  const max = question.ValidationData.find(r => r.Key === \"Max\")?.Value.toNumber();  \r\n\r\n  const hours = spread != null && max != null\r\n    ? spread > max\r\n      ? spread\r\n      : max\r\n    : spread != null\r\n      ? spread\r\n      : max;\r\n\r\n  return hours != null\r\n    ? new Date().addHours(hours)\r\n    : null;\r\n}\r\n\r\nexport interface ValidationData {\r\n  Key: \"Min\" | \"Max\" | \"Spread\",\r\n  Value: string,\r\n  Msg: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  Active?: boolean;\r\n  Text: string;\r\n  Val: string;\r\n  MetaData?: any;\r\n  OptionsMetadataJson?: string;\r\n}\r\n\r\nexport interface SelectOptionMetaData {\r\n  ColourHex?: string;\r\n}\r\n\r\nexport interface CascadeOption { \r\n  ParentVal: string, \r\n  Text: string, \r\n  Val: string \r\n}",
            "properties": [
                {
                    "name": "Key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"Min\" | \"Max\" | \"Spread\"",
                    "optional": false,
                    "description": "",
                    "line": 216
                },
                {
                    "name": "Msg",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 218
                },
                {
                    "name": "Value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 217
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "Api",
            "id": "injectable-Api-b15720cc36c571580a641c16e74110c410fb41ebbe94d91cd35c1dccc228e7e3a0b2bdb7655614ea04c800da332e66e3844344cac42d20f59dfa980855948942",
            "file": "src/app/core/http/api.ts",
            "properties": [
                {
                    "name": "baseUrl",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "httpClient",
                    "defaultValue": "inject(HttpClient)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methods": [
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Func<Observable<R>>",
                    "typeParameters": [
                        "R"
                    ],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "opts",
                            "type": "Request<T>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Func<Observable<R>, T>",
                    "typeParameters": [
                        "R",
                        "T"
                    ],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "opts",
                            "type": "Request<T>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "get",
                    "args": [
                        {
                            "name": "opts",
                            "type": "string | Request<T>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Func | Func",
                    "typeParameters": [
                        "R",
                        "T"
                    ],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "opts",
                            "type": "string | Request<T>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "post",
                    "args": [
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Func<Observable<R>>",
                    "typeParameters": [
                        "R"
                    ],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "path",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "post",
                    "args": [
                        {
                            "name": "opts",
                            "type": "Request<T>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Func<Observable<R>, T>",
                    "typeParameters": [
                        "R",
                        "T"
                    ],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "opts",
                            "type": "Request<T>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "post",
                    "args": [
                        {
                            "name": "opts",
                            "type": "string | Request<T>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Func | Func",
                    "typeParameters": [
                        "R",
                        "T"
                    ],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "opts",
                            "type": "string | Request<T>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable, inject } from \"@angular/core\";\r\nimport { Params } from \"@angular/router\";\r\nimport { omitBy } from \"lodash-es\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nexport interface Request<TParams> {\r\n  path: string,\r\n  params?: (params: TParams) => object,\r\n  headers?: (params: TParams) => object\r\n}\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class Api {\r\n  httpClient = inject(HttpClient);\r\n  baseUrl: string = \"\";\r\n\r\n  get<R>(path: string): Func<Observable<R>>\r\n  get<R, T>(opts: Request<T>): Func<Observable<R>, T>\r\n  get<R, T>(opts: string | Request<T>): Func<Observable<R>> | Func<Observable<R>, T> {\r\n    return typeof opts === \"string\"\r\n      ? () => this.httpClient.get<R>(`${this.baseUrl}/${opts}`)\r\n      : (params: T) => this.httpClient.get<R>(`${this.baseUrl}/${opts.path}`, {\r\n        params: opts.params != null\r\n          ? opts.params(params) as Params\r\n          : params != null\r\n          ? omitBy(params, val => val == null) as Params\r\n          : {}\r\n      });\r\n  }\r\n\r\n  post<R>(path: string): Func<Observable<R>>\r\n  post<R, T>(opts: Request<T>): Func<Observable<R>, T>\r\n  post<R, T>(opts: string | Request<T>): Func<Observable<R>> | Func<Observable<R>, T> {\r\n    return typeof opts === \"string\"\r\n      ? () => this.httpClient.post<R>(`${this.baseUrl}/${opts}`, {})\r\n      : (params: T) => this.httpClient.post<R>(`${this.baseUrl}/${opts.path}`, \r\n        opts.params != null\r\n          ? opts.params(params) as Params\r\n          : params != null\r\n          ? omitBy(params, val => val == null) as Params\r\n          : {}\r\n      )\r\n  }\r\n}\r\n\r\nexport function useApi(baseUrl: string) {\r\n  const api = inject(Api);\r\n\r\n  api.baseUrl = baseUrl;\r\n  return api;\r\n}",
            "type": "injectable"
        },
        {
            "name": "AppErrorHandler",
            "id": "injectable-AppErrorHandler-014250582d32cef00edfca3c3a0245a18e4123ca255451397ad5704c19d1ff1593f767fad19cc8a737b8aef01dbf417da925a1e4737fe661c76c0d51e20ed38d",
            "file": "src/app/app.error-handler.ts",
            "properties": [
                {
                    "name": "toast",
                    "defaultValue": "useToast({\r\n    header: \"Error\",\r\n    buttons: [\r\n      {\r\n        icon: \"close-outline\"\r\n      }\r\n    ],\r\n    duration: 4000\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "methods": [
                {
                    "name": "handleError",
                    "args": [
                        {
                            "name": "error",
                            "type": "Error | HttpErrorResponse",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "error",
                            "type": "Error | HttpErrorResponse",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpErrorResponse } from \"@angular/common/http\";\r\nimport { ErrorHandler, Injectable } from \"@angular/core\";\r\nimport { useToast } from \"./shared/services/toast\";\r\n\r\n@Injectable()\r\nexport class AppErrorHandler implements ErrorHandler {\r\n  toast = useToast({\r\n    header: \"Error\",\r\n    buttons: [\r\n      {\r\n        icon: \"close-outline\"\r\n      }\r\n    ],\r\n    duration: 4000\r\n  });\r\n\r\n  handleError(error: Error | HttpErrorResponse) {\r\n    if (error instanceof HttpErrorResponse) {\r\n      // Server Error\r\n      this.toast.present({\r\n        message: error.message\r\n      });\r\n    } else {\r\n      // Client Error\r\n      this.toast.present({\r\n        message: !navigator.onLine \r\n          ? \"No Internet Connection\"\r\n          : error?.message \r\n          || error.toString()\r\n      });\r\n    }\r\n\r\n    console.error(error);\r\n  }\r\n}",
            "type": "injectable"
        },
        {
            "name": "FormFillerStore",
            "id": "injectable-FormFillerStore-c2be98fffa7ec3ef9d374c97515526030466fc8b8f692ec4c721d9c75e06b55b91db2588bc54399f129804f9964bc9e7d2971d09806048451193ca2c25e1224b",
            "file": "src/app/core/stores/site-document/form-filler/form-filler.store.ts",
            "properties": [
                {
                    "name": "getTemplateRequest$",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "getTemplatesRequest$",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "http",
                    "defaultValue": "inject(HttpClient)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "submitDocument$",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "writingDocument$",
                    "defaultValue": "selectWritingDocument()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\r\nimport { inject, Injectable } from \"@angular/core\";\r\nimport { createStore } from \"@ngneat/elf\";\r\nimport { entitiesPropsFactory } from \"@ngneat/elf-entities\";\r\nimport { Observable, switchMap } from \"rxjs\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { withWritingDocument } from \"../props\";\r\nimport { writingDocumentAdapter } from \"../adapters/writing-document.adapter\";\r\nimport { SiteDocument } from \"../models\";\r\n\r\nexport interface TemplateMenuItem {\r\n  Id: number;\r\n  Title: string;\r\n  SiteDocumentType: number;\r\n  RevNo: number;\r\n}\r\n\r\nconst { withTemplateMenuEntities } = entitiesPropsFactory(\"templateMenu\");\r\n\r\nconst store = createStore(\r\n  { name: \"form-filler\" },\r\n  withWritingDocument(null as SiteDocument | null),\r\n  withTemplateMenuEntities<TemplateMenuItem, \"Id\">({ idKey: \"Id\", initialValue: [] })\r\n);\r\n\r\nconst { \r\n  selectWritingDocument, \r\n  setWritingDocument \r\n} = writingDocumentAdapter(store);\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class FormFillerStore {\r\n  protected http = inject(HttpClient);\r\n\r\n  writingDocument$ = selectWritingDocument();\r\n\r\n  getTemplateRequest$ = (action$: Observable<number>) => action$.pipe(\r\n    switchMap(id => this.http.get<SiteDocument>(`${environment.siteDocsApi}/TemplateApi/GetDocumentTemplate`, {\r\n      params: {\r\n        id: id!.toString()\r\n      }\r\n    })),\r\n    setWritingDocument()\r\n  );\r\n\r\n  getTemplatesRequest$ = () => this.http.get<SiteDocument[]>(`${environment.siteDocsApi}/TemplateApi/`).pipe(\r\n    \r\n  );\r\n\r\n  submitDocument$ = (action$: Observable<SiteDocument>) => action$.pipe(\r\n    switchMap(doc => this.http.post<number>(`${environment.siteDocsApi}/TemplateApi/UploadDocument`, doc))\r\n  );\r\n}",
            "type": "injectable"
        },
        {
            "name": "LiveQueuesStore",
            "id": "injectable-LiveQueuesStore-6ae04e27af71dc6fe72681cc0f7599954569a976ca8f41fd2987179a13271d2ad1cd908773969b69b1112191fcf8eb5a96be7ee5e391f9ae0412b85cc6edfb1e",
            "file": "src/app/core/stores/live-queues/live-queues.store.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\r\n\r\n// const store = createStore(\r\n//   { name: \"live-queues\" },\r\n//   withProps<{ hideEmptyQueues: boolean }>({\r\n//     hideEmptyQueues: false\r\n//   })\r\n// );\r\n\r\n// const toggleHideEmptyQueues = () => store.update(\r\n//   setProp(\"hideEmptyQueues\", prop => !prop)\r\n// );\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class LiveQueuesStore {\r\n  \r\n}\r\n",
            "type": "injectable"
        },
        {
            "name": "OneSignalService",
            "id": "injectable-OneSignalService-e78ff462076a7fccd0567c75effd1633d725b18c3d6b1b6d1f66e201fb21ce0892fa0e188810ea18fc4a573992c808fb53d3dd49ff5b284c779626cd4a6844df",
            "file": "src/app/shared/services/onesignal/onesignal.service.ts",
            "properties": [
                {
                    "name": "notificationReceived",
                    "defaultValue": "use<NotificationReceivedEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "toast$",
                    "defaultValue": "this.notificationReceived(\r\n    map(nr => nr.getNotification()),\r\n    switchMap(notification => this.toastCtrl.create({\r\n      header: notification.title,\r\n      message: notification.body,\r\n      duration: 5000,\r\n      position: \"top\"\r\n    })),\r\n    tap(toast => toast.present())\r\n  )()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "toastCtrl",
                    "defaultValue": "inject(ToastController)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methods": [
                {
                    "name": "startup",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { inject, Injectable } from \"@angular/core\";\r\nimport { Device } from \"@capacitor/device\";\r\nimport { ToastController } from \"@ionic/angular\";\r\nimport OneSignal from \"onesignal-cordova-plugin\";\r\nimport NotificationReceivedEvent from \"onesignal-cordova-plugin/dist/NotificationReceivedEvent\";\r\nimport { map, switchMap, tap } from \"rxjs\";\r\nimport { use } from \"../../rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class OneSignalService {\r\n  protected toastCtrl = inject(ToastController);\r\n  protected notificationReceived = use<NotificationReceivedEvent>();\r\n\r\n  protected toast$ = this.notificationReceived(\r\n    map(nr => nr.getNotification()),\r\n    switchMap(notification => this.toastCtrl.create({\r\n      header: notification.title,\r\n      message: notification.body,\r\n      duration: 5000,\r\n      position: \"top\"\r\n    })),\r\n    tap(toast => toast.present())\r\n  )();\r\n\r\n  async startup() {\r\n    const device = await Device.getInfo();\r\n\r\n    if (device.platform === \"web\")\r\n      return;\r\n\r\n    this.toast$.subscribe();\r\n\r\n    OneSignal.setAppId(\"\");\r\n\r\n    OneSignal.promptForPushNotificationsWithUserResponse(() => \r\n      OneSignal.setNotificationWillShowInForegroundHandler(notification => this.notificationReceived.next(notification))\r\n    );\r\n  }\r\n}\r\n",
            "type": "injectable"
        },
        {
            "name": "ResponsibilityAreaTypesStore",
            "id": "injectable-ResponsibilityAreaTypesStore-939de3da069ba66b6240a9296476df2f670a51cbe802dc1846bbf6fbfea2389c84b5753e87e9023e3428fa08653289eeb418e48939e792a252b3ed0722c45877",
            "file": "src/app/core/stores/responsibility-area-types/responsibility-area-types.store.ts",
            "properties": [
                {
                    "name": "responsibilityAreaTypeById$",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "responsibilityAreaTypes$",
                    "defaultValue": "store.pipe(selectAllEntities())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\r\nimport { createStore } from \"@ngneat/elf\";\r\nimport { selectAllEntities, withEntities } from \"@ngneat/elf-entities\";\r\nimport { map } from \"rxjs\";\r\n\r\nexport interface ResponsibilityArea {\r\n  Id: number,\r\n  Name: string,\r\n  DocResAreaTypeId: number,\r\n  SiteId?: number\r\n}\r\n\r\nexport interface ResponsibilityAreaType {\r\n  Id: number,\r\n  TypeName: string,\r\n  AppQuestionText: string,\r\n  Areas: ResponsibilityArea[]\r\n}\r\n\r\nconst store = createStore(\r\n  { name: \"responsibility-area-types\" },\r\n  withEntities<ResponsibilityAreaType, \"Id\">({ idKey: \"Id\" })\r\n);\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class ResponsibilityAreaTypesStore {\r\n  responsibilityAreaTypes$ = store.pipe(selectAllEntities());\r\n  responsibilityAreaTypeById$ = (id: number) => this.responsibilityAreaTypes$.pipe(\r\n    map(resAreaTypes => resAreaTypes.find(t => t.Id === id))\r\n  );\r\n}\r\n",
            "type": "injectable"
        },
        {
            "name": "TemplateApi",
            "id": "injectable-TemplateApi-7731104ece926c5bf6db944b2db8a1a00beed638dc451d7059660d038311b647d6ee121301ca4223b701dbfb44daf1c400f4ae6fb89f1133509c53cc576b1a28",
            "file": "src/app/core/http/template.api.ts",
            "properties": [
                {
                    "name": "httpClient",
                    "defaultValue": "inject(HttpClient)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getTemplate",
                    "args": [
                        {
                            "name": "params",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "params",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getTemplates",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable, inject } from \"@angular/core\";\r\nimport { SiteDocument } from \"../stores/site-document/models\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { EMPTY, Observable, expand, map, of, reduce, switchMap } from \"rxjs\";\r\nimport { memoize, orderBy } from \"lodash-es\";\r\nimport { createApi } from \"./create-api\";\r\nimport { track } from \"src/app/shared/rxjs\";\r\nimport { param } from \"src/app/shared/route\";\r\n\r\nexport interface TemplateItem {\r\n  Id: number,\r\n  Title: string\r\n}\r\n\r\nexport interface PaginatedList<T> {\r\n  Items: T[],\r\n  PageNumber: number,\r\n  TotalPage: number,\r\n  TotalCount: number,\r\n  HasPreviousPage: boolean,\r\n  HasNextPage: boolean\r\n}\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class TemplateApi {\r\n  protected httpClient = inject(HttpClient);\r\n\r\n  getTemplates() {\r\n    return this.httpClient.get<PaginatedList<SiteDocument>>(`${environment.siteDocsApi}/TemplateApi/GetLatestTemplatesWithPagination`, {\r\n      params: {\r\n        pageNumber: 1,\r\n        pageSize: 20\r\n      }\r\n    }).pipe(\r\n      expand((res, idx) => res.HasNextPage\r\n        ? this.httpClient.get<PaginatedList<SiteDocument>>(`${environment.siteDocsApi}/TemplateApi/GetLatestTemplatesWithPagination`, {\r\n          params: {\r\n            pageNumber: idx + 2,\r\n            pageSize: 20\r\n          }\r\n        })\r\n        : EMPTY\r\n      ),\r\n      map(res => res.Items),\r\n      reduce((acc, docs) => [...acc, ...docs]),\r\n      map(tpls => orderBy(tpls, \"DocumentTitle\"))\r\n    )\r\n  }\r\n\r\n  getTemplate(params: { id: number }) {\r\n    return this.httpClient.get<SiteDocument>(`${environment.siteDocsApi}/TemplateApi/GetDocumentTemplate`, {\r\n      params: {\r\n        id: params.id.toString()\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport const useTemplateApi = createApi({\r\n  baseUrl: `${environment.siteDocsApi}/TemplateApi`,\r\n  endpoints: ({ get }) => ({\r\n    getAllTemplates: get<TemplateItem[]>(\"GetAllTemplates\"),\r\n    getTemplate: get<SiteDocument, { id: number }>(\"GetDocumentTemplate\"),\r\n  })\r\n});\r\n\r\nexport const useAllTemplates = memoize(() => {\r\n  const { getAllTemplates } = useTemplateApi();\r\n\r\n  return track(() => getAllTemplates());\r\n});\r\n\r\nexport const useTemplate = (id$: Observable<Nullable<number>>) => {\r\n  const { getTemplate } = useTemplateApi();\r\n  const loginId = param(\"loginId\") || 0;\r\n\r\n  return track(() => id$.pipe(\r\n    switchMap(id => id != null \r\n      ? getTemplate({ id }).pipe(\r\n        map(doc => ({\r\n          ...doc,\r\n          Images: [],\r\n          GroupedDocumentID: `${loginId}_${Date.now()}`,\r\n          QueueDuration: doc.CanHaveQueueDuration \r\n            ? { Value: 0, Type: \"Mins\" }\r\n            : null,\r\n          PageIdx: 1\r\n        }) as SiteDocument)\r\n      )\r\n      : of(null)\r\n    )\r\n  ));\r\n};",
            "type": "injectable"
        },
        {
            "name": "UserStore",
            "id": "injectable-UserStore-853a61b57e97b1015338c1b3ad545ff7256fef0ca9acee4db5fd449e1c7e81fa68592cbea8c7e1b7dbac8501a6598d2487ebbfe41af8e6a90d93a03da6fa4117",
            "file": "src/app/core/stores/user/user.store.ts",
            "properties": [
                {
                    "name": "companies$",
                    "defaultValue": "userSelector(user => user?.UserCompanies || [])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 118
                },
                {
                    "name": "getUserRequest$",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 120
                },
                {
                    "name": "httpClient",
                    "defaultValue": "inject(HttpClient)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 114
                },
                {
                    "name": "sites$",
                    "defaultValue": "sites$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 117
                },
                {
                    "name": "user$",
                    "defaultValue": "store.pipe(selectAppUser())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 116
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\r\nimport { inject, Injectable } from \"@angular/core\";\r\nimport { createStore, propsFactory } from \"@ngneat/elf\";\r\nimport { localStorageStrategy, persistState } from \"@ngneat/elf-persist-state\";\r\nimport { combineLatest, Observable, switchMap } from \"rxjs\";\r\nimport { getDeviceString, getDeviceUuid } from \"src/app/shared/plugins/device.plugin\";\r\nimport { pipeTap, selector } from \"src/app/shared/rxjs\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\nexport interface User {\r\n  Id: number,\r\n  LastName: string,\r\n  FirstName: string,\r\n  CompanyId: number,\r\n  CompanyName: string,\r\n  Colour: string,\r\n  FontColour: string,\r\n  Token: string,\r\n  Pin: string,\r\n  Site: Site,\r\n  DocumentListingTab: \"Recent\" | \"Pinned\" | \"Issued\",\r\n  IsInSupervisorRole: boolean,\r\n  HasRegisteredPlayerId: number,\r\n  HasAssets: boolean,\r\n  HasAssetCreation: boolean,\r\n  HasDocQrCodes: boolean,\r\n  HasHadWifiPreferenceChecked: boolean,\r\n  HasUpdateableDocs: boolean,\r\n  HasDocQueues: boolean,\r\n  HasCompanies: boolean,\r\n  HasDataTouchAreas: boolean,\r\n  HasQueueSupervisors: boolean,\r\n  HasCategoryActioners: boolean,\r\n  UserSites: Site[],\r\n  UserCompanies: Company[],\r\n  HasPlanningMeeting: boolean,\r\n  HasReviewMeeting: boolean,\r\n  HasCollabPlanning: boolean,\r\n  HasRandomOperativebarcodes: boolean,\r\n  HasLiveQueues: boolean,\r\n  HasResAreas:boolean,\r\n  HasHideOperativeScan: boolean,\r\n  HasSites: boolean,\r\n  HasDocDrop: boolean,\r\n  HasBasicOpInfo: boolean,\r\n  HasSimpleSwipes: boolean,\r\n  HasProjectsOnDocDrop: boolean,\r\n  HasCustomLookups: boolean,\r\n  HasTemplateSender: boolean,\r\n  HasMyOpInfo: boolean,\r\n  HasViewDocumentAsSinglePage: boolean,\r\n  HasShowParentAnswersOnChildDoc: boolean,\r\n  HasCompanySelectWithOtherOption:boolean,\r\n  HideSearchOnOperativeInfo: boolean,\r\n  HideSearchOnOperativeAccess: boolean,\r\n  CanAddOperativesToDocsByName: boolean,\r\n  HasRamsList: boolean,\r\n  CanAddAsssetsToDocsByName: boolean,\r\n  ShowWeightingsOnApp: boolean,\r\n  TemplatesLastUpdate: Date,\r\n  Url: string,\r\n  UseFingerReader: boolean,\r\n  SelectedSite?: Site,\r\n  NavTab: \"Modules\" | \"Documents\",\r\n  NumberOfTemplates: number,\r\n  DownloadedTemplates: number,\r\n  //PermittedCategories: DocCategory[],\r\n  HasOperativeInfo: boolean,\r\n  CanOffHireAssets: boolean,\r\n  CanViewOtherOperativeInfo: boolean,\r\n  CanModifyOperativeQRs: boolean,\r\n  CanAddQRsToAssets: boolean\r\n}\r\n\r\nexport interface Site {\r\n  Id: number,\r\n  Name: string\r\n}\r\n\r\nexport interface Company {\r\n  Id: number,\r\n  Name: string\r\n}\r\n\r\nexport interface Area {\r\n  Id: number,\r\n  SiteId: number,\r\n  Name: string\r\n}\r\n\r\nconst {\r\n  withAppUser, \r\n  selectAppUser, \r\n  setAppUser\r\n} = propsFactory(\"appUser\", { initialValue: null as User | null });\r\n\r\nconst store = createStore(\r\n  { name: \"user\" },\r\n  withAppUser()\r\n);\r\n\r\nconst userSelector = selector(store.pipe(selectAppUser()));\r\nconst sites$ = userSelector(user => user?.UserSites || []);\r\n\r\nconst setAppUserUpdate = pipeTap<User>(user => store.update(setAppUser(user)));\r\n\r\npersistState(store, {\r\n  key: \"user\",\r\n  storage: localStorageStrategy\r\n});\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class UserStore {\r\n  httpClient = inject(HttpClient);\r\n\r\n  user$ = store.pipe(selectAppUser());\r\n  sites$ = sites$;\r\n  companies$ = userSelector(user => user?.UserCompanies || []);\r\n\r\n  getUserRequest$ = (action$: Observable<{ token: string, pin: string }>) => combineLatest({\r\n    login: action$,\r\n    deviceId: getDeviceUuid(),\r\n    deviceString: getDeviceString() \r\n  }).pipe(\r\n    switchMap(({ login, deviceId, deviceString }) => this.httpClient.post<User>(`${environment.siteDocsApi}/LoginApi/LoginSiteDocumentsApp`, {\r\n      deviceId,\r\n      deviceString\r\n    }, {\r\n      headers: {\r\n        appToken: login.token,\r\n        appPin: login.pin\r\n      }\r\n    })),\r\n    setAppUserUpdate()\r\n  );\r\n}",
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [
        {
            "name": "HttpErrorInterceptor",
            "id": "injectable-HttpErrorInterceptor-741278ada41c17970f1aeb4a463074d5d89bb2c85cb92ed8bb3714b786d2c19a2fb7d2db8b9bae122ac9dfbe6f7153c6bdb07c28047c784535226f4eaf4dc92a",
            "file": "src/app/core/http/interceptors/http-error.interceptor.ts",
            "properties": [],
            "methods": [
                {
                    "name": "intercept",
                    "args": [
                        {
                            "name": "req",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<HttpEvent<any>>",
                    "typeParameters": [],
                    "line": 7,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "req",
                            "type": "HttpRequest<any>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "next",
                            "type": "HttpHandler",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpErrorResponse, HttpEvent, HttpHandler, HttpInterceptor, HttpRequest } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Observable, catchError, throwError } from \"rxjs\";\r\n\r\n@Injectable()\r\nexport class HttpErrorInterceptor implements HttpInterceptor {\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    return next.handle(req).pipe(\r\n      catchError((error: HttpErrorResponse) => {\r\n        return throwError(() => error);\r\n      })\r\n    );\r\n  }\r\n}",
            "type": "interceptor"
        }
    ],
    "classes": [
        {
            "name": "AssetListValidator",
            "id": "class-AssetListValidator-9ada3380d4747428f8430c24c30c3b2f291a809977912d26ca022f0e5ad426baab61bc639203340e3eb2023dd366fbf8cad50f7aaffb5f9b3a2efb14eba922f9",
            "file": "src/app/core/pages/document-builder/components/question-types/17-asset-list/validation/asset-list.validator.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Validator } from \"fluentvalidation-ts\";\nimport { Question } from \"src/app/core/stores/site-document/models\";\nimport { RxValidator } from \"src/app/shared/validation\";\n\nexport class AssetListValidator extends Validator<Question> {\n  constructor() {\n    super();\n\n    this.ruleFor(\"Assets\")\n      .notNull()\n      .must(items => items.length > 0)\n      .when(q => q.Required);\n\n    this.ruleFor(\"Assets\")\n      .must((operatives, question) => {\n        const min = question.ValidationData\n          .find(v => v.Key === \"Min\")!\n          .Value\n          .toNumber();\n\n        return operatives.length >= min;\n      })\n      .when(q => q.ValidationData.some(v => v.Key === \"Min\"));\n\n      this.ruleFor(\"Assets\")\n        .must((operatives, question) => {\n          const max = question.ValidationData\n            .find(v => v.Key === \"Max\")!\n            .Value\n            .toNumber();\n\n          return operatives.length <= max;\n        })\n        .when(q => q.ValidationData.some(v => v.Key === \"Max\"));\n  }\n}\n\nexport function useAssetListValidator(value: Func<Question>) {\n  return new RxValidator(new AssetListValidator(), value);\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 5
            },
            "properties": [],
            "methods": [],
            "indexSignatures": [],
            "extends": "Validator",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "CascadeSelectTextValidator",
            "id": "class-CascadeSelectTextValidator-d9361d0339dfb920b141aaaec27e01d39f383c3b61bb98715d5081ec3d11cf3341b4df2aa0e0d05a239468d3322b3446acb2ca236caad204a5faa461f33a10cc",
            "file": "src/app/core/pages/document-builder/components/question-types/30-cascade-select-text/validation/cascade-select-text.validator.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Validator } from \"fluentvalidation-ts\";\nimport { Question } from \"src/app/core/stores/site-document/models\";\n\nexport class CascadeSelectTextValidator extends Validator<Question> {\n  constructor() {\n    super();\n\n    this.ruleFor(\"OptionVal\")\n      .notNull()\n      .notEmpty()\n      .when(q => q.Required);\n\n    this.ruleFor(\"AnswerText\")\n      .notNull()\n      .notEmpty()\n      .when(q => q.OptionVal === '-1');\n\n    this.ruleFor(\"MoreAdditionalText\")\n      .notNull()\n      .notEmpty()\n      .when(q => q.Required);\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 4
            },
            "properties": [],
            "methods": [],
            "indexSignatures": [],
            "extends": "Validator",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "CascadeSelectValidator",
            "id": "class-CascadeSelectValidator-c4974e691a4c2ba46a78f0b7724ef71b6c516af130bd2495403ade9f9dba285742d26e34b78c8722c65dcbe52f08a9effd35b6f3240b965e98d1840f78d9dd7a",
            "file": "src/app/core/pages/document-builder/components/question-types/13-cascade-select/validation/cascade-select.validator.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Validator } from \"fluentvalidation-ts\";\nimport { Question } from \"src/app/core/stores/site-document/models\";\nimport { RxValidator } from \"src/app/shared/validation\";\n\nexport class CascadeSelectValidator extends Validator<Question> {\n  constructor() {\n    super();\n\n    this.ruleFor(\"CascadeOptionVal\")\n      .notNull()\n      .notEmpty()\n      .when(q => q.Required);\n  }\n}\n\nexport function useCascadeSelectValidator(value: Func<Question>) {\n  return new RxValidator(new CascadeSelectValidator(), value);\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 5
            },
            "properties": [],
            "methods": [],
            "indexSignatures": [],
            "extends": "Validator",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "CheckboxTextboxValidator",
            "id": "class-CheckboxTextboxValidator-7ffcdcb27f46a028abfba387bf1025b502355d8756656de97425c225a6c2e8dbbc92b05ca5e8a395412d24dc0eb3c09a9a10d6242f732dad2b162a1a9ff5130d",
            "file": "src/app/core/pages/document-builder/components/question-types/06-checkbox-textbox/validation/checkbox-textbox.validator.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Validator } from \"fluentvalidation-ts\";\nimport { Question } from \"src/app/core/stores/site-document/models\";\nimport { RxValidator } from \"src/app/shared/validation\";\n\nexport class CheckboxTextboxValidator extends Validator<Question> {\n  constructor() {\n    super();\n\n    this.ruleFor(\"YesNoNA\")\n      .equal(true)\n      .when(q => q.Required);\n\n    this.ruleFor(\"AnswerText\")\n      .notNull()\n      .notEmpty()\n      .when(q => q.Required);\n  }\n}\n\nexport function useCheckboxTextboxValidator(value: Func<Question>) {\n  return new RxValidator(new CheckboxTextboxValidator(), value)\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 5
            },
            "properties": [],
            "methods": [],
            "indexSignatures": [],
            "extends": "Validator",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "CheckboxValidator",
            "id": "class-CheckboxValidator-21d65f421031340fb735e8c19bb0549c4fb647ce1c39e7c3f04a2cd1ff3372281dbead58f436e1273f6d4b2a1bd3f339005a96e579472612e6b6bcffa0f90c24",
            "file": "src/app/core/pages/document-builder/components/question-types/01-checkbox/validation/checkbox.validator.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Validator } from \"fluentvalidation-ts\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { RxValidator } from \"src/app/shared/validation\";\r\n\r\nexport class CheckboxValidator extends Validator<Question> {\r\n  constructor() {\r\n    super();\r\n\r\n    this.ruleFor(\"YesNoNA\")\r\n      .equal(true)\r\n      .when(q => q.Required)\r\n  }\r\n}\r\n\r\nexport function useCheckboxValidator(value: Func<Question>) {\r\n  return new RxValidator(new CheckboxValidator(), value);\r\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 5
            },
            "properties": [],
            "methods": [],
            "indexSignatures": [],
            "extends": "Validator",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "LabelValidator",
            "id": "class-LabelValidator-eda52a65a3bbdb2c2dca8ccb1bc9089880832820adf39786be69cc875863c022fe722a12c278fd802ccdcadd52a5707636f3d2e6a80adbde8f2f6498e50f7f41",
            "file": "src/app/core/pages/document-builder/components/question-types/00-label/validation/label.validator.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Validator } from \"fluentvalidation-ts\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { RxValidator } from \"src/app/shared/validation\";\r\n\r\nexport class LabelValidator extends Validator<Question> {\r\n  constructor() {\r\n    super();\r\n\r\n    this.ruleFor(\"File\")\r\n      .notNull()\r\n      .when(q => q.Required && q.CanHaveFiles);\r\n\r\n    this.ruleFor(\"Img\")\r\n      .notNull()\r\n      .when(q => q.Required && q.CanHaveImg || q.CanUsePhotoLib);\r\n  }\r\n}\r\n\r\nexport function useLabelValidator(value: Func<Question>) {\r\n  return new RxValidator(new LabelValidator(), value);\r\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 5
            },
            "properties": [],
            "methods": [],
            "indexSignatures": [],
            "extends": "Validator",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "LinkedBoolValidator",
            "id": "class-LinkedBoolValidator-75ef5515cb7a566879798107931cbaf1485f6ab5e75613cfb827eed4d0b32b27f569834bb480ff3f2b182ff3a19c38a2678c690688d4e0de029cf7cac1eb9b5b",
            "file": "src/app/core/pages/document-builder/components/question-types/16-linked-bool/validation/linked-bool.validator.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Validator } from \"fluentvalidation-ts\";\nimport { Question } from \"src/app/core/stores/site-document/models\";\nimport { RxValidator } from \"src/app/shared/validation\";\n\nexport class LinkedBoolValidator extends Validator<Question> {\n  constructor() {\n    super();\n    \n    this.ruleFor(\"NumberVal\")\n      .notNull()\n      .notEqual(0)\n      .when(q => q.Required && q.YesNoNA === true);\n  }\n}\n\nexport function useLinkedBoolValidator(value: Func<Question>) {\n  return new RxValidator(new LinkedBoolValidator(), value);\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 5
            },
            "properties": [],
            "methods": [],
            "indexSignatures": [],
            "extends": "Validator",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "NumberValidator",
            "id": "class-NumberValidator-72182d337435e2d10dbf0a9cf25abd2c3f87fd69dca1609af630c44245da2679d34b5d88cf50ba63f802226f4693faa32079c8d6e4bae9b22613ca699b306b92",
            "file": "src/app/core/pages/document-builder/components/question-types/12-number/validation/number.validator.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Validator } from \"fluentvalidation-ts\";\nimport { Question } from \"src/app/core/stores/site-document/models\";\nimport { RxValidator } from \"src/app/shared/validation\";\n\nexport class NumberValidator extends Validator<Question> {\n  constructor() {\n    super();\n\n    this.ruleFor(\"NumberVal\")\n      .notNull()\n      .when(q => q.Required);\n\n    this.ruleFor(\"NumberVal\")\n      .must((numberVal, question) => {\n        const min = question.ValidationData\n          .find(v => v.Key === \"Min\")!\n          .Value\n          .toNumber();\n\n        return numberVal != null && numberVal >= min;\n      })\n      .when(q => q.ValidationData.some(v => v.Key === \"Min\"));\n\n      this.ruleFor(\"NumberVal\")\n        .must((numberVal, question) => {\n          const max = question.ValidationData\n            .find(v => v.Key === \"Max\")!\n            .Value\n            .toNumber();\n\n          return numberVal != null && numberVal <= max;\n        })\n        .when(q => q.ValidationData.some(v => v.Key === \"Max\"));\n  }\n}\n\nexport function useNumberValidator(value: Func<Question>) {\n  return new RxValidator(new NumberValidator(), value);\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 5
            },
            "properties": [],
            "methods": [],
            "indexSignatures": [],
            "extends": "Validator",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "OperativeListValidator",
            "id": "class-OperativeListValidator-9117d969943046a73a00fc94fd0118224d08b03e85800cf20ce81cbcd450c07c72d0017514ee6dabfbb1a62901ba5994e2245e35810d28374e9795a93302d5ed",
            "file": "src/app/core/pages/document-builder/components/question-types/10-operative-list/validation/operative-list.validator.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Validator } from \"fluentvalidation-ts\";\nimport { Question } from \"src/app/core/stores/site-document/models\";\nimport { RxValidator } from \"src/app/shared/validation\";\n\nexport class OperativeListValidator extends Validator<Question> {\n  constructor() {\n    super();\n\n    this.ruleFor(\"Operatives\")\n      .notNull()\n      .must(items => items.length > 0)\n      .when(q => q.Required);\n\n    this.ruleFor(\"Operatives\")\n      .must((operatives, question) => {\n        const min = question.ValidationData\n          .find(v => v.Key === \"Min\")!\n          .Value\n          .toNumber();\n\n        return operatives.length >= min;\n      })\n      .when(q => q.ValidationData.some(v => v.Key === \"Min\"));\n\n      this.ruleFor(\"Operatives\")\n        .must((operatives, question) => {\n          const max = question.ValidationData\n            .find(v => v.Key === \"Max\")!\n            .Value\n            .toNumber();\n\n          return operatives.length <= max;\n        })\n        .when(q => q.ValidationData.some(v => v.Key === \"Max\"));\n  }\n}\n\nexport function useOperativeValidator(value: Func<Question>) {\n  return new RxValidator(new OperativeListValidator(), value);\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 5
            },
            "properties": [],
            "methods": [],
            "indexSignatures": [],
            "extends": "Validator",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "RadioGroupTextboxValidator",
            "id": "class-RadioGroupTextboxValidator-7018983a761561378bc53b11e71dc1a69d5d9d10206af30b2a723e2fd6ca18542f1e5f5a6e93cfab280b64f81b1e72b92fe859c5c4177875143505e5b6d3903c",
            "file": "src/app/core/pages/document-builder/components/question-types/07-radio-group-textbox/validation/radio-group-textbox.validator.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Validator } from \"fluentvalidation-ts\";\nimport { Question } from \"src/app/core/stores/site-document/models\";\nimport { RxValidator } from \"src/app/shared/validation\";\n\nexport class RadioGroupTextboxValidator extends Validator<Question> {\n  constructor() {\n    super();\n\n    this.ruleFor(\"YesNoNA\")\n      .notNull()\n      .when(q => q.Required);\n\n    this.ruleFor(\"AdditionalText\")\n      .notNull()\n      .notEmpty()\n      .when(question => question.Required);\n  }\n}\n\nexport function useRadioGroupTextboxValidator(value: Func<Question>) {\n  return new RxValidator(new RadioGroupTextboxValidator(), value);\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 5
            },
            "properties": [],
            "methods": [],
            "indexSignatures": [],
            "extends": "Validator",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "RadioGroupValidator",
            "id": "class-RadioGroupValidator-41d4ffdbac9ec17adbd20566589c10629d59be64445a852569f3e51390aca595d06917653d8524c93800dd23b4d390f0d5bf77e6921deab02aa3010ff72f2e6c",
            "file": "src/app/core/pages/document-builder/components/question-types/02-radio-group/validation/radio-group.validator.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Validator } from \"fluentvalidation-ts\";\nimport { Question } from \"src/app/core/stores/site-document/models\";\nimport { RxValidator } from \"src/app/shared/validation\";\n\nexport class RadioGroupValidator extends Validator<Question> {\n  constructor() {\n    super();\n\n    this.ruleFor(\"YesNoNA\")\n      .notNull()\n      .when(q => q.Required);\n  }\n}\n\nexport function useRadioGroupValidator(value: Func<Question>) {\n  return new RxValidator(new RadioGroupValidator(), value);\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 5
            },
            "properties": [],
            "methods": [],
            "indexSignatures": [],
            "extends": "Validator",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "RxValidator",
            "id": "class-RxValidator-2e3d4436e6d1a1c1398f02c34a716ad4090b9dc29d3a85e369f5a6c459eb38ac5383ed9d7443a6ccff7f5ed9e762022b7ebdc7442996a4a6fd9c94e24c4395bd",
            "file": "src/app/shared/validation/validator.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { ValidationErrors, Validator } from \"fluentvalidation-ts\";\r\nimport { BehaviorSubject, filter, map, pairwise } from \"rxjs\";\r\n\r\nexport class RxValidator<T extends Validator<TModel>, TModel> {\r\n  constructor(\r\n    protected validator: T,\r\n    protected value: Func<TModel>\r\n  ) {}\r\n\r\n  _errors$ = new BehaviorSubject<ValidationErrors<TModel>>({});\r\n  \r\n  readonly errors$ = this._errors$.asObservable();\r\n  readonly isInvalid$ = this._errors$.pipe(\r\n    map(errors => Object.keys(errors).length > 0),\r\n    pairwise(),\r\n    filter(([prev, curr]) => curr !== prev),\r\n    map(([prev, curr]) => curr)\r\n  );\r\n  readonly isValid$ = this.isInvalid$.pipe(\r\n    map(isInvalid => !isInvalid)\r\n  );\r\n\r\n  validate() {\r\n    const errors = this.validator.validate(this.value());\r\n    this._errors$.next(errors);\r\n\r\n    return this;\r\n  }\r\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "validator",
                        "type": "T",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "value",
                        "type": "Func<TModel>",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 4,
                "jsdoctags": [
                    {
                        "name": "validator",
                        "type": "T",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "value",
                        "type": "Func<TModel>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "properties": [
                {
                    "name": "_errors$",
                    "defaultValue": "new BehaviorSubject<ValidationErrors<TModel>>({})",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "errors$",
                    "defaultValue": "this._errors$.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "isInvalid$",
                    "defaultValue": "this._errors$.pipe(\r\n    map(errors => Object.keys(errors).length > 0),\r\n    pairwise(),\r\n    filter(([prev, curr]) => curr !== prev),\r\n    map(([prev, curr]) => curr)\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        144
                    ]
                },
                {
                    "name": "isValid$",
                    "defaultValue": "this.isInvalid$.pipe(\r\n    map(isInvalid => !isInvalid)\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 19,
                    "modifierKind": [
                        144
                    ]
                }
            ],
            "methods": [
                {
                    "name": "validate",
                    "args": [],
                    "optional": false,
                    "returnType": "this",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "SelectTextValidator",
            "id": "class-SelectTextValidator-dfba74c73a3c6ef668717d0520df4fe4e4cdf9a55cb7140ee58c80c0b97427f1baca17ff11b2bdfdc0e3e4b0cfb3abed90305025d6f9330fa67d1be915c32cfa",
            "file": "src/app/core/pages/document-builder/components/question-types/29-select-text/validation/select-text.validator.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Validator } from \"fluentvalidation-ts\";\nimport { Question } from \"src/app/core/stores/site-document/models\";\nimport { RxValidator } from \"src/app/shared/validation\";\n\nexport class SelectTextValidator extends Validator<Question> {\n  constructor() {\n    super();\n\n    this.ruleFor(\"OptionVal\")\n      .notNull()\n      .notEmpty()\n      .when(q => q.Required);\n\n    this.ruleFor(\"AnswerText\")\n      .notNull()\n      .notEmpty()\n      .when(q => q.OptionVal === '-1');\n\n    this.ruleFor(\"MoreAdditionalText\")\n      .notNull()\n      .notEmpty()\n      .when(q => q.Required);\n  }\n}\n\nexport function useSelectTextValidator(value: Func<Question>) {\n  return new RxValidator(new SelectTextValidator(), value);\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 5
            },
            "properties": [],
            "methods": [],
            "indexSignatures": [],
            "extends": "Validator",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "SelectValidator",
            "id": "class-SelectValidator-bca44f367fde8ae4d2763bc8758ff389079c63807baaa4851e8037607912712e61cc466e7892adbc86543098e74fdcb1d9d29d29fb37cde6ec7696cad0ce32c8",
            "file": "src/app/core/pages/document-builder/components/question-types/05-select/validation/select.validator.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Validator } from \"fluentvalidation-ts\";\nimport { Question } from \"src/app/core/stores/site-document/models\";\nimport { RxValidator } from \"src/app/shared/validation\";\n\nexport class SelectValidator extends Validator<Question> {\n  constructor() {\n    super();\n\n    this.ruleFor(\"OptionVal\")\n      .notNull()\n      .when(q => q.Required);\n\n      this.ruleFor(\"AnswerText\")\n        .notNull()\n        .notEmpty()\n        .when(q => q.OptionVal === '-1' && q.Required);\n  }\n}\n\nexport function useSelectValidator(value: Func<Question>) {\n  return new RxValidator(new SelectValidator(), value);\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 5
            },
            "properties": [],
            "methods": [],
            "indexSignatures": [],
            "extends": "Validator",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "SignatureValidator",
            "id": "class-SignatureValidator-6f668762a1dbaa20be24eb6e2d2d6b7c37a8fca49d46ff649cc213661c912e7721db9ad25295f27c40483bc2b13a26f90433089786d4a65aa15034473acc8620",
            "file": "src/app/core/pages/document-builder/components/question-types/19-signature/validation/signature.validator.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Validator } from \"fluentvalidation-ts\";\nimport { Question } from \"src/app/core/stores/site-document/models\";\nimport { RxValidator } from \"src/app/shared/validation\";\n\nexport class SignatureValidator extends Validator<Question> {\n  constructor() {\n    super();\n\n    this.ruleFor(\"SignatureArray\")\n      .notNull()\n      .when(q => q.Required && !q.Disabled);\n  }\n}\n\nexport function useSignatureValidator(value: Func<Question>) {\n  return new RxValidator(new SignatureValidator(), value);\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 5
            },
            "properties": [],
            "methods": [],
            "indexSignatures": [],
            "extends": "Validator",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "TextboxValidator",
            "id": "class-TextboxValidator-22da88441a8cfdcc051960a3fb3f419b949ddfb94a75b74b643d625a97ed44f12e766cc613246aecdac4ce6000d146741eeae2b7b8dcdfaa66eb6d112561a0b2",
            "file": "src/app/core/pages/document-builder/components/question-types/03-textbox/validation/textbox-validator.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Validator } from \"fluentvalidation-ts\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { RxValidator } from \"src/app/shared/validation\";\r\n\r\nexport class TextboxValidator extends Validator<Question> {\r\n  constructor() {\r\n    super();\r\n\r\n    this.ruleFor(\"AnswerText\")\r\n      .notEmpty()\r\n      .notNull()\r\n      .when(q => q.Required);\r\n  }\r\n}\r\n\r\nexport function useTextboxValidator(value: Func<Question>) {\r\n  return new RxValidator(new TextboxValidator(), value);\r\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 5
            },
            "properties": [],
            "methods": [],
            "indexSignatures": [],
            "extends": "Validator",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "TimeValidator",
            "id": "class-TimeValidator-ed208b97710235e85af9b11c98a5facb01cdc7b24b011b1fa8d57037743de2d2762c2026de49190e8f1ef1019438be12a5af7c6a395266cae44d3c90ce3e8220",
            "file": "src/app/core/pages/document-builder/components/question-types/32-time/validation/time.validator.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "import { Validator } from \"fluentvalidation-ts\";\nimport { Question } from \"src/app/core/stores/site-document/models\";\nimport { maxDate, minDate } from \"src/app/core/stores/site-document/models/site-document.model\";\nimport { RxValidator } from \"src/app/shared/validation\";\n\nexport class TimeValidator extends Validator<Question> {\n  constructor() {\n    super();\n\n    this.ruleFor(\"DateAndTime\")\n      .must((dateAndTime, question) => {\n        const min = minDate(question)!;\n\n        return dateAndTime?.isEqualOrAfter(min) || true;\n      })\n      .when(q => q.ValidationData.some(v => v.Key === \"Min\"));\n\n    this.ruleFor(\"DateAndTime\")\n      .must((dateAndTime, question) => {\n        const max = maxDate(question)!;\n\n        return dateAndTime?.isEqualOrBefore(max) || true;\n      })\n      .when(q => q.ValidationData.some(v => v.Key === \"Min\"));\n  }\n}\n\nexport function useTimeValidiator(value: Func<Question>) {\n  return new RxValidator(new TimeValidator(), value);\n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 6
            },
            "properties": [],
            "methods": [],
            "indexSignatures": [],
            "extends": "Validator",
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [
        {
            "name": "BarcodeScannerDirective",
            "id": "directive-BarcodeScannerDirective-2090b1d2d924f19a05479ab3d246af7c86f50045098dc549f9e2c808faee7a81e5eca4f1374938fec331f42702743a3ad29903ae67ac4a0e9c689e5d6e91c260",
            "file": "src/app/shared/directives/barcode-scanner/barcode-scanner.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, EventEmitter, HostListener, Input, Output } from \"@angular/core\";\r\nimport { BarcodeScanner, ScanOptions } from \"@capacitor-community/barcode-scanner\";\r\n\r\n@Directive({\r\n  selector: \"[barcode-scanner]\",\r\n  standalone: true\r\n})\r\nexport class BarcodeScannerDirective {\r\n  @Input(\"barcode-scanner\")\r\n  options: ScanOptions = {}\r\n\r\n  @Output(\"scan\") \r\n  scan = new EventEmitter<string>();\r\n\r\n  @HostListener(\"click\")\r\n  async scanCode() {\r\n    await BarcodeScanner.hideBackground();\r\n    const res = await BarcodeScanner.startScan({ targetedFormats: [] });\r\n    \r\n    if (res.hasContent)\r\n      this.scan.emit(res.content);\r\n  }\r\n}\r\n",
            "selector": "[barcode-scanner]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "barcode-scanner",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "ScanOptions",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "scan",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "EventEmitter"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "click",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "scanCode",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'click'"
                        }
                    ],
                    "modifierKind": [
                        131
                    ]
                }
            ]
        },
        {
            "name": "DateDirective",
            "id": "directive-DateDirective-1397f47f6f5d806c9e68682f3672b2e5b9f87b7fc952605269f3aec383c67e10f8d537c08b0c6c947d9df5f50e1affcdf0ddff72a08bc186eda2988f7f7ef301",
            "file": "src/app/shared/directives/date/date.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, EventEmitter, HostListener, Input, Output } from \"@angular/core\";\r\nimport { useElement } from \"../../angular/element\";\r\n\r\n@Directive({\r\n  selector: \"[date]\",\r\n  standalone: true\r\n})\r\nexport class DateDirective {\r\n  protected element: Element & { value: string } = useElement();\r\n  \r\n  @Input(\"date\")\r\n  date!: Date;\r\n  \r\n  @Output()\r\n  dateChange = new EventEmitter<Date>();\r\n  \r\n  ngOnChanges() {\r\n    this.element.value = this.date.toISOString();\r\n  }\r\n\r\n  @HostListener(\"change\")\r\n  @HostListener(\"ionChange\")\r\n  change() {\r\n    this.date = Date.fromISOString(this.element.value);\r\n    this.dateChange.emit(this.date);\r\n  }\r\n}\r\n",
            "selector": "[date]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "Date",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "dateChange",
                    "defaultValue": "new EventEmitter<Date>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "change",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23
                },
                {
                    "name": "ionChange",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23
                }
            ],
            "propertiesClass": [
                {
                    "name": "element",
                    "defaultValue": "useElement()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "change",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'change'"
                        },
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'ionChange'"
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ]
        },
        {
            "name": "ItemsTemplateDirective",
            "id": "directive-ItemsTemplateDirective-63916eee6cfcaf727ecdc3179f5c07bf5a3cbd79d7fd15e896ec70ea3321d7ac0ec693c28ce77074a763105d8ed6675bec7a3a70d1c00344adc1424132671396",
            "file": "src/app/shared/components/selectable/selectable.component.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Component, ContentChild, Directive, EventEmitter, Input, Output, TemplateRef } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { importRxFixedVirtualScroll, importRxTemplate } from \"../../imports\";\r\nimport { FusePipe } from \"../../pipes\";\r\nimport { AngularComponent, AngularDirective, withAfterViewInit, withGenericTemplateContextGuard, withOnChanges } from \"../../lifecycles\";\r\nimport { using } from \"../../rxjs\";\r\n\r\n@Directive({\r\n  selector: \"ng-template[items]\",\r\n  standalone: true\r\n})\r\nexport class ItemsTemplateDirective<T> extends AngularDirective(withGenericTemplateContextGuard) {\r\n  @Input()\r\n  items!: T[];\r\n}\r\n\r\n@Component({\r\n  selector: \"selectable\",\r\n  template: `\r\n    <!-- <ng-template #itemTpl let-item>\r\n      <ion-label class=\"ion-text-wrap\">{{ itemText != null ? item[itemText] : item }}</ion-label>\r\n    </ng-template> -->\r\n\r\n    <ion-item [id]=\"id\" detail=\"false\" button>\r\n      <ion-label *rxLet=\"item(); let item\" [color]=\"value == null ? 'medium' : ''\" class=\"ion-text-wrap\">\r\n      {{ \r\n        item != null \r\n          ? itemText != null \r\n          ? item[itemText] \r\n          : item \r\n          : placeholder\r\n      }}\r\n      </ion-label>\r\n      <ion-button *rxIf=\"canClear && value != null\" (click)=\"$event.stopPropagation(); clear();\" fill=\"clear\">\r\n        <ion-icon name=\"close-outline\" color=\"danger\" slot=\"icon-only\" />\r\n      </ion-button>\r\n      <ion-icon name=\"caret-down-outline\" slot=\"end\" />\r\n    </ion-item>\r\n\r\n    <ion-modal #modal [trigger]=\"id\">\r\n      <ng-template>\r\n        <ion-header>\r\n          <ion-toolbar>\r\n            <ion-buttons slot=\"start\">\r\n              <ion-button (click)=\"modal.dismiss()\" [unpatch] fill=\"clear\">\r\n                <ion-icon name=\"arrow-back-outline\" slot=\"icon-only\" />\r\n              </ion-button>\r\n            </ion-buttons>\r\n            <ion-title class=\"ion-text-center\">{{ title }}</ion-title>\r\n          </ion-toolbar>\r\n          <ion-toolbar>\r\n            <ion-searchbar \r\n              [(ngModel)]=\"searchValue\"\r\n              debounce=\"300\" \r\n              placeholder=\"Search\" />\r\n          </ion-toolbar>\r\n        </ion-header>\r\n\r\n        <ion-content>\r\n          <ion-list class=\"h-full\">\r\n            <rx-virtual-scroll-viewport [itemSize]=\"50\">\r\n              <ion-item \r\n                *rxVirtualFor=\"let item of items \r\n                  | fuse: {\r\n                    search: searchValue,\r\n                    keys: itemText != null \r\n                      ? [itemText]\r\n                      : []\r\n                  }; \r\n                  last as isLast\" \r\n                class=\"w-full\"\r\n                (click)=\"select(item); modal.dismiss();\"\r\n                [lines]=\"isLast \r\n                  ? 'none' \r\n                  : 'inset'\" \r\n                [unpatch] \r\n                button>\r\n                <ion-label class=\"ion-text-wrap\">{{ itemText != null ? item[itemText] : item }}</ion-label>\r\n              </ion-item>\r\n            </rx-virtual-scroll-viewport>\r\n          </ion-list>\r\n        </ion-content>\r\n      </ng-template>\r\n    </ion-modal>\r\n  `,\r\n  standalone: true,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    ...importRxFixedVirtualScroll(),\r\n    FormsModule,\r\n    FusePipe\r\n  ]\r\n})\r\nexport class SelectableComponent<T = unknown> extends AngularComponent(withAfterViewInit, withOnChanges) {\r\n  id = crypto.randomUUID();\r\n\r\n  @Input()\r\n  placeholder: string = \"\";\r\n\r\n  @Input()\r\n  title: string = \"\";\r\n\r\n  @Input()\r\n  items: T[] = [];\r\n\r\n  @Input()\r\n  itemText: Nullable<keyof T> = null;\r\n\r\n  @Input()\r\n  itemValue: Nullable<keyof T> = null;\r\n\r\n  @Input()\r\n  value: Nullable<T | T[keyof T]> = null;\r\n\r\n  @Output()\r\n  itemChange = new EventEmitter<T | null>();\r\n\r\n  @Output()\r\n  valueChange = new EventEmitter<any>();\r\n\r\n  item = using(this.afterViewInit(), this.input(\"items\"), this.input(\"value\"), this.itemChange)\r\n    .calculate(() => this.itemValue != null \r\n      ? this.items?.find(item => item[this.itemValue as keyof T] === this.value)\r\n      : this.value as T\r\n    );\r\n\r\n  @Input()\r\n  canClear: boolean = true;\r\n\r\n  searchValue: string = \"\";\r\n\r\n  @ContentChild(ItemsTemplateDirective, { read: ItemsTemplateDirective })\r\n  itemsTpl!: TemplateRef<unknown>;\r\n\r\n  select(item: T) {\r\n    if (this.itemValue != null) {\r\n      this.value = item[this.itemValue];\r\n      this.valueChange.emit(item[this.itemValue]);\r\n    } else {\r\n      this.value = item;\r\n    }\r\n\r\n    this.itemChange.emit(item);\r\n  }\r\n\r\n  clear() {\r\n    this.value = null;\r\n    this.itemChange.emit(null);\r\n    this.valueChange.emit(null);\r\n  }\r\n}",
            "selector": "ng-template[items]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "T[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": []
        },
        {
            "name": "PhotoViewerDirective",
            "id": "directive-PhotoViewerDirective-30494dccfe64ae3a3d25877bbc341320a63f1760aef31783aeef01903d6ef0cab40c96a4f6bdf4f536e99fbc2f7534b6b60f4c7ad851bac0f173828227d2e185",
            "file": "src/app/shared/directives/photo-viewer/photo-viewer.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { CUSTOM_ELEMENTS_SCHEMA, ChangeDetectionStrategy, Component, Directive, HostListener, Input, inject } from \"@angular/core\";\r\nimport { IonicModule, ModalController } from \"@ionic/angular\";\r\n\r\n@Component({\r\n  selector: \"photo-viewer\",\r\n  template: `\r\n    <ion-header>\r\n      <ion-toolbar>\r\n        <ion-buttons slot=\"primary\">\r\n          <ion-button (click)=\"close()\">\r\n            <ion-icon slot=\"icon-only\" name=\"close\" />\r\n          </ion-button>\r\n        </ion-buttons>\r\n      </ion-toolbar>\r\n    </ion-header>\r\n\r\n    <ion-content class=\"ion-padding\">\r\n      <swiper-container>\r\n        <swiper-slide>\r\n          <img class=\"\r\n            max-w-full \r\n            max-h-full \r\n            absolute \r\n            top-1/2 \r\n            left-1/2 \r\n            -translate-x-1/2 \r\n            -translate-y-1/2\r\n            p-4\" \r\n            [src]=\"src\" />\r\n        </swiper-slide>\r\n      </swiper-container>\r\n    </ion-content>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n  imports: [IonicModule]\r\n})\r\nclass PhotoViewerComponent {\r\n  modalCtrl = inject(ModalController);\r\n\r\n  @Input({ required: true })\r\n  src!: string;\r\n\r\n  close() {\r\n    this.modalCtrl.dismiss();\r\n  }\r\n}\r\n\r\n@Directive({\r\n  selector: \"[src]\",\r\n  standalone: true\r\n})\r\nexport class PhotoViewerDirective {\r\n  modalCtrl = inject(ModalController);\r\n\r\n  @Input()\r\n  src!: string;\r\n\r\n  @HostListener(\"click\")\r\n  async view() {\r\n    const modal = await this.modalCtrl.create({\r\n      component: PhotoViewerComponent,\r\n      componentProps: {\r\n        src: this.src\r\n      }\r\n    });\r\n\r\n    modal.present();\r\n  }\r\n}\r\n",
            "selector": "[src]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "src",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 58,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "click",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 61
                }
            ],
            "propertiesClass": [
                {
                    "name": "modalCtrl",
                    "defaultValue": "inject(ModalController)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 55
                }
            ],
            "methodsClass": [
                {
                    "name": "view",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'click'"
                        }
                    ],
                    "modifierKind": [
                        131
                    ]
                }
            ]
        },
        {
            "name": "QuestionsTemplateDirective",
            "id": "directive-QuestionsTemplateDirective-b4fe87217bb51f2bf53ab1cbc302f3e9253bdc5f4bc5cca4f17342f204cccf41c06f6c6411682347e6d6e8005befe2e94a340e32f5a7dff3bb333adada5f42bc",
            "file": "src/app/core/pages/document-builder/components/document-section/document-section.component.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { NgTemplateOutlet } from \"@angular/common\";\r\nimport { ChangeDetectionStrategy, Component, ContentChild, Directive, Input, TemplateRef } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question, QuestionType, Section } from \"src/app/core/stores/site-document/models\";\r\nimport { IfComponent } from \"src/app/shared/components\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { MultiCheckboxSectionComponent } from \"./multi-checkbox-section/multi-checkbox-section.component\";\r\nimport { AngularDirective, withTemplateContextGuard } from \"src/app/shared/lifecycles\";\r\n\r\n@Directive({\r\n  selector: \"ng-template[questions]\",\r\n  standalone: true\r\n})\r\nexport class QuestionsTemplateDirective extends AngularDirective(withTemplateContextGuard<Question>) {\r\n  @Input()\r\n  questions!: Question[];\r\n}\r\n\r\n@Component({\r\n  selector: \"document-section[section]\",\r\n  template: `\r\n    <ion-label>{{ section.SectionTitle }}</ion-label>\r\n    <ng-container *rxIf=\"section.IsRepeatable\">\r\n      <ion-button color=\"secondary\" fill=\"clear\">\r\n        <ion-icon name=\"duplicate-outline\" />\r\n      </ion-button>\r\n      <ion-button color=\"secondary\" fill=\"clear\">\r\n        <ion-icon name=\"remove-circle-outline\" />\r\n      </ion-button>\r\n    </ng-container>\r\n\r\n    <if [condition]=\"section.SectionQuestiontype === QuestionType.MultiCheckbox\">\r\n      <multi-checkbox-section show [section]=\"section\" />\r\n\r\n      <ng-container else *rxFor=\"let question of section.Questions\">\r\n        <ng-container *ngTemplateOutlet=\"questionsTpl; context: { $implicit: question }\" />\r\n      </ng-container>\r\n    </if>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    NgTemplateOutlet,\r\n    IfComponent,\r\n    MultiCheckboxSectionComponent,\r\n    QuestionsTemplateDirective\r\n  ]\r\n})\r\nexport class DocumentSectionComponent {\r\n  QuestionType = QuestionType;\r\n\r\n  @Input()\r\n  section!: Section;\r\n\r\n  @ContentChild(QuestionsTemplateDirective, { read: TemplateRef }) \r\n  questionsTpl!: TemplateRef<unknown>;\r\n}\r\n",
            "selector": "ng-template[questions]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": []
        },
        {
            "name": "ReactiveDirective",
            "id": "directive-ReactiveDirective-880ed07caf69ca09455f8e952711a383e4e7d9534cc516d6ef9a1fee1994a4e511b9a63125d2f52850b93c76dc3fd49c5f4eb76b374d950066d7523154155e47",
            "file": "src/app/shared/lifecycles/lifecycle-directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive } from \"@angular/core\";\r\nimport { flow } from \"lodash-es\";\r\nimport { withNoop } from \"./with-noop\";\r\nimport { AnyFunction } from \"./types\";\r\n\r\n@Directive()\r\nclass ReactiveDirective {}\r\n\r\nexport function AngularDirective<T1 extends AnyFunction>(h1: T1): ReturnType<T1>\r\nexport function AngularDirective<T1 extends AnyFunction, T2 extends AnyFunction>(h1: T1, h2: T2): ReturnType<T1> & ReturnType<T2>\r\nexport function AngularDirective<T1 extends AnyFunction, T2 extends AnyFunction, T3 extends AnyFunction>(h1: T1, h2: T2, h3: T3): ReturnType<T1> & ReturnType<T2> & ReturnType<T3>\r\nexport function AngularDirective<T1 extends AnyFunction, T2 extends AnyFunction, T3 extends AnyFunction, T4 extends AnyFunction>(h1: T1, h2: T2, h3: T3, h4: T4): ReturnType<T1> & ReturnType<T2> & ReturnType<T3> & ReturnType<T4>\r\nexport function AngularDirective<T1 extends AnyFunction, T2 extends AnyFunction, T3 extends AnyFunction, T4 extends AnyFunction, T5 extends AnyFunction>(h1: T1, h2: T2, h3: T3, h4: T4, h5: T5): ReturnType<T1> & ReturnType<T2> & ReturnType<T3> & ReturnType<T4> & ReturnType<T5>\r\nexport function AngularDirective<T1 extends AnyFunction, T2 extends AnyFunction, T3 extends AnyFunction, T4 extends AnyFunction, T5 extends AnyFunction, T6 extends AnyFunction>(h1: T1, h2: T2, h3: T3, h4: T4, h5: T5, h6: T6): ReturnType<T1> & ReturnType<T2> & ReturnType<T3> & ReturnType<T4> & ReturnType<T5> & ReturnType<T6>\r\nexport function AngularDirective(): ReturnType<typeof withNoop> & ReactiveDirective;\r\nexport function AngularDirective(...args: AnyFunction[]): any {\r\n  if (args == null || args.length === 0) return ReactiveDirective;\r\n  \r\n  const withHooks = flow(args);\r\n  return withHooks(ReactiveDirective);\r\n}",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": []
        },
        {
            "name": "SignaturePadDirective",
            "id": "directive-SignaturePadDirective-1da0267139a8aa2e6121517ac4050fbb3a947ade01fd2538e5c752dc83f0647dacd50385143417137c7e3155718ac3ccd132a2ee4b846438880c892cb47f9f01",
            "file": "src/app/shared/components/signature-pad/signature-pad.component.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Directive, EventEmitter, Input, Output, ViewChild } from \"@angular/core\";\r\nimport { debounceTime, map, merge } from \"rxjs\";\r\nimport SignaturePad, { PointGroup } from \"signature_pad\";\r\nimport { AngularComponent, withAfterViewInit } from \"../../lifecycles\";\r\nimport { PushPipe } from \"@rx-angular/template/push\";\r\nimport { use } from \"../../rxjs/use\";\r\nimport { useElement, useParentElement } from \"../../angular/element\";\r\n\r\n@Directive({\r\n  selector: \"canvas[signature-pad]\",\r\n  standalone: true\r\n})\r\nexport class SignaturePadDirective {\r\n  element = useElement<HTMLCanvasElement>();\r\n\r\n  signaturePad = new SignaturePad(this.element, {\r\n    minWidth: 2,\r\n    maxWidth: 5,\r\n    backgroundColor: \"rgb(255,255,255)\"\r\n  });\r\n\r\n  @Input()\r\n  points?: PointGroup[] = [];\r\n\r\n  @Output()\r\n  pointsChange = new EventEmitter<PointGroup[]>();\r\n\r\n  ngOnInit() {\r\n    this.signaturePad.fromData(this.points || []);\r\n  }\r\n\r\n  dataPoints() {\r\n    return this.signaturePad.toData();\r\n  }\r\n\r\n  toDataUrl() {\r\n    return this.signaturePad.toDataURL();\r\n  }\r\n\r\n  clear() {\r\n    this.signaturePad.clear();\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: \"signature-pad\",\r\n  template: `\r\n    <canvas \r\n      signature-pad \r\n      [points]=\"points\"\r\n      class=\"border border-black bg-white\" \r\n      (window:resize)=\"resize.next()\"\r\n      [width]=\"width$ | push\"\r\n      [height]=\"height$ | push\">\r\n    </canvas>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [PushPipe, SignaturePadDirective]\r\n})\r\nexport class SignaturePadComponent extends AngularComponent(withAfterViewInit) {\r\n  @ViewChild(SignaturePadDirective)\r\n  signatureDirective?: SignaturePadDirective;\r\n\r\n  @Input()\r\n  points?: PointGroup[] = [];\r\n\r\n  parentElement = useParentElement();\r\n  resize = use();\r\n\r\n  width$ = merge(this.afterViewInit(), this.resize()).pipe(\r\n    debounceTime(300),\r\n    map(() => this.parentElement.offsetWidth - 2)\r\n  );\r\n\r\n  height$ = merge(this.afterViewInit(), this.resize()).pipe(\r\n    debounceTime(300),\r\n    map(() => this.parentElement.offsetHeight - 2)\r\n  );\r\n\r\n  dataPoints() {\r\n    return this.signatureDirective?.dataPoints();\r\n  }\r\n\r\n  toDataUrl() {\r\n    return this.signatureDirective?.toDataUrl();\r\n  }\r\n\r\n  clear() {\r\n    this.signatureDirective?.clear();\r\n  }\r\n}",
            "selector": "canvas[signature-pad]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "points",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "PointGroup[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "pointsChange",
                    "defaultValue": "new EventEmitter<PointGroup[]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "EventEmitter"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "element",
                    "defaultValue": "useElement<HTMLCanvasElement>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "signaturePad",
                    "defaultValue": "new SignaturePad(this.element, {\r\n    minWidth: 2,\r\n    maxWidth: 5,\r\n    backgroundColor: \"rgb(255,255,255)\"\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "clear",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "dataPoints",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toDataUrl",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ]
        },
        {
            "name": "TakePhotoDirective",
            "id": "directive-TakePhotoDirective-79d14047dcbf5479c9301b82f9c1011df8215b59a3d9a22806d4858c4d7f29c4b9f5dd4d16b6b709ec0ce530d3aa263ffa58441814d683e03041a7b32d700068",
            "file": "src/app/shared/directives/camera/take-photo/take-photo.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, EventEmitter, HostListener, Output } from \"@angular/core\";\nimport { Camera, CameraResultType, Photo } from \"@capacitor/camera\";\n\n@Directive({\n  selector: \"[takePhoto]\",\n  standalone: true\n})\nexport class TakePhotoDirective {\n  @Output(\"takePhoto\")\n  takePhoto = new EventEmitter<Photo>();\n\n  @HostListener(\"click\")\n  async take() {\n    const photo = await Camera.getPhoto({\n      resultType: CameraResultType.Base64\n    });\n    this.takePhoto.emit(photo);\n  }\n}\n",
            "selector": "[takePhoto]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "takePhoto",
                    "defaultValue": "new EventEmitter<Photo>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "EventEmitter"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "click",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "take",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'click'"
                        }
                    ],
                    "modifierKind": [
                        131
                    ]
                }
            ]
        },
        {
            "name": "UploadPhotoDirective",
            "id": "directive-UploadPhotoDirective-1aa85a10adaa5f0b598ad1bf9defa17f92a3bc2ab3836ba0bdf992ff5e93206a3b7ad67341c9fbc1c44a29c43e1c8748b2d1a5f615a85d2df94be82b7fe8987d",
            "file": "src/app/shared/directives/camera/upload-photo/upload-photo.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, EventEmitter, HostListener, Output } from \"@angular/core\";\nimport { Camera, CameraResultType, CameraSource, Photo } from \"@capacitor/camera\";\n\n@Directive({\n  selector: \"[uploadPhoto]\",\n  standalone: true\n})\nexport class UploadPhotoDirective {\n  @Output(\"uploadPhoto\")\n  uploadPhoto = new EventEmitter<Photo>();\n\n  @HostListener(\"click\")\n  async upload() {\n    const photo = await Camera.getPhoto({\n      resultType: CameraResultType.Base64,\n      source: CameraSource.Photos\n    });\n    \n    this.uploadPhoto.emit(photo);\n  }\n}\n",
            "selector": "[uploadPhoto]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "uploadPhoto",
                    "defaultValue": "new EventEmitter<Photo>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "EventEmitter"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "click",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "upload",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'click'"
                        }
                    ],
                    "modifierKind": [
                        131
                    ]
                }
            ]
        }
    ],
    "components": [
        {
            "name": "ActionerSelectComponent",
            "id": "component-ActionerSelectComponent-caf098f0f5727104c7a12bf2d5b251c1e5e8731e69b55016e1a37320f03c840c5058a07933b1287edc4b8c0e9c76854767ef6acb09945f65c519d17cf4316424",
            "file": "src/app/core/pages/document-builder/components/input-types/actioner-select/actioner-select.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "actioner-select",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-card>\n  <ion-card-header>\n    <ion-card-title class=\"text-center\">{{ title || \"To Action / Attention Of\" }}</ion-card-title>\n  </ion-card-header>\n  <ion-card-content>\n    <ion-list>\n      <ion-item [id]=\"id\" button>\n        <ion-label\n          *rxLet=\"operativeStore.data()\n          | find: { 'ID': actionerId }; let actioner\"\n          class=\"ion-text-wrap\">\n            {{ actioner?.Name || \"Select an Actioner\" }}\n          </ion-label>\n        <ion-icon name=\"person-outline\" slot=\"start\" />\n        <operative-list-modal [trigger]=\"id\" (select)=\"actionerId = $event.ID; actionerIdChange.emit($event.ID)\" />\n      </ion-item>\n    </ion-list>\n  </ion-card-content>\n</ion-card>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "actionerId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "hideMyself",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "actionerIdChange",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "id",
                    "defaultValue": "crypto.randomUUID()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "operativeStore",
                    "defaultValue": "useOperativeStore()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 41
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { useOperativeStore } from \"src/app/core/stores/operative/operatives.store\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { OperativeListModal } from \"src/app/shared/modals/operative-list/operative-list.modal\";\r\nimport { FindPipe } from \"src/app/shared/pipes\";\r\n\r\n@Component({\r\n  selector: \"actioner-select\",\r\n  template: `\r\n    <ion-card>\r\n      <ion-card-header>\r\n        <ion-card-title class=\"text-center\">{{ title || \"To Action / Attention Of\" }}</ion-card-title>\r\n      </ion-card-header>\r\n      <ion-card-content>\r\n        <ion-list>\r\n          <ion-item [id]=\"id\" button>\r\n            <ion-label \r\n              *rxLet=\"operativeStore.data() \r\n              | find: { 'ID': actionerId }; let actioner\" \r\n              class=\"ion-text-wrap\">\r\n                {{ actioner?.Name || \"Select an Actioner\" }}\r\n              </ion-label>\r\n            <ion-icon name=\"person-outline\" slot=\"start\" />\r\n            <operative-list-modal [trigger]=\"id\" (select)=\"actionerId = $event.ID; actionerIdChange.emit($event.ID)\" />\r\n          </ion-item>\r\n        </ion-list>\r\n      </ion-card-content>\r\n    </ion-card>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    OperativeListModal,\r\n    FindPipe\r\n  ]\r\n})\r\nexport class ActionerSelectComponent {\r\n  operativeStore = useOperativeStore();\r\n\r\n  id = crypto.randomUUID();\r\n\r\n  @Input()\r\n  title?: string;\r\n\r\n  @Input()\r\n  hideMyself: boolean = false;\r\n\r\n  @Input()\r\n  actionerId?: number;\r\n\r\n  @Output()\r\n  actionerIdChange = new EventEmitter<number>();\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ActionerSelectSummaryComponent",
            "id": "component-ActionerSelectSummaryComponent-a3078cc78ac59705e16357526cbb30380e87e7d0c42397ae7628b8f163e67360023ea88adfbcd7e4b518321532f9c8403b91d88c2d99afa33f159ef7f6a8f3d2",
            "file": "src/app/core/pages/document-builder/components/input-types/actioner-select/summary/actioner-select-summary.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "actioner-select-summary",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <ion-label>\n      <b>{{ title || \"To Action / Attention Of\" }}</b>\n      <p *rxIf=\"operative(); let operative\">{{ operative.Name }}</p>\n    </ion-label>\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "operative",
                    "defaultValue": "this.operativeStore.data(operatives => operatives.find(o => o.ID === this.actionerId))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "operativeStore",
                    "defaultValue": "useOperativeStore()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { useOperativeStore } from \"src/app/core/stores/operative/operatives.store\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\n\r\n@Component({\r\n  selector: \"actioner-select-summary\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <ion-label>\r\n          <b>{{ title || \"To Action / Attention Of\" }}</b>\r\n          <p *rxIf=\"operative(); let operative\">{{ operative.Name }}</p>\r\n        </ion-label>\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [IonicModule, ...importRxTemplate()]\r\n})\r\nexport class ActionerSelectSummaryComponent {\r\n  operativeStore = useOperativeStore();\r\n\r\n  @Input()\r\n  title?: string;\r\n\r\n  @Input({ required: true })\r\n  actionerId!: number;\r\n\r\n  operative = this.operativeStore.data(operatives => operatives.find(o => o.ID === this.actionerId));\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-1ec040a91f41102ea933f46462e206d3a941e35a0d50f1652261905e96af137ae536ab5179c199c7069e97e9ab1b58a16b836b6235b5b11f562d4a0515565fb7",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-app>\n  <ion-router-outlet></ion-router-outlet>\n</ion-app>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  template: `\r\n    <ion-app>\r\n      <ion-router-outlet></ion-router-outlet>\r\n    </ion-app>\r\n  `,\r\n  standalone: true,\r\n  imports: [IonicModule],\r\n})\r\nexport class AppComponent {\r\n  constructor() {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 14
            }
        },
        {
            "name": "AreaSelectComponent",
            "id": "component-AreaSelectComponent-fad33208abae9fcd0697b7fdbcef7975bb3a94f748341887dcf465092f076144b86ba853bdcdfa93931114bfd82eec3a80d8f08f87ae0df635efb7f939ae3f2f",
            "file": "src/app/core/pages/document-builder/components/question-types/22-area-select/area-select.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "area-select-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n    <camera-capture *rxIf=\"question.CanHaveImg\" class=\"m-0\" slot=\"end\" />\n    <file-upload *rxIf=\"question.CanHaveFiles\" class=\"m-0\" slot=\"end\" />\n  </ion-item>\n\n  <selectable\n    placeholder=\"Select\"\n    [title]=\"question.QuestionText\"\n    [items]=\"areas.data()\n      | push\n      | toStringValues\"\n    itemValue=\"Id\"\n    itemText=\"Name\"\n    [(value)]=\"question.OptionVal\"\n    (itemChange)=\"question.SelectedOptionText = $event?.Name\"\n    [canClear]=\"!question.Required\" />\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "areas",
                    "defaultValue": "useAreas()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "validator",
                    "defaultValue": "useSelectValidator(() => this.question)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 52
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\nimport { SelectableComponent } from \"src/app/shared/components\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { useAreas } from \"src/app/core/http/login.api\";\r\nimport { ToStringValuesPipe } from \"src/app/shared/pipes\";\r\nimport { useSelectValidator } from \"../05-select/validation/select.validator\";\r\n\r\n@Component({\r\n  selector: \"area-select-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n        <camera-capture *rxIf=\"question.CanHaveImg\" class=\"m-0\" slot=\"end\" />\r\n        <file-upload *rxIf=\"question.CanHaveFiles\" class=\"m-0\" slot=\"end\" />\r\n      </ion-item>\r\n\r\n      <selectable\r\n        placeholder=\"Select\"\r\n        [title]=\"question.QuestionText\"\r\n        [items]=\"areas.data() \r\n          | push \r\n          | toStringValues\"\r\n        itemValue=\"Id\"\r\n        itemText=\"Name\"\r\n        [(value)]=\"question.OptionVal\"\r\n        (itemChange)=\"question.SelectedOptionText = $event?.Name\"\r\n        [canClear]=\"!question.Required\" />\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    QuestionTextComponent,\r\n    SelectableComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent,\r\n    ToStringValuesPipe\r\n  ]\r\n})\r\nexport class AreaSelectComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n  \r\n  areas = useAreas();\r\n\r\n  validator = useSelectValidator(() => this.question);\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "AssetGroupsAndTypesComponent",
            "id": "component-AssetGroupsAndTypesComponent-5ebb9c429f6faee249a3f85f369d068fefbf492b64b90cd6acfc83b52d30aa2d0de160741dd5bd786c2d4958f08312d7dcfc9756836d42720c299b8ca6fd50d1",
            "file": "src/app/core/pages/document-builder/components/question-types/25-asset-groups-and-types/asset-groups-and-types.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "asset-groups-and-types-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n    <camera-capture *rxIf=\"question.CanHaveImg\" class=\"m-0\" slot=\"end\" />\n    <file-upload *rxIf=\"question.CanHaveFiles\" class=\"m-0\" slot=\"end\" />\n  </ion-item>\n\n  <selectable\n    placeholder=\"Select\"\n    [title]=\"question.QuestionText\"\n    [items]=\"assetGroups.options() | push\"\n    itemValue=\"GroupId\"\n    itemText=\"GroupName\"\n    [(value)]=\"question.OptionVal\"\n    (itemChange)=\"question.SelectedOptionText = $event?.GroupName\"\n    [canClear]=\"!question.Required\" />\n\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.CascadeOptionsText }}</question-text>\n  </ion-item>\n\n  <selectable\n    placeholder=\"Select\"\n    [title]=\"question.CascadeOptionsText\"\n    [items]=\"assetTypes.options()\n      | fuse: {\n        search: question.OptionVal,\n        keys: ['Id']\n      }\n      | push\"\n    itemValue=\"Id\"\n    itemText=\"Description\"\n    [(value)]=\"question.CascadeOptionVal\"\n    (itemChange)=\"question.SelectedCascadeOptionText = $event?.Description\"\n    [canClear]=\"!question.Required\" />\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "assetGroups",
                    "defaultValue": "useAssetGroups()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 69
                },
                {
                    "name": "assetTypes",
                    "defaultValue": "useAssetTypes()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 70
                },
                {
                    "name": "validator",
                    "defaultValue": "useCascadeSelectValidator(() => this.question)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 67
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\nimport { SelectableComponent } from \"src/app/shared/components\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { FusePipe } from \"src/app/shared/pipes\";\r\nimport { useAssetGroups, useAssetTypes } from \"src/app/core/http/asset.api\";\r\nimport { useCascadeSelectValidator } from \"../13-cascade-select/validation/cascade-select.validator\";\r\n\r\n@Component({\r\n  selector: \"asset-groups-and-types-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n        <camera-capture *rxIf=\"question.CanHaveImg\" class=\"m-0\" slot=\"end\" />\r\n        <file-upload *rxIf=\"question.CanHaveFiles\" class=\"m-0\" slot=\"end\" />\r\n      </ion-item>\r\n      \r\n      <selectable \r\n        placeholder=\"Select\"\r\n        [title]=\"question.QuestionText\"\r\n        [items]=\"assetGroups.options() | push\"\r\n        itemValue=\"GroupId\"\r\n        itemText=\"GroupName\"\r\n        [(value)]=\"question.OptionVal\"\r\n        (itemChange)=\"question.SelectedOptionText = $event?.GroupName\"\r\n        [canClear]=\"!question.Required\" />\r\n\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.CascadeOptionsText }}</question-text>\r\n      </ion-item>\r\n\r\n      <selectable\r\n        placeholder=\"Select\"\r\n        [title]=\"question.CascadeOptionsText\"\r\n        [items]=\"assetTypes.options()\r\n          | fuse: {\r\n            search: question.OptionVal,\r\n            keys: ['Id']\r\n          }\r\n          | push\"\r\n        itemValue=\"Id\"\r\n        itemText=\"Description\"\r\n        [(value)]=\"question.CascadeOptionVal\"\r\n        (itemChange)=\"question.SelectedCascadeOptionText = $event?.Description\"\r\n        [canClear]=\"!question.Required\" />\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    QuestionTextComponent,\r\n    SelectableComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent,\r\n    FusePipe\r\n  ]\r\n})\r\nexport class AssetGroupsAndTypesComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n\r\n  validator = useCascadeSelectValidator(() => this.question);\r\n\r\n  assetGroups = useAssetGroups();\r\n  assetTypes = useAssetTypes();\r\n}\r\n\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "AssetInfoPage",
            "id": "component-AssetInfoPage-a4e289095be1837454190658379c5f90c18d90586cd4eb8cdbaec7b981914b6e968cf1c641fc241a1dab223ab299a63019983e484b27b974ff7881eefb16e290",
            "file": "src/app/core/pages/info/asset-info/asset-info.page.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "asset-info-page",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-header>\n  <ion-toolbar>\n    <ion-title class=\"ion-text-center\">Asset Info</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"ion-padding\">\n  <ion-card *rxIf=\"assetInfo$; let info\">\n    <ion-card-content>\n      <ion-list>\n        <ion-item *rxIf=\"info.Base64Img != null\" lines=\"none\">\n          <ion-img [src]=\"info.Base64Img\" />\n        </ion-item>\n\n        <ion-item>\n          <ion-label class=\"ion-text-wrap\">\n            <p class=\"mb-2\">{{ info.TypeName }}</p>\n            <p class=\"mb-2\">{{ info.Location }}</p>\n            <p class=\"mb-2\">{{ info.Registration }}</p>\n            <p class=\"mb-2\">{{ info.AssetNotes }}</p>\n            <p *rxIf=\"info.AcquiredDate != null\" class=\"mb-2\">\n              <b>Acquire Date: </b>{{ info.AcquiredDate | date: \"yyyy-MM-dd\" }}\n            </p>\n            <p *rxIf=\"info.DateOnSite != null\" class=\"mb-2\">\n              <b>Date on Site: </b>{{ info.DateOnSite | date: 'yyyy-MM-dd' }}\n            </p>\n          </ion-label>\n        </ion-item>\n      </ion-list>\n    </ion-card-content>\n  </ion-card>\n</ion-content>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "assetId",
                    "defaultValue": "param(\"assetId\")?.toNumber()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "assetInfo$",
                    "defaultValue": "merge(this.assetInfoById.data(), this.assetInfoByTag.data())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 60
                },
                {
                    "name": "assetInfoById",
                    "defaultValue": "useAssetDetailsById(this.assetId)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "assetInfoByTag",
                    "defaultValue": "useAssetDetailsByTag(this.tag)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "isLoading$",
                    "defaultValue": "merge(this.assetInfoById.isLoading(), this.assetInfoByTag.isLoading())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "tag",
                    "defaultValue": "param(\"tag\")",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 55
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { param } from \"src/app/shared/route\";\r\nimport { useAssetDetailsById, useAssetDetailsByTag } from \"../../../http/asset.api\";\r\nimport { merge } from \"rxjs\";\r\nimport { DatePipe } from \"@angular/common\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\n\r\n@Component({\r\n  selector: \"asset-info-page\",\r\n  template: `\r\n    <ion-header>\r\n      <ion-toolbar>\r\n        <ion-title class=\"ion-text-center\">Asset Info</ion-title>\r\n      </ion-toolbar>\r\n    </ion-header>\r\n\r\n    <ion-content class=\"ion-padding\">\r\n      <ion-card *rxIf=\"assetInfo$; let info\">\r\n        <ion-card-content>\r\n          <ion-list>\r\n            <ion-item *rxIf=\"info.Base64Img != null\" lines=\"none\">\r\n              <ion-img [src]=\"info.Base64Img\" />\r\n            </ion-item>\r\n\r\n            <ion-item>\r\n              <ion-label class=\"ion-text-wrap\">\r\n                <p class=\"mb-2\">{{ info.TypeName }}</p>\r\n                <p class=\"mb-2\">{{ info.Location }}</p>\r\n                <p class=\"mb-2\">{{ info.Registration }}</p>\r\n                <p class=\"mb-2\">{{ info.AssetNotes }}</p>\r\n                <p *rxIf=\"info.AcquiredDate != null\" class=\"mb-2\">\r\n                  <b>Acquire Date: </b>{{ info.AcquiredDate | date: \"yyyy-MM-dd\" }}\r\n                </p>\r\n                <p *rxIf=\"info.DateOnSite != null\" class=\"mb-2\">\r\n                  <b>Date on Site: </b>{{ info.DateOnSite | date: 'yyyy-MM-dd' }}\r\n                </p>\r\n              </ion-label>\r\n            </ion-item>\r\n          </ion-list>\r\n        </ion-card-content>\r\n      </ion-card>\r\n    </ion-content>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    DatePipe\r\n  ]\r\n})\r\nexport class AssetInfoPage {\r\n  assetId = param(\"assetId\")?.toNumber();\r\n  tag = param(\"tag\");\r\n\r\n  assetInfoById = useAssetDetailsById(this.assetId);\r\n  assetInfoByTag = useAssetDetailsByTag(this.tag);\r\n\r\n  assetInfo$ = merge(this.assetInfoById.data(), this.assetInfoByTag.data());\r\n  isLoading$ = merge(this.assetInfoById.isLoading(), this.assetInfoByTag.isLoading());\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "AssetInspectionSchedulesComponent",
            "id": "component-AssetInspectionSchedulesComponent-73b3eee250322359608c9d87083826f9c67c9cf1132999a3b9d8291f9c185c63f07bf4d3c76428135817bacd70217f274b3d02754fb3af2a3d1cb245ed1799bc",
            "file": "src/app/core/pages/document-builder/components/question-types/26-asset-inspection-schedules/asset-inspection-schedules.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "asset-inspection-schedules-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n    <camera-capture *rxIf=\"question.CanHaveImg\" class=\"m-0\" slot=\"end\" />\n    <file-upload *rxIf=\"question.CanHaveFiles\" class=\"m-0\" slot=\"end\" />\n  </ion-item>\n\n  <selectable\n    placeholder=\"Select\"\n    [title]=\"question.QuestionText\"\n    [items]=\"schedules.options() | push\"\n    itemValue=\"ScheduleId\"\n    itemText=\"ScheduleName\"\n    [(value)]=\"question.OptionVal\"\n    (itemChange)=\"question.SelectedOptionText = $event?.ScheduleName\"\n    [canClear]=\"!question.Required\" />\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "schedules",
                    "defaultValue": "useAssetInspectionSchedules()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "validator",
                    "defaultValue": "useSelectValidator(() => this.question)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 46
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\nimport { SelectableComponent } from \"src/app/shared/components\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { useAssetInspectionSchedules } from \"src/app/core/http/asset.api\";\r\nimport { useSelectValidator } from \"../05-select/validation/select.validator\";\r\n\r\n@Component({\r\n  selector: \"asset-inspection-schedules-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n        <camera-capture *rxIf=\"question.CanHaveImg\" class=\"m-0\" slot=\"end\" />\r\n        <file-upload *rxIf=\"question.CanHaveFiles\" class=\"m-0\" slot=\"end\" />\r\n      </ion-item>\r\n\r\n      <selectable\r\n        placeholder=\"Select\"\r\n        [title]=\"question.QuestionText\"\r\n        [items]=\"schedules.options() | push\"\r\n        itemValue=\"ScheduleId\"\r\n        itemText=\"ScheduleName\"\r\n        [(value)]=\"question.OptionVal\"\r\n        (itemChange)=\"question.SelectedOptionText = $event?.ScheduleName\"\r\n        [canClear]=\"!question.Required\" />\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    QuestionTextComponent,\r\n    SelectableComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent\r\n  ]\r\n})\r\nexport class AssetInspectionSchedulesComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n\r\n  validator = useSelectValidator(() => this.question);\r\n\r\n  schedules = useAssetInspectionSchedules();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "AssetListComponent",
            "id": "component-AssetListComponent-a20aaf5cd0806e7e9d37f12131b95d22016b2f25461b29a4cdb51d7cbeba9d0b6578d3e60851b33f282ab2c7460e98db9c3d4d06df150f608f50bf0ba511f46f",
            "file": "src/app/core/pages/document-builder/components/question-types/17-asset-list/asset-list.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "asset-list-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text>{{ question.QuestionText }}</question-text>\n    <ion-button *rxIf=\"isMobileApp\" fill=\"clear\" slot=\"end\">\n      <ion-icon name=\"scan-outline\" slots=\"icon-only\" />\n    </ion-button>\n    <ion-button [id]=\"id\" fill=\"clear\" slot=\"end\">\n      <asset-list-modal [trigger]=\"id\" (select)=\"select($event)\" />\n      <ion-icon name=\"search-outline\" slot=\"icon-only\" />\n    </ion-button>\n  </ion-item>\n</ion-list>\n\n<ion-list>\n  <ion-item-sliding *rxFor=\"let asset of question.Assets; last as isLast\">\n    <ion-item [lines]=\"isLast ? 'none' : 'inset'\" button>\n      <ion-label>{{ asset.AssetID }}: {{ asset.Name }}</ion-label>\n    </ion-item>\n\n    <ion-item-options side=\"end\">\n      <ion-item-option color=\"danger\" (click)=\"remove(asset.AssetID)\">\n        <ion-icon name=\"trash-outline\" slot=\"icon-only\" />\n      </ion-item-option>\n    </ion-item-options>\n  </ion-item-sliding>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "id",
                    "defaultValue": "crypto.randomUUID()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "isMobileApp",
                    "defaultValue": "isMobileApp()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "validator",
                    "defaultValue": "useAssetListValidator(() => this.question)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 57
                }
            ],
            "methodsClass": [
                {
                    "name": "remove",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 68,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "select",
                    "args": [
                        {
                            "name": "asset",
                            "type": "Asset",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 59,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "asset",
                            "type": "Asset",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { isMobileApp } from \"src/app/shared/plugins/platform.plugin\";\r\nimport { QuestionTextComponent } from \"../extras\";\r\nimport { AssetListModal } from \"src/app/shared/modals/asset-list/asset-list.modal\";\r\nimport { Asset } from \"src/app/core/stores/asset/asset.store\";\r\nimport { useAssetListValidator } from \"./validation/asset-list.validator\";\r\n\r\n@Component({\r\n  selector: \"asset-list-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text>{{ question.QuestionText }}</question-text>\r\n        <ion-button *rxIf=\"isMobileApp\" fill=\"clear\" slot=\"end\">\r\n          <ion-icon name=\"scan-outline\" slots=\"icon-only\" />\r\n        </ion-button>\r\n        <ion-button [id]=\"id\" fill=\"clear\" slot=\"end\">\r\n          <asset-list-modal [trigger]=\"id\" (select)=\"select($event)\" />\r\n          <ion-icon name=\"search-outline\" slot=\"icon-only\" />\r\n        </ion-button>\r\n      </ion-item>\r\n    </ion-list>\r\n\r\n    <ion-list>\r\n      <ion-item-sliding *rxFor=\"let asset of question.Assets; last as isLast\">\r\n        <ion-item [lines]=\"isLast ? 'none' : 'inset'\" button>\r\n          <ion-label>{{ asset.AssetID }}: {{ asset.Name }}</ion-label>\r\n        </ion-item>\r\n\r\n        <ion-item-options side=\"end\">\r\n          <ion-item-option color=\"danger\" (click)=\"remove(asset.AssetID)\">\r\n            <ion-icon name=\"trash-outline\" slot=\"icon-only\" />\r\n          </ion-item-option>\r\n        </ion-item-options>\r\n      </ion-item-sliding>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    QuestionTextComponent,\r\n    AssetListModal\r\n  ]\r\n})\r\nexport class AssetListComponent {\r\n  id = crypto.randomUUID();\r\n  isMobileApp = isMobileApp();\r\n\r\n  @Input({ required: true })\r\n  question!: Question;\r\n\r\n  validator = useAssetListValidator(() => this.question);\r\n\r\n  select(asset: Asset) {\r\n    if (this.question.Assets.find(a => a.AssetID === asset.Id) == null)\r\n      this.question.Assets.push({\r\n        AssetID: asset.Id,\r\n        Name: asset.Registration || \"\",\r\n        Tag: \"\"\r\n      });\r\n  }\r\n\r\n  remove(id: number) {\r\n    this.question.Assets = this.question.Assets.filter(a => a.AssetID !== id);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "AssetListModal",
            "id": "component-AssetListModal-170c4fbe06e65f61b69f1c78fe8ee12c6b6e41f844de0b763a0323014b80c2af16784fc0dc41afb009fb66f1fdfefa3870300db12ef72f5f198b0664a88be23d",
            "file": "src/app/shared/modals/asset-list/asset-list.modal.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "asset-list-modal",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-modal #modal [trigger]=\"trigger\" [isOpen]=\"isOpen\">\n  <ng-template>\n    <ion-header>\n      <ion-toolbar>\n        <ion-title class=\"ion-text-center\">Select an Asset</ion-title>\n        <ion-buttons slot=\"end\">\n          <ion-button (click)=\"modal.dismiss()\" [unpatch]>\n            <ion-icon name=\"close-outline\" slot=\"icon-only\" />\n          </ion-button>\n        </ion-buttons>\n      </ion-toolbar>\n\n      <ion-toolbar>\n        <ion-segment [(ngModel)]=\"segment\" class=\"w-full\">\n          <ion-segment-button value=\"local\">\n            <ion-icon name=\"phone-portrait-outline\" />\n          </ion-segment-button>\n          <ion-segment-button value=\"online\">\n            <ion-icon name=\"wifi-outline\" />\n          </ion-segment-button>\n        </ion-segment>\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content [ngSwitch]=\"segment\" class=\"ion-padding\">\n      <local-asset-search *ngSwitchCase=\"'local'\" (select)=\"select.emit($event); modal.dismiss();\" />\n      <online-asset-search *ngSwitchCase=\"'online'\" />\n    </ion-content>\n  </ng-template>\n</ion-modal>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "select",
                    "defaultValue": "new EventEmitter<Asset>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "isOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "segment",
                    "defaultValue": "\"local\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"local\" | \"online\"",
                    "optional": false,
                    "description": "",
                    "line": 62
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { importNgSwitch, importRxTemplate } from \"../../imports\";\r\nimport { LocalAssetSearchComponent, OnlineAssetSearchComponent } from \"./components\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { Asset } from \"src/app/core/stores/asset/asset.store\";\r\n\r\n@Component({\r\n  selector: \"asset-list-modal\",\r\n  template: `\r\n    <ion-modal #modal [trigger]=\"trigger\" [isOpen]=\"isOpen\">\r\n      <ng-template>\r\n        <ion-header>\r\n          <ion-toolbar>\r\n            <ion-title class=\"ion-text-center\">Select an Asset</ion-title>\r\n            <ion-buttons slot=\"end\">\r\n              <ion-button (click)=\"modal.dismiss()\" [unpatch]>\r\n                <ion-icon name=\"close-outline\" slot=\"icon-only\" />\r\n              </ion-button>\r\n            </ion-buttons>\r\n          </ion-toolbar>\r\n\r\n          <ion-toolbar>\r\n            <ion-segment [(ngModel)]=\"segment\" class=\"w-full\">\r\n              <ion-segment-button value=\"local\">\r\n                <ion-icon name=\"phone-portrait-outline\" />\r\n              </ion-segment-button>\r\n              <ion-segment-button value=\"online\">\r\n                <ion-icon name=\"wifi-outline\" />\r\n              </ion-segment-button>\r\n            </ion-segment>\r\n          </ion-toolbar>\r\n        </ion-header>\r\n\r\n        <ion-content [ngSwitch]=\"segment\" class=\"ion-padding\">\r\n          <local-asset-search *ngSwitchCase=\"'local'\" (select)=\"select.emit($event); modal.dismiss();\" />\r\n          <online-asset-search *ngSwitchCase=\"'online'\" />\r\n        </ion-content>\r\n      </ng-template>\r\n    </ion-modal>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    ...importNgSwitch(),\r\n    FormsModule,\r\n    LocalAssetSearchComponent,\r\n    OnlineAssetSearchComponent\r\n  ]\r\n})\r\nexport class AssetListModal {\r\n  @Input({ required: true })\r\n  trigger!: string;\r\n\r\n  isOpen: boolean = false;\r\n\r\n  @Output()\r\n  select = new EventEmitter<Asset>();\r\n\r\n  segment: \"local\" | \"online\" = \"local\";\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "AssetListSummaryComponent",
            "id": "component-AssetListSummaryComponent-930b83782d159885bea5e05b21074543a8aaf1f832eef6ff1b59e0d614a3e4a7c384e77c34c31261c8c1aded014538aff79184e19d2ddfb1c771ddb8f2ec4578",
            "file": "src/app/core/pages/document-builder/components/question-types/17-asset-list/summary/asset-list-summary.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "asset-list-summary",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <ion-label class=\"font-bold\">{{ question.QuestionText }}</ion-label>\n  </ion-item>\n  <ion-item *rxFor=\"let asset of question.Assets\" lines=\"none\">\n    {{ asset.AssetID }} - {{ asset.Name }}\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\n\r\n@Component({\r\n  selector: \"asset-list-summary\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <ion-label class=\"font-bold\">{{ question.QuestionText }}</ion-label>\r\n      </ion-item>\r\n      <ion-item *rxFor=\"let asset of question.Assets\" lines=\"none\">\r\n        {{ asset.AssetID }} - {{ asset.Name }}\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [IonicModule, ...importRxTemplate()]\r\n})\r\nexport class AssetListSummaryComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CameraCaptureComponent",
            "id": "component-CameraCaptureComponent-e52830438fd3ac22616aba2830350a32e42c7390141c8502ce44440d4e9e064beaaa617edde363029a2b17978960bdcf6360a4647fcd1690d68e08a12d9a0b47",
            "file": "src/app/core/pages/document-builder/components/question-types/extras/camera-capture/camera-capture.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "camera-capture",
            "styleUrls": [],
            "styles": [],
            "template": "<if [condition]=\"base64Img == null\">\n  <camera show (takePhoto)=\"take($event)\" fill=\"clear\">\n    <ion-icon name=\"camera-outline\" slot=\"icon-only\" />\n  </camera>\n\n  <ng-container else>\n    <ion-button [src]=\"base64Img!\" fill=\"clear\">\n      <ion-icon name=\"eye-outline\" slot=\"icon-only\" />\n    </ion-button>\n    <ion-button (click)=\"remove()\" fill=\"clear\" color=\"danger\">\n      <ion-icon name=\"close-outline\" slot=\"icon-only\" />\n    </ion-button>\n  </ng-container>\n</if>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "base64Img",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "base64ImgChange",
                    "defaultValue": "new EventEmitter<string | null>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "remove",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "take",
                    "args": [
                        {
                            "name": "base64Img",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "base64Img",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { CameraComponent, IfComponent } from \"src/app/shared/components\";\r\nimport { PhotoViewerDirective } from \"src/app/shared/directives\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\n\r\n@Component({\r\n  selector: \"camera-capture\",\r\n  template: `\r\n    <if [condition]=\"base64Img == null\">\r\n      <camera show (takePhoto)=\"take($event)\" fill=\"clear\">\r\n        <ion-icon name=\"camera-outline\" slot=\"icon-only\" />\r\n      </camera>\r\n\r\n      <ng-container else>\r\n        <ion-button [src]=\"base64Img!\" fill=\"clear\">\r\n          <ion-icon name=\"eye-outline\" slot=\"icon-only\" />\r\n        </ion-button>\r\n        <ion-button (click)=\"remove()\" fill=\"clear\" color=\"danger\">\r\n          <ion-icon name=\"close-outline\" slot=\"icon-only\" />\r\n        </ion-button>\r\n      </ng-container>\r\n    </if>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    IfComponent,\r\n    CameraComponent,\r\n    PhotoViewerDirective\r\n  ]\r\n})\r\nexport class CameraCaptureComponent {\r\n\r\n  @Input()\r\n  base64Img: string | null = null;\r\n\r\n  @Output()\r\n  base64ImgChange = new EventEmitter<string | null>();\r\n\r\n  take(base64Img: string) {\r\n    this.base64Img = base64Img || null;\r\n    this.base64ImgChange.emit(this.base64Img);\r\n  }\r\n\r\n  remove() {\r\n    this.base64Img = null;\r\n    this.base64ImgChange.emit(this.base64Img);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CameraComponent",
            "id": "component-CameraComponent-b78ac01393857956967f0f8ca994fda8482eb9021d08a2340447491753eb7d30d56065ec2e7e4768a03c78edcc2aec3a0eac08eb8e63362c0f314abf67bb1773",
            "file": "src/app/shared/components/camera/camera.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "camera",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-button [fill]=\"fill\" [expand]=\"expand\" [color]=\"color\">\n  <if [condition]=\"isMobileApp\">\n    <div show (click)=\"take()\"></div>\n    <upload else (uploadFiles)=\"upload($event)\" accept=\"image/*\" />\n  </if>\n  <ng-content></ng-content>\n</ion-button>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "expand",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "\"block\" | \"full\"",
                    "decorators": []
                },
                {
                    "name": "fill",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "\"clear\" | \"outline\" | \"solid\"",
                    "decorators": []
                },
                {
                    "name": "options",
                    "defaultValue": "{\r\n    resultType: CameraResultType.Base64\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "ImageOptions",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "takePhoto",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "isMobileApp",
                    "defaultValue": "isMobileApp()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                }
            ],
            "methodsClass": [
                {
                    "name": "take",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "upload",
                    "args": [
                        {
                            "name": "files",
                            "type": "DataUrlFile[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "files",
                            "type": "DataUrlFile[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { importRxTemplate } from \"../../imports\";\r\nimport { isMobileApp } from \"../../plugins/platform.plugin\";\r\nimport { IfComponent } from \"../if/if.component\";\r\nimport { UploadComponent } from \"../upload/upload.component\";\r\nimport { Camera, CameraResultType, ImageOptions } from \"@capacitor/camera\";\r\nimport { DataUrlFile } from \"../../models/files/data-url-file.model\";\r\n\r\n@Component({\r\n  selector: \"camera\",\r\n  template: `\r\n    <ion-button [fill]=\"fill\" [expand]=\"expand\" [color]=\"color\">\r\n      <if [condition]=\"isMobileApp\">\r\n        <div show (click)=\"take()\"></div>\r\n        <upload else (uploadFiles)=\"upload($event)\" accept=\"image/*\" />\r\n      </if>\r\n      <ng-content></ng-content>\r\n    </ion-button>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule, \r\n    ...importRxTemplate(),\r\n    IfComponent,\r\n    UploadComponent\r\n  ]\r\n})\r\nexport class CameraComponent {\r\n  @Input()\r\n  fill?: \"clear\" | \"outline\" | \"solid\";\r\n\r\n  @Input()\r\n  expand?: \"block\" | \"full\";\r\n\r\n  @Input()\r\n  color?: string;\r\n\r\n  @Output()\r\n  takePhoto = new EventEmitter<string>();\r\n  \r\n  isMobileApp = isMobileApp();\r\n\r\n  @Input()\r\n  options: ImageOptions = {\r\n    resultType: CameraResultType.Base64\r\n  };\r\n\r\n  async take() {\r\n    const photo = await Camera.getPhoto(this.options);\r\n    \r\n    this.takePhoto.emit(photo.base64String);\r\n  }\r\n\r\n  upload(files: DataUrlFile[]) {\r\n    if (files[0] != null)\r\n      this.takePhoto.emit(files[0].dataUrl);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CascadeSelectComponent",
            "id": "component-CascadeSelectComponent-f55cf015c8a76771bd64187066ecd12cda84c61fef0d6e94ef4f9077261df568d5bc93c0ee0e0759bde8722a3d600708c1a7d360ef8ed78833ea04f34e54b835",
            "file": "src/app/core/pages/document-builder/components/question-types/13-cascade-select/cascade-select.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cascade-select-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n    <camera-capture *rxIf=\"question.CanHaveImg\" class=\"m-0\" slot=\"end\" />\n    <file-upload *rxIf=\"question.CanHaveFiles\" class=\"m-0\" slot=\"end\" />\n  </ion-item>\n  <selectable\n    placeholder=\"Select\"\n    [title]=\"question.QuestionText\"\n    [items]=\"question.AnswerOptions\"\n    [(value)]=\"question.OptionVal\"\n    (itemChange)=\"question.SelectedOptionText = $event?.Text\"\n    itemValue=\"Val\"\n    itemText=\"Text\"\n    [canClear]=\"!question.Required\" />\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.CascadeOptionsText }}</question-text>\n  </ion-item>\n  <selectable\n    placeholder=\"Select\"\n    [title]=\"question.CascadeOptionsText\"\n    [items]=\"question.CascadeOptions\"\n    [(value)]=\"question.CascadeOptionVal\"\n    (itemChange)=\"question.SelectedCascadeOptionText = $event?.Text\"\n    itemValue=\"Val\"\n    itemText=\"Text\"\n    [canClear]=\"!question.Required\" />\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "validator",
                    "defaultValue": "useCascadeSelectValidator(() => this.question)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 56
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\nimport { SelectableComponent } from \"src/app/shared/components\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { useCascadeSelectValidator } from \"./validation/cascade-select.validator\";\r\n\r\n@Component({\r\n  selector: \"cascade-select-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n        <camera-capture *rxIf=\"question.CanHaveImg\" class=\"m-0\" slot=\"end\" />\r\n        <file-upload *rxIf=\"question.CanHaveFiles\" class=\"m-0\" slot=\"end\" />\r\n      </ion-item>\r\n      <selectable \r\n        placeholder=\"Select\"\r\n        [title]=\"question.QuestionText\"\r\n        [items]=\"question.AnswerOptions\"\r\n        [(value)]=\"question.OptionVal\"\r\n        (itemChange)=\"question.SelectedOptionText = $event?.Text\"\r\n        itemValue=\"Val\"\r\n        itemText=\"Text\"\r\n        [canClear]=\"!question.Required\" />\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.CascadeOptionsText }}</question-text>\r\n      </ion-item>\r\n      <selectable\r\n        placeholder=\"Select\"\r\n        [title]=\"question.CascadeOptionsText\"\r\n        [items]=\"question.CascadeOptions\"\r\n        [(value)]=\"question.CascadeOptionVal\"\r\n        (itemChange)=\"question.SelectedCascadeOptionText = $event?.Text\"\r\n        itemValue=\"Val\"\r\n        itemText=\"Text\"\r\n        [canClear]=\"!question.Required\" />\r\n    </ion-list>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  standalone: true,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    QuestionTextComponent,\r\n    SelectableComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent\r\n  ]\r\n})\r\nexport class CascadeSelectComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n\r\n  validator = useCascadeSelectValidator(() => this.question);\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CascadeSelectSummaryComponent",
            "id": "component-CascadeSelectSummaryComponent-184d677405b5c7a16b65b277a2ebeda13b2a137c16e31486c3fd43a1667fa9998108080effab82f6b465e15649845115d60809ee322e567046d29e132bfcafb0",
            "file": "src/app/core/pages/document-builder/components/question-types/13-cascade-select/summary/cascade-select-summary.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cascade-select-summary",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <ion-label>\n      <b>{{ question.QuestionText }}</b>\n      <p>{{ question.SelectedOptionText }}</p>\n    </ion-label>\n  </ion-item>\n\n  <ion-item lines=\"none\">\n    <ion-label>\n      <b>{{ question.CascadeOptionsText }}</b>\n      <p>{{ question.SelectedCascadeOptionText }}</p>\n    </ion-label>\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\n\r\n@Component({\r\n  selector: \"cascade-select-summary\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <ion-label>\r\n          <b>{{ question.QuestionText }}</b>\r\n          <p>{{ question.SelectedOptionText }}</p>\r\n        </ion-label>\r\n      </ion-item>\r\n\r\n      <ion-item lines=\"none\">\r\n        <ion-label>\r\n          <b>{{ question.CascadeOptionsText }}</b>\r\n          <p>{{ question.SelectedCascadeOptionText }}</p>\r\n        </ion-label>\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [IonicModule, ...importRxTemplate()]\r\n})\r\nexport class CascadeSelectSummaryComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CascadeSelectTextComponent",
            "id": "component-CascadeSelectTextComponent-536d6e358c170cd662a403a738fc729e43d3e25e393e3e00f9cf06da61297408ae9e5f26f34c8d274229149371cea4250c25322757294530b463a7dbe9ff8d60",
            "file": "src/app/core/pages/document-builder/components/question-types/30-cascade-select-text/cascade-select-text.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cascade-select-text-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n    <camera-capture *rxIf=\"question.CanHaveImg\" class=\"m-0\" slot=\"end\" />\n    <file-upload *rxIf=\"question.CanHaveFiles\" class=\"m-0\" slot=\"end\" />\n  </ion-item>\n  <selectable\n    placeholder=\"Select\"\n    [title]=\"question.QuestionText\"\n    [items]=\"question.AnswerOptions\"\n    itemValue=\"Val\"\n    itemText=\"Text\"\n    [canClear]=\"!question.Required\" />\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.CascadeOptionsText }}</question-text>\n  </ion-item>\n  <selectable\n    placeholder=\"Select\"\n    [title]=\"question.CascadeOptionsText\"\n    [items]=\"question.CascadeOptions\"\n    itemValue=\"Val\"\n    itemText=\"Text\"\n    [canClear]=\"!question.Required\" />\n  <ion-textarea\n    class=\"p-2\"\n    [label]=\"question.CommentsText || 'Comments'\"\n    labelPlacement=\"floating\"\n    [(ngModel)]=\"question.MoreAdditionalText\"\n    rows=\"4\"\n    type=\"text\"\n    fill=\"outline\" />\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "validator",
                    "defaultValue": "useCascadeSelectValidator(() => this.question)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 62
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\nimport { SelectableComponent } from \"src/app/shared/components\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { useCascadeSelectValidator } from \"../13-cascade-select/validation/cascade-select.validator\";\r\n\r\n@Component({\r\n  selector: \"cascade-select-text-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n        <camera-capture *rxIf=\"question.CanHaveImg\" class=\"m-0\" slot=\"end\" />\r\n        <file-upload *rxIf=\"question.CanHaveFiles\" class=\"m-0\" slot=\"end\" />\r\n      </ion-item>\r\n      <selectable \r\n        placeholder=\"Select\"\r\n        [title]=\"question.QuestionText\"\r\n        [items]=\"question.AnswerOptions\"\r\n        itemValue=\"Val\"\r\n        itemText=\"Text\"\r\n        [canClear]=\"!question.Required\" />\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.CascadeOptionsText }}</question-text>\r\n      </ion-item>\r\n      <selectable\r\n        placeholder=\"Select\"\r\n        [title]=\"question.CascadeOptionsText\"\r\n        [items]=\"question.CascadeOptions\"\r\n        itemValue=\"Val\"\r\n        itemText=\"Text\"\r\n        [canClear]=\"!question.Required\" />\r\n      <ion-textarea \r\n        class=\"p-2\" \r\n        [label]=\"question.CommentsText || 'Comments'\" \r\n        labelPlacement=\"floating\" \r\n        [(ngModel)]=\"question.MoreAdditionalText\"\r\n        rows=\"4\" \r\n        type=\"text\" \r\n        fill=\"outline\" />\r\n    </ion-list>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  standalone: true,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    FormsModule,\r\n    QuestionTextComponent,\r\n    SelectableComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent\r\n  ]\r\n})\r\nexport class CascadeSelectTextComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n\r\n  validator = useCascadeSelectValidator(() => this.question);\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CascadeSelectTextSummaryComponent",
            "id": "component-CascadeSelectTextSummaryComponent-4b5e84bdab313b7ac5ff8fae922b9bad31dc6025d75d0ef9b187fdcc3d99bce36ef9d21d8e1eca65169bfb5725b562e0cdc28d09eee8dd7f0f6cbf840ea6ae5d",
            "file": "src/app/core/pages/document-builder/components/question-types/30-cascade-select-text/summary/cascade-select-text-summary.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cascade-select-text-summary",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <ion-label>\n      <b>{{ question.QuestionText }}</b>\n      <p>{{ question.SelectedOptionText }}</p>\n    </ion-label>\n  </ion-item>\n\n  <ion-item lines=\"none\">\n    <ion-label>\n      <b>{{ question.CascadeOptionsText }}</b>\n      <p>{{ question.SelectedCascadeOptionText }}</p>\n    </ion-label>\n  </ion-item>\n\n  <ion-item lines=\"none\">\n    <ion-label>\n      <b>{{ question.CommentsText || 'Comments' }}</b>\n      <p>{{ question.MoreAdditionalText }}</p>\n    </ion-label>\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\n\r\n@Component({\r\n  selector: \"cascade-select-text-summary\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <ion-label>\r\n          <b>{{ question.QuestionText }}</b>\r\n          <p>{{ question.SelectedOptionText }}</p>\r\n        </ion-label>\r\n      </ion-item>\r\n\r\n      <ion-item lines=\"none\">\r\n        <ion-label>\r\n          <b>{{ question.CascadeOptionsText }}</b>\r\n          <p>{{ question.SelectedCascadeOptionText }}</p>\r\n        </ion-label>\r\n      </ion-item>\r\n\r\n      <ion-item lines=\"none\">\r\n        <ion-label>\r\n          <b>{{ question.CommentsText || 'Comments' }}</b>\r\n          <p>{{ question.MoreAdditionalText }}</p>\r\n        </ion-label>\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [IonicModule]\r\n})\r\nexport class CascadeSelectTextSummaryComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CategoryActionerSelectComponent",
            "id": "component-CategoryActionerSelectComponent-786985de0448c4fb0ab69fc1d01c15bb1ab7f20b5305df5979990ea0b73e0fec1142357886a2e256b702f9e92f57cccd5b49be85bcf63e6c0fe2ac7f06ad8d7b",
            "file": "src/app/core/pages/document-builder/components/input-types/category-actioner-select/category-actioner-select.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "category-actioner-select",
            "styleUrls": [],
            "styles": [],
            "template": "<if *rxLet=\"categoryActioners.data(); let actioners\"\n    [condition]=\"actioners.length > 0\">\n  <ion-card show>\n    <ion-card-header>\n      <ion-card-title class=\"text-center\">{{ title || \"Category Actioner\" }}</ion-card-title>\n    </ion-card-header>\n    <ion-card-content>\n      <ion-list>\n        <selectable\n          [title]=\"title || 'Category Actioner'\"\n          placeholder=\"Actioner\"\n          [items]=\"actioners\"\n          [(value)]=\"actionerId\"\n          itemValue=\"Id\"\n          itemText=\"Name\"\n          (valueChange)=\"actionerIdChange.emit(actionerId)\" />\n      </ion-list>\n    </ion-card-content>\n  </ion-card>\n\n  <p else>\n    This document is not submittable as it does not have category actioners that match this document's category type. Please notify your admin.\n  </p>\n</if>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "categoryId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "hideMyself",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "string",
                    "decorators": []
                },
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 58,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "actionerIdChange",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 61,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "categoryActioners",
                    "defaultValue": "useCategoryActioners(this.categoryId)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "userId",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 45
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { useCategoryActioners } from \"src/app/core/http/login.api\";\r\nimport { IfComponent, SelectableComponent } from \"src/app/shared/components\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\n\r\n@Component({\r\n  selector: \"category-actioner-select\",\r\n  template: `\r\n  <if *rxLet=\"categoryActioners.data(); let actioners\" \r\n      [condition]=\"actioners.length > 0\">\r\n    <ion-card show>\r\n      <ion-card-header>\r\n        <ion-card-title class=\"text-center\">{{ title || \"Category Actioner\" }}</ion-card-title>\r\n      </ion-card-header>\r\n      <ion-card-content>\r\n        <ion-list>\r\n          <selectable \r\n            [title]=\"title || 'Category Actioner'\"\r\n            placeholder=\"Actioner\"\r\n            [items]=\"actioners\"\r\n            [(value)]=\"actionerId\"\r\n            itemValue=\"Id\"\r\n            itemText=\"Name\" \r\n            (valueChange)=\"actionerIdChange.emit(actionerId)\" />\r\n        </ion-list>\r\n      </ion-card-content>\r\n    </ion-card>\r\n    \r\n    <p else>\r\n      This document is not submittable as it does not have category actioners that match this document's category type. Please notify your admin.\r\n    </p>\r\n  </if>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    SelectableComponent,\r\n    IfComponent\r\n  ]\r\n})\r\nexport class CategoryActionerSelectComponent {\r\n  userId: number = 0;\r\n\r\n  @Input()\r\n  title?: string;\r\n\r\n  @Input()\r\n  hideMyself: boolean = false;\r\n\r\n  @Input()\r\n  categoryId?: number;\r\n  categoryActioners = useCategoryActioners(this.categoryId);\r\n\r\n  @Input({ required: true })\r\n  actionerId?: number;\r\n\r\n  @Output()\r\n  actionerIdChange = new EventEmitter<number>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CategoryActionerSelectSummaryComponent",
            "id": "component-CategoryActionerSelectSummaryComponent-b01e4629a06253176e771b50e6917d398788b94fa1fa0477a28def5208926061078ef719b1913a5ff14bb5aec070c5dd7d500e1016be88075483f5a457e90811",
            "file": "src/app/core/pages/document-builder/components/input-types/category-actioner-select/summary/category-actioner-select-summary.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "category-actioner-select-summary",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <ion-label>\n      <b>{{ title || \"Category Actioner\" }}</b>\n      <p *rxIf=\"actioner(); let actioner\">{{ actioner.Name }}</p>\n    </ion-label>\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "categoryId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": []
                },
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "actioner",
                    "defaultValue": "this.categoryActioners.data(actioners => actioners.find(a => a.Id === this.actionerId))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "categoryActioners",
                    "defaultValue": "useCategoryActioners(this.categoryId)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { useCategoryActioners } from \"src/app/core/http/login.api\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\n\r\n@Component({\r\n  selector: \"category-actioner-select-summary\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <ion-label>\r\n          <b>{{ title || \"Category Actioner\" }}</b>\r\n          <p *rxIf=\"actioner(); let actioner\">{{ actioner.Name }}</p>\r\n        </ion-label>\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [IonicModule, ...importRxTemplate()]\r\n})\r\nexport class CategoryActionerSelectSummaryComponent {\r\n  @Input()\r\n  title?: string;\r\n\r\n  @Input()\r\n  categoryId?: number;\r\n  categoryActioners = useCategoryActioners(this.categoryId);\r\n\r\n  @Input({ required: true })\r\n  actionerId?: number;\r\n  actioner = this.categoryActioners.data(actioners => actioners.find(a => a.Id === this.actionerId));\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CheckboxComponent",
            "id": "component-CheckboxComponent-b8be82f11b9b89f2ecad1377ce02be2b55ea2cf28b95570be217f77b79ba48a7ed48ab6ed9df10ff6bb9fdce297c4baf16146615c28c53c0bfff223d34619a4b",
            "file": "src/app/core/pages/document-builder/components/question-types/01-checkbox/checkbox.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "checkbox-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-item lines=\"none\">\n  <ion-checkbox\n    [class.ng-invalid]=\"validator.isInvalid$ | push\"\n    [class.ng-valid]=\"validator.isValid$ | push\"\n    [(ngModel)]=\"question.YesNoNA\"\n    (ionChange)=\"validator.validate()\"\n    aria-label=\"\"\n    slot=\"start\" />\n  <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n  <camera-capture *rxIf=\"question.CanHaveImg\" class=\"m-0\" slot=\"end\" />\n  <file-upload *rxIf=\"question.CanHaveFiles\" class=\"m-0\" slot=\"end\" />\n</ion-item>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "effects",
                    "defaultValue": "[\r\n    createEffect(\r\n      () => this.validator.validate(),\r\n      merge(this.afterViewInit(), this.input(\"question\"))\r\n    )\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "validator",
                    "defaultValue": "useCheckboxValidator(() => this.question)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { merge } from \"rxjs\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { useCheckboxValidator } from \"./validation/checkbox.validator\";\r\nimport { AngularComponent, withAfterViewInit, withOnChanges } from \"src/app/shared/lifecycles\";\r\nimport { createEffect } from \"src/app/shared/rxjs\";\r\n\r\n@Component({\r\n  selector: 'checkbox-question',\r\n  template: `\r\n    <ion-item lines=\"none\">\r\n      <ion-checkbox \r\n        [class.ng-invalid]=\"validator.isInvalid$ | push\" \r\n        [class.ng-valid]=\"validator.isValid$ | push\"\r\n        [(ngModel)]=\"question.YesNoNA\" \r\n        (ionChange)=\"validator.validate()\" \r\n        aria-label=\"\" \r\n        slot=\"start\" />\r\n      <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n      <camera-capture *rxIf=\"question.CanHaveImg\" class=\"m-0\" slot=\"end\" />\r\n      <file-upload *rxIf=\"question.CanHaveFiles\" class=\"m-0\" slot=\"end\" />\r\n    </ion-item>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    FormsModule,\r\n    ...importRxTemplate(),\r\n    QuestionTextComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent\r\n  ]\r\n})\r\nexport class CheckboxComponent extends AngularComponent(withAfterViewInit, withOnChanges) {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n\r\n  validator = useCheckboxValidator(() => this.question);\r\n  \r\n  effects = [\r\n    createEffect(\r\n      () => this.validator.validate(),\r\n      merge(this.afterViewInit(), this.input(\"question\"))\r\n    )\r\n  ];\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CheckboxSummaryComponent",
            "id": "component-CheckboxSummaryComponent-b60322c89ee8da85ba8e350e3339b012024a44ef6ec4dbf9f18b0b8f232d49a6a420c1449bc1c41fdec6cffec9ae06e5bd7c25f436d62fdbe85ef25398f67412",
            "file": "src/app/core/pages/document-builder/components/question-types/01-checkbox/summary/checkbox-summary.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "checkbox-summary",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <ion-label class=\"font-bold\">{{ question.QuestionText }}</ion-label>\n    <ion-icon\n      *rxIf=\"question.YesNoNA\"\n      name=\"checkmark-circle\"\n      color=\"success\"\n      slot=\"end\" />\n    <ion-icon\n      *rxIf=\"!question.YesNoNA\"\n      name=\"close-circle\"\n      color=\"danger\"\n      slot=\"end\" />\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\n\r\n@Component({\r\n  selector: \"checkbox-summary\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <ion-label class=\"font-bold\">{{ question.QuestionText }}</ion-label>\r\n        <ion-icon \r\n          *rxIf=\"question.YesNoNA\" \r\n          name=\"checkmark-circle\" \r\n          color=\"success\" \r\n          slot=\"end\" />\r\n        <ion-icon \r\n          *rxIf=\"!question.YesNoNA\"\r\n          name=\"close-circle\" \r\n          color=\"danger\"\r\n          slot=\"end\" />\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [IonicModule, ...importRxTemplate()]\r\n})\r\nexport class CheckboxSummaryComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CheckboxTextboxComponent",
            "id": "component-CheckboxTextboxComponent-ab61c4281365f1f954c79ec8acdfc41bbc67c15f0413247af94c2224685748c226d1a04fcfc67b1ec78042673c24ed1d62141c7e46d5b092c71da1b07353014d",
            "file": "src/app/core/pages/document-builder/components/question-types/06-checkbox-textbox/checkbox-textbox.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "checkbox-question-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <ion-checkbox [(ngModel)]=\"question.YesNoNA\" aria-label=\"\" slot=\"start\"></ion-checkbox>\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n    <camera-capture *rxIf=\"question.CanHaveImg\" class=\"m-0\" slot=\"end\" />\n    <file-upload *rxIf=\"question.CanHaveFiles\" class=\"m-0\" slot=\"end\" />\n  </ion-item>\n\n  <ion-textarea class=\"p-2\" [(ngModel)]=\"question.AnswerText\" label=\"text:\" labelPlacement=\"stacked\" rows=\"3\" fill=\"outline\" />\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "validator",
                    "defaultValue": "useCheckboxTextboxValidator(() => this.question)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { useCheckboxTextboxValidator } from \"./validation/checkbox-textbox.validator\";\r\n\r\n@Component({\r\n  selector: \"checkbox-question-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <ion-checkbox [(ngModel)]=\"question.YesNoNA\" aria-label=\"\" slot=\"start\"></ion-checkbox>\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n        <camera-capture *rxIf=\"question.CanHaveImg\" class=\"m-0\" slot=\"end\" />\r\n        <file-upload *rxIf=\"question.CanHaveFiles\" class=\"m-0\" slot=\"end\" />\r\n      </ion-item>\r\n\r\n      <ion-textarea class=\"p-2\" [(ngModel)]=\"question.AnswerText\" label=\"text:\" labelPlacement=\"stacked\" rows=\"3\" fill=\"outline\" />\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    FormsModule,\r\n    QuestionTextComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent,\r\n  ]\r\n})\r\nexport class CheckboxTextboxComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n\r\n  validator = useCheckboxTextboxValidator(() => this.question);\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CheckboxTextboxSummaryComponent",
            "id": "component-CheckboxTextboxSummaryComponent-4874cc49bb892909c32f39ac97f6b38edd5b63e88d3bb7e954233c02bce39d75efb62eb96ed17d70ed835cc3f1723c640e3f0a97adf9ba860c19593264f6deeb",
            "file": "src/app/core/pages/document-builder/components/question-types/06-checkbox-textbox/summary/checkbox-textbox-summary.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "checkbox-textbox-summary",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <ion-label class=\"font-bold\">{{ question.QuestionText }}</ion-label>\n    <ion-icon\n      *rxIf=\"question.YesNoNA\"\n      name=\"checkmark-circle\"\n      color=\"success\"\n      slot=\"end\" />\n    <ion-icon\n      *rxIf=\"!question.YesNoNA\"\n      name=\"close-circle\"\n      color=\"danger\"\n      slot=\"end\" />\n  </ion-item>\n\n  <ion-item lines=\"none\">\n    <p>{{ question.AnswerText }}</p>\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\n\r\n@Component({\r\n  selector: \"checkbox-textbox-summary\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <ion-label class=\"font-bold\">{{ question.QuestionText }}</ion-label>\r\n        <ion-icon \r\n          *rxIf=\"question.YesNoNA\" \r\n          name=\"checkmark-circle\" \r\n          color=\"success\" \r\n          slot=\"end\" />\r\n        <ion-icon \r\n          *rxIf=\"!question.YesNoNA\" \r\n          name=\"close-circle\" \r\n          color=\"danger\" \r\n          slot=\"end\" />\r\n      </ion-item>\r\n\r\n      <ion-item lines=\"none\">\r\n        <p>{{ question.AnswerText }}</p>\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [IonicModule, ...importRxTemplate()]\r\n})\r\nexport class CheckboxTextboxSummaryComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ChildDocumentCardComponent",
            "id": "component-ChildDocumentCardComponent-44794dd4cc889dddb1d66c3f9ef553eb465776caac5bc7af844d318cc3e83be8c65d57574260f447cbe6bb47d829b46baa31bccf202d4d3c23c977a33c94d687",
            "file": "src/app/core/pages/document-builder/components/child-document-card/child-document-card.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "child-document-card",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <ion-label class=\"text-lg\">Action Document</ion-label>\n    <ion-spinner *rxIf=\"template.isLoading() | push\" slot=\"end\" />\n  </ion-item>\n  <ion-item *rxIf=\"template.data(); let doc\" lines=\"none\">\n    <ion-label>\n      <p>{{ doc.DocumentTitle }}</p>\n      <p>Action Documents Submitted: {{ amountSubmitted }}</p>\n    </ion-label>\n    <ion-button (click)=\"goRelative({ queryParams: { id: doc.DocumentID } })\" fill=\"outline\">\n      <ion-icon name=\"pencil-outline\" slot=\"icon-only\" />\n    </ion-button>\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "amountSubmitted",
                    "defaultValue": "0",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "number",
                    "decorators": []
                },
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "goRelative",
                    "defaultValue": "useGoRelative()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "template",
                    "defaultValue": "useTemplate(this.templateId$)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "templateId$",
                    "defaultValue": "merge(this.afterViewInit(), this.input(\"templateId\")).pipe(\r\n    map(() => this.templateId)\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<number>",
                    "optional": false,
                    "description": "",
                    "line": 37
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Observable, map, merge } from \"rxjs\";\r\nimport { useTemplate } from \"src/app/core/http/template.api\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { AngularComponent, withAfterViewInit, withOnChanges } from \"src/app/shared/lifecycles\";\r\nimport { useGoRelative } from \"src/app/shared/route\";\r\n\r\n@Component({\r\n  selector: \"child-document-card\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <ion-label class=\"text-lg\">Action Document</ion-label>\r\n        <ion-spinner *rxIf=\"template.isLoading() | push\" slot=\"end\" />\r\n      </ion-item>\r\n      <ion-item *rxIf=\"template.data(); let doc\" lines=\"none\">\r\n        <ion-label>\r\n          <p>{{ doc.DocumentTitle }}</p>\r\n          <p>Action Documents Submitted: {{ amountSubmitted }}</p>\r\n        </ion-label>\r\n        <ion-button (click)=\"goRelative({ queryParams: { id: doc.DocumentID } })\" fill=\"outline\">\r\n          <ion-icon name=\"pencil-outline\" slot=\"icon-only\" />\r\n        </ion-button>\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [IonicModule, ...importRxTemplate()]\r\n})\r\nexport class ChildDocumentCardComponent extends AngularComponent(withAfterViewInit, withOnChanges) {\r\n  goRelative = useGoRelative();\r\n\r\n  @Input({ required: true })\r\n  templateId!: number;\r\n  templateId$: Observable<number> = merge(this.afterViewInit(), this.input(\"templateId\")).pipe(\r\n    map(() => this.templateId)\r\n  );\r\n\r\n  @Input()\r\n  amountSubmitted: number = 0;\r\n\r\n  template = useTemplate(this.templateId$);\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CompanyActionerSelectComponent",
            "id": "component-CompanyActionerSelectComponent-08f0b07429b0d9b2d7e69df2b7022f7a50826ae3d8988e5dbf33b0b5e2c0e537845492e35035e6ba0306f69ca25a1372895088fb974d8376228626fe67cdcc18",
            "file": "src/app/core/pages/document-builder/components/input-types/company-actioner-select/company-actioner-select.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "company-actioner-select",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-card>\n  <ion-card-header>\n    <ion-card-title class=\"text-center\">{{ title || \"Company Actioners\" }}</ion-card-title>\n  </ion-card-header>\n  <ion-card-content>\n    <ion-list>\n      <selectable\n        [title]=\"title || 'Company Actioners'\"\n        placeholder=\"Actioners\"\n        [items]=\"companies.data() | push\"\n        [value]=\"companyId\"\n        (valueChange)=\"companyChange($event)\"\n        itemValue=\"Id\"\n        itemText=\"Name\"\n        [canClear]=\"false\" />\n    </ion-list>\n  </ion-card-content>\n</ion-card>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "companyId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "companyIdChange",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "companies",
                    "defaultValue": "useCompanies()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39
                }
            ],
            "methodsClass": [
                {
                    "name": "companyChange",
                    "args": [
                        {
                            "name": "companyId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "companyId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { useCompanies } from \"src/app/core/http/login.api\";\r\nimport { SelectableComponent } from \"src/app/shared/components/selectable/selectable.component\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { AngularComponent, withAfterViewInit, withOnChanges } from \"src/app/shared/lifecycles\";\r\n\r\n@Component({\r\n  selector: \"company-actioner-select\",\r\n  template: `\r\n    <ion-card>\r\n      <ion-card-header>\r\n        <ion-card-title class=\"text-center\">{{ title || \"Company Actioners\" }}</ion-card-title>\r\n      </ion-card-header>\r\n      <ion-card-content>\r\n        <ion-list>\r\n          <selectable \r\n            [title]=\"title || 'Company Actioners'\" \r\n            placeholder=\"Actioners\" \r\n            [items]=\"companies.data() | push\"\r\n            [value]=\"companyId\"\r\n            (valueChange)=\"companyChange($event)\"\r\n            itemValue=\"Id\"\r\n            itemText=\"Name\"\r\n            [canClear]=\"false\" />\r\n        </ion-list>\r\n      </ion-card-content>\r\n    </ion-card>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule, \r\n    ...importRxTemplate(),\r\n    SelectableComponent\r\n  ]\r\n})\r\nexport class CompanyActionerSelectComponent extends AngularComponent(withAfterViewInit, withOnChanges) {\r\n  companies = useCompanies();\r\n\r\n  @Input()\r\n  title?: string;\r\n\r\n  @Input()\r\n  companyId?: number;\r\n\r\n  @Output()\r\n  companyIdChange = new EventEmitter<number>();\r\n\r\n  companyChange(companyId: number) {\r\n    this.companyId = companyId;\r\n    this.companyIdChange.emit(this.companyId);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CompanyActionerSelectSummaryComponent",
            "id": "component-CompanyActionerSelectSummaryComponent-0323a289e8f7744a36635ddaa339562a66bb3946760c8d32a99d6f63d7653251503c7941547d5c63d102fdd3415d3f59e4b57a261c33f1608f0b6e1ea0d0f3ee",
            "file": "src/app/core/pages/document-builder/components/input-types/company-actioner-select/summary/company-actioner-select-summary.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "company-actioner-select-summary",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <ion-label>\n      <b>{{ title || \"Company Actioners\" }}</b>\n      <p *rxIf=\"company(); let company\">{{ company.Name }}</p>\n    </ion-label>\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "string",
                    "decorators": []
                },
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "companies",
                    "defaultValue": "useCompanies()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "company",
                    "defaultValue": "this.companies.data(companies => companies.find(c => c.Id === this.companyId))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { useCompanies } from \"src/app/core/http/login.api\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\n\r\n@Component({\r\n  selector: \"company-actioner-select-summary\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <ion-label>\r\n          <b>{{ title || \"Company Actioners\" }}</b>\r\n          <p *rxIf=\"company(); let company\">{{ company.Name }}</p>\r\n        </ion-label>\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [IonicModule, ...importRxTemplate()]\r\n})\r\nexport class CompanyActionerSelectSummaryComponent {\r\n  companies = useCompanies();\r\n\r\n  @Input()\r\n  title?: string;\r\n\r\n  @Input({ required: true })\r\n  companyId!: number;\r\n\r\n  company = this.companies.data(companies => companies.find(c => c.Id === this.companyId))\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CompanySelectComponent",
            "id": "component-CompanySelectComponent-a3c4ffe633db1d54ca684d95e9cfe2621bb1c0380947ca03967512fe089098d9f3bf48ac1bd79b645a6095c0b59d2fc65f5407b9f9e68990394798ea42d791b0",
            "file": "src/app/core/pages/document-builder/components/question-types/21-company-select/company-select.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "company-select-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n    <camera-capture *rxIf=\"question.CanHaveImg\" class=\"m-0\" slot=\"end\" />\n    <file-upload *rxIf=\"question.CanHaveFiles\" class=\"m-0\" slot=\"end\" />\n  </ion-item>\n\n  <selectable\n    placeholder=\"Select\"\n    [title]=\"question.QuestionText\"\n    [items]=\"companies.data()\n      | push\n      | toStringValues\"\n    itemValue=\"Id\"\n    itemText=\"Name\"\n    [(value)]=\"question.OptionVal\"\n    (itemChange)=\"question.SelectedOptionText = $event?.Name\"\n    [canClear]=\"!question.Required\" />\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "companies",
                    "defaultValue": "useCompanies()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "validator",
                    "defaultValue": "useSelectValidator(() => this.question)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 52
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\nimport { SelectableComponent } from \"src/app/shared/components\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { ToStringValuesPipe } from \"src/app/shared/pipes\";\r\nimport { useCompanies } from \"src/app/core/http/login.api\";\r\nimport { useSelectValidator } from \"../05-select/validation/select.validator\";\r\n\r\n@Component({\r\n  selector: \"company-select-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n        <camera-capture *rxIf=\"question.CanHaveImg\" class=\"m-0\" slot=\"end\" />\r\n        <file-upload *rxIf=\"question.CanHaveFiles\" class=\"m-0\" slot=\"end\" />\r\n      </ion-item>\r\n\r\n      <selectable\r\n        placeholder=\"Select\"\r\n        [title]=\"question.QuestionText\"\r\n        [items]=\"companies.data() \r\n          | push \r\n          | toStringValues\"\r\n        itemValue=\"Id\"\r\n        itemText=\"Name\"\r\n        [(value)]=\"question.OptionVal\"\r\n        (itemChange)=\"question.SelectedOptionText = $event?.Name\"\r\n        [canClear]=\"!question.Required\" />\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    QuestionTextComponent,\r\n    SelectableComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent,\r\n    ToStringValuesPipe\r\n  ]\r\n})\r\nexport class CompanySelectComponent {\r\n  companies = useCompanies();\r\n\r\n  @Input({ required: true })\r\n  question!: Question;\r\n\r\n  validator = useSelectValidator(() => this.question);\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "DateComponent",
            "id": "component-DateComponent-b7e7a01685776c464778a5e62affc7c6473ff80342c410423c62fb0f96ea10b654d3c1ef98d1184933bf291e3d9b22ec9f0ce6f7b90050c0c0a22bc3f7fde9d4",
            "file": "src/app/core/pages/document-builder/components/question-types/08-date/date.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "date-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n  </ion-item>\n  <datetime-picker\n    [(datetime)]=\"question.DateAndTime\"\n    presentation=\"date\"\n    [min]=\"min() | push\"\n    [max]=\"max() | push\" />\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "max",
                    "defaultValue": "this.question$(() => maxDate(this.question))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "min",
                    "defaultValue": "this.question$(() => minDate(this.question))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "question$",
                    "defaultValue": "merge(this.afterViewInit(), this.input(\"question\")).toPipe()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { DatetimePickerComponent } from \"src/app/shared/components/datetime-picker/datetime-picker.component\";\r\nimport { QuestionTextComponent } from \"../extras\";\r\nimport { AngularComponent, withAfterViewInit, withOnChanges } from \"src/app/shared/lifecycles\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { merge } from \"rxjs\";\r\nimport { maxDate, minDate } from \"src/app/core/stores/site-document/models/site-document.model\";\r\n\r\n@Component({\r\n  selector: \"date-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n      </ion-item>\r\n      <datetime-picker \r\n        [(datetime)]=\"question.DateAndTime\" \r\n        presentation=\"date\"\r\n        [min]=\"min() | push\"\r\n        [max]=\"max() | push\" />\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    QuestionTextComponent,\r\n    DatetimePickerComponent\r\n  ]\r\n})\r\nexport class DateComponent extends AngularComponent(withAfterViewInit, withOnChanges) {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n  question$ = merge(this.afterViewInit(), this.input(\"question\")).toPipe();\r\n\r\n  min = this.question$(() => minDate(this.question));\r\n  max = this.question$(() => maxDate(this.question));\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "DateSummaryComponent",
            "id": "component-DateSummaryComponent-8f0e093e419db36de6983016d74b60a6fa36b5d30606e1fad054375803ab06b3cee894e70653e1f5833308fe67f4fb924a61ded5c7989d48ee96acf6dd15cab1",
            "file": "src/app/core/pages/document-builder/components/question-types/08-date/summary/date-summary.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "date-summary",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <ion-label>\n      <b>{{ question.QuestionText }}</b>\n      <p>{{ question.DateAndTime! | utcDate }}</p>\n    </ion-label>\n  </ion-item>\n  <ion-datetime\n    class=\"my-0 mx-auto\"\n    [value]=\"question.DateAndTime!.toISOString()\"\n    presentation=\"date\" />\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { UtcDatePipe } from \"src/app/shared/pipes\";\r\n\r\n@Component({\r\n  selector: \"date-summary\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <ion-label>\r\n          <b>{{ question.QuestionText }}</b>\r\n          <p>{{ question.DateAndTime! | utcDate }}</p>\r\n        </ion-label>\r\n      </ion-item>\r\n      <ion-datetime \r\n        class=\"my-0 mx-auto\"\r\n        [value]=\"question.DateAndTime!.toISOString()\" \r\n        presentation=\"date\" />\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [IonicModule, UtcDatePipe]\r\n})\r\nexport class DateSummaryComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "DatetimeComponent",
            "id": "component-DatetimeComponent-8324c967a82a906816817bee38f2824766f9464b11afd3c7d98d1d0b9d112e98fca5a8c163976f38f95e2d7618544bb8b85970ccc4dda0f2fffb0600c60c5571",
            "file": "src/app/core/pages/document-builder/components/question-types/09-datetime/datetime.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "datetime-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n  </ion-item>\n  <datetime-picker\n    [(datetime)]=\"question.DateAndTime\"\n    [min]=\"min() | push\"\n    [max]=\"max() | push\" />\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "max",
                    "defaultValue": "this.question$(() => maxDate(this.question))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "min",
                    "defaultValue": "this.question$(() => minDate(this.question))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "question$",
                    "defaultValue": "merge(this.afterViewInit(), this.input(\"question\")).toPipe()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { DatetimePickerComponent } from \"src/app/shared/components/datetime-picker/datetime-picker.component\";\r\nimport { QuestionTextComponent } from \"../extras\";\r\nimport { AngularComponent, withAfterViewInit, withOnChanges } from \"src/app/shared/lifecycles\";\r\nimport { merge } from \"rxjs\";\r\nimport { maxDate, minDate } from \"src/app/core/stores/site-document/models/site-document.model\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\n\r\n@Component({\r\n  selector: \"datetime-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n      </ion-item>\r\n      <datetime-picker \r\n        [(datetime)]=\"question.DateAndTime\"\r\n        [min]=\"min() | push\"\r\n        [max]=\"max() | push\" />\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    QuestionTextComponent,\r\n    DatetimePickerComponent\r\n  ]\r\n})\r\nexport class DatetimeComponent extends AngularComponent(withAfterViewInit, withOnChanges) {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n  question$ = merge(this.afterViewInit(), this.input(\"question\")).toPipe();\r\n\r\n  min = this.question$(() => minDate(this.question));\r\n  max = this.question$(() => maxDate(this.question));\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "DatetimePickerComponent",
            "id": "component-DatetimePickerComponent-d11775b93ef78d71f333295e15a0e6140f0605f5ef7c5e6e6873d312c38ffbf23502af03f8df8052ed8dd5ea84db9f509f2987a9254e52a3517fce3a76ac454f",
            "file": "src/app/shared/components/datetime-picker/datetime-picker.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "datetime-picker",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-item [id]=\"id\" button>\n  <ion-label *rxIf=\"presentation === 'date'\">{{ datetime$ | push | utcDate }}</ion-label>\n  <ion-label *rxIf=\"presentation !== 'date'\">{{ datetime$ | push | utcDateTime }}</ion-label>\n</ion-item>\n\n<ion-popover [trigger]=\"id\" triggerAction=\"click\" size=\"auto\">\n  <ng-template>\n    <ion-content>\n      <ion-datetime\n        [isDateEnabled]=\"isDateEnabled.bind(this)\"\n        [date]=\"datetime$ | push\"\n        (dateChange)=\"datetime = $event; datetimeChange.emit($event)\"\n        [presentation]=\"presentation\" />\n    </ion-content>\n  </ng-template>\n</ion-popover>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "datetime",
                    "defaultValue": "new Date()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "Nullable<Date>",
                    "decorators": []
                },
                {
                    "name": "max",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 70,
                    "type": "Date | null | undefined",
                    "decorators": []
                },
                {
                    "name": "min",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 67,
                    "type": "Date | null | undefined",
                    "decorators": []
                },
                {
                    "name": "presentation",
                    "defaultValue": "\"date-time\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 64,
                    "type": "\"date\" | \"date-time\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "datetimeChange",
                    "defaultValue": "new EventEmitter<Date>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "datetime$",
                    "defaultValue": "merge(this.init(), this.input(\"datetime\"), this.datetimeChange).pipe(\r\n    map(() => this.datetime || new Date()),\r\n    shareReplay()\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Date>",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "datetimeChangeEffect",
                    "defaultValue": "merge(this.init(), this.input(\"datetime\")).pipe(\r\n    takeUntilDestroyed(),\r\n    filter(() => this.datetime == null),\r\n    switchMap(() => this.datetime$),\r\n    tap(date => this.datetimeChange.emit(date))\r\n  )\r\n  .subscribe()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "id",
                    "defaultValue": "crypto.randomUUID()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                }
            ],
            "methodsClass": [
                {
                    "name": "isDateEnabled",
                    "args": [
                        {
                            "name": "dateStr",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 72,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "dateStr",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { DateDirective } from \"../../directives/date/date.directive\";\r\nimport { UtcDatePipe, UtcDateTimePipe } from \"../../pipes\";\r\nimport { RxIf } from \"@rx-angular/template/if\";\r\nimport { AngularComponent, withOnChanges, withOnInit } from \"../../lifecycles\";\r\nimport { Observable, Subscription, filter, map, merge, shareReplay, switchMap, tap } from \"rxjs\";\r\nimport { takeUntilDestroyed } from \"@angular/core/rxjs-interop\";\r\nimport { PushPipe } from \"@rx-angular/template/push\";\r\n\r\n@Component({\r\n  selector: \"datetime-picker\",\r\n  template: `\r\n    <ion-item [id]=\"id\" button>\r\n      <ion-label *rxIf=\"presentation === 'date'\">{{ datetime$ | push | utcDate }}</ion-label>\r\n      <ion-label *rxIf=\"presentation !== 'date'\">{{ datetime$ | push | utcDateTime }}</ion-label>\r\n    </ion-item>\r\n\r\n    <ion-popover [trigger]=\"id\" triggerAction=\"click\" size=\"auto\">\r\n      <ng-template>\r\n        <ion-content>\r\n          <ion-datetime\r\n            [isDateEnabled]=\"isDateEnabled.bind(this)\"\r\n            [date]=\"datetime$ | push\" \r\n            (dateChange)=\"datetime = $event; datetimeChange.emit($event)\" \r\n            [presentation]=\"presentation\" />\r\n        </ion-content>\r\n      </ng-template>\r\n    </ion-popover>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    RxIf,\r\n    PushPipe,\r\n    UtcDatePipe,\r\n    UtcDateTimePipe,\r\n    DateDirective\r\n  ]\r\n})\r\nexport class DatetimePickerComponent extends AngularComponent(withOnInit, withOnChanges) {\r\n  id = crypto.randomUUID();\r\n\r\n  @Input()\r\n  datetime: Nullable<Date> = new Date();\r\n\r\n  @Output()\r\n  datetimeChange = new EventEmitter<Date>();\r\n  datetimeChangeEffect: Subscription = merge(this.init(), this.input(\"datetime\")).pipe(\r\n    takeUntilDestroyed(),\r\n    filter(() => this.datetime == null),\r\n    switchMap(() => this.datetime$),\r\n    tap(date => this.datetimeChange.emit(date))\r\n  )\r\n  .subscribe();\r\n\r\n  datetime$: Observable<Date> = merge(this.init(), this.input(\"datetime\"), this.datetimeChange).pipe(\r\n    map(() => this.datetime || new Date()),\r\n    shareReplay()\r\n  );\r\n\r\n  @Input()\r\n  presentation: \"date\" | \"date-time\" = \"date-time\";\r\n\r\n  @Input()\r\n  min: Date | null | undefined;\r\n\r\n  @Input()\r\n  max: Date | null | undefined;\r\n\r\n  isDateEnabled(dateStr: string) {\r\n    const date = new Date(dateStr);\r\n\r\n    if (this.min != null && this.max != null)\r\n      return date.isEqualOrAfter(this.min) && date.isEqualOrBefore(this.max);\r\n\r\n    if (this.min != null)\r\n      return date.isEqualOrAfter(this.min);\r\n\r\n    if (this.max != null)\r\n      return date.isEqualOrBefore(this.max);\r\n\r\n    return true;\r\n  }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "DatetimeSummaryComponent",
            "id": "component-DatetimeSummaryComponent-e6b34832cc9d98a4c7a5d236f2dc8c97e464df836a6ba7ce98b4ba1ee7c62aaecb72910f9c04a428d35f598d2d56ace0bb7d4e64349df3dc62396b7cdb9aa5c2",
            "file": "src/app/core/pages/document-builder/components/question-types/09-datetime/summary/datetime-summary.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "datetime-summary",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <ion-label>\n      <b>{{ question.QuestionText }}</b>\n      <p>{{ question.DateAndTime! | utcDateTime }}</p>\n    </ion-label>\n  </ion-item>\n  <ion-datetime\n    class=\"my-0 mx-auto\"\n    [value]=\"question.DateAndTime!.toISOString()\"\n    presentation=\"date\" />\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { UtcDateTimePipe } from \"src/app/shared/pipes\";\r\n\r\n@Component({\r\n  selector: \"datetime-summary\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <ion-label>\r\n          <b>{{ question.QuestionText }}</b>\r\n          <p>{{ question.DateAndTime! | utcDateTime }}</p>\r\n        </ion-label>\r\n      </ion-item>\r\n      <ion-datetime \r\n        class=\"my-0 mx-auto\"\r\n        [value]=\"question.DateAndTime!.toISOString()\" \r\n        presentation=\"date\" />\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [IonicModule, UtcDateTimePipe]\r\n})\r\nexport class DatetimeSummaryComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "DocumentBuilderPage",
            "id": "component-DocumentBuilderPage-58aa953ae0b92dac0705448b6cea2b7ea0924be3a7ed31006cafdf7952ea957960e49fb3817740c047d8c75d5d3992d9a2fae1f2d5344d9ab40836fb89a81507",
            "file": "src/app/core/pages/document-builder/document-builder.page.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "document-builder-page",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-header>\n  <ion-toolbar *rxIf=\"document.data(); let document\">\n    <ion-buttons slot=\"start\">\n      <ion-button>\n        <ion-icon name=\"arrow-back-outline\" />\n      </ion-button>\n    </ion-buttons>\n    <ion-title class=\"ion-text-center ion-text-wrap\">\n      {{ document.DocumentTitle }}\n    </ion-title>\n    <ion-buttons slot=\"end\">\n      <toggle-button [(checked)]=\"options.inSinglePageMode\" icon=\"reader\" />\n\n      <toggle-button\n        *rxIf=\"isMobileApp\"\n        [(checked)]=\"document.Pinned\"\n        icon=\"bookmark\" />\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content *rxIf=\"document.data(); let document\" class=\"ion-padding\">\n  <preamble [subtitle]=\"document.Subtitle\" [text]=\"document.Preamble\" />\n\n  <require-gps *rxIf=\"document.ReqGps\" />\n\n  <actioner-select\n     *rxIf=\"document.CanAddActionerFromApp\"\n     [(actionerId)]=\"document.CurrentActionerOperativeID\"\n     [title]=\"document.MetaData.ActionerText\"\n     [hideMyself]=\"document.MetaData.CannotAddSelfAsActioner || false\" />\n\n  <category-actioner-select\n    *rxIf=\"document.CanAddCategoryActioner && document.DocumentCategory != null\"\n    [title]=\"document.MetaData.ActionerText\"\n    [(actionerId)]=\"document.CurrentActionerOperativeID\"\n    [categoryId]=\"document.DocumentCategory\"\n    [hideMyself]=\"document.MetaData.CannotAddSelfAsActioner || false\" />\n\n  <company-actioner-select\n    *rxIf=\"document.CanHaveCompanyActioner\"\n    [title]=\"document.MetaData.ActionerText\"\n    [(companyId)]=\"document.CompanyActionerId\" />\n\n  <responsibility-area-select\n    *rxIf=\"document.DocumentResponsibilityAreaTypeId != null\"\n    [responsibilityAreaTypeId]=\"document.DocumentResponsibilityAreaTypeId\"\n    [(responsibilityAreaId)]=\"document.DocumentResponsibilityAreaId\"/>\n\n  <queue-select\n    *rxIf=\"document.Queues && document.Queues.length > 0\"\n    [queues]=\"document.Queues\"\n    [(queueId)]=\"document.AutoQueueID\" />\n\n  <site-select\n    *rxIf=\"document.MetaData?.HasSiteList\"\n    [title]=\"document.MetaData.SiteListTitle\"\n    [(siteId)]=\"document.SiteId\" />\n\n  <queue-duration\n    *rxIf=\"document.CanHaveQueueDuration && document.QueueDuration != null\"\n    [(type)]=\"document.QueueDuration!.Type\"\n    [(duration)]=\"document.QueueDuration!.Value\" />\n\n  <document-image-upload *rxIf=\"document.CanHaveDocumentLevelImages && document.ShowDocLevelPhotoButtonAtStartOfDoc\" [(images)]=\"document.Images\" />\n\n  <document-page *rxFor=\"let page of document.Pages; index as idx\" [page]=\"page\" [hidden]=\"!options.inSinglePageMode && document.PageIdx !== page.PageNo\">\n    <document-section *rxFor=\"let section of page.Sections\" [section]=\"section\">\n      <ng-template [ngSwitch]=\"section.SectionQuestiontype\" [questions]=\"section.Questions\" let-question>\n        <label-question *ngSwitchCase=\"QuestionType.Label\" [question]=\"question\" />\n        <checkbox-question *ngSwitchCase=\"QuestionType.Checkbox\" [question]=\"question\" />\n\n        <if *ngSwitchCase=\"QuestionType.RadioGroup\" [condition]=\"document.MetaData.UsesRadioGroupTable === true\">\n          <radio-table-question show [question]=\"question\" />\n          <radio-group-question else [section]=\"section\" [question]=\"question\" />\n        </if>\n\n        <textarea-question *ngSwitchCase=\"QuestionType.TextArea\" [question]=\"question\" />\n        <select-question *ngSwitchCase=\"QuestionType.Select\" [question]=\"question\" />\n        <checkbox-question *ngSwitchCase=\"QuestionType.CheckboxTextbox\" [question]=\"question\" />\n\n        <if *ngSwitchCase=\"QuestionType.RadioGroupTextbox\" [condition]=\"document.MetaData.UsesRadioGroupTable === true\">\n          <radio-table-textbox-question show [question]=\"question\" />\n          <radio-group-textbox-question else [question]=\"question\" [section]=\"section\" />\n        </if>\n\n        <date-question *ngSwitchCase=\"QuestionType.Date\" [question]=\"question\" />\n        <datetime-question *ngSwitchCase=\"QuestionType.DateTime\" [question]=\"question\" />\n        <operative-list-question *ngSwitchCase=\"QuestionType.OperativeList\" [question]=\"question\" />\n        <number-question *ngSwitchCase=\"QuestionType.Number\" [question]=\"question\" />\n        <asset-list-question *ngSwitchCase=\"QuestionType.AssetList\" [question]=\"question\" />\n        <linked-dates-question *ngSwitchCase=\"QuestionType.LinkedDates\" [question]=\"question\" />\n        <signature-question *ngSwitchCase=\"QuestionType.Signature\" [question]=\"question\" />\n        <company-select-question *ngSwitchCase=\"QuestionType.CompanySelect\" [question]=\"question\" />\n        <area-select-question *ngSwitchCase=\"QuestionType.AreaSelect\" [question]=\"question\" />\n        <asset-groups-and-types-question *ngSwitchCase=\"QuestionType.AssetGroupsAndTypes\" [question]=\"question\" />\n        <select-text-question *ngSwitchCase=\"QuestionType.SelectText\" [question]=\"question\" />\n        <time-question *ngSwitchCase=\"QuestionType.Time\" [question]=\"question\" />\n        <linked-times-question *ngSwitchCase=\"QuestionType.LinkedTimes\" [question]=\"question\" />\n        <hra-select-question *ngSwitchCase=\"QuestionType.HraSelect\" [question]=\"question\" />\n        <linked-datetime-question *ngSwitchCase=\"QuestionType.LinkedDateAndTime\" [question]=\"question\" />\n      </ng-template>\n    </document-section>\n  </document-page>\n\n  <child-document-card *rxIf=\"document.ChildTemplateID > 0\" [templateId]=\"document.ChildTemplateID\" />\n\n  <remain-anonymous *rxIf=\"document.AllowAnon\" [(isTicked)]=\"document.RemainAnon\" />\n\n  <document-image-upload *rxIf=\"document.CanHaveDocumentLevelImages && !document.ShowDocLevelPhotoButtonAtStartOfDoc\" [(images)]=\"document.Images\" />\n\n  <ion-button\n    *rxIf=\"options.inSinglePageMode || document.PageIdx === document.Pages.length\"\n    class=\"ion-margin-vertical\"\n    expand=\"full\">\n    Submit\n  </ion-button>\n</ion-content>\n\n<ng-container *rxIf=\"document.data(); let doc\">\n  <ion-footer *rxIf=\"!options.inSinglePageMode && doc.Pages.length > 0\">\n    <document-navigation [pages]=\"doc.Pages\" [(index)]=\"doc.PageIdx\" />\n  </ion-footer>\n</ng-container>\n\n<template-menu-modal\n  *rxLet=\"id$; let id\"\n  [isOpen]=\"id == null\"\n  (select)=\"goRelative({\n    queryParams: { id: $event },\n    queryParamsHandling: 'merge',\n    skipLocationChange: true\n  })\" />\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "document",
                    "defaultValue": "this.specificId != null \r\n    ? useSpecificDocument(this.specificId)\r\n    : useTemplate(this.id$)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 192
                },
                {
                    "name": "effects",
                    "defaultValue": "[\r\n    this.uploadDocument.data().pipe(\r\n      takeUntilDestroyed(),\r\n      filter(() => this.queueId != null && this.toSuccessQueue != null)\r\n    )\r\n    .subscribe(({ submissionId }) => this.updateDocMove.send({\r\n      documentId: submissionId,\r\n      queueId: this.queueId,\r\n      note: null,\r\n      success: this.toSuccessQueue,\r\n      img64: null\r\n    })),\r\n\r\n    this.uploadDocument.data().pipe(\r\n      takeUntilDestroyed(),\r\n      map(({ document, questions }) => \r\n      ({\r\n        document,\r\n        questions: questions.filter(q => q.Img != null)\r\n      })),\r\n      filter(({ questions }) => questions.length > 0),\r\n      map(({ document, questions }) => questions.map(q => \r\n        ({\r\n          base64: q.Img,\r\n          siteDocumentTypeId: document.SiteDocumentType,\r\n          fileName: q.QuestionID.toString()\r\n        }) as AddQuestionLevelImageCommand)\r\n      )\r\n    )\r\n    .subscribe(uploads => this.uploadQuestionImgs.send(uploads))\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 196
                },
                {
                    "name": "goRelative",
                    "defaultValue": "useGoRelative()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 175
                },
                {
                    "name": "id$",
                    "defaultValue": "param$(\"id\", id => id?.toNumber())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 185
                },
                {
                    "name": "isMobileApp",
                    "defaultValue": "isMobileApp()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 174
                },
                {
                    "name": "options",
                    "defaultValue": "{\r\n    inSinglePageMode: false\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "DocumentBuilderOptions",
                    "optional": false,
                    "description": "",
                    "line": 181
                },
                {
                    "name": "parentDocId",
                    "defaultValue": "param(\"parentDocumentId\")?.toNumber()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 186
                },
                {
                    "name": "QuestionType",
                    "defaultValue": "QuestionType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 173
                },
                {
                    "name": "queueId",
                    "defaultValue": "param(\"queueId\")?.toNumber()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 188
                },
                {
                    "name": "specificId",
                    "defaultValue": "param(\"specificId\")?.toNumber()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 187
                },
                {
                    "name": "token",
                    "defaultValue": "param(\"token\")",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 190
                },
                {
                    "name": "toSuccessQueue",
                    "defaultValue": "param(\"toSuccessQueue\")?.toBoolean()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 189
                },
                {
                    "name": "updateDocMove",
                    "defaultValue": "useUpdateDocMove()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 178
                },
                {
                    "name": "uploadDocument",
                    "defaultValue": "useUploadDocument()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 177
                },
                {
                    "name": "uploadQuestionImgs",
                    "defaultValue": "useUploadQuestionImages()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 179
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { IfComponent, ToggleButtonComponent } from \"src/app/shared/components\";\r\nimport { importNgSwitch, importRxTemplate } from \"src/app/shared/imports\";\r\nimport { ChildDocumentCardComponent, DocumentNavigationComponent, DocumentPageComponent, DocumentSectionComponent, QuestionsTemplateDirective, importInfoTypes, importInputTypes, importQuestionTypes } from \"./components\";\r\nimport { QuestionType } from \"../../stores/site-document/models\";\r\nimport { isMobileApp } from \"src/app/shared/plugins/platform.plugin\";\r\nimport { importDocumentBuilderModals } from \"./modals\";\r\nimport { useTemplate } from \"../../http/template.api\";\r\nimport { param, param$, useGoRelative } from \"src/app/shared/route\";\r\nimport { AddQuestionLevelImageCommand, useSpecificDocument, useUploadDocument, useUploadQuestionImages } from \"../../http/site-document.api\";\r\nimport { useUpdateDocMove } from \"../../http/queues.api\";\r\nimport { filter, map } from \"rxjs\";\r\nimport { takeUntilDestroyed } from \"@angular/core/rxjs-interop\";\r\n\r\n@Component({\r\n  selector: 'document-builder-page',\r\n  template: `\r\n    <ion-header>\r\n      <ion-toolbar *rxIf=\"document.data(); let document\">\r\n        <ion-buttons slot=\"start\">\r\n          <ion-button>\r\n            <ion-icon name=\"arrow-back-outline\" />\r\n          </ion-button>\r\n        </ion-buttons>\r\n        <ion-title class=\"ion-text-center ion-text-wrap\">\r\n          {{ document.DocumentTitle }}\r\n        </ion-title>\r\n        <ion-buttons slot=\"end\">\r\n          <toggle-button [(checked)]=\"options.inSinglePageMode\" icon=\"reader\" />\r\n\r\n          <toggle-button \r\n            *rxIf=\"isMobileApp\" \r\n            [(checked)]=\"document.Pinned\" \r\n            icon=\"bookmark\" />\r\n        </ion-buttons>\r\n      </ion-toolbar>\r\n    </ion-header>\r\n\r\n    <ion-content *rxIf=\"document.data(); let document\" class=\"ion-padding\">\r\n      <preamble [subtitle]=\"document.Subtitle\" [text]=\"document.Preamble\" />\r\n\r\n      <require-gps *rxIf=\"document.ReqGps\" />\r\n\r\n      <actioner-select\r\n         *rxIf=\"document.CanAddActionerFromApp\"\r\n         [(actionerId)]=\"document.CurrentActionerOperativeID\"\r\n         [title]=\"document.MetaData.ActionerText\"\r\n         [hideMyself]=\"document.MetaData.CannotAddSelfAsActioner || false\" />\r\n      \r\n      <category-actioner-select \r\n        *rxIf=\"document.CanAddCategoryActioner && document.DocumentCategory != null\" \r\n        [title]=\"document.MetaData.ActionerText\"\r\n        [(actionerId)]=\"document.CurrentActionerOperativeID\"\r\n        [categoryId]=\"document.DocumentCategory\"\r\n        [hideMyself]=\"document.MetaData.CannotAddSelfAsActioner || false\" />\r\n      \r\n      <company-actioner-select \r\n        *rxIf=\"document.CanHaveCompanyActioner\"\r\n        [title]=\"document.MetaData.ActionerText\"\r\n        [(companyId)]=\"document.CompanyActionerId\" />\r\n      \r\n      <responsibility-area-select \r\n        *rxIf=\"document.DocumentResponsibilityAreaTypeId != null\" \r\n        [responsibilityAreaTypeId]=\"document.DocumentResponsibilityAreaTypeId\"\r\n        [(responsibilityAreaId)]=\"document.DocumentResponsibilityAreaId\"/>\r\n\r\n      <queue-select \r\n        *rxIf=\"document.Queues && document.Queues.length > 0\"\r\n        [queues]=\"document.Queues\"\r\n        [(queueId)]=\"document.AutoQueueID\" />\r\n      \r\n      <site-select \r\n        *rxIf=\"document.MetaData?.HasSiteList\"\r\n        [title]=\"document.MetaData.SiteListTitle\"\r\n        [(siteId)]=\"document.SiteId\" />\r\n      \r\n      <queue-duration \r\n        *rxIf=\"document.CanHaveQueueDuration && document.QueueDuration != null\"\r\n        [(type)]=\"document.QueueDuration!.Type\"\r\n        [(duration)]=\"document.QueueDuration!.Value\" />\r\n\r\n      <document-image-upload *rxIf=\"document.CanHaveDocumentLevelImages && document.ShowDocLevelPhotoButtonAtStartOfDoc\" [(images)]=\"document.Images\" />\r\n\r\n      <document-page *rxFor=\"let page of document.Pages; index as idx\" [page]=\"page\" [hidden]=\"!options.inSinglePageMode && document.PageIdx !== page.PageNo\">\r\n        <document-section *rxFor=\"let section of page.Sections\" [section]=\"section\">\r\n          <ng-template [ngSwitch]=\"section.SectionQuestiontype\" [questions]=\"section.Questions\" let-question>\r\n            <label-question *ngSwitchCase=\"QuestionType.Label\" [question]=\"question\" />\r\n            <checkbox-question *ngSwitchCase=\"QuestionType.Checkbox\" [question]=\"question\" />\r\n            \r\n            <if *ngSwitchCase=\"QuestionType.RadioGroup\" [condition]=\"document.MetaData.UsesRadioGroupTable === true\">\r\n              <radio-table-question show [question]=\"question\" />\r\n              <radio-group-question else [section]=\"section\" [question]=\"question\" />\r\n            </if>\r\n\r\n            <textarea-question *ngSwitchCase=\"QuestionType.TextArea\" [question]=\"question\" />\r\n            <select-question *ngSwitchCase=\"QuestionType.Select\" [question]=\"question\" />\r\n            <checkbox-question *ngSwitchCase=\"QuestionType.CheckboxTextbox\" [question]=\"question\" />\r\n\r\n            <if *ngSwitchCase=\"QuestionType.RadioGroupTextbox\" [condition]=\"document.MetaData.UsesRadioGroupTable === true\">\r\n              <radio-table-textbox-question show [question]=\"question\" />\r\n              <radio-group-textbox-question else [question]=\"question\" [section]=\"section\" />\r\n            </if>\r\n\r\n            <date-question *ngSwitchCase=\"QuestionType.Date\" [question]=\"question\" />\r\n            <datetime-question *ngSwitchCase=\"QuestionType.DateTime\" [question]=\"question\" />\r\n            <operative-list-question *ngSwitchCase=\"QuestionType.OperativeList\" [question]=\"question\" />\r\n            <number-question *ngSwitchCase=\"QuestionType.Number\" [question]=\"question\" />\r\n            <asset-list-question *ngSwitchCase=\"QuestionType.AssetList\" [question]=\"question\" />\r\n            <linked-dates-question *ngSwitchCase=\"QuestionType.LinkedDates\" [question]=\"question\" />\r\n            <signature-question *ngSwitchCase=\"QuestionType.Signature\" [question]=\"question\" />\r\n            <company-select-question *ngSwitchCase=\"QuestionType.CompanySelect\" [question]=\"question\" />\r\n            <area-select-question *ngSwitchCase=\"QuestionType.AreaSelect\" [question]=\"question\" />\r\n            <asset-groups-and-types-question *ngSwitchCase=\"QuestionType.AssetGroupsAndTypes\" [question]=\"question\" />\r\n            <select-text-question *ngSwitchCase=\"QuestionType.SelectText\" [question]=\"question\" />\r\n            <time-question *ngSwitchCase=\"QuestionType.Time\" [question]=\"question\" />\r\n            <linked-times-question *ngSwitchCase=\"QuestionType.LinkedTimes\" [question]=\"question\" />\r\n            <hra-select-question *ngSwitchCase=\"QuestionType.HraSelect\" [question]=\"question\" />\r\n            <linked-datetime-question *ngSwitchCase=\"QuestionType.LinkedDateAndTime\" [question]=\"question\" />\r\n          </ng-template>\r\n        </document-section>\r\n      </document-page>\r\n\r\n      <child-document-card *rxIf=\"document.ChildTemplateID > 0\" [templateId]=\"document.ChildTemplateID\" />\r\n\r\n      <remain-anonymous *rxIf=\"document.AllowAnon\" [(isTicked)]=\"document.RemainAnon\" />\r\n\r\n      <document-image-upload *rxIf=\"document.CanHaveDocumentLevelImages && !document.ShowDocLevelPhotoButtonAtStartOfDoc\" [(images)]=\"document.Images\" />\r\n\r\n      <ion-button \r\n        *rxIf=\"options.inSinglePageMode || document.PageIdx === document.Pages.length\" \r\n        class=\"ion-margin-vertical\" \r\n        expand=\"full\">\r\n        Submit\r\n      </ion-button>\r\n    </ion-content>\r\n\r\n    <ng-container *rxIf=\"document.data(); let doc\">\r\n      <ion-footer *rxIf=\"!options.inSinglePageMode && doc.Pages.length > 0\">\r\n        <document-navigation [pages]=\"doc.Pages\" [(index)]=\"doc.PageIdx\" />\r\n      </ion-footer>\r\n    </ng-container>\r\n\r\n    <template-menu-modal \r\n      *rxLet=\"id$; let id\" \r\n      [isOpen]=\"id == null\"\r\n      (select)=\"goRelative({ \r\n        queryParams: { id: $event },\r\n        queryParamsHandling: 'merge',\r\n        skipLocationChange: true \r\n      })\" />\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    ...importNgSwitch(),\r\n    IfComponent,\r\n    ToggleButtonComponent,\r\n    DocumentNavigationComponent,\r\n    DocumentPageComponent,\r\n    DocumentSectionComponent,\r\n    ChildDocumentCardComponent,\r\n    QuestionsTemplateDirective,\r\n    ...importInfoTypes(),\r\n    ...importInputTypes(),\r\n    ...importQuestionTypes(),\r\n    ...importDocumentBuilderModals()\r\n  ]\r\n})\r\nexport class DocumentBuilderPage {\r\n  QuestionType = QuestionType;\r\n  isMobileApp = isMobileApp();\r\n  goRelative = useGoRelative();\r\n\r\n  uploadDocument = useUploadDocument();\r\n  updateDocMove = useUpdateDocMove();\r\n  uploadQuestionImgs = useUploadQuestionImages();\r\n\r\n  options: DocumentBuilderOptions = {\r\n    inSinglePageMode: false\r\n  }\r\n\r\n  id$ = param$(\"id\", id => id?.toNumber());\r\n  parentDocId = param(\"parentDocumentId\")?.toNumber();\r\n  specificId = param(\"specificId\")?.toNumber();\r\n  queueId = param(\"queueId\")?.toNumber();\r\n  toSuccessQueue = param(\"toSuccessQueue\")?.toBoolean();\r\n  token = param(\"token\");\r\n\r\n  document = this.specificId != null \r\n    ? useSpecificDocument(this.specificId)\r\n    : useTemplate(this.id$);\r\n\r\n  effects = [\r\n    this.uploadDocument.data().pipe(\r\n      takeUntilDestroyed(),\r\n      filter(() => this.queueId != null && this.toSuccessQueue != null)\r\n    )\r\n    .subscribe(({ submissionId }) => this.updateDocMove.send({\r\n      documentId: submissionId,\r\n      queueId: this.queueId,\r\n      note: null,\r\n      success: this.toSuccessQueue,\r\n      img64: null\r\n    })),\r\n\r\n    this.uploadDocument.data().pipe(\r\n      takeUntilDestroyed(),\r\n      map(({ document, questions }) => \r\n      ({\r\n        document,\r\n        questions: questions.filter(q => q.Img != null)\r\n      })),\r\n      filter(({ questions }) => questions.length > 0),\r\n      map(({ document, questions }) => questions.map(q => \r\n        ({\r\n          base64: q.Img,\r\n          siteDocumentTypeId: document.SiteDocumentType,\r\n          fileName: q.QuestionID.toString()\r\n        }) as AddQuestionLevelImageCommand)\r\n      )\r\n    )\r\n    .subscribe(uploads => this.uploadQuestionImgs.send(uploads))\r\n  ];\r\n}\r\n\r\ninterface DocumentBuilderOptions {\r\n  inSinglePageMode: boolean\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "DocumentImageUploadComponent",
            "id": "component-DocumentImageUploadComponent-f4005741a193784b03323080c2a8d958244d196f89414d060a27916d71ba096147b30682596218a7527940d694ff273cdf50d523b40a65bb7c8fa8782a250e0b",
            "file": "src/app/core/pages/document-builder/components/input-types/document-image-upload/document-image-upload.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "document-image-upload",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-button [id]=\"id\" expand=\"block\" fill=\"outline\">\n  Document Images\n  <if [condition]=\"images.length > 0\">\n    <span show>({{ images.length }})</span>\n    <ion-icon else name=\"images-outline\" slot=\"end\" />\n  </if>\n</ion-button>\n\n<ion-modal #modal [trigger]=\"id\">\n  <ng-template>\n    <ion-header>\n      <ion-toolbar>\n        <ion-title class=\"text-center\">Images</ion-title>\n        <ion-buttons slot=\"end\">\n          <ion-button (click)=\"modal.dismiss()\">\n            <ion-icon name=\"close-outline\" slot=\"icon-only\" />\n          </ion-button>\n        </ion-buttons>\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content class=\"ion-padding\">\n      <if [condition]=\"images.length === 0\">\n        <p show class=\"text-center\">\n          Use camera and gallery buttons to add images\n        </p>\n\n        <ion-grid else>\n          <ion-row>\n            <ion-col *rxFor=\"let img of images; index as idx\" size=\"6\" sizeMd=\"4\" sizeLg=\"3\">\n              <ion-fab vertical=\"top\" horizontal=\"end\">\n                <ion-fab-button (click)=\"remove(idx)\" size=\"small\" color=\"danger\">\n                  <ion-icon name=\"close-outline\" />\n                </ion-fab-button>\n              </ion-fab>\n\n              <ion-img [src]=\"img\" />\n            </ion-col>\n          </ion-row>\n        </ion-grid>\n      </if>\n\n      <ion-fab vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\">\n        <if [condition]=\"isMobileApp\">\n          <ng-container show>\n            <ion-fab-button (takePhoto)=\"addPhoto($event)\" class=\"ion-margin-vertical\">\n              <ion-icon name=\"camera-outline\" />\n            </ion-fab-button>\n\n            <ion-fab-button (uploadPhoto)=\"addPhoto($event)\" class=\"ion-margin-vertical\">\n              <ion-icon name=\"image-outline\" />\n            </ion-fab-button>\n          </ng-container>\n\n          <ion-fab-button else>\n            <upload (uploadFiles)=\"addUploads($event)\" accept=\"image/*\" [multiple]=\"true\" />\n            <ion-icon name=\"camera-outline\" />\n          </ion-fab-button>\n        </if>\n      </ion-fab>\n    </ion-content>\n  </ng-template>\n</ion-modal>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "images",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 95,
                    "type": "string[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "imagesChange",
                    "defaultValue": "new EventEmitter<string[]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 98,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "id",
                    "defaultValue": "crypto.randomUUID()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 91
                },
                {
                    "name": "imagesUpdate",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 99
                },
                {
                    "name": "isMobileApp",
                    "defaultValue": "isMobileApp()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 92
                }
            ],
            "methodsClass": [
                {
                    "name": "addPhoto",
                    "args": [
                        {
                            "name": "photo",
                            "type": "Photo",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 104,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "photo",
                            "type": "Photo",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "addUploads",
                    "args": [
                        {
                            "name": "files",
                            "type": "DataUrlFile[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 108,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "files",
                            "type": "DataUrlFile[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "remove",
                    "args": [
                        {
                            "name": "idx",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 113,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "idx",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { Photo } from \"@capacitor/camera\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { IfComponent, UploadComponent } from \"src/app/shared/components\";\r\nimport { PhotoViewerDirective, TakePhotoDirective, UploadPhotoDirective } from \"src/app/shared/directives\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { AngularComponent, withAfterViewInit, withOnChanges } from \"src/app/shared/lifecycles\";\r\nimport { DataUrlFile } from \"src/app/shared/models/files/data-url-file.model\";\r\nimport { isMobileApp } from \"src/app/shared/plugins/platform.plugin\";\r\n\r\n@Component({\r\n  selector: \"document-image-upload\",\r\n  template: `\r\n    <ion-button [id]=\"id\" expand=\"block\" fill=\"outline\">\r\n      Document Images\r\n      <if [condition]=\"images.length > 0\">\r\n        <span show>({{ images.length }})</span>\r\n        <ion-icon else name=\"images-outline\" slot=\"end\" />\r\n      </if>\r\n    </ion-button>\r\n\r\n    <ion-modal #modal [trigger]=\"id\">\r\n      <ng-template>\r\n        <ion-header>\r\n          <ion-toolbar>\r\n            <ion-title class=\"text-center\">Images</ion-title>\r\n            <ion-buttons slot=\"end\">\r\n              <ion-button (click)=\"modal.dismiss()\">\r\n                <ion-icon name=\"close-outline\" slot=\"icon-only\" />\r\n              </ion-button>\r\n            </ion-buttons>\r\n          </ion-toolbar>\r\n        </ion-header>\r\n\r\n        <ion-content class=\"ion-padding\">\r\n          <if [condition]=\"images.length === 0\">\r\n            <p show class=\"text-center\">\r\n              Use camera and gallery buttons to add images\r\n            </p>\r\n\r\n            <ion-grid else>\r\n              <ion-row>\r\n                <ion-col *rxFor=\"let img of images; index as idx\" size=\"6\" sizeMd=\"4\" sizeLg=\"3\">\r\n                  <ion-fab vertical=\"top\" horizontal=\"end\">\r\n                    <ion-fab-button (click)=\"remove(idx)\" size=\"small\" color=\"danger\">\r\n                      <ion-icon name=\"close-outline\" />\r\n                    </ion-fab-button>\r\n                  </ion-fab>\r\n\r\n                  <ion-img [src]=\"img\" />\r\n                </ion-col>\r\n              </ion-row>\r\n            </ion-grid>\r\n          </if>\r\n\r\n          <ion-fab vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\">\r\n            <if [condition]=\"isMobileApp\">\r\n              <ng-container show>\r\n                <ion-fab-button (takePhoto)=\"addPhoto($event)\" class=\"ion-margin-vertical\">\r\n                  <ion-icon name=\"camera-outline\" />\r\n                </ion-fab-button>\r\n\r\n                <ion-fab-button (uploadPhoto)=\"addPhoto($event)\" class=\"ion-margin-vertical\">\r\n                  <ion-icon name=\"image-outline\" />\r\n                </ion-fab-button>\r\n              </ng-container>\r\n\r\n              <ion-fab-button else>\r\n                <upload (uploadFiles)=\"addUploads($event)\" accept=\"image/*\" [multiple]=\"true\" />\r\n                <ion-icon name=\"camera-outline\" />\r\n              </ion-fab-button>\r\n            </if>\r\n          </ion-fab>\r\n        </ion-content>\r\n      </ng-template>\r\n    </ion-modal>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  standalone: true,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    IfComponent,\r\n    UploadComponent,\r\n    TakePhotoDirective,\r\n    UploadPhotoDirective,\r\n    PhotoViewerDirective\r\n  ]\r\n})\r\nexport class DocumentImageUploadComponent extends AngularComponent(withAfterViewInit, withOnChanges) {\r\n  id = crypto.randomUUID();\r\n  isMobileApp = isMobileApp();\r\n\r\n  @Input()\r\n  images: string[] = [];\r\n\r\n  @Output()\r\n  imagesChange = new EventEmitter<string[]>();\r\n  imagesUpdate = (update: Func<string[], string[]>) => {\r\n    this.images = update(this.images);\r\n    this.imagesChange.emit(this.images);\r\n  }\r\n\r\n  addPhoto(photo: Photo) {\r\n    this.imagesUpdate(images => [...images, photo.base64String!]);\r\n  }\r\n\r\n  addUploads(files: DataUrlFile[]) {\r\n    const imgs = files.map(f => f.dataUrl);\r\n    this.imagesUpdate(images => [...images, ...imgs]);\r\n  }\r\n\r\n  remove(idx: number) {\r\n    this.imagesUpdate(images => images.removeAt(idx));\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "DocumentNavigationComponent",
            "id": "component-DocumentNavigationComponent-15b35e71dc408f01fbe25e2113034bf21e3c01e8cbe5ebf3b2afcc8e059321997d184e3303fd38152961b5127404d57fdcfd06f72e7019d5775a4deea0407d88",
            "file": "src/app/core/pages/document-builder/components/document-navigation/document-navigation.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "document-navigation",
            "styleUrls": [],
            "styles": [
                "\n    :host { display: contents }\n  "
            ],
            "template": "<ion-button\n  [hidden]=\"index === 1\"\n  (click)=\"back()\"\n  class=\"float-left\"\n  fill=\"clear\">\n  <ion-icon name=\"arrow-back-outline\" />\n</ion-button>\n<ion-button\n  [hidden]=\"index === max\"\n  (click)=\"next()\"\n  class=\"float-right\"\n  fill=\"clear\">\n  <ion-icon name=\"arrow-forward-outline\" />\n</ion-button>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "Page[]",
                    "decorators": []
                },
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "indexChange",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "back",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "next",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { IonicModule } from \"@ionic/angular\";\nimport { Page } from \"src/app/core/stores/site-document/models\";\n\n@Component({\n  selector: \"document-navigation\",\n  styles: [`\n    :host { display: contents }\n  `],\n  template: `\n    <ion-button \n      [hidden]=\"index === 1\"\n      (click)=\"back()\"\n      class=\"float-left\"\n      fill=\"clear\">\n      <ion-icon name=\"arrow-back-outline\" />\n    </ion-button>\n    <ion-button \n      [hidden]=\"index === max\"\n      (click)=\"next()\"\n      class=\"float-right\"\n      fill=\"clear\">\n      <ion-icon name=\"arrow-forward-outline\" />\n    </ion-button>\n  `,\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [IonicModule]\n})\nexport class DocumentNavigationComponent {\n  @Input({ required: true })\n  pages!: Page[];\n\n  @Input({ required: true })\n  index!: number;\n\n  @Output()\n  indexChange = new EventEmitter<number>();\n\n  get max() {\n    return this.pages\n      .filter(p => !p.Hidden)\n      .last()\n      ?.PageNo\n      || 1;\n  }\n\n  back() {\n    const prevPage = this.pages\n      .filter(p => !p.Hidden && p.PageNo < this.index)\n      .last();\n\n    this.index = prevPage!.PageNo;\n    this.indexChange.emit(this.index);\n  }\n\n  next() {\n    const nextPage = this.pages\n      .filter(p => !p.Hidden && p.PageNo > this.index)\n      .first();\n\n    this.index = nextPage!.PageNo;\n    this.indexChange.emit(this.index);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n    :host { display: contents }\n  \n",
            "accessors": {
                "max": {
                    "name": "max",
                    "getSignature": {
                        "name": "max",
                        "type": "",
                        "returnType": "",
                        "line": 40
                    }
                }
            }
        },
        {
            "name": "DocumentPageComponent",
            "id": "component-DocumentPageComponent-b6664559179812cccb0f04ebaf1dc04520e05fa4499eb0ec5a12298768e397330687faccb27901bed07695fafa40a875e6715f0e1b382b4819c6825c70cc4091",
            "file": "src/app/core/pages/document-builder/components/document-page/document-page.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "document-page[page]",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-item *rxIf=\"page.PageTitle.length > 0\" lines=\"none\">\n  <ion-label>{{ page.PageTitle }}</ion-label>\n</ion-item>\n<ng-content></ng-content>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "page",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "Page",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Page } from \"src/app/core/stores/site-document/models\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\n\r\n@Component({\r\n  selector: \"document-page[page]\",\r\n  template: `\r\n    <ion-item *rxIf=\"page.PageTitle.length > 0\" lines=\"none\">\r\n      <ion-label>{{ page.PageTitle }}</ion-label>\r\n    </ion-item>\r\n    <ng-content></ng-content>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [IonicModule, ...importRxTemplate()]\r\n})\r\nexport class DocumentPageComponent {\r\n  @Input()\r\n  page!: Page;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "DocumentSectionComponent",
            "id": "component-DocumentSectionComponent-b4fe87217bb51f2bf53ab1cbc302f3e9253bdc5f4bc5cca4f17342f204cccf41c06f6c6411682347e6d6e8005befe2e94a340e32f5a7dff3bb333adada5f42bc",
            "file": "src/app/core/pages/document-builder/components/document-section/document-section.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "document-section[section]",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-label>{{ section.SectionTitle }}</ion-label>\n<ng-container *rxIf=\"section.IsRepeatable\">\n  <ion-button color=\"secondary\" fill=\"clear\">\n    <ion-icon name=\"duplicate-outline\" />\n  </ion-button>\n  <ion-button color=\"secondary\" fill=\"clear\">\n    <ion-icon name=\"remove-circle-outline\" />\n  </ion-button>\n</ng-container>\n\n<if [condition]=\"section.SectionQuestiontype === QuestionType.MultiCheckbox\">\n  <multi-checkbox-section show [section]=\"section\" />\n\n  <ng-container else *rxFor=\"let question of section.Questions\">\n    <ng-container *ngTemplateOutlet=\"questionsTpl; context: { $implicit: question }\" />\n  </ng-container>\n</if>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "section",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55,
                    "type": "Section",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "questionsTpl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 58,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "QuestionsTemplateDirective, {read: TemplateRef}"
                        }
                    ]
                },
                {
                    "name": "QuestionType",
                    "defaultValue": "QuestionType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 52
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { NgTemplateOutlet } from \"@angular/common\";\r\nimport { ChangeDetectionStrategy, Component, ContentChild, Directive, Input, TemplateRef } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question, QuestionType, Section } from \"src/app/core/stores/site-document/models\";\r\nimport { IfComponent } from \"src/app/shared/components\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { MultiCheckboxSectionComponent } from \"./multi-checkbox-section/multi-checkbox-section.component\";\r\nimport { AngularDirective, withTemplateContextGuard } from \"src/app/shared/lifecycles\";\r\n\r\n@Directive({\r\n  selector: \"ng-template[questions]\",\r\n  standalone: true\r\n})\r\nexport class QuestionsTemplateDirective extends AngularDirective(withTemplateContextGuard<Question>) {\r\n  @Input()\r\n  questions!: Question[];\r\n}\r\n\r\n@Component({\r\n  selector: \"document-section[section]\",\r\n  template: `\r\n    <ion-label>{{ section.SectionTitle }}</ion-label>\r\n    <ng-container *rxIf=\"section.IsRepeatable\">\r\n      <ion-button color=\"secondary\" fill=\"clear\">\r\n        <ion-icon name=\"duplicate-outline\" />\r\n      </ion-button>\r\n      <ion-button color=\"secondary\" fill=\"clear\">\r\n        <ion-icon name=\"remove-circle-outline\" />\r\n      </ion-button>\r\n    </ng-container>\r\n\r\n    <if [condition]=\"section.SectionQuestiontype === QuestionType.MultiCheckbox\">\r\n      <multi-checkbox-section show [section]=\"section\" />\r\n\r\n      <ng-container else *rxFor=\"let question of section.Questions\">\r\n        <ng-container *ngTemplateOutlet=\"questionsTpl; context: { $implicit: question }\" />\r\n      </ng-container>\r\n    </if>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    NgTemplateOutlet,\r\n    IfComponent,\r\n    MultiCheckboxSectionComponent,\r\n    QuestionsTemplateDirective\r\n  ]\r\n})\r\nexport class DocumentSectionComponent {\r\n  QuestionType = QuestionType;\r\n\r\n  @Input()\r\n  section!: Section;\r\n\r\n  @ContentChild(QuestionsTemplateDirective, { read: TemplateRef }) \r\n  questionsTpl!: TemplateRef<unknown>;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "DocumentSummaryModal",
            "id": "component-DocumentSummaryModal-2d769b0c1b59da6dcd525f6c00efef0f9705f9d381c4723b47bb81d82cb4dc05aa451f0fac45a57193bd47fa056c0f89a61db637c2d6853a61cd472d51de1dce",
            "file": "src/app/core/pages/document-builder/modals/document-summary/document-summary.modal.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "document-summary-modal",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-modal #modal [trigger]=\"trigger\" [isOpen]=\"isOpen\">\n  <ng-template>\n    <ion-header>\n      <ion-toolbar>\n        <ion-title class=\"text-center\">Summary</ion-title>\n        <ion-buttons slot=\"end\">\n          <ion-button (click)=\"modal.dismiss()\" [unpatch]>\n            <ion-icon name=\"close-outline\" slot=\"icon-only\" />\n          </ion-button>\n        </ion-buttons>\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content class=\"ion-padding\">\n      <actioner-select-summary\n        *rxIf=\"document.CanAddActionerFromApp && document.CurrentActionerOperativeID != null\"\n        [title]=\"document.MetaData.ActionerText\"\n        [actionerId]=\"document.CurrentActionerOperativeID\" />\n\n      <category-actioner-select-summary\n        *rxIf=\"document.CanAddCategoryActioner\"\n        [title]=\"document.MetaData.ActionerText\"\n        [categoryId]=\"document.DocumentCategory\"\n        [actionerId]=\"document.CurrentActionerOperativeID\" />\n\n      <company-actioner-select-summary\n        *rxIf=\"document.CompanyActionerId != null\"\n        [title]=\"document.MetaData.ActionerText\"\n        [companyId]=\"document.CompanyActionerId\" />\n\n      <queue-select-summary\n        *rxIf=\"document.Queues && document.Queues.length > 0 && document.AutoQueueID != null\"\n        [queues]=\"document.Queues\"\n        [queueId]=\"document.AutoQueueID\" />\n\n      <site-select-summary\n        *rxIf=\"document.MetaData?.HasSiteList && document.SiteId != null\"\n        [title]=\"document.MetaData.SiteListTitle\"\n        [siteId]=\"document.SiteId\" />\n\n      <queue-duration-summary\n        *rxIf=\"document.QueueDuration != null\"\n        [duration]=\"document.QueueDuration\" />\n\n      <ng-container *rxFor=\"let page of document.Pages\">\n        <h1 *rxIf=\"page.PageTitle.length > 0\">{{ page.PageTitle }}</h1>\n\n        <ng-container *rxFor=\"let section of page.Sections\">\n          <h3 *rxIf=\"section.SectionTitle.length > 0\">{{ section.SectionTitle }}</h3>\n\n          <ng-container *rxFor=\"let question of section.Questions\" [ngSwitch]=\"section.SectionQuestiontype\">\n            <label-summary *ngSwitchCase=\"QuestionType.Label\" [question]=\"question\" />\n            <checkbox-summary *ngSwitchCase=\"QuestionType.Checkbox\" [question]=\"question\" />\n            <radio-group-summary *ngSwitchCase=\"QuestionType.RadioGroup\" [section]=\"section\" [question]=\"question\" />\n            <textbox-summary *ngSwitchCase=\"QuestionType.Textbox\" [question]=\"question\" />\n            <textbox-summary *ngSwitchCase=\"QuestionType.TextArea\" [question]=\"question\" />\n            <select-summary *ngSwitchCase=\"QuestionType.Select\" [question]=\"question\" />\n            <checkbox-textbox-summary *ngSwitchCase=\"QuestionType.CheckboxTextbox\" [question]=\"question\" />\n            <radio-group-textbox-summary *ngSwitchCase=\"QuestionType.RadioGroupTextbox\" [section]=\"section\" [question]=\"question\" />\n            <date-summary *ngSwitchCase=\"QuestionType.Date\" [question]=\"question\" />\n            <datetime-summary *ngSwitchCase=\"QuestionType.DateTime\" [question]=\"question\" />\n            <operative-list-summary *ngSwitchCase=\"QuestionType.OperativeList\" [question]=\"question\" />\n            <number-summary *ngSwitchCase=\"QuestionType.Number\" [question]=\"question\" />\n            <cascade-select-summary *ngSwitchCase=\"QuestionType.CascadeDropdown\" [question]=\"question\" />\n            <linked-bool-summary *ngSwitchCase=\"QuestionType.LinkedBool\" [section]=\"section\" [question]=\"question\" />\n            <asset-list-summary *ngSwitchCase=\"QuestionType.AssetList\" [question]=\"question\" />\n            <linked-dates-summary *ngSwitchCase=\"QuestionType.LinkedDates\" [question]=\"question\" />\n            <signature-summary *ngSwitchCase=\"QuestionType.Signature\" [question]=\"question\" />\n            <select-summary *ngSwitchCase=\"QuestionType.CompanySelect\" [question]=\"question\" />\n            <cascade-select-summary *ngSwitchCase=\"QuestionType.AreaSelect\" [question]=\"question\" />\n            <select-summary *ngSwitchCase=\"QuestionType.AssetGroupsAndTypes\" [question]=\"question\" />\n            <select-summary *ngSwitchCase=\"QuestionType.AssetInspectionSchedule\" [question]=\"question\" />\n            <select-summary *ngSwitchCase=\"QuestionType.ProjectSelect\" [question]=\"question\" />\n            <select-summary *ngSwitchCase=\"QuestionType.RamsSelect\" [question]=\"question\" />\n            <select-text-summary *ngSwitchCase=\"QuestionType.SelectText\" [question]=\"question\" />\n            <cascade-select-text-summary *ngSwitchCase=\"QuestionType.CascadeDropdownText\" [question]=\"question\" />\n            <time-summary *ngSwitchCase=\"QuestionType.Time\" [question]=\"question\" />\n            <linked-times-summary *ngSwitchCase=\"QuestionType.LinkedTimes\" [question]=\"question\" />\n            <linked-date-time-summary *ngSwitchCase=\"QuestionType.LinkedDateAndTime\" [question]=\"question\" />\n          </ng-container>\n        </ng-container>\n      </ng-container>\n\n      <remain-anonymous-summary *rxIf=\"document.RemainAnon\" [isTicked]=\"document.RemainAnon\" />\n    </ion-content>\n\n    <ion-footer>\n      <ion-grid>\n        <ion-row>\n          <ion-col>\n            <ion-button (click)=\"modal.dismiss()\" color=\"danger\" expand=\"full\">Cancel</ion-button>\n          </ion-col>\n          <ion-col>\n            <ion-button (click)=\"submit.emit(); modal.dismiss();\" expand=\"full\">Submit</ion-button>\n          </ion-col>\n        </ion-row>\n      </ion-grid>\n    </ion-footer>\n  </ng-template>\n</ion-modal>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 125,
                    "type": "string",
                    "decorators": []
                },
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 130,
                    "type": "SiteDocument",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "submit",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 133,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "isOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 127
                },
                {
                    "name": "QuestionType",
                    "defaultValue": "QuestionType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 122
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { QuestionType, SiteDocument } from \"src/app/core/stores/site-document/models\";\r\nimport { importNgSwitch, importRxTemplate } from \"src/app/shared/imports\";\r\nimport { importInputSummaries, importQuestionSummaries } from \"../../components\";\r\n\r\n@Component({\r\n  selector: \"document-summary-modal\",\r\n  template: `\r\n    <ion-modal #modal [trigger]=\"trigger\" [isOpen]=\"isOpen\">\r\n      <ng-template>\r\n        <ion-header>\r\n          <ion-toolbar>\r\n            <ion-title class=\"text-center\">Summary</ion-title>\r\n            <ion-buttons slot=\"end\">\r\n              <ion-button (click)=\"modal.dismiss()\" [unpatch]>\r\n                <ion-icon name=\"close-outline\" slot=\"icon-only\" />\r\n              </ion-button>\r\n            </ion-buttons>\r\n          </ion-toolbar>\r\n        </ion-header>\r\n\r\n        <ion-content class=\"ion-padding\">\r\n          <actioner-select-summary\r\n            *rxIf=\"document.CanAddActionerFromApp && document.CurrentActionerOperativeID != null\" \r\n            [title]=\"document.MetaData.ActionerText\"\r\n            [actionerId]=\"document.CurrentActionerOperativeID\" />\r\n\r\n          <category-actioner-select-summary \r\n            *rxIf=\"document.CanAddCategoryActioner\" \r\n            [title]=\"document.MetaData.ActionerText\"\r\n            [categoryId]=\"document.DocumentCategory\"\r\n            [actionerId]=\"document.CurrentActionerOperativeID\" />\r\n\r\n          <company-actioner-select-summary\r\n            *rxIf=\"document.CompanyActionerId != null\" \r\n            [title]=\"document.MetaData.ActionerText\" \r\n            [companyId]=\"document.CompanyActionerId\" />\r\n\r\n          <queue-select-summary \r\n            *rxIf=\"document.Queues && document.Queues.length > 0 && document.AutoQueueID != null\" \r\n            [queues]=\"document.Queues\"\r\n            [queueId]=\"document.AutoQueueID\" />\r\n\r\n          <site-select-summary \r\n            *rxIf=\"document.MetaData?.HasSiteList && document.SiteId != null\"\r\n            [title]=\"document.MetaData.SiteListTitle\"\r\n            [siteId]=\"document.SiteId\" />\r\n\r\n          <queue-duration-summary \r\n            *rxIf=\"document.QueueDuration != null\" \r\n            [duration]=\"document.QueueDuration\" />\r\n\r\n          <ng-container *rxFor=\"let page of document.Pages\">\r\n            <h1 *rxIf=\"page.PageTitle.length > 0\">{{ page.PageTitle }}</h1>\r\n\r\n            <ng-container *rxFor=\"let section of page.Sections\">\r\n              <h3 *rxIf=\"section.SectionTitle.length > 0\">{{ section.SectionTitle }}</h3>\r\n\r\n              <ng-container *rxFor=\"let question of section.Questions\" [ngSwitch]=\"section.SectionQuestiontype\">\r\n                <label-summary *ngSwitchCase=\"QuestionType.Label\" [question]=\"question\" />\r\n                <checkbox-summary *ngSwitchCase=\"QuestionType.Checkbox\" [question]=\"question\" />\r\n                <radio-group-summary *ngSwitchCase=\"QuestionType.RadioGroup\" [section]=\"section\" [question]=\"question\" />\r\n                <textbox-summary *ngSwitchCase=\"QuestionType.Textbox\" [question]=\"question\" />\r\n                <textbox-summary *ngSwitchCase=\"QuestionType.TextArea\" [question]=\"question\" />\r\n                <select-summary *ngSwitchCase=\"QuestionType.Select\" [question]=\"question\" />\r\n                <checkbox-textbox-summary *ngSwitchCase=\"QuestionType.CheckboxTextbox\" [question]=\"question\" />\r\n                <radio-group-textbox-summary *ngSwitchCase=\"QuestionType.RadioGroupTextbox\" [section]=\"section\" [question]=\"question\" />\r\n                <date-summary *ngSwitchCase=\"QuestionType.Date\" [question]=\"question\" />\r\n                <datetime-summary *ngSwitchCase=\"QuestionType.DateTime\" [question]=\"question\" />\r\n                <operative-list-summary *ngSwitchCase=\"QuestionType.OperativeList\" [question]=\"question\" />\r\n                <number-summary *ngSwitchCase=\"QuestionType.Number\" [question]=\"question\" />\r\n                <cascade-select-summary *ngSwitchCase=\"QuestionType.CascadeDropdown\" [question]=\"question\" />\r\n                <linked-bool-summary *ngSwitchCase=\"QuestionType.LinkedBool\" [section]=\"section\" [question]=\"question\" />\r\n                <asset-list-summary *ngSwitchCase=\"QuestionType.AssetList\" [question]=\"question\" />\r\n                <linked-dates-summary *ngSwitchCase=\"QuestionType.LinkedDates\" [question]=\"question\" />\r\n                <signature-summary *ngSwitchCase=\"QuestionType.Signature\" [question]=\"question\" />\r\n                <select-summary *ngSwitchCase=\"QuestionType.CompanySelect\" [question]=\"question\" />\r\n                <cascade-select-summary *ngSwitchCase=\"QuestionType.AreaSelect\" [question]=\"question\" />\r\n                <select-summary *ngSwitchCase=\"QuestionType.AssetGroupsAndTypes\" [question]=\"question\" />\r\n                <select-summary *ngSwitchCase=\"QuestionType.AssetInspectionSchedule\" [question]=\"question\" />\r\n                <select-summary *ngSwitchCase=\"QuestionType.ProjectSelect\" [question]=\"question\" />\r\n                <select-summary *ngSwitchCase=\"QuestionType.RamsSelect\" [question]=\"question\" />\r\n                <select-text-summary *ngSwitchCase=\"QuestionType.SelectText\" [question]=\"question\" />\r\n                <cascade-select-text-summary *ngSwitchCase=\"QuestionType.CascadeDropdownText\" [question]=\"question\" />\r\n                <time-summary *ngSwitchCase=\"QuestionType.Time\" [question]=\"question\" />\r\n                <linked-times-summary *ngSwitchCase=\"QuestionType.LinkedTimes\" [question]=\"question\" />\r\n                <linked-date-time-summary *ngSwitchCase=\"QuestionType.LinkedDateAndTime\" [question]=\"question\" />\r\n              </ng-container>\r\n            </ng-container>\r\n          </ng-container>\r\n\r\n          <remain-anonymous-summary *rxIf=\"document.RemainAnon\" [isTicked]=\"document.RemainAnon\" />\r\n        </ion-content>\r\n\r\n        <ion-footer>\r\n          <ion-grid>\r\n            <ion-row>\r\n              <ion-col>\r\n                <ion-button (click)=\"modal.dismiss()\" color=\"danger\" expand=\"full\">Cancel</ion-button>\r\n              </ion-col>\r\n              <ion-col>\r\n                <ion-button (click)=\"submit.emit(); modal.dismiss();\" expand=\"full\">Submit</ion-button>\r\n              </ion-col>\r\n            </ion-row>\r\n          </ion-grid>\r\n        </ion-footer>\r\n      </ng-template>\r\n    </ion-modal>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    ...importNgSwitch(),\r\n    ...importInputSummaries(),\r\n    ...importQuestionSummaries()\r\n  ]\r\n})\r\nexport class DocumentSummaryModal {\r\n  QuestionType = QuestionType;\r\n\r\n  @Input({ required: true })\r\n  trigger!: string;\r\n\r\n  isOpen: boolean = false;\r\n\r\n  @Input({ required: true })\r\n  document!: SiteDocument;\r\n\r\n  @Output()\r\n  submit = new EventEmitter<void>();\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "FileUploadComponent",
            "id": "component-FileUploadComponent-d28a3239cabdddcef5eb1e1d49591978374b5620072fa2e9bf2c77fffa2d28c0c5cbe1a7e0bcf1a8db74225e9a4e81da0b09e51fec3634c1161035a7a54b0798",
            "file": "src/app/core/pages/document-builder/components/question-types/extras/file-upload/file-upload.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "file-upload",
            "styleUrls": [],
            "styles": [],
            "template": "<if [condition]=\"filename == null\">\n  <ion-button show fill=\"clear\">\n    <upload (uploadFiles)=\"upload($event)\" />\n    <ion-icon name=\"cloud-upload-outline\" />\n  </ion-button>\n\n  <ion-button else (click)=\"clear()\" fill=\"clear\" color=\"danger\">\n    <ion-icon name=\"trash-bin-outline\" />\n  </ion-button>\n</if>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataUrl",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "filename",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 30
                }
            ],
            "methodsClass": [
                {
                    "name": "clear",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "upload",
                    "args": [
                        {
                            "name": "files",
                            "type": "DataUrlFile[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "files",
                            "type": "DataUrlFile[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { IfComponent } from \"src/app/shared/components/if/if.component\";\r\nimport { UploadComponent } from \"src/app/shared/components/upload/upload.component\";\r\nimport { DataUrlFile } from \"src/app/shared/models/files/data-url-file.model\";\r\n\r\n@Component({\r\n  selector: \"file-upload\",\r\n  template: `\r\n    <if [condition]=\"filename == null\">\r\n      <ion-button show fill=\"clear\">\r\n        <upload (uploadFiles)=\"upload($event)\" />\r\n        <ion-icon name=\"cloud-upload-outline\" />\r\n      </ion-button>\r\n\r\n      <ion-button else (click)=\"clear()\" fill=\"clear\" color=\"danger\">\r\n        <ion-icon name=\"trash-bin-outline\" />\r\n      </ion-button>\r\n    </if>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    IfComponent,\r\n    UploadComponent\r\n  ]\r\n})\r\nexport class FileUploadComponent {\r\n  filename: string | null = null;\r\n  dataUrl: string | null = null;\r\n\r\n  upload(files: DataUrlFile[]) {\r\n    if (files[0] != null) {\r\n      this.filename = files[0].name;\r\n      this.dataUrl = files[0].dataUrl;\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    this.filename = null;\r\n    this.dataUrl = null;\r\n  }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "HraSelectComponent",
            "id": "component-HraSelectComponent-8d3e6df4b8bbb37be725fb66c6afac86ce25a412bfa3808c286d8624500f832e01313303f3d43d10ab3f6bcf8f2330e729ab1f5da338a6e44038727888445661",
            "file": "src/app/core/pages/document-builder/components/question-types/34-hra-select/hra-select.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "hra-select-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n    <camera-capture *rxIf=\"question.CanHaveImg\" class=\"m-0\" slot=\"end\" />\n    <file-upload *rxIf=\"question.CanHaveFiles\" class=\"m-0\" slot=\"end\" />\n  </ion-item>\n  <selectable\n    placeholder=\"Select\"\n    [title]=\"question.QuestionText\"\n    [items]=\"hras.data() | push\"\n    itemValue=\"Id\"\n    itemText=\"AreaName\"\n    [(value)]=\"question.OptionVal\"\n    (itemChange)=\"question.SelectedOptionText = $event?.AreaName\"\n    [canClear]=\"!question.Required\" />\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "hras",
                    "defaultValue": "useHighRiskActivities(this.siteId)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "siteId",
                    "defaultValue": "param(\"siteId\")?.toNumber()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "validator",
                    "defaultValue": "useSelectValidator(() => this.question)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 46
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\nimport { SelectableComponent } from \"src/app/shared/components\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { useHighRiskActivities } from \"src/app/core/http/collab-plan.api\";\r\nimport { param } from \"src/app/shared/route\";\r\nimport { useSelectValidator } from \"../05-select/validation/select.validator\";\r\n\r\n@Component({\r\n  selector: \"hra-select-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n        <camera-capture *rxIf=\"question.CanHaveImg\" class=\"m-0\" slot=\"end\" />\r\n        <file-upload *rxIf=\"question.CanHaveFiles\" class=\"m-0\" slot=\"end\" />\r\n      </ion-item>\r\n      <selectable \r\n        placeholder=\"Select\"\r\n        [title]=\"question.QuestionText\"\r\n        [items]=\"hras.data() | push\"\r\n        itemValue=\"Id\"\r\n        itemText=\"AreaName\"\r\n        [(value)]=\"question.OptionVal\"\r\n        (itemChange)=\"question.SelectedOptionText = $event?.AreaName\"\r\n        [canClear]=\"!question.Required\" />\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    QuestionTextComponent,\r\n    SelectableComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent\r\n  ]\r\n})\r\nexport class HraSelectComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n\r\n  validator = useSelectValidator(() => this.question);\r\n\r\n  siteId = param(\"siteId\")?.toNumber();\r\n  hras = useHighRiskActivities(this.siteId);\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "IfComponent",
            "id": "component-IfComponent-b683e63b18b01e06dc0cabdfb584d283a9cc475a261b25ebeb93980a78e2f4ab71bce64ccbd749c10463391350323a7ec3f03c6a688b1cddb8dec2b5b589c91a",
            "file": "src/app/shared/components/if/if.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "if",
            "styleUrls": [],
            "styles": [
                "\n    :host { display: contents }\n  "
            ],
            "template": "<ng-content *rxIf=\"condition\" select=\"[show]\"></ng-content>\n<ng-content *rxIf=\"!condition\" select=\"[else]\"></ng-content>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { RxIf } from \"@rx-angular/template/if\";\r\n\r\n@Component({\r\n  selector: 'if',\r\n  styles: [`\r\n    :host { display: contents }\r\n  `],\r\n  template:`\r\n    <ng-content *rxIf=\"condition\" select=\"[show]\"></ng-content>\r\n    <ng-content *rxIf=\"!condition\" select=\"[else]\"></ng-content>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [RxIf]\r\n})\r\nexport class IfComponent {\r\n  @Input({ required: true }) condition!: boolean;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n    :host { display: contents }\n  \n"
        },
        {
            "name": "LabelComponent",
            "id": "component-LabelComponent-a919650b3e4f92aa4fab29e33658380b1780137f05551bfa5d923371e108c76f6f6182148156e5b7d0a1ae5fcdbdc7664b129b6248686e0b99eaf3d384214092",
            "file": "src/app/core/pages/document-builder/components/question-types/00-label/label.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "label-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-item lines=\"none\">\n  <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n  <camera-capture *rxIf=\"question.CanHaveImg\" class=\"m-0\" slot=\"end\" />\n  <file-upload *rxIf=\"question.CanHaveFiles\" class=\"m-0\" slot=\"end\" />\n</ion-item>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "validator",
                    "defaultValue": "useLabelValidator(() => this.question)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\nimport { useLabelValidator } from \"./validation/label.validator\";\r\n\r\n@Component({\r\n  selector: 'label-question',\r\n  template: `\r\n    <ion-item lines=\"none\">\r\n      <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n      <camera-capture *rxIf=\"question.CanHaveImg\" class=\"m-0\" slot=\"end\" />\r\n      <file-upload *rxIf=\"question.CanHaveFiles\" class=\"m-0\" slot=\"end\" />\r\n    </ion-item>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    QuestionTextComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent\r\n  ]\r\n})\r\nexport class LabelComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n\r\n  validator = useLabelValidator(() => this.question);\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "LabelSummaryComponent",
            "id": "component-LabelSummaryComponent-e1a07ac96d76255c05fa64abb44ce3ff6bf544559ea7c8b421fc9f6fb8c2a29424efc53f4e682d9fed088de6d9798c1cccad51f45fbcb4bbc22e54c132c95183",
            "file": "src/app/core/pages/document-builder/components/question-types/00-label/summary/label-summary.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "label-summary",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <ion-label class=\"font-bold\">{{ question.QuestionText }}</ion-label>\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\n\r\n@Component({\r\n  selector: 'label-summary',\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <ion-label class=\"font-bold\">{{ question.QuestionText }}</ion-label>\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule\r\n  ]\r\n})\r\nexport class LabelSummaryComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "LinkedBoolComponent",
            "id": "component-LinkedBoolComponent-f6728ed9621bf4b5d9d20a794dc9a457e64ce01db4817856709e50353270e617105d2eab944269b867989e8704f2e1c4e6658717c994a840eb7abdf3d20430d8",
            "file": "src/app/core/pages/document-builder/components/question-types/16-linked-bool/linked-bool.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "linked-bool-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n    <camera-capture *rxIf=\"question.CanHaveImg\" class=\"m-0\" slot=\"end\" />\n    <file-upload *rxIf=\"question.CanHaveFiles\" class=\"m-0\" slot=\"end\" />\n  </ion-item>\n\n  <ion-item lines=\"none\">\n    <ion-label>{{ section.TableTitles[1] }}</ion-label>\n    <ion-checkbox [(ngModel)]=\"question.YesNoNA\" slot=\"end\" />\n  </ion-item>\n\n  <ion-item>\n    <ion-label>{{ section.TableTitles[2] }}</ion-label>\n    <ion-checkbox\n      [ngModel]=\"question.NumberVal === 1\"\n      (ngModelChange)=\"question.NumberVal = +$event;\"\n      [disabled]=\"!question.YesNoNA\"\n      slot=\"end\" />\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "Question",
                    "decorators": []
                },
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "Section",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "validator",
                    "defaultValue": "useLinkedBoolValidator(() => this.question)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 49
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question, Section } from \"src/app/core/stores/site-document/models\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\nimport { useLinkedBoolValidator } from \"./validation/linked-bool.validator\";\r\n\r\n@Component({\r\n  selector: \"linked-bool-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n        <camera-capture *rxIf=\"question.CanHaveImg\" class=\"m-0\" slot=\"end\" />\r\n        <file-upload *rxIf=\"question.CanHaveFiles\" class=\"m-0\" slot=\"end\" />\r\n      </ion-item>\r\n\r\n      <ion-item lines=\"none\">\r\n        <ion-label>{{ section.TableTitles[1] }}</ion-label>\r\n        <ion-checkbox [(ngModel)]=\"question.YesNoNA\" slot=\"end\" />\r\n      </ion-item>\r\n\r\n      <ion-item>\r\n        <ion-label>{{ section.TableTitles[2] }}</ion-label>\r\n        <ion-checkbox \r\n          [ngModel]=\"question.NumberVal === 1\" \r\n          (ngModelChange)=\"question.NumberVal = +$event;\"\r\n          [disabled]=\"!question.YesNoNA\" \r\n          slot=\"end\" />\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  standalone: true,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    FormsModule,\r\n    QuestionTextComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent\r\n  ]\r\n})\r\nexport class LinkedBoolComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n\r\n  validator = useLinkedBoolValidator(() => this.question);\r\n\r\n  @Input({ required: true })\r\n  section!: Section;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "LinkedBoolSummaryComponent",
            "id": "component-LinkedBoolSummaryComponent-e74cdec89765d95e3f9b688ea761d0ca2927bcbb4921b0dc874bfd5f02d43679524fad2f0dba39f156d0e3b6b7bfb0ec8fab8fa0bee1c5ce24f4400a3a21b844",
            "file": "src/app/core/pages/document-builder/components/question-types/16-linked-bool/summary/linked-bool-summary.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "linked-bool-summary",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <ion-label class=\"font-bold\">{{ question.QuestionText }}</ion-label>\n  </ion-item>\n\n  <ion-item lines=\"none\">\n    <ion-label *rxIf=\"section.TableTitles[0]\">{{ section.TableTitles[0] }}</ion-label>\n\n    <ion-icon *rxIf=\"question.YesNoNA === true\" name=\"checkmark-circle\" color=\"success\" />\n    <ion-icon *rxIf=\"question.YesNoNA !== true\" name=\"remove-circle\" color=\"secondary\" />\n  </ion-item>\n\n  <ion-item lines=\"none\">\n    <ion-label *rxIf=\"section.TableTitles[1]\">{{ section.TableTitles[1] }}</ion-label>\n\n    <ion-icon *rxIf=\"question.NumberVal === 1\" name=\"checkmark-circle\" color=\"success\" />\n    <ion-icon *rxIf=\"question.NumberVal !== 1\" name=\"remove-circle\" color=\"secondary\" />\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "Question",
                    "decorators": []
                },
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "Section",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question, Section } from \"src/app/core/stores/site-document/models\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\n\r\n@Component({\r\n  selector: \"linked-bool-summary\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <ion-label class=\"font-bold\">{{ question.QuestionText }}</ion-label>\r\n      </ion-item>\r\n\r\n      <ion-item lines=\"none\">\r\n        <ion-label *rxIf=\"section.TableTitles[0]\">{{ section.TableTitles[0] }}</ion-label>\r\n        \r\n        <ion-icon *rxIf=\"question.YesNoNA === true\" name=\"checkmark-circle\" color=\"success\" />\r\n        <ion-icon *rxIf=\"question.YesNoNA !== true\" name=\"remove-circle\" color=\"secondary\" />\r\n      </ion-item>\r\n\r\n      <ion-item lines=\"none\">\r\n        <ion-label *rxIf=\"section.TableTitles[1]\">{{ section.TableTitles[1] }}</ion-label>\r\n\r\n        <ion-icon *rxIf=\"question.NumberVal === 1\" name=\"checkmark-circle\" color=\"success\" />\r\n        <ion-icon *rxIf=\"question.NumberVal !== 1\" name=\"remove-circle\" color=\"secondary\" />\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [IonicModule, ...importRxTemplate()]\r\n})\r\nexport class LinkedBoolSummaryComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n\r\n  @Input({ required: true })\r\n  section!: Section;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "LinkedDatesComponent",
            "id": "component-LinkedDatesComponent-48598059fb46ac1144bd0408015f0f1a3889c0ffdea7de52c967750f68ccb0638ccd5eda672c8a84f3e0f7011f5ae4e7ee4cb118f23f00693cd0397bd4c63a38",
            "file": "src/app/core/pages/document-builder/components/question-types/18-linked-dates/linked-dates.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "linked-dates-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n  </ion-item>\n  <datetime-picker\n    [(datetime)]=\"question.DateAndTime\"\n    presentation=\"date\"\n    [min]=\"min() | push\"\n    [max]=\"spread() | push\" />\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.CascadeOptionsText }}</question-text>\n  </ion-item>\n  <datetime-picker\n    [(datetime)]=\"question.DateAndTime2\"\n    presentation=\"date\"\n    [min]=\"min() | push\"\n    [max]=\"max() | push\" />\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "max",
                    "defaultValue": "this.question$(() => maxDate(this.question))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "min",
                    "defaultValue": "this.question$(() => minDate(this.question))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "question$",
                    "defaultValue": "merge(this.afterViewInit(), this.input(\"question\")).toPipe()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "spread",
                    "defaultValue": "this.question$(() => spreadDate(this.question))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 49
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { DatetimePickerComponent } from \"src/app/shared/components/datetime-picker/datetime-picker.component\";\r\nimport { QuestionTextComponent } from \"../extras\";\r\nimport { AngularComponent, withAfterViewInit, withOnChanges } from \"src/app/shared/lifecycles\";\r\nimport { merge } from \"rxjs\";\r\nimport { maxDate, minDate, spreadDate } from \"src/app/core/stores/site-document/models/site-document.model\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\n\r\n@Component({\r\n  selector: \"linked-dates-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n      </ion-item>\r\n      <datetime-picker \r\n        [(datetime)]=\"question.DateAndTime\" \r\n        presentation=\"date\"\r\n        [min]=\"min() | push\"\r\n        [max]=\"spread() | push\" />\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.CascadeOptionsText }}</question-text>\r\n      </ion-item>\r\n      <datetime-picker \r\n        [(datetime)]=\"question.DateAndTime2\" \r\n        presentation=\"date\" \r\n        [min]=\"min() | push\"\r\n        [max]=\"max() | push\" />\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    QuestionTextComponent,\r\n    DatetimePickerComponent\r\n  ]\r\n})\r\nexport class LinkedDatesComponent extends AngularComponent(withAfterViewInit, withOnChanges) {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n  question$ = merge(this.afterViewInit(), this.input(\"question\")).toPipe();\r\n\r\n  min = this.question$(() => minDate(this.question));\r\n  max = this.question$(() => maxDate(this.question));\r\n  spread = this.question$(() => spreadDate(this.question));\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "LinkedDatesSummaryComponent",
            "id": "component-LinkedDatesSummaryComponent-f5d681cb69f06efc0651143ee5ffe7787753beea5f330f5af61f71fb4e3432a4ee7f637db1d324155a0864f79bf1a67b3c7025536e1dd15d899887eb55b71d29",
            "file": "src/app/core/pages/document-builder/components/question-types/18-linked-dates/summary/linked-dates-summary.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "linked-dates-summary",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <ion-label>\n      <b>{{ question.QuestionText }}</b>\n      <p>{{ question.DateAndTime! | utcDate }}</p>\n    </ion-label>\n  </ion-item>\n  <ion-datetime class=\"my-0 mx-auto\" [value]=\"question.DateAndTime!.toISOString()\" presentation=\"date\" />\n\n  <ion-item lines=\"none\">\n    <ion-label>\n      <b>{{ question.CascadeOptionsText }}</b>\n      <p>{{ question.DateAndTime2! | utcDate }}</p>\n    </ion-label>\n  </ion-item>\n  <ion-datetime class=\"my-0 mx-auto\" [value]=\"question.DateAndTime2!.toISOString()\" presentation=\"date\" />\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { UtcDatePipe } from \"src/app/shared/pipes\";\r\n\r\n@Component({\r\n  selector: \"linked-dates-summary\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <ion-label>\r\n          <b>{{ question.QuestionText }}</b>\r\n          <p>{{ question.DateAndTime! | utcDate }}</p>\r\n        </ion-label>\r\n      </ion-item>\r\n      <ion-datetime class=\"my-0 mx-auto\" [value]=\"question.DateAndTime!.toISOString()\" presentation=\"date\" />\r\n\r\n      <ion-item lines=\"none\">\r\n        <ion-label>\r\n          <b>{{ question.CascadeOptionsText }}</b>\r\n          <p>{{ question.DateAndTime2! | utcDate }}</p>\r\n        </ion-label>\r\n      </ion-item>\r\n      <ion-datetime class=\"my-0 mx-auto\" [value]=\"question.DateAndTime2!.toISOString()\" presentation=\"date\" />\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [IonicModule, UtcDatePipe]\r\n})\r\nexport class LinkedDatesSummaryComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "LinkedDatetimeComponent",
            "id": "component-LinkedDatetimeComponent-cb36ce35c3204ae7d9d6d4ab0ba158a0cd14f553265a8a97c27a30934555372d6c4f88b85318f72a399007e4ae51b4deeb973849bc641dee74c554f1dc2d9a96",
            "file": "src/app/core/pages/document-builder/components/question-types/36-linked-date-time/linked-datetime.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "linked-datetime-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n  </ion-item>\n  <datetime-picker\n    [(datetime)]=\"question.DateAndTime\"\n    [min]=\"min() | push\"\n    [max]=\"spread() | push\" />\n\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.CascadeOptionsText }}</question-text>\n  </ion-item>\n  <datetime-picker\n    [(datetime)]=\"question.DateAndTime2\"\n    [min]=\"min() | push\"\n    [max]=\"max() | push\" />\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "max",
                    "defaultValue": "this.question$(() => maxDate(this.question))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "min",
                    "defaultValue": "this.question$(() => minDate(this.question))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "question$",
                    "defaultValue": "merge(this.afterViewInit(), this.input(\"question\")).toPipe()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "spread",
                    "defaultValue": "this.question$(() => spreadDate(this.question))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 48
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { QuestionTextComponent } from \"../extras\";\r\nimport { DatetimePickerComponent } from \"src/app/shared/components\";\r\nimport { merge } from \"rxjs\";\r\nimport { AngularComponent, withAfterViewInit, withOnChanges } from \"src/app/shared/lifecycles\";\r\nimport { maxDate, minDate, spreadDate } from \"src/app/core/stores/site-document/models/site-document.model\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\n\r\n@Component({\r\n  selector: \"linked-datetime-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n      </ion-item>\r\n      <datetime-picker \r\n        [(datetime)]=\"question.DateAndTime\"\r\n        [min]=\"min() | push\"\r\n        [max]=\"spread() | push\" />\r\n\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.CascadeOptionsText }}</question-text>\r\n      </ion-item>\r\n      <datetime-picker \r\n        [(datetime)]=\"question.DateAndTime2\"\r\n        [min]=\"min() | push\"\r\n        [max]=\"max() | push\" />\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    QuestionTextComponent,\r\n    DatetimePickerComponent\r\n  ]\r\n})\r\nexport class LinkedDatetimeComponent extends AngularComponent(withAfterViewInit, withOnChanges) {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n  question$ = merge(this.afterViewInit(), this.input(\"question\")).toPipe();\r\n\r\n  min = this.question$(() => minDate(this.question));\r\n  max = this.question$(() => maxDate(this.question));\r\n  spread = this.question$(() => spreadDate(this.question));\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "LinkedDateTimeSummaryComponent",
            "id": "component-LinkedDateTimeSummaryComponent-a49d8a350d481ebd1bb4dddaa2ab1e5ff2b9effd07b49de9ea2ffcf175244c64fb833ea8a118cc5e2e34f82529ee996f90d0cc7115428207de2e51f974d053b4",
            "file": "src/app/core/pages/document-builder/components/question-types/36-linked-date-time/summary/linked-date-time-summary.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "linked-date-time-summary",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <ion-label>\n      <b>{{ question.QuestionText }}</b>\n      <p>{{ question.DateAndTime! | utcDateTime }}</p>\n    </ion-label>\n  </ion-item>\n  <ion-datetime class=\"my-0 mx-auto\" [value]=\"question.DateAndTime!.toISOString()\" presentation=\"date\" />\n\n  <ion-item lines=\"none\">\n    <ion-label>\n      <b>{{ question.CascadeOptionsText }}</b>\n      <p>{{ question.DateAndTime2! | utcDateTime }}</p>\n    </ion-label>\n  </ion-item>\n  <ion-datetime class=\"my-0 mx-auto\" [value]=\"question.DateAndTime2!.toISOString()\" presentation=\"date\" />\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { UtcDateTimePipe } from \"src/app/shared/pipes\";\r\n\r\n@Component({\r\n  selector: \"linked-date-time-summary\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <ion-label>\r\n          <b>{{ question.QuestionText }}</b>\r\n          <p>{{ question.DateAndTime! | utcDateTime }}</p>\r\n        </ion-label>\r\n      </ion-item>\r\n      <ion-datetime class=\"my-0 mx-auto\" [value]=\"question.DateAndTime!.toISOString()\" presentation=\"date\" />\r\n\r\n      <ion-item lines=\"none\">\r\n        <ion-label>\r\n          <b>{{ question.CascadeOptionsText }}</b>\r\n          <p>{{ question.DateAndTime2! | utcDateTime }}</p>\r\n        </ion-label>\r\n      </ion-item>\r\n      <ion-datetime class=\"my-0 mx-auto\" [value]=\"question.DateAndTime2!.toISOString()\" presentation=\"date\" />\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [IonicModule, UtcDateTimePipe]\r\n})\r\nexport class LinkedDateTimeSummaryComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "LinkedTimesComponent",
            "id": "component-LinkedTimesComponent-18d1977adb865c3996758b36a134cd6351410abb4d1292c4b9c056c10a8147873568350c92dbf4a76b41747b42b6fde34d50491f19c988e3404b49e64e78d6a9",
            "file": "src/app/core/pages/document-builder/components/question-types/33-linked-times/linked-times.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "linked-times-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n  </ion-item>\n  <ion-item>\n    <time-picker [(time)]=\"question.DateAndTime\" class=\"w-full\" />\n  </ion-item>\n\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.CascadeOptionsText }}</question-text>\n  </ion-item>\n  <ion-item>\n    <time-picker [(time)]=\"question.DateAndTime2\" class=\"w-full\"></time-picker>\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { QuestionTextComponent } from \"../extras\";\r\nimport { TimePickerComponent } from \"src/app/shared/components\";\r\n\r\n@Component({\r\n  selector: \"linked-times-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n      </ion-item>\r\n      <ion-item>\r\n        <time-picker [(time)]=\"question.DateAndTime\" class=\"w-full\" />\r\n      </ion-item>\r\n\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.CascadeOptionsText }}</question-text>\r\n      </ion-item>\r\n      <ion-item>\r\n        <time-picker [(time)]=\"question.DateAndTime2\" class=\"w-full\"></time-picker>\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule, \r\n    QuestionTextComponent,\r\n    TimePickerComponent\r\n  ]\r\n})\r\nexport class LinkedTimesComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "LinkedTimesSummaryComponent",
            "id": "component-LinkedTimesSummaryComponent-cdb5929cb34f45c5c493010af6a1621f4298d413cd0c68de82fd7398accb0b53f0e5babf7671b1a28bbcf452d32a148ef823b8a7f033c9edf280181b6b5b9ca5",
            "file": "src/app/core/pages/document-builder/components/question-types/33-linked-times/summary/linked-times-summary.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "linked-times-summary",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <ion-label>\n      <b>{{ question.QuestionText }}</b>\n      <p>{{ question.DateAndTime?.toFormat(\"HH:mm\") }} - {{ question.DateAndTime2?.toFormat(\"HH:mm\") }}</p>\n    </ion-label>\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\n\r\n@Component({\r\n  selector: \"linked-times-summary\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <ion-label>\r\n          <b>{{ question.QuestionText }}</b>\r\n          <p>{{ question.DateAndTime?.toFormat(\"HH:mm\") }} - {{ question.DateAndTime2?.toFormat(\"HH:mm\") }}</p>\r\n        </ion-label>\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [IonicModule]\r\n})\r\nexport class LinkedTimesSummaryComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "LocalAssetSearchComponent",
            "id": "component-LocalAssetSearchComponent-57f3a18a5ce9b5371ff9a407651f1c80236b48156dca4886751452f949f9523d1e8c55c4b0281e9987eedfe8d7b640998df4d3b902f65c3288737a9065fc7de0",
            "file": "src/app/shared/modals/asset-list/components/local-asset-search/local-asset-search.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "local-asset-search",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-searchbar [(ngModel)]=\"searchRegistration\" debounce=\"300\" />\n\n<ion-list>\n  <ion-item-sliding *rxFor=\"let asset of assetStore.data()\n    | fuse: {\n      search: searchRegistration,\n      keys: ['Registration']\n    }\">\n    <ion-item (click)=\"select.emit(asset)\" button>\n      {{ asset.Id }} - {{ asset.Registration }}\n    </ion-item>\n    <ion-item-options side=\"end\">\n      <ion-item-options color=\"danger\">\n        <ion-icon name=\"trash-bin-outline\" />\n      </ion-item-options>\n    </ion-item-options>\n  </ion-item-sliding>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "select",
                    "defaultValue": "new EventEmitter<Asset>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "assetStore",
                    "defaultValue": "useAssetStore()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "searchRegistration",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 41
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Output } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Asset, useAssetStore } from \"src/app/core/stores/asset/asset.store\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { FusePipe } from \"src/app/shared/pipes\";\r\n\r\n@Component({\r\n  selector: \"local-asset-search\",\r\n  template: `\r\n    <ion-searchbar [(ngModel)]=\"searchRegistration\" debounce=\"300\" />\r\n\r\n    <ion-list>\r\n      <ion-item-sliding *rxFor=\"let asset of assetStore.data()\r\n        | fuse: {\r\n          search: searchRegistration,\r\n          keys: ['Registration']\r\n        }\">\r\n        <ion-item (click)=\"select.emit(asset)\" button>\r\n          {{ asset.Id }} - {{ asset.Registration }}\r\n        </ion-item>\r\n        <ion-item-options side=\"end\">\r\n          <ion-item-options color=\"danger\">\r\n            <ion-icon name=\"trash-bin-outline\" />\r\n          </ion-item-options>\r\n        </ion-item-options>\r\n      </ion-item-sliding>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    FormsModule,\r\n    FusePipe\r\n  ]\r\n})\r\nexport class LocalAssetSearchComponent {\r\n  assetStore = useAssetStore();\r\n  searchRegistration: string = \"\";\r\n\r\n  @Output()\r\n  select = new EventEmitter<Asset>();\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "LocalOperativeSearchComponent",
            "id": "component-LocalOperativeSearchComponent-703ce0c622198380db2f013f06f304409b03279c20ee969993c278ae036ef8f544d2aa1f141f831d4aa4d745b2bc861161d0358a62c646a1ea409ae9c4b5e4b7",
            "file": "src/app/shared/modals/operative-list/components/local-operative-search/local-operative-search.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "local-operative-search",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-searchbar [(ngModel)]=\"search\" class=\"animate__animated animate__fadeIn\" debounce=\"300\" />\n\n<ion-list *rxLet=\"user$; let user\">\n  <ion-item\n    *rxIf=\"!hideMyself && user != null\"\n    (click)=\"select.emit({ ID: user.Id, Name: user.FirstName + ' ' + user.LastName })\"\n    button>\n      {{ user.Id }} - {{ user.FirstName }} {{ user.LastName }}\n  </ion-item>\n  <ion-item-sliding *rxFor=\"let op of operativeStore.data(); last as isLast\">\n    <ion-item (click)=\"select.emit(op)\" button>\n      {{ op.ID }} - {{ op.Name }}\n    </ion-item>\n    <ion-item-options side=\"end\">\n      <ion-item-option color=\"danger\">\n        <ion-icon name=\"trash-bin-outline\" />\n      </ion-item-option>\n    </ion-item-options>\n  </ion-item-sliding>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "hideMyself",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "select",
                    "defaultValue": "new EventEmitter<Operative>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "operativeStore",
                    "defaultValue": "useOperativeStore()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "search",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "user$",
                    "defaultValue": "this.userStore.user$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "userStore",
                    "defaultValue": "inject(UserStore)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 42
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, inject, Input, Output } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Operative, useOperativeStore } from \"src/app/core/stores/operative/operatives.store\";\r\nimport { UserStore } from \"src/app/core/stores/user/user.store\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { AngularComponent } from \"src/app/shared/lifecycles\";\r\n\r\n@Component({\r\n  selector: \"local-operative-search\",\r\n  template: `\r\n    <ion-searchbar [(ngModel)]=\"search\" class=\"animate__animated animate__fadeIn\" debounce=\"300\" />\r\n\r\n    <ion-list *rxLet=\"user$; let user\">\r\n      <ion-item \r\n        *rxIf=\"!hideMyself && user != null\"\r\n        (click)=\"select.emit({ ID: user.Id, Name: user.FirstName + ' ' + user.LastName })\"\r\n        button>\r\n          {{ user.Id }} - {{ user.FirstName }} {{ user.LastName }}\r\n      </ion-item>\r\n      <ion-item-sliding *rxFor=\"let op of operativeStore.data(); last as isLast\">\r\n        <ion-item (click)=\"select.emit(op)\" button>\r\n          {{ op.ID }} - {{ op.Name }}\r\n        </ion-item>\r\n        <ion-item-options side=\"end\">\r\n          <ion-item-option color=\"danger\">\r\n            <ion-icon name=\"trash-bin-outline\" />\r\n          </ion-item-option>\r\n        </ion-item-options>\r\n      </ion-item-sliding>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    FormsModule\r\n  ]\r\n})\r\nexport class LocalOperativeSearchComponent extends AngularComponent() {\r\n  userStore = inject(UserStore);\r\n  operativeStore = useOperativeStore();\r\n\r\n  @Output()\r\n  select = new EventEmitter<Operative>();\r\n\r\n  @Input()\r\n  hideMyself: boolean = false;\r\n\r\n  search: string = \"\";\r\n\r\n  user$ = this.userStore.user$;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "MultiCheckboxSectionComponent",
            "id": "component-MultiCheckboxSectionComponent-45f1713d92302738edfd03adb60a6841b4f4406c1f8684a0d0aaaf1fb3b4ada885ac5715aaf13f853e878ceb64b3192d02fb9b228099219b99ba9fbc552fd6a1",
            "file": "src/app/core/pages/document-builder/components/document-section/multi-checkbox-section/multi-checkbox-section.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "multi-checkbox-section",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item [id]=\"id\" detail=\"false\" button>\n    <ion-label>{{ section.TableTitles[0] }}</ion-label>\n    <ion-icon name=\"create-outline\" slot=\"end\"></ion-icon>\n  </ion-item>\n</ion-list>\n\n<ion-list class=\"max-h-96\" [style.height]=\"listHeight() | push\">\n  <rx-virtual-scroll-viewport [itemSize]=\"50\">\n    <ion-item *rxVirtualFor=\"let question of selectedQuestions()\" class=\"w-full\">\n      {{ question.QuestionText }}\n    </ion-item>\n  </rx-virtual-scroll-viewport>\n</ion-list>\n\n<ion-modal #modal [trigger]=\"id\">\n  <ng-template>\n    <ion-header>\n      <ion-toolbar>\n        <ion-title class=\"text-center\">Select Responses</ion-title>\n        <ion-buttons slot=\"end\">\n          <ion-button (click)=\"modal.dismiss(); saved.next()\">\n            <ion-icon name=\"close-outline\" slot=\"icon-only\" />\n          </ion-button>\n        </ion-buttons>\n      </ion-toolbar>\n      <ion-toolbar>\n        <ion-searchbar\n          [(ngModel)]=\"searchValue\"\n          debounce=\"300\"\n          placeholder=\"Search\" />\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content>\n      <ion-list class=\"h-full\">\n        <rx-virtual-scroll-viewport [itemSize]=\"50\">\n          <checkbox-question\n            *rxVirtualFor=\"let question of section.Questions\n              | fuse: {\n                search: searchValue,\n                keys: ['QuestionText']\n              }\"\n            class=\"w-full\"\n            [question]=\"question\" />\n        </rx-virtual-scroll-viewport>\n      </ion-list>\n    </ion-content>\n  </ng-template>\n</ion-modal>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 81,
                    "type": "Section",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "id",
                    "defaultValue": "crypto.randomUUID()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 78
                },
                {
                    "name": "listHeight",
                    "defaultValue": "this.selectedQuestions(questions => (questions.length * 50) + \"px\")",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 89
                },
                {
                    "name": "questions",
                    "defaultValue": "using(this.afterViewInit(), this.saved())\r\n    .calculate(() => this.section.Questions)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 83
                },
                {
                    "name": "saved",
                    "defaultValue": "use()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 82
                },
                {
                    "name": "searchValue",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 86
                },
                {
                    "name": "selectedQuestions",
                    "defaultValue": "this.questions(questions => questions.filter(q => q.YesNoNA))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 88
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { importRxTemplate, importRxVirtualScroll } from \"src/app/shared/imports\";\r\nimport { CheckboxComponent } from \"../../question-types/01-checkbox/checkbox.component\";\r\nimport { FusePipe } from \"src/app/shared/pipes\";\r\nimport { Section } from \"src/app/core/stores/site-document/models\";\r\nimport { FixedSizeVirtualScrollStrategy } from \"@rx-angular/template/experimental/virtual-scrolling\";\r\nimport { use, using } from \"src/app/shared/rxjs\";\r\nimport { AngularComponent, withAfterViewInit } from \"src/app/shared/lifecycles\";\r\n\r\n@Component({\r\n  selector: \"multi-checkbox-section\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item [id]=\"id\" detail=\"false\" button>\r\n        <ion-label>{{ section.TableTitles[0] }}</ion-label>\r\n        <ion-icon name=\"create-outline\" slot=\"end\"></ion-icon>\r\n      </ion-item>\r\n    </ion-list>\r\n\r\n    <ion-list class=\"max-h-96\" [style.height]=\"listHeight() | push\">\r\n      <rx-virtual-scroll-viewport [itemSize]=\"50\">\r\n        <ion-item *rxVirtualFor=\"let question of selectedQuestions()\" class=\"w-full\">\r\n          {{ question.QuestionText }}\r\n        </ion-item>\r\n      </rx-virtual-scroll-viewport>\r\n    </ion-list>\r\n\r\n    <ion-modal #modal [trigger]=\"id\">\r\n      <ng-template>\r\n        <ion-header>\r\n          <ion-toolbar>\r\n            <ion-title class=\"text-center\">Select Responses</ion-title>\r\n            <ion-buttons slot=\"end\">\r\n              <ion-button (click)=\"modal.dismiss(); saved.next()\">\r\n                <ion-icon name=\"close-outline\" slot=\"icon-only\" />\r\n              </ion-button>\r\n            </ion-buttons>\r\n          </ion-toolbar>\r\n          <ion-toolbar>\r\n            <ion-searchbar \r\n              [(ngModel)]=\"searchValue\"\r\n              debounce=\"300\" \r\n              placeholder=\"Search\" />\r\n          </ion-toolbar>\r\n        </ion-header>\r\n\r\n        <ion-content>\r\n          <ion-list class=\"h-full\">\r\n            <rx-virtual-scroll-viewport [itemSize]=\"50\">\r\n              <checkbox-question \r\n                *rxVirtualFor=\"let question of section.Questions\r\n                  | fuse: {\r\n                    search: searchValue,\r\n                    keys: ['QuestionText']\r\n                  }\" \r\n                class=\"w-full\"\r\n                [question]=\"question\" />\r\n            </rx-virtual-scroll-viewport>\r\n          </ion-list>\r\n        </ion-content>\r\n      </ng-template>\r\n    </ion-modal>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    ...importRxVirtualScroll(FixedSizeVirtualScrollStrategy),\r\n    FormsModule,\r\n    CheckboxComponent,\r\n    FusePipe\r\n  ]\r\n})\r\nexport class MultiCheckboxSectionComponent extends AngularComponent(withAfterViewInit) {\r\n  id = crypto.randomUUID();\r\n\r\n  @Input({ required: true })\r\n  section!: Section;\r\n  saved = use();\r\n  questions = using(this.afterViewInit(), this.saved())\r\n    .calculate(() => this.section.Questions);\r\n\r\n  searchValue: string = \"\";\r\n\r\n  selectedQuestions = this.questions(questions => questions.filter(q => q.YesNoNA));\r\n  listHeight = this.selectedQuestions(questions => (questions.length * 50) + \"px\");\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "MultiSelectableComponent",
            "id": "component-MultiSelectableComponent-6302dde94fbc9c4bb2bcafeeddd5ae74466251ea608ee14ab92c8a5e9f05379e8fb6c267db6db50fd3251cad077aadee8abcd4cde31c196492f5e0587783f51a",
            "file": "src/app/shared/components/multi-selectable/multi-selectable.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "multi-selectable",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-item [id]=\"id\" detail=\"false\" button>\n  <ion-label [color]=\"values.length > 0 ? 'medium' : ''\" class=\"ion-text-wrap\">\n    <if [condition]=\"values.length === 0\">\n      <ion-label show color=\"medium\" class=\"ion-text-wrap\">{{ placeholder }}</ion-label>\n      <ion-label else>\n        <p *rxFor=\"let text of selectedTexts\">{{ text }}</p>\n      </ion-label>\n    </if>\n  </ion-label>\n  <ion-button *rxIf=\"canClear && values.length > 0\" (click)=\"$event.stopPropagation(); values = []; valuesChange.emit([])\" fill=\"clear\">\n    <ion-icon name=\"close-outline\" color=\"danger\" slot=\"icon-only\" />\n  </ion-button>\n  <ion-icon name=\"caret-down-outline\" slot=\"end\" />\n</ion-item>\n\n<ion-modal #modal [trigger]=\"id\">\n  <ng-template>\n    <ion-header>\n      <ion-toolbar>\n        <ion-buttons slot=\"start\">\n          <ion-button (click)=\"modal.dismiss()\" [unpatch] fill=\"clear\">\n            <ion-icon name=\"arrow-back-outline\" slot=\"icon-only\" />\n          </ion-button>\n        </ion-buttons>\n        <ion-title class=\"ion-text-center\">{{ title }}</ion-title>\n      </ion-toolbar>\n      <ion-toolbar>\n        <ion-searchbar [(ngModel)]=\"searchValue\" debounce=\"300\" placeholder=\"Search\" />\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content>\n      <ion-list class=\"h-full\">\n        <rx-virtual-scroll-viewport [itemSize]=\"50\">\n          <ion-item\n            *rxVirtualFor=\"let item of items | fuse: {\n              search: searchValue,\n              keys: itemText != null\n                ? [itemText]\n                : []\n            };\n            last as isLast\"\n            (click)=\"select(item)\"\n            [lines]=\"isLast ? 'none' : 'inset'\"\n            button>\n            <ion-label class=\"ion-text-wrap\">{{ itemText != null ? item[itemText] : item }}</ion-label>\n            <ion-icon\n              *rxIf=\"selectedValues.includes(itemVal != null ? item[itemVal].toString() : item.toString())\"\n              name=\"checkmark-outline\"\n              slot=\"end\" />\n          </ion-item>\n        </rx-virtual-scroll-viewport>\n      </ion-list>\n    </ion-content>\n  </ng-template>\n</ion-modal>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "canClear",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 115,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 88,
                    "type": "T[]",
                    "decorators": []
                },
                {
                    "name": "itemText",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 91,
                    "type": " | null",
                    "decorators": []
                },
                {
                    "name": "itemVal",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 94,
                    "type": " | null",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 82,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "searchValue",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 118,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 85,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "values",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 97,
                    "type": "T[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "valuesChange",
                    "defaultValue": "new EventEmitter<T[]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 112,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "id",
                    "defaultValue": "crypto.randomUUID()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 79
                }
            ],
            "methodsClass": [
                {
                    "name": "select",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 120,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { importRxFixedVirtualScroll, importRxTemplate } from \"../../imports\";\r\nimport { FusePipe } from \"../../pipes\";\r\nimport { IfComponent } from \"../if/if.component\";\r\n\r\n@Component({\r\n  selector: \"multi-selectable\",\r\n  template: `\r\n    <ion-item [id]=\"id\" detail=\"false\" button>\r\n      <ion-label [color]=\"values.length > 0 ? 'medium' : ''\" class=\"ion-text-wrap\">\r\n        <if [condition]=\"values.length === 0\">\r\n          <ion-label show color=\"medium\" class=\"ion-text-wrap\">{{ placeholder }}</ion-label>\r\n          <ion-label else>\r\n            <p *rxFor=\"let text of selectedTexts\">{{ text }}</p>\r\n          </ion-label>\r\n        </if>\r\n      </ion-label>\r\n      <ion-button *rxIf=\"canClear && values.length > 0\" (click)=\"$event.stopPropagation(); values = []; valuesChange.emit([])\" fill=\"clear\">\r\n        <ion-icon name=\"close-outline\" color=\"danger\" slot=\"icon-only\" />\r\n      </ion-button>\r\n      <ion-icon name=\"caret-down-outline\" slot=\"end\" />\r\n    </ion-item>\r\n\r\n    <ion-modal #modal [trigger]=\"id\">\r\n      <ng-template>\r\n        <ion-header>\r\n          <ion-toolbar>\r\n            <ion-buttons slot=\"start\">\r\n              <ion-button (click)=\"modal.dismiss()\" [unpatch] fill=\"clear\">\r\n                <ion-icon name=\"arrow-back-outline\" slot=\"icon-only\" />\r\n              </ion-button>\r\n            </ion-buttons>\r\n            <ion-title class=\"ion-text-center\">{{ title }}</ion-title>\r\n          </ion-toolbar>\r\n          <ion-toolbar>\r\n            <ion-searchbar [(ngModel)]=\"searchValue\" debounce=\"300\" placeholder=\"Search\" />\r\n          </ion-toolbar>\r\n        </ion-header>\r\n\r\n        <ion-content>\r\n          <ion-list class=\"h-full\">\r\n            <rx-virtual-scroll-viewport [itemSize]=\"50\">\r\n              <ion-item \r\n                *rxVirtualFor=\"let item of items | fuse: { \r\n                  search: searchValue,\r\n                  keys: itemText != null \r\n                    ? [itemText]\r\n                    : []\r\n                }; \r\n                last as isLast\" \r\n                (click)=\"select(item)\"\r\n                [lines]=\"isLast ? 'none' : 'inset'\" \r\n                button>\r\n                <ion-label class=\"ion-text-wrap\">{{ itemText != null ? item[itemText] : item }}</ion-label>\r\n                <ion-icon \r\n                  *rxIf=\"selectedValues.includes(itemVal != null ? item[itemVal].toString() : item.toString())\" \r\n                  name=\"checkmark-outline\" \r\n                  slot=\"end\" />\r\n              </ion-item>\r\n            </rx-virtual-scroll-viewport>\r\n          </ion-list>\r\n        </ion-content>\r\n      </ng-template>\r\n    </ion-modal>\r\n  `,\r\n  standalone: true,\r\n  imports: [\r\n    IonicModule,\r\n    IfComponent,\r\n    ...importRxTemplate(),\r\n    ...importRxFixedVirtualScroll(),\r\n    FormsModule,\r\n    FusePipe\r\n  ]\r\n})\r\nexport class MultiSelectableComponent<T extends { [key: string]: object } = {}> {\r\n  id = crypto.randomUUID();\r\n\r\n  @Input()\r\n  placeholder: string = \"\";\r\n\r\n  @Input()\r\n  title: string = \"\";\r\n\r\n  @Input()\r\n  items: T[] = [];\r\n  \r\n  @Input()\r\n  itemText: keyof T | null = null;\r\n\r\n  @Input()\r\n  itemVal: keyof T | null = null;\r\n\r\n  @Input()\r\n  values: T[] = [];\r\n\r\n  get selectedValues() {\r\n    return this.itemVal != null\r\n      ? this.values.map(val => val[this.itemVal as keyof T] + \"\")\r\n      : this.values.map(val => val + \"\");\r\n  }\r\n\r\n  get selectedTexts() {\r\n    return this.itemText != null\r\n      ? this.values.map(val => val[this.itemText as keyof T] + \"\")\r\n      : this.values.map(val => val + \"\");\r\n  }\r\n\r\n  @Output()\r\n  valuesChange = new EventEmitter<T[]>();\r\n\r\n  @Input()\r\n  canClear: boolean = true;\r\n\r\n  @Input()\r\n  searchValue: string = \"\";\r\n\r\n  select(item: T) {\r\n    const val = this.itemVal != null\r\n      ? item[this.itemVal as keyof T] + \"\"\r\n      : item + \"\";\r\n\r\n    this.values = this.selectedValues.includes(val)\r\n      ? this.values.filter(itemVal => this.itemVal != null \r\n        ? (itemVal[this.itemVal] + \"\") !== val\r\n        : (itemVal + \"\") !== val\r\n      )\r\n    : [...this.values, item];\r\n\r\n    this.valuesChange.emit(this.values);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "accessors": {
                "selectedValues": {
                    "name": "selectedValues",
                    "getSignature": {
                        "name": "selectedValues",
                        "type": "",
                        "returnType": "",
                        "line": 99
                    }
                },
                "selectedTexts": {
                    "name": "selectedTexts",
                    "getSignature": {
                        "name": "selectedTexts",
                        "type": "",
                        "returnType": "",
                        "line": 105
                    }
                }
            }
        },
        {
            "name": "NumberComponent",
            "id": "component-NumberComponent-5eb78d6009ffafe1141cd7006a18e36efacded00bd808a832fdb178759c9729b9bf23b2a08b47dc7a0384e8b3f9af93074f0f72c56860825ded867fc9d67427f",
            "file": "src/app/core/pages/document-builder/components/question-types/12-number/number.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "number-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n    <camera-capture *rxIf=\"question.CanHaveImg\" class=\"m-0\" slot=\"end\" />\n    <file-upload *rxIf=\"question.CanHaveFiles\" class=\"m-0\" slot=\"end\" />\n  </ion-item>\n\n  <ion-item>\n    <ion-input label=\"\" type=\"number\" [(ngModel)]=\"question.NumberVal\" />\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "validator",
                    "defaultValue": "useNumberValidator(() => this.question)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { useNumberValidator } from \"./validation/number.validator\";\r\n\r\n@Component({\r\n  selector: \"number-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n        <camera-capture *rxIf=\"question.CanHaveImg\" class=\"m-0\" slot=\"end\" />\r\n        <file-upload *rxIf=\"question.CanHaveFiles\" class=\"m-0\" slot=\"end\" />\r\n      </ion-item>\r\n\r\n      <ion-item>\r\n        <ion-input label=\"\" type=\"number\" [(ngModel)]=\"question.NumberVal\" />\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  standalone: true,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    FormsModule,\r\n    QuestionTextComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent\r\n  ]\r\n})\r\nexport class NumberComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n\r\n  validator = useNumberValidator(() => this.question);\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "NumberSummaryComponent",
            "id": "component-NumberSummaryComponent-abb18191cb52860848b3de246d029422d0c2da2f0e8df051ddc970295aff10c32b4f2c99cd3788fe3bf4296edf8c914fbf8412ce47b3e788ba637c1302b1f393",
            "file": "src/app/core/pages/document-builder/components/question-types/12-number/summary/number-summary.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "number-summary",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <ion-label>\n      <b>{{ question.QuestionText }}</b>\n      <p>{{ question.NumberVal }}</p>\n    </ion-label>\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\n\r\n@Component({\r\n  selector: \"number-summary\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <ion-label>\r\n          <b>{{ question.QuestionText }}</b>\r\n          <p>{{ question.NumberVal }}</p>\r\n        </ion-label>\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [IonicModule]\r\n})\r\nexport class NumberSummaryComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "OnlineAssetSearchComponent",
            "id": "component-OnlineAssetSearchComponent-e5f6ece2b07cbe1471aa225ade16e0a4b18acdd69dbefcc55146de694c3d91cd35f2b9bc4558f16f1a0523b7ee69f45b52b84a41c705d6619455fdfd4ce3e6e1",
            "file": "src/app/shared/modals/asset-list/components/online-asset-search/online-asset-search.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "online-asset-search",
            "styleUrls": [],
            "styles": [
                "\n    ion-list { height: calc(100% - 116px) }\n  "
            ],
            "template": "<ion-item lines=\"none\">\n  <ion-select [(ngModel)]=\"lookup\" label=\"Search Type\" labelPlacement=\"floating\" interface=\"popover\">\n    <ion-select-option value=\"Registration\">Registration</ion-select-option>\n    <ion-select-option value=\"Type and Group\">Type and Group</ion-select-option>\n  </ion-select>\n</ion-item>\n\n<if [condition]=\"lookup === 'Registration'\">\n  <ion-searchbar show [(ngModel)]=\"searchRegistration\" (keyup.enter)=\"findAssetsByReg.send()\" />\n\n  <ng-container else>\n    <selectable\n      placeholder=\"Group\"\n      title=\"Groups\"\n      [(value)]=\"groupId\"\n      [items]=\"assetGroups.data() | push\"\n      itemValue=\"GroupID\"\n      itemText=\"GroupName\" />\n\n    <selectable\n      placeholder=\"Type\"\n      title=\"Types\"\n      [(value)]=\"typeId\"\n      [items]=\"assetTypes.data() | push\"\n      itemValue=\"Id\"\n      itemText=\"Description\"\n      (itemChange)=\"$event != null\n        ? findAssetsByType.send({ typeId: $event.Id })\n        : null\" />\n  </ng-container>\n</if>\n\n<if [condition]=\"isLoading$ | push\">\n  <ion-list show>\n    <ion-item lines=\"none\">\n      <ion-skeleton-text [animated]=\"true\" />\n    </ion-item>\n    <ion-item lines=\"none\">\n      <ion-skeleton-text [animated]=\"true\" />\n    </ion-item>\n    <ion-item lines=\"none\">\n      <ion-skeleton-text [animated]=\"true\" />\n    </ion-item>\n    <ion-item lines=\"none\">\n      <ion-skeleton-text [animated]=\"true\" />\n    </ion-item>\n  </ion-list>\n\n  <ion-list else>\n    <rx-virtual-scroll-viewport [itemSize]=\"50\">\n      <ion-item\n        *rxVirtualFor=\"let asset of foundAssets$\"\n        (click)=\"add(asset); select.emit(asset);\"\n        class=\"w-full\"\n        button>\n        {{ asset.Id }} - {{ asset.Registration }}\n      </ion-item>\n    </rx-virtual-scroll-viewport>\n  </ion-list>\n</if>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "select",
                    "defaultValue": "new EventEmitter<Asset>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 123,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "assetGroups",
                    "defaultValue": "useAssetGroups()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 95
                },
                {
                    "name": "assetStore",
                    "defaultValue": "useAssetStore()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 93
                },
                {
                    "name": "assetTypes",
                    "defaultValue": "useAssetTypes()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 96
                },
                {
                    "name": "findAssetsByReg",
                    "defaultValue": "useFetchAssetsByRegistration(() => ({\r\n    searchString: this.searchRegistration,\r\n    siteId: this.siteId\r\n  }))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 102
                },
                {
                    "name": "findAssetsByType",
                    "defaultValue": "useFetchAssetsByType(() => ({\r\n    siteId: this.siteId\r\n  }))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 109
                },
                {
                    "name": "foundAssets$",
                    "defaultValue": "merge(\r\n    this.findAssetsByReg.data(), \r\n    this.findAssetsByType.data()\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 117
                },
                {
                    "name": "groupId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Nullable<string>",
                    "optional": false,
                    "description": "",
                    "line": 107
                },
                {
                    "name": "isLoading$",
                    "defaultValue": "merge(\r\n    this.findAssetsByReg.isLoading(), \r\n    this.findAssetsByType.isLoading()\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 113
                },
                {
                    "name": "lookup",
                    "defaultValue": "\"Registration\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"Registration\" | \"Type and Group\"",
                    "optional": false,
                    "description": "",
                    "line": 99
                },
                {
                    "name": "searchRegistration",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 101
                },
                {
                    "name": "siteId",
                    "defaultValue": "param(\"siteId\")?.toNumber()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 98
                },
                {
                    "name": "typeId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Nullable<number>",
                    "optional": false,
                    "description": "",
                    "line": 108
                }
            ],
            "methodsClass": [
                {
                    "name": "add",
                    "args": [
                        {
                            "name": "asset",
                            "type": "Asset",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 125,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "asset",
                            "type": "Asset",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Output } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { addEntities } from \"@ngneat/elf-entities\";\r\nimport { merge } from \"rxjs\";\r\nimport { useAssetGroups, useAssetTypes, useFetchAssetsByRegistration, useFetchAssetsByType } from \"src/app/core/http/asset.api\";\r\nimport { Asset, useAssetStore } from \"src/app/core/stores/asset/asset.store\";\r\nimport { IfComponent, SelectableComponent } from \"src/app/shared/components\";\r\nimport { importRxFixedVirtualScroll, importRxTemplate } from \"src/app/shared/imports\";\r\nimport { FusePipe } from \"src/app/shared/pipes\";\r\nimport { param } from \"src/app/shared/route\";\r\n\r\n@Component({\r\n  selector: \"online-asset-search\",\r\n  styles: [`\r\n    ion-list { height: calc(100% - 116px) }\r\n  `],\r\n  template: `\r\n    <ion-item lines=\"none\">\r\n      <ion-select [(ngModel)]=\"lookup\" label=\"Search Type\" labelPlacement=\"floating\" interface=\"popover\">\r\n        <ion-select-option value=\"Registration\">Registration</ion-select-option>\r\n        <ion-select-option value=\"Type and Group\">Type and Group</ion-select-option>\r\n      </ion-select>\r\n    </ion-item>\r\n\r\n    <if [condition]=\"lookup === 'Registration'\">\r\n      <ion-searchbar show [(ngModel)]=\"searchRegistration\" (keyup.enter)=\"findAssetsByReg.send()\" />\r\n\r\n      <ng-container else>\r\n        <selectable \r\n          placeholder=\"Group\"\r\n          title=\"Groups\"\r\n          [(value)]=\"groupId\"\r\n          [items]=\"assetGroups.data() | push\"\r\n          itemValue=\"GroupID\"\r\n          itemText=\"GroupName\" />\r\n          \r\n        <selectable \r\n          placeholder=\"Type\"\r\n          title=\"Types\"\r\n          [(value)]=\"typeId\"\r\n          [items]=\"assetTypes.data() | push\"\r\n          itemValue=\"Id\" \r\n          itemText=\"Description\" \r\n          (itemChange)=\"$event != null \r\n            ? findAssetsByType.send({ typeId: $event.Id }) \r\n            : null\" />\r\n      </ng-container>\r\n    </if>\r\n\r\n    <if [condition]=\"isLoading$ | push\">\r\n      <ion-list show>\r\n        <ion-item lines=\"none\">\r\n          <ion-skeleton-text [animated]=\"true\" />\r\n        </ion-item>\r\n        <ion-item lines=\"none\">\r\n          <ion-skeleton-text [animated]=\"true\" />\r\n        </ion-item>\r\n        <ion-item lines=\"none\">\r\n          <ion-skeleton-text [animated]=\"true\" />\r\n        </ion-item>\r\n        <ion-item lines=\"none\">\r\n          <ion-skeleton-text [animated]=\"true\" />\r\n        </ion-item>\r\n      </ion-list>\r\n\r\n      <ion-list else>\r\n        <rx-virtual-scroll-viewport [itemSize]=\"50\">\r\n          <ion-item \r\n            *rxVirtualFor=\"let asset of foundAssets$\"\r\n            (click)=\"add(asset); select.emit(asset);\"\r\n            class=\"w-full\" \r\n            button>\r\n            {{ asset.Id }} - {{ asset.Registration }}\r\n          </ion-item>\r\n        </rx-virtual-scroll-viewport>\r\n      </ion-list>\r\n    </if>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    ...importRxFixedVirtualScroll(),\r\n    FormsModule,\r\n    IfComponent,\r\n    SelectableComponent,\r\n    FusePipe\r\n  ]\r\n})\r\nexport class OnlineAssetSearchComponent {\r\n  assetStore = useAssetStore();\r\n\r\n  assetGroups = useAssetGroups();\r\n  assetTypes = useAssetTypes();\r\n\r\n  siteId = param(\"siteId\")?.toNumber();\r\n  lookup: \"Registration\" | \"Type and Group\" = \"Registration\";\r\n  \r\n  searchRegistration: string = \"\";\r\n  findAssetsByReg = useFetchAssetsByRegistration(() => ({\r\n    searchString: this.searchRegistration,\r\n    siteId: this.siteId\r\n  }));\r\n\r\n  groupId: Nullable<string>;\r\n  typeId: Nullable<number>;\r\n  findAssetsByType = useFetchAssetsByType(() => ({\r\n    siteId: this.siteId\r\n  }));\r\n\r\n  isLoading$ = merge(\r\n    this.findAssetsByReg.isLoading(), \r\n    this.findAssetsByType.isLoading()\r\n  );\r\n  foundAssets$ = merge(\r\n    this.findAssetsByReg.data(), \r\n    this.findAssetsByType.data()\r\n  );\r\n\r\n  @Output()\r\n  select = new EventEmitter<Asset>();\r\n\r\n  add(asset: Asset) {\r\n    this.assetStore.update(\r\n      addEntities(asset)\r\n    );\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n    ion-list { height: calc(100% - 116px) }\n  \n"
        },
        {
            "name": "OnlineOperativeSearchComponent",
            "id": "component-OnlineOperativeSearchComponent-8dd96b57faeb1eaf872d2336492651fd4d02dbf71cbf9215353ad66521eab858024a1ea0bdafd57e9d48e713c546029b62ddc002623f5e59ddff032727196310",
            "file": "src/app/shared/modals/operative-list/components/online-operative-search/online-operative-search.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "online-operative-search",
            "styleUrls": [],
            "styles": [
                "\n    ion-list { height: calc(100% - 58px); }\n  "
            ],
            "template": "<ion-searchbar [(ngModel)]=\"searchName\" (keyup.enter)=\"operativeSearch.send()\" />\n\n<if [condition]=\"operativeSearch.isLoading() | push\">\n  <ion-list show>\n    <ion-item lines=\"none\">\n      <ion-skeleton-text [animated]=\"true\" />\n    </ion-item>\n    <ion-item lines=\"none\">\n      <ion-skeleton-text [animated]=\"true\" />\n    </ion-item>\n    <ion-item lines=\"none\">\n      <ion-skeleton-text [animated]=\"true\" />\n    </ion-item>\n    <ion-item lines=\"none\">\n      <ion-skeleton-text [animated]=\"true\" />\n    </ion-item>\n  </ion-list>\n\n  <ion-list else>\n    <rx-virtual-scroll-viewport [itemSize]=\"50\">\n      <ion-item\n        *rxVirtualFor=\"let op of operativeSearch.data(); last as isLast\"\n        class=\"w-full\"\n        (click)=\"add(op)\"\n        [lines]=\"isLast ? 'none' : 'inset'\"\n        button>\n        {{ op.ID }} - {{ op.Name }}\n      </ion-item>\n    </rx-virtual-scroll-viewport>\n  </ion-list>\n</if>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "noAppLimit",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "select",
                    "defaultValue": "new EventEmitter<Operative>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "operativeApi",
                    "defaultValue": "useOperativeApi()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "operativeSearch",
                    "defaultValue": "useFetchOperativesByName(() => ({\r\n    search: this.searchName,\r\n    noAppLimit: this.noAppLimit,\r\n    siteId: this.siteId\r\n  }))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 73
                },
                {
                    "name": "operativeStore",
                    "defaultValue": "useOperativeStore()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "searchName",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 71
                },
                {
                    "name": "siteId",
                    "defaultValue": "param(\"siteId\")?.toNumber()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 70
                }
            ],
            "methodsClass": [
                {
                    "name": "add",
                    "args": [
                        {
                            "name": "operative",
                            "type": "OperativeSearchResult",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 79,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "operative",
                            "type": "OperativeSearchResult",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { importRxTemplate, importRxFixedVirtualScroll } from \"src/app/shared/imports\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { IfComponent } from \"src/app/shared/components\";\r\nimport { useOperativeApi } from \"src/app/core/http\";\r\nimport { param } from \"src/app/shared/route\";\r\nimport { OperativeSearchResult, useFetchOperativesByName } from \"src/app/core/http/operative.api\";\r\nimport { Operative, useOperativeStore } from \"src/app/core/stores/operative/operatives.store\";\r\nimport { addEntities } from \"@ngneat/elf-entities\";\r\n\r\n@Component({\r\n  selector: \"online-operative-search\",\r\n  styles: [`\r\n    ion-list { height: calc(100% - 58px); }\r\n  `],\r\n  template: `\r\n    <ion-searchbar [(ngModel)]=\"searchName\" (keyup.enter)=\"operativeSearch.send()\" />\r\n\r\n    <if [condition]=\"operativeSearch.isLoading() | push\">\r\n      <ion-list show>\r\n        <ion-item lines=\"none\">\r\n          <ion-skeleton-text [animated]=\"true\" />\r\n        </ion-item>\r\n        <ion-item lines=\"none\">\r\n          <ion-skeleton-text [animated]=\"true\" />\r\n        </ion-item>\r\n        <ion-item lines=\"none\">\r\n          <ion-skeleton-text [animated]=\"true\" />\r\n        </ion-item>\r\n        <ion-item lines=\"none\">\r\n          <ion-skeleton-text [animated]=\"true\" />\r\n        </ion-item>\r\n      </ion-list>\r\n\r\n      <ion-list else>\r\n        <rx-virtual-scroll-viewport [itemSize]=\"50\">\r\n          <ion-item \r\n            *rxVirtualFor=\"let op of operativeSearch.data(); last as isLast\"\r\n            class=\"w-full\"\r\n            (click)=\"add(op)\"\r\n            [lines]=\"isLast ? 'none' : 'inset'\"\r\n            button>\r\n            {{ op.ID }} - {{ op.Name }}\r\n          </ion-item>\r\n        </rx-virtual-scroll-viewport>\r\n      </ion-list>\r\n    </if>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    ...importRxFixedVirtualScroll(),\r\n    FormsModule,\r\n    IfComponent\r\n  ]\r\n})\r\nexport class OnlineOperativeSearchComponent {\r\n  operativeStore = useOperativeStore();\r\n  operativeApi = useOperativeApi();\r\n\r\n  @Input()\r\n  noAppLimit: boolean = true;\r\n\r\n  @Output()\r\n  select = new EventEmitter<Operative>();\r\n\r\n  siteId = param(\"siteId\")?.toNumber();\r\n  searchName: string = \"\";\r\n  \r\n  operativeSearch = useFetchOperativesByName(() => ({\r\n    search: this.searchName,\r\n    noAppLimit: this.noAppLimit,\r\n    siteId: this.siteId\r\n  }));\r\n\r\n  add(operative: OperativeSearchResult) {\r\n    this.operativeStore.update(\r\n      addEntities({\r\n        ID: operative.ID,\r\n        Name: operative.Name\r\n      })\r\n    );\r\n\r\n    this.select.emit(operative);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n    ion-list { height: calc(100% - 58px); }\n  \n"
        },
        {
            "name": "OperativeListComponent",
            "id": "component-OperativeListComponent-866e72318e8789021574472eb13444d1631ca087b7fc3d818e1a8c1407b67ad858d4db60665dba919a1c747b7bda2f6a2211b32b9e405e1784e9b70bea01bdf1",
            "file": "src/app/core/pages/document-builder/components/question-types/10-operative-list/operative-list.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "operative-list-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text>{{ question.QuestionText }}</question-text>\n    <ion-button *rxIf=\"isMobileApp\" fill=\"clear\" slot=\"end\">\n      <ion-icon name=\"scan-outline\" slot=\"icon-only\" />\n    </ion-button>\n    <ion-button [id]=\"id\" fill=\"clear\" color=\"secondary\" slot=\"end\">\n      <operative-list-modal [trigger]=\"id\" />\n      <ion-icon name=\"search-outline\" slot=\"icon-only\" />\n    </ion-button>\n  </ion-item>\n</ion-list>\n\n<ion-list>\n  <ion-item-sliding *rxFor=\"let operative of question.Operatives; last as isLast\">\n    <ion-item [lines]=\"isLast ? 'none' : 'inset'\">\n      {{ operative.AttendeeID }}: {{ operative.Name }}\n    </ion-item>\n\n    <ion-item-options side=\"end\">\n      <ion-item-option color=\"danger\" (click)=\"remove(operative.AttendeeID)\">\n        <ion-icon name=\"trash-outline\" slot=\"icon-only\" />\n      </ion-item-option>\n    </ion-item-options>\n  </ion-item-sliding>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 57,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "id",
                    "defaultValue": "crypto.randomUUID()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "isMobileApp",
                    "defaultValue": "isMobileApp()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "validator",
                    "defaultValue": "useOperativeValidator(() => this.question)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 59
                }
            ],
            "methodsClass": [
                {
                    "name": "remove",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "select",
                    "args": [
                        {
                            "name": "operative",
                            "type": "Operative",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "operative",
                            "type": "Operative",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { BarcodeScannerDirective } from \"src/app/shared/directives\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { isMobileApp } from \"src/app/shared/plugins/platform.plugin\";\r\nimport { QuestionTextComponent } from \"../extras\";\r\nimport { OperativeListModal } from \"src/app/shared/modals/operative-list/operative-list.modal\";\r\nimport { Operative } from \"src/app/core/stores/operative/operatives.store\";\r\nimport { useOperativeValidator } from \"./validation/operative-list.validator\";\r\n\r\n@Component({\r\n  selector: \"operative-list-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text>{{ question.QuestionText }}</question-text>\r\n        <ion-button *rxIf=\"isMobileApp\" fill=\"clear\" slot=\"end\">\r\n          <ion-icon name=\"scan-outline\" slot=\"icon-only\" />\r\n        </ion-button>\r\n        <ion-button [id]=\"id\" fill=\"clear\" color=\"secondary\" slot=\"end\">\r\n          <operative-list-modal [trigger]=\"id\" />\r\n          <ion-icon name=\"search-outline\" slot=\"icon-only\" />\r\n        </ion-button>\r\n      </ion-item>\r\n    </ion-list>\r\n\r\n    <ion-list>\r\n      <ion-item-sliding *rxFor=\"let operative of question.Operatives; last as isLast\">\r\n        <ion-item [lines]=\"isLast ? 'none' : 'inset'\">\r\n          {{ operative.AttendeeID }}: {{ operative.Name }}\r\n        </ion-item>\r\n\r\n        <ion-item-options side=\"end\">\r\n          <ion-item-option color=\"danger\" (click)=\"remove(operative.AttendeeID)\">\r\n            <ion-icon name=\"trash-outline\" slot=\"icon-only\" />\r\n          </ion-item-option>\r\n        </ion-item-options>\r\n      </ion-item-sliding>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule, \r\n    ...importRxTemplate(),\r\n    OperativeListModal,\r\n    BarcodeScannerDirective,\r\n    QuestionTextComponent\r\n  ]\r\n})\r\nexport class OperativeListComponent {\r\n  id = crypto.randomUUID();\r\n  isMobileApp = isMobileApp();\r\n\r\n  @Input({ required: true })\r\n  question!: Question;  \r\n\r\n  validator = useOperativeValidator(() => this.question);\r\n\r\n  select(operative: Operative) {\r\n    if (this.question.Operatives.find(o => o.AttendeeID === operative.ID) == null)\r\n      this.question.Operatives.push({\r\n        AttendeeID: operative.ID,\r\n        DateAttended: new Date(),\r\n        Name: operative.Name\r\n      });\r\n  }\r\n\r\n  remove(id: number) {\r\n    this.question.Operatives = this.question.Operatives.filter(o => o.AttendeeID !== id);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "OperativeListModal",
            "id": "component-OperativeListModal-c0b351f9c75a3b54d1313f76d544dc3bedca0836d858a32b56dc014000e83a70d433b12196604942e5d28ed767d3ff400e00f1a5bb94561e624bb86711256af3",
            "file": "src/app/shared/modals/operative-list/operative-list.modal.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "operative-list-modal",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-modal #modal [trigger]=\"trigger\" [isOpen]=\"isOpen\">\n  <ng-template>\n    <ion-header>\n      <ion-toolbar>\n        <ion-title class=\"ion-text-center\">Select an Operative</ion-title>\n        <ion-buttons slot=\"end\">\n          <ion-button (click)=\"modal.dismiss()\">\n            <ion-icon name=\"close-outline\" slot=\"icon-only\" />\n          </ion-button>\n        </ion-buttons>\n      </ion-toolbar>\n\n      <ion-toolbar>\n        <ion-segment [(ngModel)]=\"segment\" class=\"w-full\">\n          <ion-segment-button value=\"local\">\n            <ion-icon name=\"phone-portrait-outline\" />\n          </ion-segment-button>\n          <ion-segment-button value=\"online\">\n            <ion-icon name=\"wifi-outline\" />\n          </ion-segment-button>\n        </ion-segment>\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content [ngSwitch]=\"segment\" class=\"ion-padding\">\n      <local-operative-search\n        *ngSwitchCase=\"'local'\"\n        [hideMyself]=\"hideMyself\"\n        (select)=\"select.emit($event); modal.dismiss();\" />\n      <online-operative-search\n        *ngSwitchCase=\"'online'\"\n        (select)=\"select.emit($event); modal.dismiss();\" />\n    </ion-content>\n  </ng-template>\n</ion-modal>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "hideMyself",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "select",
                    "defaultValue": "new EventEmitter<Operative>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 70,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "isOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "segment",
                    "defaultValue": "\"local\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"local\" | \"online\"",
                    "optional": false,
                    "description": "",
                    "line": 67
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { importNgSwitch, importRxTemplate } from \"../../imports\";\r\nimport { LocalOperativeSearchComponent, OnlineOperativeSearchComponent } from \"./components\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { Operative } from \"src/app/core/stores/operative/operatives.store\";\r\n\r\n@Component({\r\n  selector: \"operative-list-modal\",\r\n  template: `\r\n    <ion-modal #modal [trigger]=\"trigger\" [isOpen]=\"isOpen\">\r\n      <ng-template>\r\n        <ion-header>\r\n          <ion-toolbar>\r\n            <ion-title class=\"ion-text-center\">Select an Operative</ion-title>\r\n            <ion-buttons slot=\"end\">\r\n              <ion-button (click)=\"modal.dismiss()\">\r\n                <ion-icon name=\"close-outline\" slot=\"icon-only\" />\r\n              </ion-button>\r\n            </ion-buttons>\r\n          </ion-toolbar>\r\n\r\n          <ion-toolbar>\r\n            <ion-segment [(ngModel)]=\"segment\" class=\"w-full\">\r\n              <ion-segment-button value=\"local\">\r\n                <ion-icon name=\"phone-portrait-outline\" />\r\n              </ion-segment-button>\r\n              <ion-segment-button value=\"online\">\r\n                <ion-icon name=\"wifi-outline\" />\r\n              </ion-segment-button>\r\n            </ion-segment>\r\n          </ion-toolbar>\r\n        </ion-header>\r\n      \r\n        <ion-content [ngSwitch]=\"segment\" class=\"ion-padding\">\r\n          <local-operative-search \r\n            *ngSwitchCase=\"'local'\" \r\n            [hideMyself]=\"hideMyself\" \r\n            (select)=\"select.emit($event); modal.dismiss();\" />\r\n          <online-operative-search \r\n            *ngSwitchCase=\"'online'\"\r\n            (select)=\"select.emit($event); modal.dismiss();\" />\r\n        </ion-content>\r\n      </ng-template>\r\n    </ion-modal>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    FormsModule,\r\n    ...importRxTemplate(),\r\n    ...importNgSwitch(),\r\n    LocalOperativeSearchComponent,\r\n    OnlineOperativeSearchComponent\r\n  ]\r\n})\r\nexport class OperativeListModal {\r\n  @Input({ required: true })\r\n  trigger!: string;\r\n  \r\n  isOpen: boolean = false;\r\n\r\n  @Input()\r\n  hideMyself: boolean = false;\r\n\r\n  segment: \"local\" | \"online\" = \"local\"\r\n\r\n  @Output()\r\n  select = new EventEmitter<Operative>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "OperativeListSummaryComponent",
            "id": "component-OperativeListSummaryComponent-61e97f6fc1775976c642e05001f1607a8573fceca40ef4f39feab8301d2bbd8b8f398a3e578e5296fde00c241ef8a092912497bc637b32066eafc431a4b16c84",
            "file": "src/app/core/pages/document-builder/components/question-types/10-operative-list/summary/operative-list-summary.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "operative-list-summary",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <ion-label class=\"font-bold\">{{ question.QuestionText }}</ion-label>\n  </ion-item>\n  <ion-item *rxFor=\"let op of question.Operatives\" lines=\"none\">\n    {{ op.AttendeeID }} - {{ op.Name }}\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\n\r\n@Component({\r\n  selector: \"operative-list-summary\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <ion-label class=\"font-bold\">{{ question.QuestionText }}</ion-label>\r\n      </ion-item>\r\n      <ion-item *rxFor=\"let op of question.Operatives\" lines=\"none\">\r\n        {{ op.AttendeeID }} - {{ op.Name }}\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [IonicModule, ...importRxTemplate()]\r\n})\r\nexport class OperativeListSummaryComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "PhotoViewerComponent",
            "id": "component-PhotoViewerComponent-30494dccfe64ae3a3d25877bbc341320a63f1760aef31783aeef01903d6ef0cab40c96a4f6bdf4f536e99fbc2f7534b6b60f4c7ad851bac0f173828227d2e185",
            "file": "src/app/shared/directives/photo-viewer/photo-viewer.directive.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "photo-viewer",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-header>\n  <ion-toolbar>\n    <ion-buttons slot=\"primary\">\n      <ion-button (click)=\"close()\">\n        <ion-icon slot=\"icon-only\" name=\"close\" />\n      </ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"ion-padding\">\n  <swiper-container>\n    <swiper-slide>\n      <img class=\"\n        max-w-full\n        max-h-full\n        absolute\n        top-1/2\n        left-1/2\n        -translate-x-1/2\n        -translate-y-1/2\n        p-4\"\n        [src]=\"src\" />\n    </swiper-slide>\n  </swiper-container>\n</ion-content>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "modalCtrl",
                    "defaultValue": "inject(ModalController)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                }
            ],
            "methodsClass": [
                {
                    "name": "close",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CUSTOM_ELEMENTS_SCHEMA, ChangeDetectionStrategy, Component, Directive, HostListener, Input, inject } from \"@angular/core\";\r\nimport { IonicModule, ModalController } from \"@ionic/angular\";\r\n\r\n@Component({\r\n  selector: \"photo-viewer\",\r\n  template: `\r\n    <ion-header>\r\n      <ion-toolbar>\r\n        <ion-buttons slot=\"primary\">\r\n          <ion-button (click)=\"close()\">\r\n            <ion-icon slot=\"icon-only\" name=\"close\" />\r\n          </ion-button>\r\n        </ion-buttons>\r\n      </ion-toolbar>\r\n    </ion-header>\r\n\r\n    <ion-content class=\"ion-padding\">\r\n      <swiper-container>\r\n        <swiper-slide>\r\n          <img class=\"\r\n            max-w-full \r\n            max-h-full \r\n            absolute \r\n            top-1/2 \r\n            left-1/2 \r\n            -translate-x-1/2 \r\n            -translate-y-1/2\r\n            p-4\" \r\n            [src]=\"src\" />\r\n        </swiper-slide>\r\n      </swiper-container>\r\n    </ion-content>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n  imports: [IonicModule]\r\n})\r\nclass PhotoViewerComponent {\r\n  modalCtrl = inject(ModalController);\r\n\r\n  @Input({ required: true })\r\n  src!: string;\r\n\r\n  close() {\r\n    this.modalCtrl.dismiss();\r\n  }\r\n}\r\n\r\n@Directive({\r\n  selector: \"[src]\",\r\n  standalone: true\r\n})\r\nexport class PhotoViewerDirective {\r\n  modalCtrl = inject(ModalController);\r\n\r\n  @Input()\r\n  src!: string;\r\n\r\n  @HostListener(\"click\")\r\n  async view() {\r\n    const modal = await this.modalCtrl.create({\r\n      component: PhotoViewerComponent,\r\n      componentProps: {\r\n        src: this.src\r\n      }\r\n    });\r\n\r\n    modal.present();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "PreambleComponent",
            "id": "component-PreambleComponent-171b2b4ea1de28a5ebd2ead96848c1fdcd19ef01014cd82d7540d019fdfea329bdd60c8962e504c0a15820cd3d4f3d4d520ec3f14d396f138ea24702b8844642",
            "file": "src/app/core/pages/document-builder/components/info-types/preamble/preamble.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "preamble",
            "styleUrls": [],
            "styles": [],
            "template": "<p *rxIf=\"subtitle.length > 0\" class=\"text-center font-bold text-xl mb-2\">{{ subtitle }}</p>\n<p *rxIf=\"text.length > 0\" class=\"text-center font-bold whitespace-pre-line\">{{ text }}</p>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "subtitle",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "text",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\n\r\n@Component({\r\n  selector: \"preamble\",\r\n  template: `\r\n    <p *rxIf=\"subtitle.length > 0\" class=\"text-center font-bold text-xl mb-2\">{{ subtitle }}</p>\r\n    <p *rxIf=\"text.length > 0\" class=\"text-center font-bold whitespace-pre-line\">{{ text }}</p>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [...importRxTemplate()]\r\n})\r\nexport class PreambleComponent {\r\n  @Input()\r\n  subtitle: string = \"\";\r\n\r\n  @Input()\r\n  text: string = \"\";\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ProjectSelectComponent",
            "id": "component-ProjectSelectComponent-66a2995106ebc3b4c2dbbd07c28b6e12f841ec3032a1442733e200d90c2b33cdeea24131f77c155982b3a7631d1b27e8e01792980bb8c8b09280a7a61853daee",
            "file": "src/app/core/pages/document-builder/components/question-types/27-project-select/project-select.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "project-select",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n    <camera-capture *rxIf=\"question.CanHaveImg\" class=\"m-0\" slot=\"end\" />\n    <file-upload *rxIf=\"question.CanHaveFiles\" class=\"m-0\" slot=\"end\" />\n  </ion-item>\n\n  <selectable\n    placeholder=\"Select\"\n    [title]=\"question.QuestionText\"\n    [items]=\"projects.data()\n      | push\n      | toStringValues\"\n    itemValue=\"ID\"\n    itemText=\"Name\"\n    [(value)]=\"question.OptionVal\"\n    (itemChange)=\"question.SelectedOptionText = $event?.Name\"\n    [canClear]=\"!question.Required\" />\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "projects",
                    "defaultValue": "useProjects(this.siteId)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "siteId",
                    "defaultValue": "param(\"siteId\")?.toNumber()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "validator",
                    "defaultValue": "useSelectValidator(() => this.question)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 51
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\nimport { IfComponent, SelectableComponent } from \"src/app/shared/components\";\r\nimport { param } from \"src/app/shared/route\";\r\nimport { useProjects } from \"src/app/core/http/collab-plan.api\";\r\nimport { ToStringValuesPipe } from \"src/app/shared/pipes\";\r\nimport { useSelectValidator } from \"../05-select/validation/select.validator\";\r\n\r\n@Component({\r\n  selector: \"project-select\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n        <camera-capture *rxIf=\"question.CanHaveImg\" class=\"m-0\" slot=\"end\" />\r\n        <file-upload *rxIf=\"question.CanHaveFiles\" class=\"m-0\" slot=\"end\" />\r\n      </ion-item>\r\n\r\n      <selectable\r\n        placeholder=\"Select\"\r\n        [title]=\"question.QuestionText\"\r\n        [items]=\"projects.data() \r\n          | push \r\n          | toStringValues\"\r\n        itemValue=\"ID\"\r\n        itemText=\"Name\"\r\n        [(value)]=\"question.OptionVal\"\r\n        (itemChange)=\"question.SelectedOptionText = $event?.Name\"\r\n        [canClear]=\"!question.Required\" />\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    QuestionTextComponent,\r\n    SelectableComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent,\r\n    IfComponent,\r\n    ToStringValuesPipe\r\n  ]\r\n})\r\nexport class ProjectSelectComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n  validator = useSelectValidator(() => this.question);\r\n\r\n  siteId = param(\"siteId\")?.toNumber();\r\n  projects = useProjects(this.siteId);\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "QuestionTextComponent",
            "id": "component-QuestionTextComponent-efba3a76ed75b15a5f1a29d14085f495ba7c23b0d69572524ed799486cb10a6a9c8213a644994acae4cf84059b086a2211c9fbc6be4607a1f7122915094e5164",
            "file": "src/app/core/pages/document-builder/components/question-types/extras/question-text/question-text.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "question-text",
            "styleUrls": [],
            "styles": [],
            "template": "<p class=\"ion-text-wrap\">\n  <ng-content></ng-content>\n  <span *rxIf=\"required\" class=\"text-red-500\">*</span>\n</p>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\n\r\n@Component({\r\n  selector: \"question-text\",\r\n  template: `\r\n    <p class=\"ion-text-wrap\">\r\n      <ng-content></ng-content>\r\n      <span *rxIf=\"required\" class=\"text-red-500\">*</span>\r\n    </p>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [...importRxTemplate()]\r\n})\r\nexport class QuestionTextComponent {\r\n  @Input()\r\n  required: boolean = false;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "QueueDurationComponent",
            "id": "component-QueueDurationComponent-e926859a23e14ec32d2461bac99933770e522990f820a63c04c68304ea274f1e54e2aee2a73b7521249808c43883a24405aacc9192603e2e4b2532f219d0ae9b",
            "file": "src/app/core/pages/document-builder/components/input-types/queue-duration/queue-duration.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "queue-duration",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-card>\n  <ion-card-header>\n    <ion-card-title class=\"text-center\">Queue Duration</ion-card-title>\n  </ion-card-header>\n  <ion-card-content>\n    <ion-grid>\n      <ion-row>\n        <ion-col>\n          <ion-input [(ngModel)]=\"duration\" (ionChange)=\"durationChange.emit(duration)\" label=\"Duration\" labelPlacement=\"floating\" type=\"number\" min=\"0\" />\n        </ion-col>\n        <ion-col>\n          <ion-select [(ngModel)]=\"type\" (ionChange)=\"typeChange.emit(type)\" interface=\"popover\" label=\"Type\" labelPlacement=\"floating\">\n            <ion-select-option value=\"Mins\">Minutes</ion-select-option>\n            <ion-select-option value=\"Hours\">Hours</ion-select-option>\n            <ion-select-option value=\"Days\">Days</ion-select-option>\n          </ion-select>\n        </ion-col>\n      </ion-row>\n    </ion-grid>\n  </ion-card-content>\n</ion-card>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "number",
                    "decorators": []
                },
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "\"Mins\" | \"Hours\" | \"Days\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "durationChange",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "EventEmitter"
                },
                {
                    "name": "typeChange",
                    "defaultValue": "new EventEmitter<\"Mins\" | \"Hours\" | \"Days\">()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\n\r\n@Component({\r\n  selector: \"queue-duration\",\r\n  template: `\r\n    <ion-card>\r\n      <ion-card-header>\r\n        <ion-card-title class=\"text-center\">Queue Duration</ion-card-title>\r\n      </ion-card-header>\r\n      <ion-card-content>\r\n        <ion-grid>\r\n          <ion-row>\r\n            <ion-col>\r\n              <ion-input [(ngModel)]=\"duration\" (ionChange)=\"durationChange.emit(duration)\" label=\"Duration\" labelPlacement=\"floating\" type=\"number\" min=\"0\" />\r\n            </ion-col>\r\n            <ion-col>\r\n              <ion-select [(ngModel)]=\"type\" (ionChange)=\"typeChange.emit(type)\" interface=\"popover\" label=\"Type\" labelPlacement=\"floating\">\r\n                <ion-select-option value=\"Mins\">Minutes</ion-select-option>\r\n                <ion-select-option value=\"Hours\">Hours</ion-select-option>\r\n                <ion-select-option value=\"Days\">Days</ion-select-option>\r\n              </ion-select>\r\n            </ion-col>\r\n          </ion-row>\r\n        </ion-grid>\r\n      </ion-card-content>\r\n    </ion-card>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    FormsModule\r\n  ]\r\n})\r\nexport class QueueDurationComponent {\r\n  @Input({ required: true })\r\n  duration!: number;\r\n\r\n  @Output()\r\n  durationChange = new EventEmitter<number>();\r\n\r\n  @Input({ required: true })\r\n  type!: \"Mins\" | \"Hours\" | \"Days\";\r\n\r\n  @Output()\r\n  typeChange = new EventEmitter<\"Mins\" | \"Hours\" | \"Days\">();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "QueueDurationSummaryComponent",
            "id": "component-QueueDurationSummaryComponent-863ba79329d97734e73ea9f57c0d96f17c5fde63cfff8c5669ea4390cbee403e8352d05b9b5df00d604c8fdfbe33dfcf3940a89af11d5026f179537ac02dc7f7",
            "file": "src/app/core/pages/document-builder/components/input-types/queue-duration/summary/queue-duration-summary.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "queue-duration-summary",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <ion-label>\n      <b>Queue Duration</b>\n      <p>{{ duration.Value }} ({{ duration.Type }})</p>\n    </ion-label>\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "QueueDuration",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { QueueDuration } from \"src/app/core/stores/site-document/models/site-document.model\";\r\n\r\n@Component({\r\n  selector: \"queue-duration-summary\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <ion-label>\r\n          <b>Queue Duration</b>\r\n          <p>{{ duration.Value }} ({{ duration.Type }})</p>\r\n        </ion-label>\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [IonicModule]\r\n})\r\nexport class QueueDurationSummaryComponent {\r\n  @Input({ required: true })\r\n  duration!: QueueDuration;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "QueueSelectComponent",
            "id": "component-QueueSelectComponent-b3d3cd2f4e4cd2bb477db764a99436e0d84a362ca76c2c2e36797fe6c792fa4353ebd635b806430620bfb3588f31f17a97a9d8ed99c2407bd1a6923bed290443",
            "file": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "queue-select",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-card>\n  <ion-card-header>\n    <ion-card-title class=\"text-center\">{{ title }}</ion-card-title>\n  </ion-card-header>\n\n  <ion-card-content>\n    <ion-list>\n      <selectable\n        [title]=\"title\"\n        placeholder=\"Queues\"\n        (valueChange)=\"queueIdChange.emit($event!.id)\"\n        [items]=\"queues\"\n        [(value)]=\"queueId\"\n        itemText=\"Name\"\n        itemValue=\"Id\"\n        [canClear]=\"false\" />\n    </ion-list>\n  </ion-card-content>\n</ion-card>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "queueId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "queues",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "Queue[]",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "\"Select Queue\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "queueIdChange",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "queue$",
                    "defaultValue": "merge(\r\n    this.afterViewInit(),\r\n    this.input(\"queueId\")\r\n  ).pipe(\r\n    map(() => this.queues.find(q => q.Id === this.queueId))\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Queue | undefined>",
                    "optional": false,
                    "description": "",
                    "line": 53
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { map, merge, Observable } from \"rxjs\";\r\nimport { Queue } from \"src/app/core/stores/site-document/models/site-document.model\";\r\nimport { SelectableComponent } from \"src/app/shared/components/selectable/selectable.component\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { AngularComponent, withAfterViewInit, withOnChanges } from \"src/app/shared/lifecycles\";\r\n\r\n@Component({\r\n  selector: \"queue-select\",\r\n  template: `\r\n    <ion-card>\r\n      <ion-card-header>\r\n        <ion-card-title class=\"text-center\">{{ title }}</ion-card-title>\r\n      </ion-card-header>\r\n\r\n      <ion-card-content>\r\n        <ion-list>\r\n          <selectable \r\n            [title]=\"title\"\r\n            placeholder=\"Queues\"\r\n            (valueChange)=\"queueIdChange.emit($event!.id)\"\r\n            [items]=\"queues\" \r\n            [(value)]=\"queueId\"\r\n            itemText=\"Name\"\r\n            itemValue=\"Id\"\r\n            [canClear]=\"false\" />\r\n        </ion-list>\r\n      </ion-card-content>\r\n    </ion-card>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    SelectableComponent\r\n  ]\r\n})\r\nexport class QueueSelectComponent extends AngularComponent(withAfterViewInit, withOnChanges) {\r\n  @Input()\r\n  title: string = \"Select Queue\";\r\n\r\n  @Input()\r\n  queues: Queue[] = [];\r\n\r\n  @Input()\r\n  queueId?: number;\r\n\r\n  @Output()\r\n  queueIdChange = new EventEmitter<number>();\r\n\r\n  queue$: Observable<Queue | undefined> = merge(\r\n    this.afterViewInit(),\r\n    this.input(\"queueId\")\r\n  ).pipe(\r\n    map(() => this.queues.find(q => q.Id === this.queueId))\r\n  );\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "QueueSelectSummaryComponent",
            "id": "component-QueueSelectSummaryComponent-f9d48e252c03145e90ba16dcb0b17cd3ab01b4cc60dafb243f55623542ee8ae8909bd0a2fcd9f3468a38e4ffb5bb20b86fadeec3cb39abc5a16ae88370370123",
            "file": "src/app/core/pages/document-builder/components/input-types/queue-select/summary/queue-select-summary.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "queue-select-summary",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <ion-label>\n      <b>Queue</b>\n      <p>{{ queue?.Name }}</p>\n    </ion-label>\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "queues",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "Queue[]",
                    "decorators": []
                },
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "queue",
                    "defaultValue": "this.queues.find(q => q.Id === this.queueId)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Queue } from \"src/app/core/stores/site-document/models/site-document.model\";\r\n\r\n@Component({\r\n  selector: \"queue-select-summary\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <ion-label>\r\n          <b>Queue</b>\r\n          <p>{{ queue?.Name }}</p>\r\n        </ion-label>\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [IonicModule]\r\n})\r\nexport class QueueSelectSummaryComponent {\r\n  @Input()\r\n  queues: Queue[] = []\r\n\r\n  @Input({ required: true })\r\n  queueId!: number;\r\n\r\n  queue = this.queues.find(q => q.Id === this.queueId);\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "RadioGroupComponent",
            "id": "component-RadioGroupComponent-afc05719a283aafb8a2a045198b344e071eaa39ed5294c1cbf474aa6afb3380df24861c7a51ec462efe05491808095d686229073ee83d7bb0fa10f5179e4d739",
            "file": "src/app/core/pages/document-builder/components/question-types/02-radio-group/radio-group.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "radio-group-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item\n    [class.ion-invalid]=\"validator.isInvalid$ | push\"\n    [class.ion-valid]=\"validator.isValid$ | push\"\n    class=\"ion-no-padding\"\n    lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n    <camera-capture *rxIf=\"question.CanHaveImg\" class=\"m-0\" slot=\"end\" />\n    <file-upload *rxIf=\"question.CanHaveFiles\" class=\"m-0\" slot=\"end\" />\n  </ion-item>\n</ion-list>\n\n<ion-radio-group [(ngModel)]=\"question.YesNoNA\" (ngModelChange)=\"validator.validate()\">\n  <ion-list>\n    <ion-item>\n      <ion-radio color=\"success\" [value]=\"true\">{{ section.TableTitles[0] || \"\" }}</ion-radio>\n    </ion-item>\n\n    <ion-item>\n      <ion-radio color=\"danger\" [value]=\"false\">{{ section.TableTitles[1] || \"\" }}</ion-radio>\n    </ion-item>\n\n    <ion-item>\n      <ion-radio [value]=\"null\">{{ section.TableTitles[2] || \"\" }}</ion-radio>\n    </ion-item>\n  </ion-list>\n</ion-radio-group>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "Section",
                    "decorators": []
                },
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 59,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "effects",
                    "defaultValue": "[\r\n    createEffect(\r\n      () => this.validator.validate(),\r\n      merge(this.afterViewInit(), this.input(\"question\"))\r\n    )\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 63
                },
                {
                    "name": "validator",
                    "defaultValue": "useRadioGroupValidator(() => this.question)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 61
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\nimport { Question, Section } from \"src/app/core/stores/site-document/models\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { useRadioGroupValidator } from \"./validation/radio-group.validator\";\r\nimport { createEffect } from \"src/app/shared/rxjs\";\r\nimport { merge } from \"rxjs\";\r\nimport { AngularComponent, withAfterViewInit, withOnChanges } from \"src/app/shared/lifecycles\";\r\n\r\n@Component({\r\n  selector: \"radio-group-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item \r\n        [class.ion-invalid]=\"validator.isInvalid$ | push\" \r\n        [class.ion-valid]=\"validator.isValid$ | push\"\r\n        class=\"ion-no-padding\" \r\n        lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n        <camera-capture *rxIf=\"question.CanHaveImg\" class=\"m-0\" slot=\"end\" />\r\n        <file-upload *rxIf=\"question.CanHaveFiles\" class=\"m-0\" slot=\"end\" />\r\n      </ion-item>\r\n    </ion-list>\r\n\r\n    <ion-radio-group [(ngModel)]=\"question.YesNoNA\" (ngModelChange)=\"validator.validate()\">\r\n      <ion-list>\r\n        <ion-item>\r\n          <ion-radio color=\"success\" [value]=\"true\">{{ section.TableTitles[0] || \"\" }}</ion-radio>\r\n        </ion-item>\r\n\r\n        <ion-item>\r\n          <ion-radio color=\"danger\" [value]=\"false\">{{ section.TableTitles[1] || \"\" }}</ion-radio>\r\n        </ion-item>\r\n\r\n        <ion-item>\r\n          <ion-radio [value]=\"null\">{{ section.TableTitles[2] || \"\" }}</ion-radio>\r\n        </ion-item>\r\n      </ion-list>\r\n    </ion-radio-group>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    FormsModule,\r\n    QuestionTextComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent\r\n  ]\r\n})\r\nexport class RadioGroupComponent extends AngularComponent(withAfterViewInit, withOnChanges) {\r\n  @Input({ required: true })\r\n  section!: Section;\r\n  \r\n  @Input({ required: true })\r\n  question!: Question;\r\n\r\n  validator = useRadioGroupValidator(() => this.question);\r\n\r\n  effects = [\r\n    createEffect(\r\n      () => this.validator.validate(),\r\n      merge(this.afterViewInit(), this.input(\"question\"))\r\n    )\r\n  ];\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "RadioGroupSummaryComponent",
            "id": "component-RadioGroupSummaryComponent-898c293c34a33cc2156eb0cd96c344c16c736892e7d1fb4528d4d3bac522c766e3d848472e7c70ac161d16e6b1e34638c63dc73c694e2f9ae6500ce1e0ebe4af",
            "file": "src/app/core/pages/document-builder/components/question-types/02-radio-group/summary/radio-group-summary.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "radio-group-summary",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <ion-label class=\"font-bold\">{{ question.QuestionText }}</ion-label>\n    <ion-icon *rxIf=\"question.YesNoNA\" name=\"checkmark-circle\" color=\"success\" slot=\"end\" />\n    <ion-icon *rxIf=\"question.YesNoNA === false\" name=\"close-circle\" color=\"danger\" slot=\"end\" />\n    <ion-icon *rxIf=\"question.YesNoNA == null\" name=\"remove-circle\" color=\"secondary\" slot=\"end\" />\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "Question",
                    "decorators": []
                },
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "Section",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question, Section } from \"src/app/core/stores/site-document/models\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\n\r\n@Component({\r\n  selector: \"radio-group-summary\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <ion-label class=\"font-bold\">{{ question.QuestionText }}</ion-label>\r\n        <ion-icon *rxIf=\"question.YesNoNA\" name=\"checkmark-circle\" color=\"success\" slot=\"end\" />\r\n        <ion-icon *rxIf=\"question.YesNoNA === false\" name=\"close-circle\" color=\"danger\" slot=\"end\" />\r\n        <ion-icon *rxIf=\"question.YesNoNA == null\" name=\"remove-circle\" color=\"secondary\" slot=\"end\" />\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [IonicModule, ...importRxTemplate()]\r\n})\r\nexport class RadioGroupSummaryComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n\r\n  @Input({ required: true })\r\n  section!: Section;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "RadioGroupTextboxComponent",
            "id": "component-RadioGroupTextboxComponent-b58da16c5c35fe042f29b704de7c1d8c8241b8c74ca534f1d396da7a336e36abb903ac71579479509d1a2f437f090d25262a6f3b13b7ed515a2afe44ed30acad",
            "file": "src/app/core/pages/document-builder/components/question-types/07-radio-group-textbox/radio-group-textbox.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "radio-group-textbox-question",
            "styleUrls": [],
            "styles": [],
            "template": "<radio-group-question [section]=\"section\" [question]=\"question\"></radio-group-question>\n<ion-textarea class=\"p-2\" label=\"\" rows=\"4\" fill=\"outline\" />\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "Section",
                    "decorators": []
                },
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "validator",
                    "defaultValue": "useRadioGroupTextboxValidator(() => this.question)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { RadioGroupComponent } from \"../02-radio-group/radio-group.component\";\r\nimport { Question, Section } from \"src/app/core/stores/site-document/models\";\r\nimport { useRadioGroupTextboxValidator } from \"./validation/radio-group-textbox.validator\";\r\n\r\n@Component({\r\n  selector: \"radio-group-textbox-question\",\r\n  template: `\r\n    <radio-group-question [section]=\"section\" [question]=\"question\"></radio-group-question>\r\n    <ion-textarea class=\"p-2\" label=\"\" rows=\"4\" fill=\"outline\" />\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    RadioGroupComponent\r\n  ]\r\n})\r\nexport class RadioGroupTextboxComponent {\r\n  @Input({ required: true })\r\n  section!: Section;\r\n\r\n  @Input({ required: true })\r\n  question!: Question;\r\n\r\n  validator = useRadioGroupTextboxValidator(() => this.question);\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "RadioGroupTextboxSummaryComponent",
            "id": "component-RadioGroupTextboxSummaryComponent-356a8c4c65eb3a59b9524733076de59fe821d71efefa679898053ca58b4b86498b39086df023f14d971a0e1eadaaa7c0f0563b8f8fda4b535d2f3aa70ae31542",
            "file": "src/app/core/pages/document-builder/components/question-types/07-radio-group-textbox/summary/radio-group-textbox-summary.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "radio-group-textbox-summary",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <ion-label class=\"font-bold\">{{ question.QuestionText }}</ion-label>\n    <ion-icon *rxIf=\"question.YesNoNA\" name=\"checkmark-circle\" color=\"success\" slot=\"end\" />\n    <ion-icon *rxIf=\"question.YesNoNA === false\" name=\"close-circle\" color=\"danger\" slot=\"end\" />\n    <ion-icon *rxIf=\"question.YesNoNA == null\" name=\"remove-circle\" color=\"secondary\" slot=\"end\" />\n  </ion-item>\n\n  <ion-item lines=\"none\">\n    <p>{{ question.AnswerText }}</p>\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "Question",
                    "decorators": []
                },
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "Section",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question, Section } from \"src/app/core/stores/site-document/models\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\n\r\n@Component({\r\n  selector: \"radio-group-textbox-summary\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <ion-label class=\"font-bold\">{{ question.QuestionText }}</ion-label>\r\n        <ion-icon *rxIf=\"question.YesNoNA\" name=\"checkmark-circle\" color=\"success\" slot=\"end\" />\r\n        <ion-icon *rxIf=\"question.YesNoNA === false\" name=\"close-circle\" color=\"danger\" slot=\"end\" />\r\n        <ion-icon *rxIf=\"question.YesNoNA == null\" name=\"remove-circle\" color=\"secondary\" slot=\"end\" />\r\n      </ion-item>\r\n\r\n      <ion-item lines=\"none\">\r\n        <p>{{ question.AnswerText }}</p>\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [IonicModule, ...importRxTemplate()]\r\n})\r\nexport class RadioGroupTextboxSummaryComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n\r\n  @Input({ required: true })\r\n  section!: Section;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "RadioTableComponent",
            "id": "component-RadioTableComponent-e982b25fb20c265bb570241921fdfc0a332bbf8dc87d2aaa8a804167d85c30dcc1cbfe1c83ddb6125ed9f17903fc590ace099ed184df1fd1af23ccbe0033f804",
            "file": "src/app/core/pages/document-builder/components/question-types/02-radio-table/radio-table.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "radio-table-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-row>\n  <ion-col class=\"flex items-center\" size=\"2\">\n    <ion-label>\n      <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n    </ion-label>\n  </ion-col>\n  <ion-radio-group class=\"contents\">\n    <ion-col class=\"flex justify-center items-center\" size=\"1\">\n      <ion-radio aria-label=\"\" color=\"success\" [value]=\"true\"></ion-radio>\n    </ion-col>\n    <ion-col class=\"flex justify-center items-center\" size=\"1\">\n      <ion-radio aria-label=\"\" color=\"danger\" [value]=\"false\"></ion-radio>\n    </ion-col>\n    <ion-col class=\"flex justify-center items-center\" size=\"1\">\n      <ion-radio aria-label=\"\" [value]=\"null\"></ion-radio>\n    </ion-col>\n  </ion-radio-group>\n  <ion-col size=\"1\">\n    <camera-capture *rxIf=\"question.CanHaveImg\" />\n    <file-upload *rxIf=\"question.CanHaveFiles\" />\n  </ion-col>\n</ion-row>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "validator",
                    "defaultValue": "useRadioGroupValidator(() => this.question)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 48
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { useRadioGroupValidator } from \"../02-radio-group/validation/radio-group.validator\";\r\n\r\n@Component({\r\n  selector: \"radio-table-question\",\r\n  template: `\r\n    <ion-row>\r\n      <ion-col class=\"flex items-center\" size=\"2\">\r\n        <ion-label>\r\n          <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n        </ion-label>\r\n      </ion-col>\r\n      <ion-radio-group class=\"contents\">\r\n        <ion-col class=\"flex justify-center items-center\" size=\"1\">\r\n          <ion-radio aria-label=\"\" color=\"success\" [value]=\"true\"></ion-radio>\r\n        </ion-col>\r\n        <ion-col class=\"flex justify-center items-center\" size=\"1\">\r\n          <ion-radio aria-label=\"\" color=\"danger\" [value]=\"false\"></ion-radio>\r\n        </ion-col>\r\n        <ion-col class=\"flex justify-center items-center\" size=\"1\">\r\n          <ion-radio aria-label=\"\" [value]=\"null\"></ion-radio>\r\n        </ion-col>\r\n      </ion-radio-group>\r\n      <ion-col size=\"1\">\r\n        <camera-capture *rxIf=\"question.CanHaveImg\" />\r\n        <file-upload *rxIf=\"question.CanHaveFiles\" />\r\n      </ion-col>\r\n    </ion-row>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    QuestionTextComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent\r\n  ]\r\n})\r\nexport class RadioTableComponent {  \r\n  @Input({ required: true })\r\n  question!: Question;\r\n\r\n  validator = useRadioGroupValidator(() => this.question);\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "RadioTableTextboxComponent",
            "id": "component-RadioTableTextboxComponent-c0b37abcd2655e0167e633324f66c16c5a66da5083f28a22e2696818ee91d08d876cb55178eab29d6a78e04f00572c33f1aff9877796933959d2443c1679fbf8",
            "file": "src/app/core/pages/document-builder/components/question-types/07-radio-table-textbox/radio-table-textbox.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "radio-table-textbox-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-row>\n  <ion-col class=\"flex items-center\" size=\"2\">\n    <ion-label>\n      <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n    </ion-label>\n  </ion-col>\n  <ion-radio-group class=\"contents\">\n    <ion-col class=\"flex justify-center items-center\" size=\"1\">\n      <ion-radio aria-label=\"\" color=\"success\" [value]=\"true\"></ion-radio>\n    </ion-col>\n    <ion-col class=\"flex justify-center items-center\" size=\"1\">\n      <ion-radio aria-label=\"\" color=\"danger\" [value]=\"false\"></ion-radio>\n    </ion-col>\n    <ion-col class=\"flex justify-center items-center\" size=\"1\">\n      <ion-radio aria-label=\"\" [value]=\"null\"></ion-radio>\n    </ion-col>\n  </ion-radio-group>\n  <ion-col size=\"2\">\n    <ion-textarea class=\"p-2\" label=\"\" rows=\"4\" fill=\"outline\" />\n  </ion-col>\n</ion-row>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "validator",
                    "defaultValue": "useRadioGroupTextboxValidator(() => this.question)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { QuestionTextComponent } from \"../extras\";\r\nimport { useRadioGroupTextboxValidator } from \"../07-radio-group-textbox/validation/radio-group-textbox.validator\";\r\n\r\n@Component({\r\n  selector: \"radio-table-textbox-question\",\r\n  template: `\r\n    <ion-row>\r\n      <ion-col class=\"flex items-center\" size=\"2\">\r\n        <ion-label>\r\n          <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n        </ion-label>\r\n      </ion-col>\r\n      <ion-radio-group class=\"contents\">\r\n        <ion-col class=\"flex justify-center items-center\" size=\"1\">\r\n          <ion-radio aria-label=\"\" color=\"success\" [value]=\"true\"></ion-radio>\r\n        </ion-col>\r\n        <ion-col class=\"flex justify-center items-center\" size=\"1\">\r\n          <ion-radio aria-label=\"\" color=\"danger\" [value]=\"false\"></ion-radio>\r\n        </ion-col>\r\n        <ion-col class=\"flex justify-center items-center\" size=\"1\">\r\n          <ion-radio aria-label=\"\" [value]=\"null\"></ion-radio>\r\n        </ion-col>\r\n      </ion-radio-group>\r\n      <ion-col size=\"2\">\r\n        <ion-textarea class=\"p-2\" label=\"\" rows=\"4\" fill=\"outline\" />\r\n      </ion-col>\r\n    </ion-row>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule, \r\n    QuestionTextComponent\r\n  ]\r\n})\r\nexport class RadioTableTextboxComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n\r\n  validator = useRadioGroupTextboxValidator(() => this.question);\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "RamsSelectComponent",
            "id": "component-RamsSelectComponent-1bfc8613f57608bb157fe3e8c20caab74ac4b5e0932dd67a17039c280e2cabc78a8eb26cde94705a4c2ec18e3053f751c8502b6775c80269eb180da84467bab8",
            "file": "src/app/core/pages/document-builder/components/question-types/28-rams-select/rams-select.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rams-select-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n    <camera-capture *rxIf=\"question.CanHaveImg\" class=\"m-0\" slot=\"end\" />\n    <file-upload *rxIf=\"question.CanHaveFiles\" class=\"m-0\" slot=\"end\" />\n  </ion-item>\n  <selectable\n    placeholder=\"Select\"\n    [title]=\"question.QuestionText\"\n    [items]=\"rams.thatArentExpiredToday() | push\"\n    itemValue=\"Reference\"\n    itemText=\"Description\"\n    [(value)]=\"question.OptionVal\"\n    (itemChange)=\"question.SelectedOptionText = $event?.Description\"\n    [canClear]=\"!question.Required\" />\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "rams",
                    "defaultValue": "useRams()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "validator",
                    "defaultValue": "useSelectValidator(() => this.question)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 45
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\nimport { SelectableComponent } from \"src/app/shared/components\";\r\nimport { useRams } from \"src/app/core/http/login.api\";\r\nimport { useSelectValidator } from \"../05-select/validation/select.validator\";\r\n\r\n@Component({\r\n  selector: \"rams-select-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n        <camera-capture *rxIf=\"question.CanHaveImg\" class=\"m-0\" slot=\"end\" />\r\n        <file-upload *rxIf=\"question.CanHaveFiles\" class=\"m-0\" slot=\"end\" />\r\n      </ion-item>\r\n      <selectable \r\n        placeholder=\"Select\"\r\n        [title]=\"question.QuestionText\"\r\n        [items]=\"rams.thatArentExpiredToday() | push\"\r\n        itemValue=\"Reference\"\r\n        itemText=\"Description\"\r\n        [(value)]=\"question.OptionVal\"\r\n        (itemChange)=\"question.SelectedOptionText = $event?.Description\"\r\n        [canClear]=\"!question.Required\" />\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    QuestionTextComponent,\r\n    SelectableComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent\r\n  ]\r\n})\r\nexport class RamsSelectComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n\r\n  validator = useSelectValidator(() => this.question);\r\n\r\n  rams = useRams();\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ReactiveComponent",
            "id": "component-ReactiveComponent-684ea1e391f9f8a2e5ce700e1a2c1f3277fd6d82646e9eb9113bfe004f1aede79448c013d03867b089a5a27ff5fb830ce76a5d041d71113da234d796076c1e14",
            "file": "src/app/shared/lifecycles/lifecycle-component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from \"@angular/core\";\r\nimport { flow } from \"lodash-es\";\r\nimport { AnyFunction } from \"./types\";\r\nimport { withNoop } from \"./with-noop\";\r\n\r\n@Component({ template: \"\" })\r\nclass ReactiveComponent {};\r\n\r\nexport function AngularComponent<T1 extends AnyFunction>(h1: T1): ReturnType<T1>\r\nexport function AngularComponent<T1 extends AnyFunction, T2 extends AnyFunction>(h1: T1, h2: T2): ReturnType<T1> & ReturnType<T2>\r\nexport function AngularComponent<T1 extends AnyFunction, T2 extends AnyFunction, T3 extends AnyFunction>(h1: T1, h2: T2, h3: T3): ReturnType<T1> & ReturnType<T2> & ReturnType<T3>\r\nexport function AngularComponent<T1 extends AnyFunction, T2 extends AnyFunction, T3 extends AnyFunction, T4 extends AnyFunction>(h1: T1, h2: T2, h3: T3, h4: T4): ReturnType<T1> & ReturnType<T2> & ReturnType<T3> & ReturnType<T4>\r\nexport function AngularComponent<T1 extends AnyFunction, T2 extends AnyFunction, T3 extends AnyFunction, T4 extends AnyFunction, T5 extends AnyFunction>(h1: T1, h2: T2, h3: T3, h4: T4, h5: T5): ReturnType<T1> & ReturnType<T2> & ReturnType<T3> & ReturnType<T4> & ReturnType<T5>\r\nexport function AngularComponent<T1 extends AnyFunction, T2 extends AnyFunction, T3 extends AnyFunction, T4 extends AnyFunction, T5 extends AnyFunction, T6 extends AnyFunction>(h1: T1, h2: T2, h3: T3, h4: T4, h5: T5, h6: T6): ReturnType<T1> & ReturnType<T2> & ReturnType<T3> & ReturnType<T4> & ReturnType<T5> & ReturnType<T6>\r\nexport function AngularComponent(): ReturnType<typeof withNoop> & ReactiveComponent;\r\nexport function AngularComponent(...args: AnyFunction[]): any {\r\n  if (args == null || args.length === 0) return ReactiveComponent;\r\n\r\n  const withHooks = flow(args);\r\n  return withHooks(ReactiveComponent); \r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "RegistrationPage",
            "id": "component-RegistrationPage-50ead7449c91ac73941bbbd4304b9e5fc0a9ed1578ac79c7fd8b940b060641450d5db2067902fa3665cccaab559d6b197ad55e469b777e8b09f29e7889d974dc",
            "file": "src/app/core/pages/registration/registration.page.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-registration",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-header>\n  <ion-toolbar>\n    <ion-title class=\"ion-text-center ion-text-wrap animate__animated animate__fadeInLeft animate__faster\">Site Documents Registration</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content [formGroup]=\"form\" class=\"ion-padding animate__animated animate__fadeInLeft animate__faster\">\n  <ion-list>\n    <ion-item>\n      <ion-input\n        label=\"Registration Code\"\n        labelPlacement=\"floating\"\n        formControlName=\"token\"\n        type=\"text\"\n        clearInput />\n    </ion-item>\n    <ion-item>\n      <ion-input\n        label=\"Pin\"\n        labelPlacement=\"floating\"\n        formControlName=\"pin\"\n        type=\"tel\"\n        clearInput />\n    </ion-item>\n  </ion-list>\n\n  <ion-button\n    *rxLet=\"form.invalid$; let isInvalid\"\n    [disabled]=\"isInvalid\"\n    (click)=\"submit()\"\n    [unpatch]\n    expand=\"full\">\n    Submit\n  </ion-button>\n</ion-content>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "form",
                    "defaultValue": "new FormGroup({\r\n    token: new FormControl(\"\", [\r\n      Validators.required\r\n    ]),\r\n    pin: new FormControl(\"\", [\r\n      Validators.required,\r\n      Validators.minLength(4)\r\n    ])\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "submit",
                    "defaultValue": "reaction(click$ => click$(\r\n    takeUntilDestroyed(),\r\n    clickReaction(),\r\n    switchMap(() => this.userStore.getUserRequest$(this.form.value$))\r\n  ))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 72
                },
                {
                    "name": "userStore",
                    "defaultValue": "inject(UserStore)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 60
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, inject } from \"@angular/core\";\r\nimport { takeUntilDestroyed } from \"@angular/core/rxjs-interop\";\r\nimport { ReactiveFormsModule, Validators } from \"@angular/forms\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { FormGroup, FormControl } from \"@ngneat/reactive-forms\";\r\nimport { AngularComponent } from \"src/app/shared/lifecycles\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { UserStore } from \"../../stores/user/user.store\";\r\nimport { switchMap } from \"rxjs\";\r\nimport { clickReaction, reaction } from \"src/app/shared/reactions\";\r\n\r\n@Component({\r\n  selector: \"app-registration\",\r\n  template: `\r\n    <ion-header>\r\n      <ion-toolbar>\r\n        <ion-title class=\"ion-text-center ion-text-wrap animate__animated animate__fadeInLeft animate__faster\">Site Documents Registration</ion-title>\r\n      </ion-toolbar>\r\n    </ion-header>\r\n\r\n    <ion-content [formGroup]=\"form\" class=\"ion-padding animate__animated animate__fadeInLeft animate__faster\">\r\n      <ion-list>\r\n        <ion-item>\r\n          <ion-input \r\n            label=\"Registration Code\" \r\n            labelPlacement=\"floating\"\r\n            formControlName=\"token\"\r\n            type=\"text\" \r\n            clearInput />\r\n        </ion-item>\r\n        <ion-item>\r\n          <ion-input \r\n            label=\"Pin\"\r\n            labelPlacement=\"floating\"\r\n            formControlName=\"pin\" \r\n            type=\"tel\" \r\n            clearInput />\r\n        </ion-item>\r\n      </ion-list>\r\n\r\n      <ion-button \r\n        *rxLet=\"form.invalid$; let isInvalid\" \r\n        [disabled]=\"isInvalid\"\r\n        (click)=\"submit()\"\r\n        [unpatch]\r\n        expand=\"full\">\r\n        Submit\r\n      </ion-button>\r\n    </ion-content>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class RegistrationPage extends AngularComponent() {\r\n  userStore = inject(UserStore);\r\n\r\n  form = new FormGroup({\r\n    token: new FormControl(\"\", [\r\n      Validators.required\r\n    ]),\r\n    pin: new FormControl(\"\", [\r\n      Validators.required,\r\n      Validators.minLength(4)\r\n    ])\r\n  });\r\n\r\n  submit = reaction(click$ => click$(\r\n    takeUntilDestroyed(),\r\n    clickReaction(),\r\n    switchMap(() => this.userStore.getUserRequest$(this.form.value$))\r\n  ));\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "RemainAnonymousComponent",
            "id": "component-RemainAnonymousComponent-deec727657d3bd327b4c7dff596e01c111ec7bc5b03faaddc4611c82cc9e3a8f2aeff97b4791b5e0ea06e77c3558d48ac01b81a005eeb1d69e7065660468437d",
            "file": "src/app/core/pages/document-builder/components/input-types/remain-anonymous/remain-anonymous.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "remain-anonymous",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item>\n    <ion-checkbox [(ngModel)]=\"isTicked\" (ionChange)=\"isTickedChange.emit(isTicked)\">\n      Remain Anonymous?\n    </ion-checkbox>\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isTicked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "isTickedChange",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\n\r\n@Component({\r\n  selector: \"remain-anonymous\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item>\r\n        <ion-checkbox [(ngModel)]=\"isTicked\" (ionChange)=\"isTickedChange.emit(isTicked)\">\r\n          Remain Anonymous?\r\n        </ion-checkbox>\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    FormsModule\r\n  ]\r\n})\r\nexport class RemainAnonymousComponent {\r\n  @Input()\r\n  isTicked: boolean = false;\r\n\r\n  @Output()\r\n  isTickedChange = new EventEmitter<boolean>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "RemainAnonymousSummaryComponent",
            "id": "component-RemainAnonymousSummaryComponent-95590f6661f5c5e4b16e07f10ccd53b86973f133d10397fdd3f0ddba24006eafd7066c7e0b2b20050dccf8b6d124bab5f82e5b7172c9ff7f6255a8d9d32811c4",
            "file": "src/app/core/pages/document-builder/components/input-types/remain-anonymous/summary/remain-anonymous-summary.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "remain-anonymous-summary",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <ion-label>\n      <b>Remain Anonymous</b>\n    </ion-label>\n    <ion-icon\n      *rxIf=\"isTicked\"\n      name=\"checkmark-circle\"\n      color=\"success\" />\n    <ion-icon\n      *rxIf=\"!isTicked\"\n      name=\"close-circle\"\n      color=\"danger\" />\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\n\r\n@Component({\r\n  selector: \"remain-anonymous-summary\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <ion-label>\r\n          <b>Remain Anonymous</b>\r\n        </ion-label>\r\n        <ion-icon \r\n          *rxIf=\"isTicked\" \r\n          name=\"checkmark-circle\" \r\n          color=\"success\" />\r\n        <ion-icon \r\n          *rxIf=\"!isTicked\" \r\n          name=\"close-circle\" \r\n          color=\"danger\" />\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [IonicModule, ...importRxTemplate()]\r\n})\r\nexport class RemainAnonymousSummaryComponent {\r\n  @Input({ required: true })\r\n  isTicked: boolean = false;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "RequireGpsComponent",
            "id": "component-RequireGpsComponent-d5cbffd7dbd979ef7db7cc97808a91a48088863e42b20c657c4644359b16f0402ddc87927e90d9dfc097915b6337efcf6b5d4508f04e7c48fc6eb726a2e5032a",
            "file": "src/app/core/pages/document-builder/components/info-types/require-gps/require-gps.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "require-gps",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-grid>\n  <ion-row>\n    <ion-col>\n      <p>\n        Your GPS location will be used upon submission of the form\n      </p>\n    </ion-col>\n  </ion-row>\n</ion-grid>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from \"@angular/core\";\nimport { IonicModule } from \"@ionic/angular\";\n\n@Component({\n  selector: \"require-gps\",\n  template: `\n    <ion-grid>\n      <ion-row>\n        <ion-col>\n          <p>\n            Your GPS location will be used upon submission of the form\n          </p>\n        </ion-col>\n      </ion-row>\n    </ion-grid>\n  `,\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [IonicModule]\n})\nexport class RequireGpsComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ResponsibilityAreaSelectComponent",
            "id": "component-ResponsibilityAreaSelectComponent-f86a412ce443d90f10fd8e2278c028990fe6ec0fbe658dc8b9f1ef1671c1b1f13f2c85c105631ab629cfbfc3d668918312ee0c589b5e2120da787bddfb55afdb",
            "file": "src/app/core/pages/document-builder/components/input-types/responsibility-area-select/responsibility-area-select.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "responsibility-area-select",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-card *rxLet=\"resAreaType(); let rat\">\n  <ion-card-header *rxIf=\"rat != null\">\n    <ion-card-title class=\"text-center\">\n      {{ rat.AppQuestionText }}\n    </ion-card-title>\n  </ion-card-header>\n  <ion-card-content>\n    <if [condition]=\"rat != null && rat.Areas.length > 0\">\n      <selectable\n        show\n        title=\"Responsibility Types\"\n        placeholder=\"Select\"\n        [items]=\"resAreasTypes.areas() | push\"\n        [(value)]=\"responsibilityAreaTypeId\"\n        itemValue=\"DocResAreaTypeId\"\n        itemText=\"Name\"\n        (valueChange)=\"responsibilityAreaIdChange.emit(responsibilityAreaTypeId)\"\n        [canClear]=\"false\" />\n\n      <span else>\n        No areas found For Document Responsibility Area Type.\n        Document will not be able to be submitted. Please update lists and try again.\n      </span>\n    </if>\n  </ion-card-content>\n</ion-card>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "responsibilityAreaId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "number",
                    "decorators": []
                },
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "responsibilityAreaIdChange",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 57,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "resAreasTypes",
                    "defaultValue": "useResAreaTypes()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "resAreaType",
                    "defaultValue": "this.resAreasTypes.find(at => at.Id === this.responsibilityAreaTypeId)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 51
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { useResAreaTypes } from \"src/app/core/http/login.api\";\r\nimport { IfComponent, SelectableComponent } from \"src/app/shared/components\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\n\r\n@Component({\r\n  selector: \"responsibility-area-select\",\r\n  template: `\r\n    <ion-card *rxLet=\"resAreaType(); let rat\">\r\n      <ion-card-header *rxIf=\"rat != null\">\r\n        <ion-card-title class=\"text-center\">\r\n          {{ rat.AppQuestionText }}\r\n        </ion-card-title>\r\n      </ion-card-header>\r\n      <ion-card-content>\r\n        <if [condition]=\"rat != null && rat.Areas.length > 0\">\r\n          <selectable \r\n            show \r\n            title=\"Responsibility Types\"\r\n            placeholder=\"Select\"\r\n            [items]=\"resAreasTypes.areas() | push\"\r\n            [(value)]=\"responsibilityAreaTypeId\"\r\n            itemValue=\"DocResAreaTypeId\"\r\n            itemText=\"Name\"\r\n            (valueChange)=\"responsibilityAreaIdChange.emit(responsibilityAreaTypeId)\"\r\n            [canClear]=\"false\" />\r\n            \r\n          <span else>\r\n            No areas found For Document Responsibility Area Type. \r\n            Document will not be able to be submitted. Please update lists and try again.\r\n          </span>\r\n        </if>\r\n      </ion-card-content>\r\n    </ion-card>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    SelectableComponent,\r\n    IfComponent\r\n  ]\r\n})\r\nexport class ResponsibilityAreaSelectComponent {\r\n  resAreasTypes = useResAreaTypes();\r\n  \r\n  @Input({ required: true })\r\n  responsibilityAreaTypeId!: number;\r\n  resAreaType = this.resAreasTypes.find(at => at.Id === this.responsibilityAreaTypeId);\r\n\r\n  @Input()\r\n  responsibilityAreaId?: number;\r\n\r\n  @Output()\r\n  responsibilityAreaIdChange = new EventEmitter<number>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ResponsibilityAreaSelectSummaryComponent",
            "id": "component-ResponsibilityAreaSelectSummaryComponent-336d432eabeb67a98333ba8bedd6ee1559ebe81050880f4c7e1a536663f09326c41e08ae7d7dc767527e0be07bb1da8831dd4ef3e85fab60138032dad6b2252b",
            "file": "src/app/core/pages/document-builder/components/input-types/responsibility-area-select/summary/responsibility-area-select-summary.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "responsibility-area-select-summary",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <ion-label>\n      <b *rxIf=\"resAreaType(); let rat\">{{ rat.AppQuestionText }}</b>\n      <p *rxIf=\"resArea(); let area\">{{ area.Name }}</p>\n    </ion-label>\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "SiteDocument",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "resArea",
                    "defaultValue": "this.resAreasTypes.areas(areas => areas.find(a => a.Id === this.document.DocumentResponsibilityAreaId))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "resAreasTypes",
                    "defaultValue": "useResAreaTypes()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "resAreaType",
                    "defaultValue": "this.resAreasTypes.find(at => at.Id === this.document.DocumentResponsibilityAreaTypeId)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { useResAreaTypes } from \"src/app/core/http/login.api\";\r\nimport { SiteDocument } from \"src/app/core/stores/site-document/models\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\n\r\n@Component({\r\n  selector: \"responsibility-area-select-summary\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <ion-label>\r\n          <b *rxIf=\"resAreaType(); let rat\">{{ rat.AppQuestionText }}</b>\r\n          <p *rxIf=\"resArea(); let area\">{{ area.Name }}</p>\r\n        </ion-label>\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [IonicModule, ...importRxTemplate()]\r\n})\r\nexport class ResponsibilityAreaSelectSummaryComponent {\r\n  resAreasTypes = useResAreaTypes();\r\n  \r\n  @Input({ required: true })\r\n  document!: SiteDocument;\r\n\r\n  resAreaType = this.resAreasTypes.find(at => at.Id === this.document.DocumentResponsibilityAreaTypeId);\r\n  resArea = this.resAreasTypes.areas(areas => areas.find(a => a.Id === this.document.DocumentResponsibilityAreaId));\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SelectableComponent",
            "id": "component-SelectableComponent-63916eee6cfcaf727ecdc3179f5c07bf5a3cbd79d7fd15e896ec70ea3321d7ac0ec693c28ce77074a763105d8ed6675bec7a3a70d1c00344adc1424132671396",
            "file": "src/app/shared/components/selectable/selectable.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "selectable",
            "styleUrls": [],
            "styles": [],
            "template": "<!-- <ng-template #itemTpl let-item>\n  <ion-label class=\"ion-text-wrap\">{{ itemText != null ? item[itemText] : item }}</ion-label>\n</ng-template> -->\n\n<ion-item [id]=\"id\" detail=\"false\" button>\n  <ion-label *rxLet=\"item(); let item\" [color]=\"value == null ? 'medium' : ''\" class=\"ion-text-wrap\">\n  {{\n    item != null\n      ? itemText != null\n      ? item[itemText]\n      : item\n      : placeholder\n  }}\n  </ion-label>\n  <ion-button *rxIf=\"canClear && value != null\" (click)=\"$event.stopPropagation(); clear();\" fill=\"clear\">\n    <ion-icon name=\"close-outline\" color=\"danger\" slot=\"icon-only\" />\n  </ion-button>\n  <ion-icon name=\"caret-down-outline\" slot=\"end\" />\n</ion-item>\n\n<ion-modal #modal [trigger]=\"id\">\n  <ng-template>\n    <ion-header>\n      <ion-toolbar>\n        <ion-buttons slot=\"start\">\n          <ion-button (click)=\"modal.dismiss()\" [unpatch] fill=\"clear\">\n            <ion-icon name=\"arrow-back-outline\" slot=\"icon-only\" />\n          </ion-button>\n        </ion-buttons>\n        <ion-title class=\"ion-text-center\">{{ title }}</ion-title>\n      </ion-toolbar>\n      <ion-toolbar>\n        <ion-searchbar\n          [(ngModel)]=\"searchValue\"\n          debounce=\"300\"\n          placeholder=\"Search\" />\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content>\n      <ion-list class=\"h-full\">\n        <rx-virtual-scroll-viewport [itemSize]=\"50\">\n          <ion-item\n            *rxVirtualFor=\"let item of items\n              | fuse: {\n                search: searchValue,\n                keys: itemText != null\n                  ? [itemText]\n                  : []\n              };\n              last as isLast\"\n            class=\"w-full\"\n            (click)=\"select(item); modal.dismiss();\"\n            [lines]=\"isLast\n              ? 'none'\n              : 'inset'\"\n            [unpatch]\n            button>\n            <ion-label class=\"ion-text-wrap\">{{ itemText != null ? item[itemText] : item }}</ion-label>\n          </ion-item>\n        </rx-virtual-scroll-viewport>\n      </ion-list>\n    </ion-content>\n  </ng-template>\n</ion-modal>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "canClear",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 130,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 106,
                    "type": "T[]",
                    "decorators": []
                },
                {
                    "name": "itemText",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 109,
                    "type": "Nullable<T>",
                    "decorators": []
                },
                {
                    "name": "itemValue",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 112,
                    "type": "Nullable<T>",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 100,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 103,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 115,
                    "type": "Nullable<T | >",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "itemChange",
                    "defaultValue": "new EventEmitter<T | null>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 118,
                    "type": "EventEmitter"
                },
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 121,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "id",
                    "defaultValue": "crypto.randomUUID()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 97
                },
                {
                    "name": "item",
                    "defaultValue": "using(this.afterViewInit(), this.input(\"items\"), this.input(\"value\"), this.itemChange)\r\n    .calculate(() => this.itemValue != null \r\n      ? this.items?.find(item => item[this.itemValue as keyof T] === this.value)\r\n      : this.value as T\r\n    )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 123
                },
                {
                    "name": "itemsTpl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 135,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "ItemsTemplateDirective, {read: ItemsTemplateDirective}"
                        }
                    ]
                },
                {
                    "name": "searchValue",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 132
                }
            ],
            "methodsClass": [
                {
                    "name": "clear",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 148,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "select",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 137,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ContentChild, Directive, EventEmitter, Input, Output, TemplateRef } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { importRxFixedVirtualScroll, importRxTemplate } from \"../../imports\";\r\nimport { FusePipe } from \"../../pipes\";\r\nimport { AngularComponent, AngularDirective, withAfterViewInit, withGenericTemplateContextGuard, withOnChanges } from \"../../lifecycles\";\r\nimport { using } from \"../../rxjs\";\r\n\r\n@Directive({\r\n  selector: \"ng-template[items]\",\r\n  standalone: true\r\n})\r\nexport class ItemsTemplateDirective<T> extends AngularDirective(withGenericTemplateContextGuard) {\r\n  @Input()\r\n  items!: T[];\r\n}\r\n\r\n@Component({\r\n  selector: \"selectable\",\r\n  template: `\r\n    <!-- <ng-template #itemTpl let-item>\r\n      <ion-label class=\"ion-text-wrap\">{{ itemText != null ? item[itemText] : item }}</ion-label>\r\n    </ng-template> -->\r\n\r\n    <ion-item [id]=\"id\" detail=\"false\" button>\r\n      <ion-label *rxLet=\"item(); let item\" [color]=\"value == null ? 'medium' : ''\" class=\"ion-text-wrap\">\r\n      {{ \r\n        item != null \r\n          ? itemText != null \r\n          ? item[itemText] \r\n          : item \r\n          : placeholder\r\n      }}\r\n      </ion-label>\r\n      <ion-button *rxIf=\"canClear && value != null\" (click)=\"$event.stopPropagation(); clear();\" fill=\"clear\">\r\n        <ion-icon name=\"close-outline\" color=\"danger\" slot=\"icon-only\" />\r\n      </ion-button>\r\n      <ion-icon name=\"caret-down-outline\" slot=\"end\" />\r\n    </ion-item>\r\n\r\n    <ion-modal #modal [trigger]=\"id\">\r\n      <ng-template>\r\n        <ion-header>\r\n          <ion-toolbar>\r\n            <ion-buttons slot=\"start\">\r\n              <ion-button (click)=\"modal.dismiss()\" [unpatch] fill=\"clear\">\r\n                <ion-icon name=\"arrow-back-outline\" slot=\"icon-only\" />\r\n              </ion-button>\r\n            </ion-buttons>\r\n            <ion-title class=\"ion-text-center\">{{ title }}</ion-title>\r\n          </ion-toolbar>\r\n          <ion-toolbar>\r\n            <ion-searchbar \r\n              [(ngModel)]=\"searchValue\"\r\n              debounce=\"300\" \r\n              placeholder=\"Search\" />\r\n          </ion-toolbar>\r\n        </ion-header>\r\n\r\n        <ion-content>\r\n          <ion-list class=\"h-full\">\r\n            <rx-virtual-scroll-viewport [itemSize]=\"50\">\r\n              <ion-item \r\n                *rxVirtualFor=\"let item of items \r\n                  | fuse: {\r\n                    search: searchValue,\r\n                    keys: itemText != null \r\n                      ? [itemText]\r\n                      : []\r\n                  }; \r\n                  last as isLast\" \r\n                class=\"w-full\"\r\n                (click)=\"select(item); modal.dismiss();\"\r\n                [lines]=\"isLast \r\n                  ? 'none' \r\n                  : 'inset'\" \r\n                [unpatch] \r\n                button>\r\n                <ion-label class=\"ion-text-wrap\">{{ itemText != null ? item[itemText] : item }}</ion-label>\r\n              </ion-item>\r\n            </rx-virtual-scroll-viewport>\r\n          </ion-list>\r\n        </ion-content>\r\n      </ng-template>\r\n    </ion-modal>\r\n  `,\r\n  standalone: true,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    ...importRxFixedVirtualScroll(),\r\n    FormsModule,\r\n    FusePipe\r\n  ]\r\n})\r\nexport class SelectableComponent<T = unknown> extends AngularComponent(withAfterViewInit, withOnChanges) {\r\n  id = crypto.randomUUID();\r\n\r\n  @Input()\r\n  placeholder: string = \"\";\r\n\r\n  @Input()\r\n  title: string = \"\";\r\n\r\n  @Input()\r\n  items: T[] = [];\r\n\r\n  @Input()\r\n  itemText: Nullable<keyof T> = null;\r\n\r\n  @Input()\r\n  itemValue: Nullable<keyof T> = null;\r\n\r\n  @Input()\r\n  value: Nullable<T | T[keyof T]> = null;\r\n\r\n  @Output()\r\n  itemChange = new EventEmitter<T | null>();\r\n\r\n  @Output()\r\n  valueChange = new EventEmitter<any>();\r\n\r\n  item = using(this.afterViewInit(), this.input(\"items\"), this.input(\"value\"), this.itemChange)\r\n    .calculate(() => this.itemValue != null \r\n      ? this.items?.find(item => item[this.itemValue as keyof T] === this.value)\r\n      : this.value as T\r\n    );\r\n\r\n  @Input()\r\n  canClear: boolean = true;\r\n\r\n  searchValue: string = \"\";\r\n\r\n  @ContentChild(ItemsTemplateDirective, { read: ItemsTemplateDirective })\r\n  itemsTpl!: TemplateRef<unknown>;\r\n\r\n  select(item: T) {\r\n    if (this.itemValue != null) {\r\n      this.value = item[this.itemValue];\r\n      this.valueChange.emit(item[this.itemValue]);\r\n    } else {\r\n      this.value = item;\r\n    }\r\n\r\n    this.itemChange.emit(item);\r\n  }\r\n\r\n  clear() {\r\n    this.value = null;\r\n    this.itemChange.emit(null);\r\n    this.valueChange.emit(null);\r\n  }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SelectComponent",
            "id": "component-SelectComponent-3ab4d7c2d8bf666b51a2a57d1baee7372a63fe741e7706365b69cc4e4160fca8580cbe1da8702cac8aff1fa863560e48cf9d925ec2902c57f57422d67b3b34b0",
            "file": "src/app/core/pages/document-builder/components/question-types/05-select/select.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "select-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n    <camera-capture *rxIf=\"question.CanHaveImg\" class=\"m-0\" slot=\"end\" />\n    <file-upload *rxIf=\"question.CanHaveFiles\" class=\"m-0\" slot=\"end\" />\n  </ion-item>\n  <selectable\n    placeholder=\"Select\"\n    [title]=\"question.QuestionText\"\n    [items]=\"question.AnswerOptions\"\n    [(value)]=\"question.OptionVal\"\n    (itemChange)=\"question.SelectedOptionText = $event?.Text\"\n    itemValue=\"Val\"\n    itemText=\"Text\"\n    [canClear]=\"!question.Required\" />\n  <ion-textarea\n    *rxIf=\"question.OptionVal === '-1' || question.OptionVal?.includes('###2')\"\n    class=\"p-2\"\n    [label]=\"question.CascadeOptionsText || 'Other'\"\n    labelPlacement=\"floating\"\n    [(ngModel)]=\"question.AnswerText\"\n    rows=\"3\"\n    fill=\"outline\" />\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "validator",
                    "defaultValue": "useSelectValidator(() => this.question)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 54
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { SelectableComponent } from \"src/app/shared/components/selectable/selectable.component\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { useSelectValidator } from \"./validation/select.validator\";\r\n\r\n@Component({\r\n  selector: \"select-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n        <camera-capture *rxIf=\"question.CanHaveImg\" class=\"m-0\" slot=\"end\" />\r\n        <file-upload *rxIf=\"question.CanHaveFiles\" class=\"m-0\" slot=\"end\" />\r\n      </ion-item>\r\n      <selectable \r\n        placeholder=\"Select\"\r\n        [title]=\"question.QuestionText\"\r\n        [items]=\"question.AnswerOptions\"\r\n        [(value)]=\"question.OptionVal\"\r\n        (itemChange)=\"question.SelectedOptionText = $event?.Text\"\r\n        itemValue=\"Val\"\r\n        itemText=\"Text\"\r\n        [canClear]=\"!question.Required\" />\r\n      <ion-textarea \r\n        *rxIf=\"question.OptionVal === '-1' || question.OptionVal?.includes('###2')\" \r\n        class=\"p-2\"\r\n        [label]=\"question.CascadeOptionsText || 'Other'\" \r\n        labelPlacement=\"floating\" \r\n        [(ngModel)]=\"question.AnswerText\"\r\n        rows=\"3\" \r\n        fill=\"outline\" />\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    FormsModule,\r\n    QuestionTextComponent,\r\n    SelectableComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent\r\n  ]\r\n})\r\nexport class SelectComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n\r\n  validator = useSelectValidator(() => this.question);\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SelectSummaryComponent",
            "id": "component-SelectSummaryComponent-927ba35be2f9f86d3d7b660cda37b17716f50b185b5881d1701664ac8d13bfd0c7fcddc6cdea59cbfe74f5bb9a5e43a5f601f9476fef9cc1744e5c782b4b846b",
            "file": "src/app/core/pages/document-builder/components/question-types/05-select/summary/select-summary.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "select-summary",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <ion-label>\n      <b>{{ question.QuestionText }}</b>\n      <p>{{ question.SelectedOptionText }}</p>\n    </ion-label>\n  </ion-item>\n\n  <ion-item *rxIf=\"question.OptionVal === '-1' || question.OptionVal?.includes('###2')\" lines=\"none\">\n    <ion-label>\n      <b>{{ question.CascadeOptionsText || 'Other' }}</b>\n      <p>{{ question.AnswerText }}</p>\n    </ion-label>\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\n\r\n@Component({\r\n  selector: \"select-summary\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <ion-label>\r\n          <b>{{ question.QuestionText }}</b>\r\n          <p>{{ question.SelectedOptionText }}</p>\r\n        </ion-label>\r\n      </ion-item>\r\n\r\n      <ion-item *rxIf=\"question.OptionVal === '-1' || question.OptionVal?.includes('###2')\" lines=\"none\">\r\n        <ion-label>\r\n          <b>{{ question.CascadeOptionsText || 'Other' }}</b>\r\n          <p>{{ question.AnswerText }}</p>\r\n        </ion-label>\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [IonicModule, ...importRxTemplate()]\r\n})\r\nexport class SelectSummaryComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SelectTextComponent",
            "id": "component-SelectTextComponent-1afcdc6ecdc9831599be789a9f7ad036b12a75c30ba751cd87ef398bafcce146c8d3d2140a0ea818c8870823d9f31e83f3001070a3961ff03b66e9b3696c73b3",
            "file": "src/app/core/pages/document-builder/components/question-types/29-select-text/select-text.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "select-text-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n    <camera-capture *rxIf=\"question.CanHaveImg\" class=\"m-0\" slot=\"end\" />\n    <file-upload *rxIf=\"question.CanHaveFiles\" class=\"m-0\" slot=\"end\" />\n  </ion-item>\n  <selectable\n    placeholder=\"Select\"\n    [title]=\"question.QuestionText\"\n    [items]=\"question.AnswerOptions\"\n    [(value)]=\"question.OptionVal\"\n    (itemChange)=\"question.SelectedOptionText = $event?.Text\"\n    itemValue=\"Val\"\n    itemText=\"Text\"\n    [canClear]=\"!question.Required\" />\n  <ion-textarea\n    *rxIf=\"question.OptionVal === '-1' || question.OptionVal?.includes('###2')\"\n    class=\"p-2\"\n    [label]=\"question.CascadeOptionsText || 'Other'\"\n    labelPlacement=\"floating\"\n    [(ngModel)]=\"question.AnswerText\"\n    rows=\"3\"\n    fill=\"outline\" />\n  <ion-textarea\n    class=\"p-2\"\n    [label]=\"question.CommentsText || 'Comments'\"\n    labelPlacement=\"floating\"\n    [(ngModel)]=\"question.MoreAdditionalText\"\n    rows=\"4\"\n    type=\"text\"\n    fill=\"outline\" />\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "validator",
                    "defaultValue": "useSelectTextValidator(() => this.question)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 62
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { SelectableComponent } from \"src/app/shared/components/selectable/selectable.component\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { useSelectTextValidator } from \"./validation/select-text.validator\";\r\n\r\n@Component({\r\n  selector: \"select-text-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n        <camera-capture *rxIf=\"question.CanHaveImg\" class=\"m-0\" slot=\"end\" />\r\n        <file-upload *rxIf=\"question.CanHaveFiles\" class=\"m-0\" slot=\"end\" />\r\n      </ion-item>\r\n      <selectable \r\n        placeholder=\"Select\"\r\n        [title]=\"question.QuestionText\"\r\n        [items]=\"question.AnswerOptions\"\r\n        [(value)]=\"question.OptionVal\"\r\n        (itemChange)=\"question.SelectedOptionText = $event?.Text\"\r\n        itemValue=\"Val\"\r\n        itemText=\"Text\"\r\n        [canClear]=\"!question.Required\" />\r\n      <ion-textarea \r\n        *rxIf=\"question.OptionVal === '-1' || question.OptionVal?.includes('###2')\" \r\n        class=\"p-2\"\r\n        [label]=\"question.CascadeOptionsText || 'Other'\" \r\n        labelPlacement=\"floating\" \r\n        [(ngModel)]=\"question.AnswerText\"\r\n        rows=\"3\" \r\n        fill=\"outline\" />\r\n      <ion-textarea \r\n        class=\"p-2\" \r\n        [label]=\"question.CommentsText || 'Comments'\" \r\n        labelPlacement=\"floating\" \r\n        [(ngModel)]=\"question.MoreAdditionalText\"\r\n        rows=\"4\" \r\n        type=\"text\" \r\n        fill=\"outline\" />\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    FormsModule,\r\n    QuestionTextComponent,\r\n    SelectableComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent\r\n  ]\r\n})\r\nexport class SelectTextComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n\r\n  validator = useSelectTextValidator(() => this.question);\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SelectTextSummaryComponent",
            "id": "component-SelectTextSummaryComponent-7a535f3670bb427f9fc04200338c2da715531e1124c965ab056c8f3ad354df27443230d75f8601d35b0027df7a61dcf4bbc220e7543f13a1428610257e9d4619",
            "file": "src/app/core/pages/document-builder/components/question-types/29-select-text/summary/select-text-summary.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "select-text-summary",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <ion-label>\n      <b>{{ question.QuestionText }}</b>\n      <p>{{ question.SelectedOptionText }}</p>\n    </ion-label>\n  </ion-item>\n\n  <ion-item *rxIf=\"question.OptionVal === '-1' || question.OptionVal?.includes('###2')\" lines=\"none\">\n    <ion-label>\n      <b>{{ question.CascadeOptionsText || 'Other' }}</b>\n      <p>{{ question.AnswerText }}</p>\n    </ion-label>\n  </ion-item>\n\n  <ion-item lines=\"none\">\n    <ion-label>\n      <b>{{ question.CommentsText || 'Comments' }}</b>\n      <p>{{ question.MoreAdditionalText }}</p>\n    </ion-label>\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\n\r\n@Component({\r\n  selector: \"select-text-summary\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <ion-label>\r\n          <b>{{ question.QuestionText }}</b>\r\n          <p>{{ question.SelectedOptionText }}</p>\r\n        </ion-label>\r\n      </ion-item>\r\n\r\n      <ion-item *rxIf=\"question.OptionVal === '-1' || question.OptionVal?.includes('###2')\" lines=\"none\">\r\n        <ion-label>\r\n          <b>{{ question.CascadeOptionsText || 'Other' }}</b>\r\n          <p>{{ question.AnswerText }}</p>\r\n        </ion-label>\r\n      </ion-item>\r\n\r\n      <ion-item lines=\"none\">\r\n        <ion-label>\r\n          <b>{{ question.CommentsText || 'Comments' }}</b>\r\n          <p>{{ question.MoreAdditionalText }}</p>\r\n        </ion-label>\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [IonicModule, ...importRxTemplate()]\r\n})\r\nexport class SelectTextSummaryComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SignatureComponent",
            "id": "component-SignatureComponent-193c556810198487f172942ef64f4a4ba8d574a3fbb82144656bae71ad99ee4a59558e08bfcf16dfd613ed62b9a3c84591e9f5a8e59b52ea71a2e7b22a6fb7e7",
            "file": "src/app/core/pages/document-builder/components/question-types/19-signature/signature.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "signature-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n  </ion-item>\n\n  <ion-item>\n    <ion-input label=\"Print\" labelPlacement=\"floating\" [(ngModel)]=\"question.AnswerText\" type=\"text\" />\n    <ion-button [id]=\"id\" fill=\"clear\" slot=\"end\">\n      <ion-icon name=\"create-outline\" slot=\"icon-only\" />\n    </ion-button>\n  </ion-item>\n</ion-list>\n\n<ion-modal #modal [trigger]=\"id\">\n  <ng-template>\n    <ion-header>\n      <ion-toolbar>\n        <ion-title class=\"text-center\">Signature</ion-title>\n\n        <ion-buttons slot=\"end\">\n          <ion-button (click)=\"modal.dismiss()\" [unpatch] fill=\"clear\">\n            <ion-icon name=\"close-outline\" slot=\"icon-only\" />\n          </ion-button>\n        </ion-buttons>\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content>\n      <signature-pad [points]=\"question.SignaturePoints\" />\n    </ion-content>\n\n    <ion-footer>\n      <ion-grid>\n        <ion-row>\n          <ion-col>\n            <ion-button (click)=\"cancel()\" color=\"danger\" expand=\"full\">\n              Clear\n            </ion-button>\n          </ion-col>\n          <ion-col>\n            <ion-button (click)=\"save(); modal.dismiss()\" color=\"secondary\" expand=\"full\">\n              Save\n            </ion-button>\n          </ion-col>\n        </ion-row>\n      </ion-grid>\n    </ion-footer>\n  </ng-template>\n</ion-modal>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 77,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "id",
                    "defaultValue": "crypto.randomUUID()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 74
                },
                {
                    "name": "signaturePad",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SignaturePadComponent",
                    "optional": false,
                    "description": "",
                    "line": 82,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "SignaturePadComponent"
                        }
                    ]
                },
                {
                    "name": "validator",
                    "defaultValue": "useSignatureValidator(() => this.question)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 79
                }
            ],
            "methodsClass": [
                {
                    "name": "cancel",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 84,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "save",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 88,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input, ViewChild } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { QuestionTextComponent } from \"../extras\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { SignaturePadComponent } from \"src/app/shared/components\";\r\nimport { useSignatureValidator } from \"./validation/signature.validator\";\r\n\r\n@Component({\r\n  selector: \"signature-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n      </ion-item>\r\n\r\n      <ion-item>\r\n        <ion-input label=\"Print\" labelPlacement=\"floating\" [(ngModel)]=\"question.AnswerText\" type=\"text\" />\r\n        <ion-button [id]=\"id\" fill=\"clear\" slot=\"end\">\r\n          <ion-icon name=\"create-outline\" slot=\"icon-only\" />\r\n        </ion-button>\r\n      </ion-item>\r\n    </ion-list>\r\n\r\n    <ion-modal #modal [trigger]=\"id\">\r\n      <ng-template>\r\n        <ion-header>\r\n          <ion-toolbar>\r\n            <ion-title class=\"text-center\">Signature</ion-title>\r\n\r\n            <ion-buttons slot=\"end\">\r\n              <ion-button (click)=\"modal.dismiss()\" [unpatch] fill=\"clear\">\r\n                <ion-icon name=\"close-outline\" slot=\"icon-only\" />\r\n              </ion-button>\r\n            </ion-buttons>\r\n          </ion-toolbar>\r\n        </ion-header>\r\n\r\n        <ion-content>\r\n          <signature-pad [points]=\"question.SignaturePoints\" />\r\n        </ion-content>\r\n        \r\n        <ion-footer>\r\n          <ion-grid>\r\n            <ion-row>\r\n              <ion-col>\r\n                <ion-button (click)=\"cancel()\" color=\"danger\" expand=\"full\">\r\n                  Clear\r\n                </ion-button>\r\n              </ion-col>\r\n              <ion-col>\r\n                <ion-button (click)=\"save(); modal.dismiss()\" color=\"secondary\" expand=\"full\">\r\n                  Save\r\n                </ion-button>\r\n              </ion-col>\r\n            </ion-row>\r\n          </ion-grid>\r\n        </ion-footer>\r\n      </ng-template>\r\n    </ion-modal>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    FormsModule,\r\n    QuestionTextComponent,\r\n    SignaturePadComponent\r\n  ]\r\n})\r\nexport class SignatureComponent {\r\n  id = crypto.randomUUID();\r\n  \r\n  @Input({ required: true })\r\n  question!: Question;\r\n\r\n  validator = useSignatureValidator(() => this.question);\r\n\r\n  @ViewChild(SignaturePadComponent)\r\n  signaturePad!: SignaturePadComponent;\r\n  \r\n  cancel() {\r\n    this.signaturePad.clear();\r\n  }\r\n\r\n  save() {\r\n    this.question.SignaturePoints = this.signaturePad.dataPoints();\r\n    this.question.SignatureDataUrl = this.signaturePad.toDataUrl();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SignaturePadComponent",
            "id": "component-SignaturePadComponent-1da0267139a8aa2e6121517ac4050fbb3a947ade01fd2538e5c752dc83f0647dacd50385143417137c7e3155718ac3ccd132a2ee4b846438880c892cb47f9f01",
            "file": "src/app/shared/components/signature-pad/signature-pad.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "signature-pad",
            "styleUrls": [],
            "styles": [],
            "template": "<canvas\n  signature-pad\n  [points]=\"points\"\n  class=\"border border-black bg-white\"\n  (window:resize)=\"resize.next()\"\n  [width]=\"width$ | push\"\n  [height]=\"height$ | push\">\n</canvas>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "points",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 66,
                    "type": "PointGroup[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "height$",
                    "defaultValue": "merge(this.afterViewInit(), this.resize()).pipe(\r\n    debounceTime(300),\r\n    map(() => this.parentElement.offsetHeight - 2)\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 76
                },
                {
                    "name": "parentElement",
                    "defaultValue": "useParentElement()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 68
                },
                {
                    "name": "resize",
                    "defaultValue": "use()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 69
                },
                {
                    "name": "signatureDirective",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SignaturePadDirective",
                    "optional": true,
                    "description": "",
                    "line": 63,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "SignaturePadDirective"
                        }
                    ]
                },
                {
                    "name": "width$",
                    "defaultValue": "merge(this.afterViewInit(), this.resize()).pipe(\r\n    debounceTime(300),\r\n    map(() => this.parentElement.offsetWidth - 2)\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 71
                }
            ],
            "methodsClass": [
                {
                    "name": "clear",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 89,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "dataPoints",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toDataUrl",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Directive, EventEmitter, Input, Output, ViewChild } from \"@angular/core\";\r\nimport { debounceTime, map, merge } from \"rxjs\";\r\nimport SignaturePad, { PointGroup } from \"signature_pad\";\r\nimport { AngularComponent, withAfterViewInit } from \"../../lifecycles\";\r\nimport { PushPipe } from \"@rx-angular/template/push\";\r\nimport { use } from \"../../rxjs/use\";\r\nimport { useElement, useParentElement } from \"../../angular/element\";\r\n\r\n@Directive({\r\n  selector: \"canvas[signature-pad]\",\r\n  standalone: true\r\n})\r\nexport class SignaturePadDirective {\r\n  element = useElement<HTMLCanvasElement>();\r\n\r\n  signaturePad = new SignaturePad(this.element, {\r\n    minWidth: 2,\r\n    maxWidth: 5,\r\n    backgroundColor: \"rgb(255,255,255)\"\r\n  });\r\n\r\n  @Input()\r\n  points?: PointGroup[] = [];\r\n\r\n  @Output()\r\n  pointsChange = new EventEmitter<PointGroup[]>();\r\n\r\n  ngOnInit() {\r\n    this.signaturePad.fromData(this.points || []);\r\n  }\r\n\r\n  dataPoints() {\r\n    return this.signaturePad.toData();\r\n  }\r\n\r\n  toDataUrl() {\r\n    return this.signaturePad.toDataURL();\r\n  }\r\n\r\n  clear() {\r\n    this.signaturePad.clear();\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: \"signature-pad\",\r\n  template: `\r\n    <canvas \r\n      signature-pad \r\n      [points]=\"points\"\r\n      class=\"border border-black bg-white\" \r\n      (window:resize)=\"resize.next()\"\r\n      [width]=\"width$ | push\"\r\n      [height]=\"height$ | push\">\r\n    </canvas>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [PushPipe, SignaturePadDirective]\r\n})\r\nexport class SignaturePadComponent extends AngularComponent(withAfterViewInit) {\r\n  @ViewChild(SignaturePadDirective)\r\n  signatureDirective?: SignaturePadDirective;\r\n\r\n  @Input()\r\n  points?: PointGroup[] = [];\r\n\r\n  parentElement = useParentElement();\r\n  resize = use();\r\n\r\n  width$ = merge(this.afterViewInit(), this.resize()).pipe(\r\n    debounceTime(300),\r\n    map(() => this.parentElement.offsetWidth - 2)\r\n  );\r\n\r\n  height$ = merge(this.afterViewInit(), this.resize()).pipe(\r\n    debounceTime(300),\r\n    map(() => this.parentElement.offsetHeight - 2)\r\n  );\r\n\r\n  dataPoints() {\r\n    return this.signatureDirective?.dataPoints();\r\n  }\r\n\r\n  toDataUrl() {\r\n    return this.signatureDirective?.toDataUrl();\r\n  }\r\n\r\n  clear() {\r\n    this.signatureDirective?.clear();\r\n  }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SignatureSummaryComponent",
            "id": "component-SignatureSummaryComponent-1b494b9998141599f7b7ca8c065ccfed71abc730b9389ed9c3be8614b40d309c49c140c85dc9d5e6697caec0c800d4b08623e5a07b552db8d91735392578f962",
            "file": "src/app/core/pages/document-builder/components/question-types/19-signature/summary/signature-summary.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "signature-summary",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <ion-label>\n      <b >{{ question.QuestionText }}</b>\n      <p>{{ question.AnswerText }}</p>\n    </ion-label>\n  </ion-item>\n</ion-list>\n\n<img *rxIf=\"question.SignatureDataUrl != null\" [src]=\"question.SignatureDataUrl\" />\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\n\r\n@Component({\r\n  selector: \"signature-summary\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <ion-label>\r\n          <b >{{ question.QuestionText }}</b>\r\n          <p>{{ question.AnswerText }}</p>\r\n        </ion-label>\r\n      </ion-item>\r\n    </ion-list>\r\n\r\n    <img *rxIf=\"question.SignatureDataUrl != null\" [src]=\"question.SignatureDataUrl\" />\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate()\r\n  ]\r\n})\r\nexport class SignatureSummaryComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SiteBannerComponent",
            "id": "component-SiteBannerComponent-d4b52b4ea39f4d0efae2cc3e70505e26b7599fc96b7679b63c201e850e6f01750622ce75da46361e81a82abdcbe67ef63eb5fa6a5e1c0c1f7d115359a2f2051f",
            "file": "src/app/core/pages/document-builder/components/info-types/site-banner/site-banner.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "site-banner",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-card>\n  <ion-card-header>\n    <ion-card-title></ion-card-title>\n  </ion-card-header>\n</ion-card>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from \"@angular/core\";\nimport { IonicModule } from \"@ionic/angular\";\n\n@Component({\n  selector: \"site-banner\",\n  template: `\n    <ion-card>\n      <ion-card-header>\n        <ion-card-title></ion-card-title>\n      </ion-card-header>\n    </ion-card>\n  `,\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [IonicModule]\n})\nexport class SiteBannerComponent {}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SiteSelectComponent",
            "id": "component-SiteSelectComponent-aa314eb8241e08fc75b51689341f20cfb774a94401a84dccf9bdcc5363e013102c38c80b23c4bcdc593ed74425175e48b456c71c553a20bfa2c1cd9a439f5b28",
            "file": "src/app/core/pages/document-builder/components/input-types/site-select/site-select.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "site-select",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-card>\n  <ion-card-header>\n    <ion-card-title class=\"text-center\">{{ title || \"Select a site\" }}</ion-card-title>\n    <p *rxIf=\"isMobileApp\" class=\"text-center\">\n      <b>Setting site only attaches site on to this document and does not change site in settings</b>\n    </p>\n  </ion-card-header>\n  <ion-card-content>\n    <selectable\n      [title]=\"title || 'Select a site'\"\n      placeholder=\"Select Site\"\n      [items]=\"sites.data() | push\"\n      itemValue=\"Id\"\n      itemText=\"Name\"\n      [value]=\"siteId\"\n      (valueChange)=\"siteChange($event)\"\n      [canClear]=\"false\" />\n  </ion-card-content>\n</ion-card>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "siteId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "siteIdChange",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "isMobileApp",
                    "defaultValue": "isMobileApp()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "sites",
                    "defaultValue": "useSites()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 42
                }
            ],
            "methodsClass": [
                {
                    "name": "siteChange",
                    "args": [
                        {
                            "name": "siteId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "siteId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { useSites } from \"src/app/core/http/login.api\";\r\nimport { SelectableComponent } from \"src/app/shared/components\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { AngularComponent, withAfterViewInit, withOnChanges } from \"src/app/shared/lifecycles\";\r\nimport { isMobileApp } from \"src/app/shared/plugins/platform.plugin\";\r\n\r\n@Component({\r\n  selector: \"site-select\",\r\n  template: `\r\n    <ion-card>\r\n      <ion-card-header>\r\n        <ion-card-title class=\"text-center\">{{ title || \"Select a site\" }}</ion-card-title>\r\n        <p *rxIf=\"isMobileApp\" class=\"text-center\">\r\n          <b>Setting site only attaches site on to this document and does not change site in settings</b>\r\n        </p>\r\n      </ion-card-header>\r\n      <ion-card-content>\r\n        <selectable \r\n          [title]=\"title || 'Select a site'\" \r\n          placeholder=\"Select Site\"\r\n          [items]=\"sites.data() | push\"\r\n          itemValue=\"Id\"\r\n          itemText=\"Name\"\r\n          [value]=\"siteId\"\r\n          (valueChange)=\"siteChange($event)\"\r\n          [canClear]=\"false\" />\r\n      </ion-card-content>\r\n    </ion-card>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    SelectableComponent\r\n  ]\r\n})\r\nexport class SiteSelectComponent extends AngularComponent(withAfterViewInit, withOnChanges) {\r\n  isMobileApp = isMobileApp();\r\n  sites = useSites();\r\n\r\n  @Input()\r\n  title?: string;\r\n\r\n  @Input()\r\n  siteId?: number;\r\n\r\n  @Output()\r\n  siteIdChange = new EventEmitter<number>();\r\n\r\n  siteChange(siteId: number) {\r\n    this.siteId = siteId;\r\n    this.siteIdChange.emit(this.siteId);\r\n  }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SiteSelectSummaryComponent",
            "id": "component-SiteSelectSummaryComponent-efff7c448b26638e24cd9eab6127060fcc535b1da07ec0a6b48a05bdf258177d99604cd68eccc6261b0042f1d7ca23e5cfbeba540833148eeda41afef9250457",
            "file": "src/app/core/pages/document-builder/components/input-types/site-select/summary/site-select-summary.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "site-select-summary",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-item lines=\"none\">\n  <ion-label>\n    <h3>{{ title || \"Site\" }}</h3>\n    <p *rxIf=\"site(); let site\">{{ site.Name }}</p>\n  </ion-label>\n</ion-item>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "string",
                    "decorators": []
                },
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "site",
                    "defaultValue": "this.sites.data(sites => sites.find(s => s.Id === this.siteId))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "sites",
                    "defaultValue": "useSites()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { useSites } from \"src/app/core/http/login.api\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\n\r\n@Component({\r\n  selector: \"site-select-summary\",\r\n  template: `\r\n    <ion-item lines=\"none\">\r\n      <ion-label>\r\n        <h3>{{ title || \"Site\" }}</h3>\r\n        <p *rxIf=\"site(); let site\">{{ site.Name }}</p>\r\n      </ion-label>\r\n    </ion-item>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [IonicModule, ...importRxTemplate()]\r\n})\r\nexport class SiteSelectSummaryComponent {\r\n  sites = useSites();\r\n\r\n  @Input()\r\n  title?: string;\r\n\r\n  @Input({ required: true })\r\n  siteId!: number;\r\n\r\n  site = this.sites.data(sites => sites.find(s => s.Id === this.siteId));\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "TemplateMenuModal",
            "id": "component-TemplateMenuModal-3084e6343640c1d985ee6d921f0244966eac9eeeff7e45d217e76908f5b85c0bea650f16111ecf8e72912845dfce9de64e5ade2291e1efb8e02fec6cef91fc9e",
            "file": "src/app/core/pages/document-builder/modals/template-menu/template-menu.modal.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "template-menu-modal",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-modal #modal [isOpen]=\"isOpen\">\n  <ng-template>\n    <ion-header>\n      <ion-toolbar>\n        <ion-title class=\"text-center\">\n          Templates\n          <ion-spinner *rxIf=\"templates.isLoading()\" class=\"float-right\" />\n        </ion-title>\n      </ion-toolbar>\n      <ion-toolbar>\n        <ion-searchbar [(ngModel)]=\"search\" debounce=\"300\" />\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content class=\"ion-padding\">\n      <ion-list class=\"h-full\">\n        <rx-virtual-scroll-viewport [itemSize]=\"50\">\n          <ion-item *rxVirtualFor=\"let template of templates.data()\n          | fuse: {\n            search: search,\n            keys: ['Title']\n          }\"\n          class=\"w-full\"\n          (click)=\"select.emit(template.Id); modal.dismiss()\"\n          button>\n            {{ template.Title }}\n          </ion-item>\n        </rx-virtual-scroll-viewport>\n      </ion-list>\n    </ion-content>\n  </ng-template>\n</ion-modal>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 67,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "select",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "search",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 68
                },
                {
                    "name": "templates",
                    "defaultValue": "useAllTemplates()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 64
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { useAllTemplates } from \"src/app/core/http/template.api\";\r\nimport { importRxTemplate, importRxFixedVirtualScroll } from \"src/app/shared/imports\";\r\nimport { FusePipe } from \"src/app/shared/pipes\";\r\n\r\nexport interface PaginatedList<T> {\r\n  Items: T[],\r\n  PageNumber: number,\r\n  TotalPage: number,\r\n  TotalCount: number,\r\n  HasPreviousPage: boolean,\r\n  HasNextPage: boolean\r\n}\r\n\r\n@Component({\r\n  selector: \"template-menu-modal\",\r\n  template: `\r\n    <ion-modal #modal [isOpen]=\"isOpen\">\r\n      <ng-template>\r\n        <ion-header>\r\n          <ion-toolbar>\r\n            <ion-title class=\"text-center\">\r\n              Templates\r\n              <ion-spinner *rxIf=\"templates.isLoading()\" class=\"float-right\" />\r\n            </ion-title>\r\n          </ion-toolbar>\r\n          <ion-toolbar>\r\n            <ion-searchbar [(ngModel)]=\"search\" debounce=\"300\" />\r\n          </ion-toolbar>\r\n        </ion-header>\r\n\r\n        <ion-content class=\"ion-padding\">\r\n          <ion-list class=\"h-full\">\r\n            <rx-virtual-scroll-viewport [itemSize]=\"50\">\r\n              <ion-item *rxVirtualFor=\"let template of templates.data()\r\n              | fuse: {\r\n                search: search,\r\n                keys: ['Title']\r\n              }\" \r\n              class=\"w-full\" \r\n              (click)=\"select.emit(template.Id); modal.dismiss()\" \r\n              button>\r\n                {{ template.Title }}\r\n              </ion-item>\r\n            </rx-virtual-scroll-viewport>\r\n          </ion-list>\r\n        </ion-content>\r\n      </ng-template>\r\n    </ion-modal>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    ...importRxFixedVirtualScroll(),\r\n    FormsModule,\r\n    FusePipe\r\n  ]\r\n})\r\nexport class TemplateMenuModal {\r\n  templates = useAllTemplates();\r\n\r\n  @Input()\r\n  isOpen: boolean = false;\r\n  search: string = \"\";\r\n\r\n  @Output()\r\n  select = new EventEmitter<number>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "TextareaComponent",
            "id": "component-TextareaComponent-564e6022cdbf1d809ea634ff41b668b042dcd26d39c398057b784cc1529e45b6e1d73f39132f37398014c8e86e580e810908433eb904e7132ce808aafbc65de7",
            "file": "src/app/core/pages/document-builder/components/question-types/04-textarea/textarea.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "textarea-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">\n      {{ question.QuestionText }}\n    </question-text>\n    <camera-capture *rxIf=\"question.CanHaveImg\" class=\"m-0\" slot=\"end\" />\n    <file-upload *rxIf=\"question.CanHaveFiles\" class=\"m-0\" slot=\"end\" />\n  </ion-item>\n  <ion-textarea class=\"p-2\" label=\"\" rows=\"6\" fill=\"outline\" [(ngModel)]=\"question.AnswerText\" />\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "effects",
                    "defaultValue": "[\r\n    createEffect(\r\n      () => this.validator.validate(),\r\n      merge(this.afterViewInit(), this.input(\"question\"))\r\n    )\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "validator",
                    "defaultValue": "useTextboxValidator(() => this.question)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 41
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { useTextboxValidator } from \"../03-textbox/validation/textbox-validator\";\r\nimport { createEffect } from \"src/app/shared/rxjs\";\r\nimport { merge } from \"rxjs\";\r\nimport { AngularComponent, withAfterViewInit, withOnChanges } from \"src/app/shared/lifecycles\";\r\n\r\n@Component({\r\n  selector: \"textarea-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">\r\n          {{ question.QuestionText }}\r\n        </question-text>\r\n        <camera-capture *rxIf=\"question.CanHaveImg\" class=\"m-0\" slot=\"end\" />\r\n        <file-upload *rxIf=\"question.CanHaveFiles\" class=\"m-0\" slot=\"end\" />\r\n      </ion-item>\r\n      <ion-textarea class=\"p-2\" label=\"\" rows=\"6\" fill=\"outline\" [(ngModel)]=\"question.AnswerText\" />\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    FormsModule,\r\n    ...importRxTemplate(),\r\n    QuestionTextComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent\r\n  ]\r\n})\r\nexport class TextareaComponent extends AngularComponent(withAfterViewInit, withOnChanges) {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n\r\n  validator = useTextboxValidator(() => this.question);\r\n\r\n  effects = [\r\n    createEffect(\r\n      () => this.validator.validate(),\r\n      merge(this.afterViewInit(), this.input(\"question\"))\r\n    )\r\n  ];\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "TextboxComponent",
            "id": "component-TextboxComponent-32d5362b8eabd8b2f472f52ac6a3b8f058a2d65cca5884cb166863f7bdeadbf6be0a5d4a1b456999c6bc60471c9a1aea3189ae3c77a25e0d87f3e6243a102f32",
            "file": "src/app/core/pages/document-builder/components/question-types/03-textbox/textbox.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "textbox-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n    <camera-capture *rxIf=\"question.CanHaveImg\" class=\"m-0\" slot=\"end\" />\n    <file-upload *rxIf=\"question.CanHaveFiles\" class=\"m-0\" slot=\"end\" />\n  </ion-item>\n  <ion-item>\n    <ion-input\n      [class.ng-invalid]=\"validator.isInvalid$ | push\"\n      [class.ng-valid]=\"validator.isValid$ | push\"\n      label=\"\"\n      type=\"text\"\n      [(ngModel)]=\"question.AnswerText\"\n      (keyup)=\"validator.validate()\" />\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "effects",
                    "defaultValue": "[\r\n    createEffect(\r\n      () => this.validator.validate(),\r\n      merge(this.afterViewInit(), this.input(\"question\"))\r\n    )\r\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "validator",
                    "defaultValue": "useTextboxValidator(() => this.question)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 48
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { merge } from \"rxjs\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\r\nimport { useTextboxValidator } from \"./validation/textbox-validator\";\r\nimport { AngularComponent, withAfterViewInit, withOnChanges } from \"src/app/shared/lifecycles\";\r\nimport { createEffect } from \"src/app/shared/rxjs\";\r\n\r\n@Component({\r\n  selector: \"textbox-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n        <camera-capture *rxIf=\"question.CanHaveImg\" class=\"m-0\" slot=\"end\" />\r\n        <file-upload *rxIf=\"question.CanHaveFiles\" class=\"m-0\" slot=\"end\" />\r\n      </ion-item>\r\n      <ion-item>\r\n        <ion-input\r\n          [class.ng-invalid]=\"validator.isInvalid$ | push\" \r\n          [class.ng-valid]=\"validator.isValid$ | push\"\r\n          label=\"\" \r\n          type=\"text\" \r\n          [(ngModel)]=\"question.AnswerText\"\r\n          (keyup)=\"validator.validate()\" />\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    QuestionTextComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent\r\n  ]\r\n})\r\nexport class TextboxComponent extends AngularComponent(withAfterViewInit, withOnChanges) {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n\r\n  validator = useTextboxValidator(() => this.question);\r\n\r\n  effects = [\r\n    createEffect(\r\n      () => this.validator.validate(),\r\n      merge(this.afterViewInit(), this.input(\"question\"))\r\n    )\r\n  ];\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "TextboxSummaryComponent",
            "id": "component-TextboxSummaryComponent-2adea203e1bbf32fe2fd8df31a4e036a6bb513c457614c65701ccab7e9d45312727622f2d414b0cbd84af2149dc3d25e7569ee429c1dd258c3f54536c190e075",
            "file": "src/app/core/pages/document-builder/components/question-types/03-textbox/summary/textbox-summary.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "textbox-summary",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <ion-label class=\"font-bold\">{{ question.QuestionText }}</ion-label>\n  </ion-item>\n  <ion-item lines=\"none\">\n    <p>{{ question.AnswerText }}</p>\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\n\r\n@Component({\r\n  selector: \"textbox-summary\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <ion-label class=\"font-bold\">{{ question.QuestionText }}</ion-label>\r\n      </ion-item>\r\n      <ion-item lines=\"none\">\r\n        <p>{{ question.AnswerText }}</p>\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [IonicModule]\r\n})\r\nexport class TextboxSummaryComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "TimeComponent",
            "id": "component-TimeComponent-a94d30b843d2f9eb5af19e477589ed939930bacf9c34139ed2cc0807ef6c4df6008c7e1a77fd8f9e84af896030f6529b73b9059b44b3d6401d17eca838743e99",
            "file": "src/app/core/pages/document-builder/components/question-types/32-time/time.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "time-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n  </ion-item>\n\n  <ion-item>\n    <time-picker [(time)]=\"question.DateAndTime\" class=\"w-full\" />\n    <ion-icon name=\"time-outline\" slot=\"end\"></ion-icon>\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "validator",
                    "defaultValue": "useTimeValidiator(() => this.question)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { QuestionTextComponent } from \"../extras\";\r\nimport { TimePickerComponent } from \"src/app/shared/components\";\r\nimport { useTimeValidiator } from \"./validation/time.validator\";\r\n\r\n@Component({\r\n  selector: \"time-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n      </ion-item>\r\n\r\n      <ion-item>\r\n        <time-picker [(time)]=\"question.DateAndTime\" class=\"w-full\" />\r\n        <ion-icon name=\"time-outline\" slot=\"end\"></ion-icon>\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    QuestionTextComponent,\r\n    TimePickerComponent\r\n  ]\r\n})\r\nexport class TimeComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n\r\n  validator = useTimeValidiator(() => this.question);\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "TimePickerComponent",
            "id": "component-TimePickerComponent-f4bff8fe516a166d573914a417d2cec9edab5380cf6ac7f79364c1006755f4e21fe5ffef41790ff59a175f20725435d64236c8c4c71d40d0e3c54c93544be1d7",
            "file": "src/app/shared/components/time-picker/time-picker.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "time-picker",
            "styleUrls": [],
            "styles": [
                "\n    :host { display: contents }\n\n    input[type=\"time\"] {\n      width: 100%;\n      padding: 0 6px;\n      border: 0px;\n      background-color:rgba(0, 0, 0, 0);\n      -webkit-appearance: none;\n    }\n  "
            ],
            "template": "<input\n  #timeInput\n  type=\"time\"\n  [class]=\"className\"\n  [value]=\"timeValue$ | push\"\n  (change)=\"change(timeInput.value)\" />\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "class",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "time",
                    "defaultValue": "new Date()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "Nullable<Date>",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "timeChange",
                    "defaultValue": "new EventEmitter<Date>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "time$",
                    "defaultValue": "merge(this.afterViewInit(), this.input(\"time\")).pipe(\r\n    map(() => this.time || new Date())\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Date>",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "timeChangeEffect",
                    "defaultValue": "merge(this.afterViewInit(), this.input(\"time\")).pipe(\r\n    takeUntilDestroyed(),\r\n    filter(() => this.time == null),\r\n    switchMap(() => this.time$),\r\n  )\r\n  .subscribe(time => this.timeChange.emit(time))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Subscription",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "timeValue$",
                    "defaultValue": "this.time$.pipe(\r\n    map(time => time.toFormat(\"HH:mm\"))\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string>",
                    "optional": false,
                    "description": "",
                    "line": 41
                }
            ],
            "methodsClass": [
                {
                    "name": "change",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 54,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { PushPipe } from \"@rx-angular/template/push\";\r\nimport { AngularComponent, withAfterViewInit, withOnChanges } from \"../../lifecycles\";\r\nimport { Observable, Subscription, filter, map, merge, switchMap } from \"rxjs\";\r\nimport { takeUntilDestroyed } from \"@angular/core/rxjs-interop\";\r\n\r\n@Component({\r\n  selector: \"time-picker\",\r\n  styles: [`\r\n    :host { display: contents }\r\n\r\n    input[type=\"time\"] {\r\n      width: 100%;\r\n      padding: 0 6px;\r\n      border: 0px;\r\n      background-color:rgba(0, 0, 0, 0);\r\n      -webkit-appearance: none;\r\n    }\r\n  `],\r\n  template: `\r\n    <input \r\n      #timeInput \r\n      type=\"time\" \r\n      [class]=\"className\"\r\n      [value]=\"timeValue$ | push\" \r\n      (change)=\"change(timeInput.value)\" />\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [PushPipe]\r\n})\r\nexport class TimePickerComponent extends AngularComponent(withAfterViewInit, withOnChanges) {\r\n  @Input(\"class\")\r\n  className: string = \"\";\r\n  \r\n  @Input()\r\n  time: Nullable<Date> = new Date();\r\n  time$: Observable<Date> = merge(this.afterViewInit(), this.input(\"time\")).pipe(\r\n    map(() => this.time || new Date())\r\n  );\r\n  timeValue$: Observable<string> = this.time$.pipe(\r\n    map(time => time.toFormat(\"HH:mm\"))\r\n  );\r\n\r\n  @Output()\r\n  timeChange = new EventEmitter<Date>();\r\n  timeChangeEffect: Subscription = merge(this.afterViewInit(), this.input(\"time\")).pipe(\r\n    takeUntilDestroyed(),\r\n    filter(() => this.time == null),\r\n    switchMap(() => this.time$),\r\n  )\r\n  .subscribe(time => this.timeChange.emit(time));\r\n  \r\n  change(value: string) {\r\n    const time = Date.parseFormat(value, \"HH:mm\");\r\n    this.timeChange.emit(time);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n    :host { display: contents }\n\n    input[type=\"time\"] {\n      width: 100%;\n      padding: 0 6px;\n      border: 0px;\n      background-color:rgba(0, 0, 0, 0);\n      -webkit-appearance: none;\n    }\n  \n"
        },
        {
            "name": "TimeSummaryComponent",
            "id": "component-TimeSummaryComponent-b3a3d3893e3c4561afbeb0d1404e2001ec11b557861ef153c68d57bc507790309a4bd569264ead2ca767d659fcfe00abfacf100c2ef0b8958041d34fb441cdf8",
            "file": "src/app/core/pages/document-builder/components/question-types/32-time/summary/time-summary.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "time-summary",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <ion-label>\n      <b>{{ question.QuestionText }}</b>\n      <p>{{ question.DateAndTime?.toFormat(\"HH:mm\") }}</p>\n    </ion-label>\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\n\r\n@Component({\r\n  selector: \"time-summary\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <ion-label>\r\n          <b>{{ question.QuestionText }}</b>\r\n          <p>{{ question.DateAndTime?.toFormat(\"HH:mm\") }}</p>\r\n        </ion-label>\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [IonicModule]\r\n})\r\nexport class TimeSummaryComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ToggleButtonComponent",
            "id": "component-ToggleButtonComponent-db50cd3919eab86cee886f2683d51a5f1440e90c3efc52684c50488526050a3db75d04372892a2c8da1a6ca112305ff9537168cad40caf48c93c6d24766bfcfd",
            "file": "src/app/shared/components/toggle-button/toggle-button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "toggle-button",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-button *rxIf=\"checked\" (click)=\"change()\" color=\"primary\">\n  <ion-icon *rxIf=\"icon != null\" [name]=\"icon\"></ion-icon>\n</ion-button>\n<ion-button *rxIf=\"!checked\" (click)=\"change()\">\n  <ion-icon *rxIf=\"icon != null\" name=\"{{icon}}-outline\"></ion-icon>\n</ion-button>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "checked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "icon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "Nullable<string>",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "checkedChange",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "change",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\nimport { IonicModule } from \"@ionic/angular\";\nimport { RxIf } from \"@rx-angular/template/if\";\n\n@Component({\n  selector: \"toggle-button\",\n  template: `\n    <ion-button *rxIf=\"checked\" (click)=\"change()\" color=\"primary\">\n      <ion-icon *rxIf=\"icon != null\" [name]=\"icon\"></ion-icon>\n    </ion-button>\n    <ion-button *rxIf=\"!checked\" (click)=\"change()\">\n      <ion-icon *rxIf=\"icon != null\" name=\"{{icon}}-outline\"></ion-icon>\n    </ion-button>\n  `,\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    IonicModule,\n    RxIf\n  ]\n})\nexport class ToggleButtonComponent {\n  @Input()\n  icon: Nullable<string>;\n  \n  @Input()\n  checked: boolean = false;\n\n  @Output()\n  checkedChange = new EventEmitter<boolean>();\n\n  change() {\n    this.checked = !this.checked;\n    this.checkedChange.emit(this.checked);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "UploadComponent",
            "id": "component-UploadComponent-74052a6df80ab69ecae6845cd0a41d769e7d7e0bcaa3e22bd78fbc0266dd36a7e4b17b8f408835661d09fcb7f586fde08d755a314dd7c193ec1f7d3160de392a",
            "file": "src/app/shared/components/upload/upload.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "upload",
            "styleUrls": [],
            "styles": [
                "\n    :host { display: contents }\n  "
            ],
            "template": "<label [for]=\"id\" class=\"w-full h-full fixed cursor-pointer z-50\"></label>\n<input [id]=\"id\" type=\"file\" [accept]=\"accept\" [multiple]=\"multiple\" (change)=\"take($event)\" class=\"hidden\" />\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "accept",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "multiple",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "uploadFiles",
                    "defaultValue": "new EventEmitter<DataUrlFile[]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "id",
                    "defaultValue": "crypto.randomUUID()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                }
            ],
            "methodsClass": [
                {
                    "name": "take",
                    "args": [
                        {
                            "name": "ev",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 49,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "ev",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { TargetEvent } from \"../../models/events/target-event.model\";\r\nimport { DataUrlFile } from \"../../models/files/data-url-file.model\";\r\n\r\nfunction fileReader(): FileReader {\r\n  const fileReader = new FileReader();\r\n  const zoneOriginalInstance = (fileReader as any)[\"__zone_symbol__originalInstance\"];\r\n  return zoneOriginalInstance || fileReader;\r\n}\r\n\r\nfunction fileToDataUrlFile(file: File): Promise<DataUrlFile> {\r\n  const reader = fileReader();\r\n  return new Promise(resolve => {\r\n    reader.onload = (event) => resolve({ \r\n      name: file.name, \r\n      lastModified: file.lastModified, \r\n      size: file.size, \r\n      type: file.type, \r\n      dataUrl: event.target!.result as string \r\n    })//resolve(event.target!.result as string);\r\n    reader.readAsDataURL(file);\r\n  });\r\n}\r\n\r\n@Component({\r\n  selector: \"upload\",\r\n  styles: [`\r\n    :host { display: contents }\r\n  `],\r\n  template: `\r\n    <label [for]=\"id\" class=\"w-full h-full fixed cursor-pointer z-50\"></label>\r\n    <input [id]=\"id\" type=\"file\" [accept]=\"accept\" [multiple]=\"multiple\" (change)=\"take($event)\" class=\"hidden\" />\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class UploadComponent {\r\n  id = crypto.randomUUID();\r\n\r\n  @Input()\r\n  accept?: string;\r\n\r\n  @Input()\r\n  multiple: boolean = false;\r\n\r\n  @Output()\r\n  uploadFiles = new EventEmitter<DataUrlFile[]>();\r\n\r\n  async take(ev: unknown) {\r\n    const event = ev as TargetEvent<{ files: File[], value: null }>;\r\n    const files: File[] = [...event.target.files];\r\n\r\n    const dataUrlFiles = await Promise.all(files.map(fileToDataUrlFile));\r\n    this.uploadFiles.emit(dataUrlFiles);\r\n    event.target.value = null;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n    :host { display: contents }\n  \n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "DateOnly",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/datetime-picker/datetime-picker.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/registration/registration.page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/camera/camera.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/datetime-picker/datetime-picker.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/multi-selectable/multi-selectable.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/selectable/selectable.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/signature-pad/signature-pad.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/time-picker/time-picker.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modals/operative-list/operative-list.modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modals/asset-list/asset-list.modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/info/asset-info/asset-info.page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/child-document-card/child-document-card.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/modals/document-summary/document-summary.modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/modals/template-menu/template-menu.modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modals/operative-list/components/local-operative-search/local-operative-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modals/operative-list/components/online-operative-search/online-operative-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/document-section/multi-checkbox-section/multi-checkbox-section.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/actioner-select/actioner-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/category-actioner-select/category-actioner-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/company-actioner-select/company-actioner-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/document-image-upload/document-image-upload.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/queue-duration/queue-duration.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/responsibility-area-select/responsibility-area-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/site-select/site-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/01-checkbox/checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/00-label/label.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/remain-anonymous/remain-anonymous.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/02-radio-table/radio-table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/03-textbox/textbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/04-textarea/textarea.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/05-select/select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/02-radio-group/radio-group.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/07-radio-group-textbox/radio-group-textbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/07-radio-table-textbox/radio-table-textbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/08-date/date.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/09-datetime/datetime.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/10-operative-list/operative-list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/12-number/number.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/13-cascade-select/cascade-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/16-linked-bool/linked-bool.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/17-asset-list/asset-list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/18-linked-dates/linked-dates.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/19-signature/signature.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/21-company-select/company-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/22-area-select/area-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/25-asset-groups-and-types/asset-groups-and-types.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/26-asset-inspection-schedules/asset-inspection-schedules.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/27-project-select/project-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/28-rams-select/rams-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/29-select-text/select-text.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/30-cascade-select-text/cascade-select-text.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/32-time/time.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/33-linked-times/linked-times.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/34-hra-select/hra-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/36-linked-date-time/linked-datetime.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/06-checkbox-textbox/checkbox-textbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/remain-anonymous/summary/remain-anonymous-summary.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/18-linked-dates/summary/linked-dates-summary.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/extras/camera-capture/camera-capture.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/extras/file-upload/file-upload.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "defaultDoc",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/modals/document-summary/document-summary.modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "SiteDocument",
                "defaultValue": "{\r\n  ...defaultSiteDocument,\r\n  DocumentTitle: faker.lorem.word(),\r\n  RemainAnon: true,\r\n  CurrentActionerOperativeID: 1,\r\n  CompanyActionerId: 1,\r\n  SiteId: 1,\r\n  AutoQueueID: 1,\r\n  QueueDuration: {\r\n    Value: 6,\r\n    Type: \"Hours\"\r\n  },\r\n  MetaData: {\r\n    ActionerText: \"Pick your actioner\",\r\n    SiteListTitle: \"Pick your site\"\r\n  },\r\n  Pages: [\r\n    {\r\n      PageID: 1,\r\n      PageTitle: faker.lorem.words(),\r\n      PageNo: 1,\r\n      Hidden: false,\r\n      Sections: Object\r\n        .values(QuestionType)\r\n        .filter(qt => typeof qt === \"number\")\r\n        .map((qt, idx) => \r\n          ({\r\n            ...defaultSection,\r\n            SectionID: idx,\r\n            SectionNo: idx,\r\n            SectionTitle: faker.lorem.words(),\r\n            TableTitles: [\r\n              faker.lorem.word(),\r\n              faker.lorem.word(),\r\n              faker.lorem.word()\r\n            ],\r\n            SectionQuestiontype: qt as QuestionType,\r\n            Questions: [\r\n              {\r\n                ...defaultQuestion,\r\n                QuestionText: QuestionType[qt as number].toString(),\r\n                AnswerText: faker.lorem.paragraphs()\r\n              }\r\n            ]\r\n          })\r\n        )\r\n    }\r\n  ]\r\n}"
            },
            {
                "name": "DocumentWithAllPermissionsTurnedOn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DocumentWithMultiplePages",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: true,\r\n  siteDocsApi: \"http://localhost:3002/api\",\r\n  apiTimeout: 60000\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: false,\r\n  siteDocsApi: \"http://localhost:3002/api\",\r\n  apiTimeout: 60000\r\n}"
            },
            {
                "name": "getDeviceString",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/plugins/device.plugin.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize(async () => {\r\n  const info = await Device.getInfo();\r\n  return `${info.model}@${info.platform}@${info.osVersion}`;\r\n})"
            },
            {
                "name": "getDeviceUuid",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/plugins/device.plugin.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize(async () => {\r\n  const { uuid } = await Device.getId();\r\n  return uuid;\r\n})"
            },
            {
                "name": "info",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/info/asset-info/asset-info.page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "AssetInfo",
                "defaultValue": "{\r\n  ID: 1,\r\n  AssetID: \"\",\r\n  AcquiredDate: new Date(),\r\n  DateOnSite: new Date(),\r\n  DateOffHired: new Date(),\r\n  TypeName: faker.lorem.word(),\r\n  Registration: faker.lorem.word(),\r\n  QRCode: \"\",\r\n  SiteID: 1,\r\n  AssetFileName: \"\",\r\n  DetailsLists: [],\r\n  Base64Img: null,\r\n  PurchaseValue: \"\",\r\n  AssetNotes: \"\",\r\n  Location: faker.lorem.word(),\r\n  TemplateIDs: [1]\r\n}"
            },
            {
                "name": "isMobileApp",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/plugins/platform.plugin.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize(() => {\r\n  const platform = inject(Platform);\r\n\r\n  return platform.is(\"cordova\");\r\n})"
            },
            {
                "name": "ObjectSelectable",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/selectable/selectable.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({}) as StoryFn<SelectableComponent<{ name: string }>>"
            },
            {
                "name": "Prepopulated",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "PrepopulatedCompany",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/company-actioner-select/company-actioner-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "PrepopulatedSelectable",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/selectable/selectable.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "PrepopulatedSite",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/site-select/site-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": ".storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\r\n  globalTypes: {\r\n    iosMode: {\r\n      name: \"IOS Mode\",\r\n      defaultValue: false\r\n    }\r\n  },\r\n  parameters: {\r\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\r\n    controls: {\r\n      matchers: {\r\n        color: /(background|color)$/i,\r\n        date: /Date$/,\r\n      },\r\n    },\r\n  },\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        importProvidersFrom(IonicModule.forRoot({})),\r\n        provideHttpClient(),\r\n        //provideHttpClientTesting(),\r\n        { provide: ErrorHandler, useClass: AppErrorHandler },\r\n        { provide: HTTP_INTERCEPTORS, useClass: HttpErrorInterceptor, multi: true }\r\n      ]\r\n    }),\r\n    componentWrapperDecorator(story => `<ion-app>${story}</ion-app>`)\r\n  ]\r\n}"
            },
            {
                "name": "queues",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Array\r\n  .from({ length: 10 })\r\n  .map((val, idx) => \r\n    ({\r\n      Id: idx,\r\n      Name: faker.lorem.word()\r\n    })\r\n  )"
            },
            {
                "name": "resAreaType",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/responsibility-area-select/responsibility-area-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ResponsibilityAreaType",
                "defaultValue": "{\r\n  Id: 1,\r\n  AppQuestionText: faker.lorem.words(),\r\n  TypeName: faker.lorem.word(),\r\n  Areas: Array\r\n    .from({ length: 10 })\r\n    .map((val, idx) => \r\n      ({\r\n        Id: idx,\r\n        Name: faker.commerce.department(),\r\n        DocResAreaTypeId: +faker.random.numeric()\r\n      })\r\n    )\r\n}"
            },
            {
                "name": "responsibilityAreaTypesStore",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/responsibility-area-select/responsibility-area-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<ResponsibilityAreaTypesStore>",
                "defaultValue": "{\r\n  responsibilityAreaTypeById$: () => of(resAreaType)\r\n}"
            },
            {
                "name": "setAppUserUpdate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/user/user.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "pipeTap<User>(user => store.update(setAppUser(user)))"
            },
            {
                "name": "sites$",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/user/user.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "userSelector(user => user?.UserSites || [])"
            },
            {
                "name": "store",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/responsibility-area-types/responsibility-area-types.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createStore(\r\n  { name: \"responsibility-area-types\" },\r\n  withEntities<ResponsibilityAreaType, \"Id\">({ idKey: \"Id\" })\r\n)"
            },
            {
                "name": "store",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/user/user.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createStore(\r\n  { name: \"user\" },\r\n  withAppUser()\r\n)"
            },
            {
                "name": "store",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/site-document/form-filler/form-filler.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createStore(\r\n  { name: \"form-filler\" },\r\n  withWritingDocument(null as SiteDocument | null),\r\n  withTemplateMenuEntities<TemplateMenuItem, \"Id\">({ idKey: \"Id\", initialValue: [] })\r\n)"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<DocumentBuilderPage>",
                "defaultValue": "(args: DocumentBuilderPage) => ({\r\n  props: {\r\n    ...args,\r\n    id$: of(1)\r\n  },\r\n  styles: [`\r\n    app-document-builder { display: contents; }\r\n  `]\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/registration/registration.page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<RegistrationPage>",
                "defaultValue": "(args: RegistrationPage) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/camera/camera.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<CameraComponent>",
                "defaultValue": "(args: CameraComponent) => ({\r\n  props: args,\r\n  template: `\r\n    <camera [fill]=\"fill\" [expand]=\"expand\" [color]=\"color\">\r\n      Add Image\r\n    </camera>\r\n  `\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/datetime-picker/datetime-picker.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<DatetimePickerComponent>",
                "defaultValue": "(args: DatetimePickerComponent) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/multi-selectable/multi-selectable.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<MultiSelectableComponent>",
                "defaultValue": "(args: MultiSelectableComponent) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/selectable/selectable.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<SelectableComponent>",
                "defaultValue": "(args: SelectableComponent) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/signature-pad/signature-pad.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<SignaturePadComponent>",
                "defaultValue": "args => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/time-picker/time-picker.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<TimePickerComponent>",
                "defaultValue": "args => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modals/operative-list/operative-list.modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<OperativeListModal>",
                "defaultValue": "(args: OperativeListModal) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modals/asset-list/asset-list.modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<AssetListModal>",
                "defaultValue": "(args: AssetListModal) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/info/asset-info/asset-info.page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<AssetInfoPage>",
                "defaultValue": "args => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/child-document-card/child-document-card.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<ChildDocumentCardComponent>",
                "defaultValue": "args => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/modals/document-summary/document-summary.modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<DocumentSummaryModal>",
                "defaultValue": "args => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/modals/template-menu/template-menu.modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<TemplateMenuModal>",
                "defaultValue": "args => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modals/operative-list/components/local-operative-search/local-operative-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<LocalOperativeSearchComponent>",
                "defaultValue": "(args: LocalOperativeSearchComponent) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modals/operative-list/components/online-operative-search/online-operative-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<OnlineOperativeSearchComponent>",
                "defaultValue": "args => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/document-section/multi-checkbox-section/multi-checkbox-section.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<MultiCheckboxSectionComponent>",
                "defaultValue": "args => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/actioner-select/actioner-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<ActionerSelectComponent>",
                "defaultValue": "(args: ActionerSelectComponent) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/category-actioner-select/category-actioner-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<CategoryActionerSelectComponent>",
                "defaultValue": "args => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/company-actioner-select/company-actioner-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<CompanyActionerSelectComponent>",
                "defaultValue": "args => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/document-image-upload/document-image-upload.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<DocumentImageUploadComponent>",
                "defaultValue": "args => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/queue-duration/queue-duration.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<QueueDurationComponent>",
                "defaultValue": "(args: QueueDurationComponent) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<QueueSelectComponent>",
                "defaultValue": "(args: QueueSelectComponent) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/responsibility-area-select/responsibility-area-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<ResponsibilityAreaSelectComponent>",
                "defaultValue": "args => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/site-select/site-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<SiteSelectComponent>",
                "defaultValue": "args => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/01-checkbox/checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      YesNoNA: args[\"question.YesNoNA\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/00-label/label.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/remain-anonymous/remain-anonymous.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<RemainAnonymousComponent>",
                "defaultValue": "(args: RemainAnonymousComponent) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/02-radio-table/radio-table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      YesNoNA: args[\"question.YesNoNA\"] === \"Yes\" ? true \r\n        : args[\"question.YesNoNA\"] === \"No\" ? false\r\n        : args[\"question.YesNoNA\"] === \"NA\" ? null\r\n        : args[\"question.YesNoNA\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/03-textbox/textbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      AnswerText: args[\"question.AnswerText\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/04-textarea/textarea.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      AnswerText: args[\"question.AnswerText\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/05-select/select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      AnswerOptions: args[\"question.AnswerOptions\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/02-radio-group/radio-group.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      YesNoNA: args[\"question.YesNoNA\"] === \"Yes\" ? true \r\n        : args[\"question.YesNoNA\"] === \"No\" ? false\r\n        : args[\"question.YesNoNA\"] === \"NA\" ? null\r\n        : args[\"question.YesNoNA\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    },\r\n    section: {\r\n      ...defaultSection,\r\n      TableTitles: args[\"section.TableTitles\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/07-radio-group-textbox/radio-group-textbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      YesNoNA: args[\"question.YesNoNA\"] === \"Yes\" ? true \r\n        : args[\"question.YesNoNA\"] === \"No\" ? false\r\n        : args[\"question.YesNoNA\"] === \"NA\" ? null\r\n        : args[\"question.YesNoNA\"],\r\n      AnswerText: args[\"question.AnswerText\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    },\r\n    section: {\r\n      ...defaultSection,\r\n      TableTitles: args[\"section.TableTitles\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/07-radio-table-textbox/radio-table-textbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      YesNoNA: args[\"question.YesNoNA\"] === \"Yes\" ? true \r\n        : args[\"question.YesNoNA\"] === \"No\" ? false\r\n        : args[\"question.YesNoNA\"] === \"NA\" ? null\r\n        : args[\"question.YesNoNA\"],\r\n      AnswerText: args[\"question.AnswerText\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/08-date/date.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      DateAndTime: args[\"question.DateAndTime\"],\r\n      ValidationData: args[\"question.ValidationData\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/09-datetime/datetime.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      DateAndTime: args[\"question.DateAndTime\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/10-operative-list/operative-list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Operatives: args[\"question.Operatives\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/12-number/number.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      NumberVal: args[\"question.NumberVal\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/13-cascade-select/cascade-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      AnswerOptions: args[\"question.AnswerOptions\"],\r\n      CascadeOptions: args[\"question.CascadeOptions\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/16-linked-bool/linked-bool.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      YesNoNA: args[\"question.YesNoNA\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    },\r\n    section: {\r\n      ...defaultSection,\r\n      TableTitles: args[\"section.TableTitles\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/17-asset-list/asset-list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Assets: args[\"question.Assets\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/18-linked-dates/linked-dates.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      CascadeOptionsText: args[\"question.CascadeOptionsText\"],\r\n      Required: args[\"question.Required\"],\r\n      DateAndTime: args[\"question.DateAndTime\"],\r\n      DateAndTime2: args[\"question.DateAndTime2\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/19-signature/signature.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      AnswerText: args[\"question.AnswerText\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/21-company-select/company-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: defaultQuestion\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/22-area-select/area-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: defaultQuestion\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/25-asset-groups-and-types/asset-groups-and-types.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: defaultQuestion\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/26-asset-inspection-schedules/asset-inspection-schedules.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: defaultQuestion\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/27-project-select/project-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: defaultQuestion\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/28-rams-select/rams-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: defaultQuestion\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/29-select-text/select-text.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      AnswerText: args[\"question.AnswerText\"],\r\n      AnswerOptions: args[\"question.AnswerOptions\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/30-cascade-select-text/cascade-select-text.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      CommentsText: args[\"question.CommentsText\"],\r\n      Required: args[\"question.Required\"],\r\n      AnswerOptions: args[\"question.AnswerOptions\"],\r\n      CascadeOptions: args[\"question.CascadeOptions\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/32-time/time.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      DateAndTime: args[\"question.DateAndTime\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/33-linked-times/linked-times.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      CascadeOptionsText: args[\"question.CascadeOptionsText\"],\r\n      Required: args[\"question.Required\"],\r\n      DateAndTime: args[\"question.DateAndTime\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/34-hra-select/hra-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: defaultQuestion\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/36-linked-date-time/linked-datetime.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: defaultQuestion\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/06-checkbox-textbox/checkbox-textbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      YesNoNA: args[\"question.YesNoNA\"],\r\n      AnswerText: args[\"question.AnswerText\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/remain-anonymous/summary/remain-anonymous-summary.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<RemainAnonymousSummaryComponent>",
                "defaultValue": "args => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/18-linked-dates/summary/linked-dates-summary.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<LinkedDatesSummaryComponent>",
                "defaultValue": "args => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/extras/camera-capture/camera-capture.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<CameraCaptureComponent>",
                "defaultValue": "(args: CameraCaptureComponent) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/extras/file-upload/file-upload.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<FileUploadComponent>",
                "defaultValue": "(args: FileUploadComponent) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "useAllTemplates",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/http/template.api.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize(() => {\r\n  const { getAllTemplates } = useTemplateApi();\r\n\r\n  return track(() => getAllTemplates());\r\n})"
            },
            {
                "name": "useAreas",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/http/login.api.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize(() => {\r\n  const { getAreas } = useLoginApi();\r\n\r\n  return track(() => getAreas());\r\n})"
            },
            {
                "name": "useAssetApi",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/http/asset.api.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createApi({\r\n  baseUrl: `${environment.siteDocsApi}/AssetApi`,\r\n  endpoints: ({ get }) => ({\r\n    getAssetDetailsByAssetId: get<AssetInfo, GetAssetDetailsByAssetIdQuery>(\"AssetDetailsByAssetId\"),\r\n    getAssetDetailsByTag: get<AssetInfo, GetAssetDetailsByTagQuery>(\"AssetDetailsByTag\"),\r\n    getAssetsByRegistration: get<Asset[], GetAssetsByRegistrationParams>(\"GetAssetsByReg\"),\r\n    getAssetsByType: get<Asset[], GetAssetsByTypeParams>(\"getAssetsByType\"),\r\n    getAssetGroups: get<AssetGroup[]>(\"GetAssetGroups\"),\r\n    getAssetTypes: get<AssetType[]>(\"GetAssetTypes\"),\r\n    getAssetInspectionSchedules: get<AssetInspectionSchedule[]>(\"GetAssetInspectionSchedules\")\r\n  })\r\n})"
            },
            {
                "name": "useAssetDetailsById",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/http/asset.api.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize((assetId: Nullable<number>) => {\r\n  const { getAssetDetailsByAssetId } = useAssetApi();\r\n\r\n  return track(() => assetId != null\r\n    ? getAssetDetailsByAssetId({ id: assetId })\r\n    : of(null)\r\n  )\r\n})"
            },
            {
                "name": "useAssetDetailsByTag",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/http/asset.api.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize((tag: Nullable<string>) => {\r\n  const { getAssetDetailsByTag } = useAssetApi();\r\n\r\n  return track(() => tag != null \r\n    ? getAssetDetailsByTag({ tag }) \r\n    : of(null)\r\n  );\r\n})"
            },
            {
                "name": "useAssetGroups",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/http/asset.api.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize(() => {\r\n  const { getAssetGroups } = useAssetApi();\r\n\r\n  const assetGroups = track(() => getAssetGroups());\r\n\r\n  return {\r\n    ...assetGroups,\r\n    options: assetGroups.data(groups => groups.map(g => \r\n      ({\r\n        GroupId: g.GroupID.toString(),\r\n        GroupName: g.GroupName\r\n      })\r\n    ))\r\n  }\r\n})"
            },
            {
                "name": "useAssetInspectionSchedules",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/http/asset.api.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize(() => {\r\n  const { getAssetInspectionSchedules } = useAssetApi();\r\n\r\n  const inspectionSchedules = track(() => getAssetInspectionSchedules());\r\n\r\n  return {\r\n    ...inspectionSchedules,\r\n    options: inspectionSchedules.data(schedules => schedules.map(s => \r\n      ({\r\n        ScheduleId: s.ScheduleID.toString(),\r\n        ScheduleName: s.ScheduleName\r\n      })\r\n    ))\r\n  }\r\n})"
            },
            {
                "name": "useAssetStore",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/asset/asset.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize(() => {\r\n  const store = createStore(\r\n    { name: \"assets\" },\r\n    withEntities<Asset, \"Id\">({ idKey: \"Id\" })\r\n  );\r\n\r\n  return {\r\n    data: createPipe(store.pipe(selectAllEntities())),\r\n    update: store.update.bind(store)\r\n  }\r\n})"
            },
            {
                "name": "useAssetTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/http/asset.api.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize(() => {\r\n  const { getAssetTypes } = useAssetApi();\r\n\r\n  const assetTypes = track(() => getAssetTypes());\r\n\r\n  return {\r\n    ...assetTypes,\r\n    options: assetTypes.data(types => types.map(t => \r\n      ({\r\n        Id: t.Id.toString(),\r\n        Description: t.Description\r\n      })\r\n    ))\r\n  }\r\n})"
            },
            {
                "name": "useCategoryActioners",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/http/login.api.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize((categoryId: Nullable<number>) => {\r\n  const loginApi = useLoginApi();\r\n\r\n  return track(() => categoryId != null \r\n    ? loginApi.getCategoryActioners({ categoryId })\r\n    : new BehaviorSubject([]))\r\n})"
            },
            {
                "name": "useCollabPlanApi",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/http/collab-plan.api.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createApi({\r\n  baseUrl: `${environment.siteDocsApi}/CollabPlanApi`,\r\n  endpoints: ({ get }) => ({\r\n    getProjects: get<HotspotProject[], { siteId: number }>(\"GetProjects\"),\r\n    getHighRiskActivities: get<HighRiskActivity[], { siteId: number }>(\"GetHighRiskActivities\")\r\n  })\r\n})"
            },
            {
                "name": "useCompanies",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/http/login.api.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize(() => {\r\n  const { getCompanies } = useLoginApi();\r\n\r\n  return track(() => getCompanies());\r\n})"
            },
            {
                "name": "useDocumentImageStore",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/site-document-image/site-document-image.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize(() => buildStore<SiteDocumentImage>(\"document-images\", \"Id\"))"
            },
            {
                "name": "useFetchAssetsByRegistration",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/http/asset.api.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize((binding: Func<GetAssetsByRegistrationParams>) => {\r\n  const { getAssetsByRegistration } = useAssetApi();\r\n\r\n  return trackSend({\r\n    binding,\r\n    fn: params => getAssetsByRegistration(params)\r\n  });\r\n})"
            },
            {
                "name": "useFetchAssetsByType",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/http/asset.api.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize((binding: Func<Partial<GetAssetsByTypeParams>>) => {\r\n  const { getAssetsByType } = useAssetApi();\r\n\r\n  return trackSend({\r\n    binding,\r\n    fn: params => getAssetsByType(params as GetAssetsByTypeParams)\r\n  })\r\n})"
            },
            {
                "name": "useFetchOperativesByName",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/http/operative.api.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize((binding: () => OperativeSearchParams) => {\r\n  const { getOperativesByName } = useOperativeApi();\r\n\r\n  return trackSend({\r\n    binding,\r\n    fn: params => getOperativesByName(params)\r\n  })\r\n})"
            },
            {
                "name": "useHighRiskActivities",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/http/collab-plan.api.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize((siteId: Nullable<number>) => {\r\n  const { getHighRiskActivities } = useCollabPlanApi();\r\n\r\n  return track(() => siteId != null\r\n    ? getHighRiskActivities({ siteId })\r\n    : new BehaviorSubject([])\r\n  );\r\n})"
            },
            {
                "name": "useLogin",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/user/login.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize(() => {\n  \n})"
            },
            {
                "name": "useLoginApi",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/http/login.api.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createApi({\r\n  baseUrl: `${environment.siteDocsApi}/LoginApi`,\r\n  endpoints: ({ get }) => ({\r\n    getCompanies: get<Company[]>(\"GetCompanies\"),\r\n    getSites: get<Site[]>(\"GetSites\"),\r\n    getAreas: get<Area[]>(\"GetAreas\"),\r\n    getRams: get<AspNetData<RamsItem>[]>(\"GetRams\"),\r\n    getCategoryActioners: get<CategoryActioner[], GetCategoryActionerParams>(\"GetCategoryActioners\"),\r\n    getResAreaTypes: get<ResponsibilityAreaType[]>(\"GetResAreas\")\r\n  })\r\n})"
            },
            {
                "name": "useOperativeApi",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/http/operative.api.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createApi({\r\n  baseUrl: `${environment.siteDocsApi}/OperativeApi`,\r\n  endpoints: ({ get }) => ({\r\n    getOperativesByName: get<OperativeSearchResult[], OperativeSearchParams>(\"GetOperativesByName\")\r\n  })\r\n})"
            },
            {
                "name": "useOperativeStore",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/operative/operatives.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize(() => {\r\n  const store = createStore(\r\n    { name: \"operatives\" },\r\n    withEntities<Operative, \"ID\">({ idKey: \"ID\" })\r\n  );\r\n\r\n  return {\r\n    data: store.pipe(selectAllEntities()).toPipe(),\r\n    update: store.update.bind(store)\r\n  }\r\n})"
            },
            {
                "name": "useProjects",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/http/collab-plan.api.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize((siteId: Nullable<number>) => {\r\n  const { getProjects } = useCollabPlanApi();\r\n\r\n  return track(() => siteId != null \r\n    ? getProjects({ siteId })\r\n    : new BehaviorSubject([])\r\n  );\r\n})"
            },
            {
                "name": "useQueuesApi",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/http/queues.api.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createApi({\r\n  baseUrl: `${environment.siteDocsApi}/QueuesApi`,\r\n  endpoints: ({ post }) => ({\r\n    updateDocMove: post<QueueMovedInfo, UpdateDocMoveCommand>({ path: \"UpdateDocMove\" })\r\n  })\r\n})"
            },
            {
                "name": "useRams",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/http/login.api.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize(() => {\r\n  const { getRams } = useLoginApi();\r\n\r\n  const rams = track(() => getRams().pipe(\r\n    map(rams => rams.map(r => ({\r\n      ...r,\r\n      ExpiryDate: r.ExpiryDate?.toDate()\r\n    })))\r\n  ));\r\n\r\n  return {\r\n    ...rams,\r\n    thatArentExpiredToday: rams.data(items => items.filter(item => item.ExpiryDate == null || item.ExpiryDate.isEqualOrAfterToday()))\r\n  }\r\n})"
            },
            {
                "name": "useResAreaTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/http/login.api.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize(() => {\r\n  const { getResAreaTypes } = useLoginApi();\r\n\r\n  const resAreaTypes = track(() => getResAreaTypes());\r\n\r\n  return {\r\n    ...resAreaTypes,\r\n    find: (predicate: (value: ResponsibilityAreaType, index: number) => boolean) => resAreaTypes.data(types => types.find(predicate)),\r\n    areas: resAreaTypes.data(types => types.flatMap(t => t.Areas))\r\n  }\r\n})"
            },
            {
                "name": "useSiteDocumentApi",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/http/site-document.api.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createApi({\r\n  baseUrl: `${environment.siteDocsApi}/SiteDocumentApi`,\r\n  endpoints: ({ get, post }) => ({\r\n    getCompletedDocument: get<SiteDocument, { id: number }>(\"GetCompletedDocument\"),\r\n    uploadDocument: post<{ documentId: number }, { document: SiteDocument }>({ path: \"UploadCompletedDocument\" }),\r\n    uploadDocumentImage: post<void, AddDocumentLevelImageCommand>({ path: \"AddDocumentLevelImage\" }),\r\n    uploadQuestionImage: post<void, AddQuestionLevelImageCommand>({ path: \"AddQuestionLevelImage\" })\r\n  })\r\n})"
            },
            {
                "name": "useSiteDocumentStore",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/site-document/site-document.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize(() => buildStore<SiteDocument, \"DocumentID\">(\"Site-Document\", \"DocumentID\"))"
            },
            {
                "name": "useSites",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/http/login.api.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize(() => {\r\n  const { getSites } = useLoginApi();\r\n\r\n  return track(() => getSites());\r\n})"
            },
            {
                "name": "useSpecificDocument",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/http/site-document.api.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize((id: number) => {\r\n  const { getCompletedDocument } = useSiteDocumentApi();\r\n\r\n  return track(() => getCompletedDocument({ id }));\r\n})"
            },
            {
                "name": "useTemplate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/http/template.api.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "(id$: Observable<Nullable<number>>) => {\r\n  const { getTemplate } = useTemplateApi();\r\n  const loginId = param(\"loginId\") || 0;\r\n\r\n  return track(() => id$.pipe(\r\n    switchMap(id => id != null \r\n      ? getTemplate({ id }).pipe(\r\n        map(doc => ({\r\n          ...doc,\r\n          Images: [],\r\n          GroupedDocumentID: `${loginId}_${Date.now()}`,\r\n          QueueDuration: doc.CanHaveQueueDuration \r\n            ? { Value: 0, Type: \"Mins\" }\r\n            : null,\r\n          PageIdx: 1\r\n        }) as SiteDocument)\r\n      )\r\n      : of(null)\r\n    )\r\n  ));\r\n}"
            },
            {
                "name": "useTemplateApi",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/http/template.api.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createApi({\r\n  baseUrl: `${environment.siteDocsApi}/TemplateApi`,\r\n  endpoints: ({ get }) => ({\r\n    getAllTemplates: get<TemplateItem[]>(\"GetAllTemplates\"),\r\n    getTemplate: get<SiteDocument, { id: number }>(\"GetDocumentTemplate\"),\r\n  })\r\n})"
            },
            {
                "name": "useUpdateDocMove",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/http/queues.api.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize(() => {\r\n  const { updateDocMove } = useQueuesApi();\r\n\r\n  return trackSend({\r\n    fn: (params: UpdateDocMoveCommand) => updateDocMove(params)\r\n  });\r\n})"
            },
            {
                "name": "useUploadDocument",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/http/site-document.api.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize(() => {\r\n  const { uploadDocument } = useSiteDocumentApi();\r\n\r\n  return trackSend({\r\n    fn: (param: { document: SiteDocument }) => uploadDocument({ document: param.document }).pipe(\r\n      map(({ documentId }) => ({\r\n        submissionId: documentId,\r\n        document: param.document,\r\n        questions: param.document.Pages\r\n          .flatMap(p => p.Sections)\r\n          .flatMap(s => s.Questions)\r\n      }))\r\n    )\r\n  })\r\n})"
            },
            {
                "name": "useUploadDocumentImages",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/http/site-document.api.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize(() => {\r\n  const { uploadDocumentImage } = useSiteDocumentApi();\r\n\r\n  return trackSend({\r\n    fn: (params: AddDocumentLevelImageCommand[]) => {\r\n      const uploads = params.map(p => uploadDocumentImage(p))\r\n\r\n      return concat(...uploads);\r\n    }\r\n  });\r\n})"
            },
            {
                "name": "useUploadQuestionImages",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/http/site-document.api.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize(() => {\r\n  const { uploadQuestionImage } = useSiteDocumentApi();\r\n\r\n  return trackSend({\r\n    fn: (params: AddQuestionLevelImageCommand[]) => {\r\n      const uploads = params.map(p => uploadQuestionImage(p))\r\n    \r\n      return concat(...uploads);\r\n    }\r\n  });\r\n})"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/states/search-results.adapter.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "entitiesPropsFactory(\"SearchResult\")"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/user/user.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "propsFactory(\"appUser\", { initialValue: null as User | null })"
            },
            {
                "name": "userSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/user/user.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "selector(store.pipe(selectAppUser()))"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/site-document/adapters/writing-document.adapter.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "propsFactory(\"writingDocument\", { initialValue: null as SiteDocument | null })"
            },
            {
                "name": "useBranchingStore",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/site-document/branching/branching.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize(() => {\r\n  const store = buildStore<{ documentId: number, hideIdxs: number[] }, \"documentId\">(\"branching\", \"documentId\");\r\n\r\n  return store;\r\n})"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/site-document/form-filler/form-filler.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "entitiesPropsFactory(\"templateMenu\")"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/site-document/form-filler/form-filler.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "writingDocumentAdapter(store)"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/site-document/props/writing-document.props.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "propsFactory(\"writingDocument\", { initialValue: null as SiteDocument | null })"
            },
            {
                "name": "useQuestionImgStore",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/site-document/question-img/question-img.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize(() => {\r\n  const store = buildStore<QuestionImage>(\"question-images\", \"Id\");\r\n\r\n  return store;\r\n})"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/site-document/form-filler/adapters/template-menu.adapter.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "entitiesPropsFactory(\"templateMenu\")"
            },
            {
                "name": "userStoreMock",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/company-actioner-select/company-actioner-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<UserStore>",
                "defaultValue": "{\r\n  companies$: of<Company[]>(Array\r\n    .from({ length: 10 })\r\n    .map((val, idx) => \r\n      ({\r\n        Id: idx,\r\n        Name: faker.company.name()\r\n      })\r\n  ))\r\n}"
            },
            {
                "name": "userStoreMock",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/site-select/site-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<UserStore>",
                "defaultValue": "{\r\n  sites$: of(Array\r\n    .from({ length: 10 })\r\n    .map((val, idx) => \r\n      ({\r\n        Id: idx,\r\n        Name: faker.company.name()\r\n      })\r\n  ))\r\n}"
            }
        ],
        "functions": [
            {
                "name": "AngularComponent",
                "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "ReturnType<T1>",
                "jsdoctags": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "AngularComponent",
                "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "AngularComponent",
                "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h3",
                        "type": "T3",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h3",
                        "type": "T3",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "AngularComponent",
                "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h3",
                        "type": "T3",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h4",
                        "type": "T4",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h3",
                        "type": "T3",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h4",
                        "type": "T4",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "AngularComponent",
                "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h3",
                        "type": "T3",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h4",
                        "type": "T4",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h5",
                        "type": "T5",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h3",
                        "type": "T3",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h4",
                        "type": "T4",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h5",
                        "type": "T5",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "AngularComponent",
                "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h3",
                        "type": "T3",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h4",
                        "type": "T4",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h5",
                        "type": "T5",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h6",
                        "type": "T6",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h3",
                        "type": "T3",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h4",
                        "type": "T4",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h5",
                        "type": "T5",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h6",
                        "type": "T6",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "AngularComponent",
                "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "AngularComponent",
                "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "args",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "dotDotDotToken": true
                    }
                ],
                "returnType": "any",
                "jsdoctags": [
                    {
                        "name": "args",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "dotDotDotToken": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "AngularDirective",
                "file": "src/app/shared/lifecycles/lifecycle-directive.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "ReturnType<T1>",
                "jsdoctags": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "AngularDirective",
                "file": "src/app/shared/lifecycles/lifecycle-directive.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "AngularDirective",
                "file": "src/app/shared/lifecycles/lifecycle-directive.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h3",
                        "type": "T3",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h3",
                        "type": "T3",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "AngularDirective",
                "file": "src/app/shared/lifecycles/lifecycle-directive.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h3",
                        "type": "T3",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h4",
                        "type": "T4",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h3",
                        "type": "T3",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h4",
                        "type": "T4",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "AngularDirective",
                "file": "src/app/shared/lifecycles/lifecycle-directive.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h3",
                        "type": "T3",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h4",
                        "type": "T4",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h5",
                        "type": "T5",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h3",
                        "type": "T3",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h4",
                        "type": "T4",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h5",
                        "type": "T5",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "AngularDirective",
                "file": "src/app/shared/lifecycles/lifecycle-directive.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h3",
                        "type": "T3",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h4",
                        "type": "T4",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h5",
                        "type": "T5",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h6",
                        "type": "T6",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h3",
                        "type": "T3",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h4",
                        "type": "T4",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h5",
                        "type": "T5",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h6",
                        "type": "T6",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "AngularDirective",
                "file": "src/app/shared/lifecycles/lifecycle-directive.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "AngularDirective",
                "file": "src/app/shared/lifecycles/lifecycle-directive.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "args",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "dotDotDotToken": true
                    }
                ],
                "returnType": "any",
                "jsdoctags": [
                    {
                        "name": "args",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "dotDotDotToken": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "booleanState",
                "file": "src/app/shared/states/boolean.state.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "name",
                        "type": "AdapterConfig<boolean, BooleanState, TProps>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "1c29a636-7591-4142-bbf7-a8639947bd55",
                        "destructuredParameter": true
                    },
                    {
                        "name": "initialValue",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "1c29a636-7591-4142-bbf7-a8639947bd55",
                        "destructuredParameter": true
                    },
                    {
                        "name": "props",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "1c29a636-7591-4142-bbf7-a8639947bd55",
                        "destructuredParameter": true
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "name",
                        "type": "AdapterConfig<boolean, BooleanState, TProps>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "1c29a636-7591-4142-bbf7-a8639947bd55",
                        "destructuredParameter": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "initialValue",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "1c29a636-7591-4142-bbf7-a8639947bd55",
                        "destructuredParameter": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "props",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "1c29a636-7591-4142-bbf7-a8639947bd55",
                        "destructuredParameter": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "buildStore",
                "file": "src/app/shared/rxjs/store.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "name",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "idKey",
                        "type": "TId",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "name",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "idKey",
                        "type": "TId",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "calculate",
                "file": "src/app/shared/rxjs/calculate.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "value",
                        "type": "CalculateOptions<T, R>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "6fc263a4-45ef-455c-a7b9-4086512b45de",
                        "destructuredParameter": true
                    },
                    {
                        "name": "when",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "6fc263a4-45ef-455c-a7b9-4086512b45de",
                        "destructuredParameter": true
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "value",
                        "type": "CalculateOptions<T, R>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "6fc263a4-45ef-455c-a7b9-4086512b45de",
                        "destructuredParameter": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "when",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "6fc263a4-45ef-455c-a7b9-4086512b45de",
                        "destructuredParameter": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "calculate",
                "file": "src/app/shared/rxjs/using-calculate.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "deps",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fn",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "UsePipe<R>",
                "jsdoctags": [
                    {
                        "name": "deps",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fn",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "calculate",
                "file": "src/app/shared/rxjs/using-calculate.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "deps",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "op1",
                        "type": "OperatorFunction",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "UsePipe<A>",
                "jsdoctags": [
                    {
                        "name": "deps",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "op1",
                        "type": "OperatorFunction",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "calculate",
                "file": "src/app/shared/rxjs/using-calculate.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "deps",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "op1",
                        "type": "OperatorFunction",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "op2",
                        "type": "OperatorFunction",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "UsePipe<B>",
                "jsdoctags": [
                    {
                        "name": "deps",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "op1",
                        "type": "OperatorFunction",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "op2",
                        "type": "OperatorFunction",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "calculate",
                "file": "src/app/shared/rxjs/using-calculate.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "deps",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "op1",
                        "type": "OperatorFunction",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "op2",
                        "type": "OperatorFunction",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "op3",
                        "type": "OperatorFunction",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "UsePipe<C>",
                "jsdoctags": [
                    {
                        "name": "deps",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "op1",
                        "type": "OperatorFunction",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "op2",
                        "type": "OperatorFunction",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "op3",
                        "type": "OperatorFunction",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "calculate",
                "file": "src/app/shared/rxjs/using-calculate.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "deps",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "op1",
                        "type": "OperatorFunction",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "op2",
                        "type": "OperatorFunction",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "op3",
                        "type": "OperatorFunction",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "op4",
                        "type": "OperatorFunction",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "UsePipe<D>",
                "jsdoctags": [
                    {
                        "name": "deps",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "op1",
                        "type": "OperatorFunction",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "op2",
                        "type": "OperatorFunction",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "op3",
                        "type": "OperatorFunction",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "op4",
                        "type": "OperatorFunction",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "calculate",
                "file": "src/app/shared/rxjs/using-calculate.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "deps",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "args",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "dotDotDotToken": true
                    }
                ],
                "returnType": "UsePipe<any>",
                "jsdoctags": [
                    {
                        "name": "deps",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "args",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "dotDotDotToken": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "clickReaction",
                "file": "src/app/shared/reactions/click.reaction.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "createApi",
                "file": "src/app/core/http/create-api.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "options",
                        "type": "CreateApiOptions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "options",
                        "type": "CreateApiOptions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "createBuildApi",
                "file": "src/app/core/http/create-api.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "options",
                        "type": "CreateApiOptions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "BuildApi",
                "jsdoctags": [
                    {
                        "name": "options",
                        "type": "CreateApiOptions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "createEffect",
                "file": "src/app/shared/rxjs/effect.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "effectFn",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "on",
                        "type": "Observable",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "effectFn",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "on",
                        "type": "Observable",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "createPipe",
                "file": "src/app/shared/rxjs/use.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "s",
                        "type": "Observable",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "s",
                        "type": "Observable",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "createWaitForSelector",
                "file": "src/app/shared/testing/wait-for.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "spectator",
                        "type": "Spectator",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "WaitForSelector",
                "jsdoctags": [
                    {
                        "name": "spectator",
                        "type": "Spectator",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "fileReader",
                "file": "src/app/shared/components/upload/upload.component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "FileReader"
            },
            {
                "name": "fileToDataUrlFile",
                "file": "src/app/shared/components/upload/upload.component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "file",
                        "type": "File",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Promise<DataUrlFile>",
                "jsdoctags": [
                    {
                        "name": "file",
                        "type": "File",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "ifBiometricsIsAvailable",
                "file": "src/app/shared/plugins/biometric.plugin.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "importDocumentBuilderModals",
                "file": "src/app/core/pages/document-builder/modals/document-builder-modals.import.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "importInfoTypes",
                "file": "src/app/core/pages/document-builder/components/info-types/info-types.import.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "importInputSummaries",
                "file": "src/app/core/pages/document-builder/components/input-types/input-summaries.import.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "importInputTypes",
                "file": "src/app/core/pages/document-builder/components/input-types/input-types.import.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "importNgSwitch",
                "file": "src/app/shared/imports/ng-switch.import.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "importQuestionSummaries",
                "file": "src/app/core/pages/document-builder/components/question-types/question-summary.imports.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "importQuestionTypes",
                "file": "src/app/core/pages/document-builder/components/question-types/question-types.import.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "importRxAutoVirtualScroll",
                "file": "src/app/shared/imports/rx-template.import.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Visit for more information: <a href=\"https://www.rx-angular.io/docs/template/api/virtual-scrolling#autosizevirtualscrollstrategy\">https://www.rx-angular.io/docs/template/api/virtual-scrolling#autosizevirtualscrollstrategy</a></p>\n",
                "args": []
            },
            {
                "name": "importRxDynamicVirtualScroll",
                "file": "src/app/shared/imports/rx-template.import.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Visit for more information: <a href=\"https://www.rx-angular.io/docs/template/api/virtual-scrolling#dynamicsizevirtualscrollstrategy\">https://www.rx-angular.io/docs/template/api/virtual-scrolling#dynamicsizevirtualscrollstrategy</a></p>\n",
                "args": []
            },
            {
                "name": "importRxFixedVirtualScroll",
                "file": "src/app/shared/imports/rx-template.import.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Visit for more information: <a href=\"https://www.rx-angular.io/docs/template/api/virtual-scrolling#fixedsizevirtualscrollstrategy\">https://www.rx-angular.io/docs/template/api/virtual-scrolling#fixedsizevirtualscrollstrategy</a></p>\n",
                "args": []
            },
            {
                "name": "importRxTemplate",
                "file": "src/app/shared/imports/rx-template.import.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Documentation can be found here: <a href=\"https://www.rx-angular.io/docs/template\">https://www.rx-angular.io/docs/template</a></p>\n",
                "args": []
            },
            {
                "name": "importRxVirtualScroll",
                "file": "src/app/shared/imports/rx-template.import.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "providers",
                        "type": "Array",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "dotDotDotToken": true
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "providers",
                        "type": "Array",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "dotDotDotToken": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "isBiometricAvailable",
                "file": "src/app/shared/plugins/biometric.plugin.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "isNull",
                "file": "src/app/shared/operators/rxjs/is-null.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "maxDate",
                "file": "src/app/core/stores/site-document/models/site-document.model.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "question",
                        "type": "Question",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "question",
                        "type": "Question",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "minDate",
                "file": "src/app/core/stores/site-document/models/site-document.model.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "question",
                        "type": "Question",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "question",
                        "type": "Question",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "numberState",
                "file": "src/app/shared/states/number.state.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "name",
                        "type": "AdapterConfig<number, NumberState, TProps>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "93f75a58-7128-4b47-825e-04cc3bdbedb8",
                        "destructuredParameter": true
                    },
                    {
                        "name": "initialValue",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "93f75a58-7128-4b47-825e-04cc3bdbedb8",
                        "destructuredParameter": true
                    },
                    {
                        "name": "props",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "93f75a58-7128-4b47-825e-04cc3bdbedb8",
                        "destructuredParameter": true
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "name",
                        "type": "AdapterConfig<number, NumberState, TProps>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "93f75a58-7128-4b47-825e-04cc3bdbedb8",
                        "destructuredParameter": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "initialValue",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "93f75a58-7128-4b47-825e-04cc3bdbedb8",
                        "destructuredParameter": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "props",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "93f75a58-7128-4b47-825e-04cc3bdbedb8",
                        "destructuredParameter": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "param",
                "file": "src/app/shared/route/param.route.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "queryParam",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "queryParam",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "param$",
                "file": "src/app/shared/route/param.route.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "queryParam",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Observable<Nullable<string>>",
                "jsdoctags": [
                    {
                        "name": "queryParam",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "param$",
                "file": "src/app/shared/route/param.route.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "queryParam",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "project",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Observable<T>",
                "jsdoctags": [
                    {
                        "name": "queryParam",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "project",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "param$",
                "file": "src/app/shared/route/param.route.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "queryParam",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "project",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "queryParam",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "project",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "pipeTap",
                "file": "src/app/shared/rxjs/pipes/pipe-tap.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "action",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "action",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "reaction",
                "file": "src/app/shared/reactions/reaction.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "fn",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "fn",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "searchResultsAdapt",
                "file": "src/app/shared/states/search-results.adapter.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "searchResultsAdapter",
                "file": "src/app/shared/states/search-results.adapter.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "selector",
                "file": "src/app/shared/rxjs/selector.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "observable",
                        "type": "Observable",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "observable",
                        "type": "Observable",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "spreadDate",
                "file": "src/app/core/stores/site-document/models/site-document.model.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "question",
                        "type": "Question",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "question",
                        "type": "Question",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "templateMenuAdapter",
                "file": "src/app/core/stores/site-document/form-filler/adapters/template-menu.adapter.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "toPipe",
                "file": "src/polyfills.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "s",
                        "type": "Observable",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "s",
                        "type": "Observable",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "track",
                "file": "src/app/shared/rxjs/track.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "fn",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Tracking<TResult>",
                "jsdoctags": [
                    {
                        "name": "fn",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "track",
                "file": "src/app/shared/rxjs/track.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "options",
                        "type": "TrackingOptions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Tracking<TResult>",
                "jsdoctags": [
                    {
                        "name": "options",
                        "type": "TrackingOptions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "track",
                "file": "src/app/shared/rxjs/track.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "param",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Tracking<TResult>",
                "jsdoctags": [
                    {
                        "name": "param",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "trackOf",
                "file": "src/app/shared/rxjs/track.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "value",
                        "type": "T",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "value",
                        "type": "T",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "trackSend",
                "file": "src/app/shared/rxjs/track.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "options",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "options",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "use",
                "file": "src/app/shared/rxjs/use.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "initialState",
                        "type": "T",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "initialState",
                        "type": "T",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "useApi",
                "file": "src/app/core/http/api.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "baseUrl",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "baseUrl",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "useAssetListValidator",
                "file": "src/app/core/pages/document-builder/components/question-types/17-asset-list/validation/asset-list.validator.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "value",
                        "type": "Func",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "value",
                        "type": "Func",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "useCascadeSelectValidator",
                "file": "src/app/core/pages/document-builder/components/question-types/13-cascade-select/validation/cascade-select.validator.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "value",
                        "type": "Func",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "value",
                        "type": "Func",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "useCheckboxTextboxValidator",
                "file": "src/app/core/pages/document-builder/components/question-types/06-checkbox-textbox/validation/checkbox-textbox.validator.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "value",
                        "type": "Func",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "value",
                        "type": "Func",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "useCheckboxValidator",
                "file": "src/app/core/pages/document-builder/components/question-types/01-checkbox/validation/checkbox.validator.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "value",
                        "type": "Func",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "value",
                        "type": "Func",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "useElement",
                "file": "src/app/shared/angular/element/element.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "useGo",
                "file": "src/app/shared/route/go.route.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "useGoRelative",
                "file": "src/app/shared/route/go.route.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "useLabelValidator",
                "file": "src/app/core/pages/document-builder/components/question-types/00-label/validation/label.validator.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "value",
                        "type": "Func",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "value",
                        "type": "Func",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "useLinkedBoolValidator",
                "file": "src/app/core/pages/document-builder/components/question-types/16-linked-bool/validation/linked-bool.validator.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "value",
                        "type": "Func",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "value",
                        "type": "Func",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "useNumberValidator",
                "file": "src/app/core/pages/document-builder/components/question-types/12-number/validation/number.validator.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "value",
                        "type": "Func",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "value",
                        "type": "Func",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "useOperativeValidator",
                "file": "src/app/core/pages/document-builder/components/question-types/10-operative-list/validation/operative-list.validator.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "value",
                        "type": "Func",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "value",
                        "type": "Func",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "useParentElement",
                "file": "src/app/shared/angular/element/parent-element.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "useRadioGroupTextboxValidator",
                "file": "src/app/core/pages/document-builder/components/question-types/07-radio-group-textbox/validation/radio-group-textbox.validator.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "value",
                        "type": "Func",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "value",
                        "type": "Func",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "useRadioGroupValidator",
                "file": "src/app/core/pages/document-builder/components/question-types/02-radio-group/validation/radio-group.validator.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "value",
                        "type": "Func",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "value",
                        "type": "Func",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "useSelectTextValidator",
                "file": "src/app/core/pages/document-builder/components/question-types/29-select-text/validation/select-text.validator.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "value",
                        "type": "Func",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "value",
                        "type": "Func",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "useSelectValidator",
                "file": "src/app/core/pages/document-builder/components/question-types/05-select/validation/select.validator.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "value",
                        "type": "Func",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "value",
                        "type": "Func",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "useSignatureValidator",
                "file": "src/app/core/pages/document-builder/components/question-types/19-signature/validation/signature.validator.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "value",
                        "type": "Func",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "value",
                        "type": "Func",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "useTextboxValidator",
                "file": "src/app/core/pages/document-builder/components/question-types/03-textbox/validation/textbox-validator.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "value",
                        "type": "Func",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "value",
                        "type": "Func",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "useTimeValidiator",
                "file": "src/app/core/pages/document-builder/components/question-types/32-time/validation/time.validator.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "value",
                        "type": "Func",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "value",
                        "type": "Func",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "useToast",
                "file": "src/app/shared/services/toast.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "opts",
                        "type": "ToastOptions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "opts",
                        "type": "ToastOptions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "useValidationData",
                "file": "src/app/core/stores/site-document/models/site-document.model.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "rules",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "rules",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "using",
                "file": "src/app/shared/rxjs/using-calculate.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "sources",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "dotDotDotToken": true
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "sources",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "dotDotDotToken": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "verifyIdentity",
                "file": "src/app/shared/plugins/biometric.plugin.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "options",
                        "type": "BiometricOptions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "options",
                        "type": "BiometricOptions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "withAfterViewInit",
                "file": "src/app/shared/lifecycles/angular/with-after-view-init.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "withGenericTemplateContextGuard",
                "file": "src/app/shared/lifecycles/angular/with-template-context-guard.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "withIonViewDidEnter",
                "file": "src/app/shared/lifecycles/ionic/with-ion-view-did-enter.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "withIonViewDidLeave",
                "file": "src/app/shared/lifecycles/ionic/with-ion-view-did-leave.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "withIonViewWillEnter",
                "file": "src/app/shared/lifecycles/ionic/with-ion-view-will-enter.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "withIonViewWillLeave",
                "file": "src/app/shared/lifecycles/ionic/with-ion-view-will-leave.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "withNoop",
                "file": "src/app/shared/lifecycles/with-noop.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "withOnChanges",
                "file": "src/app/shared/lifecycles/angular/with-on-changes.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "withOnInit",
                "file": "src/app/shared/lifecycles/angular/with-on-init.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "withTemplateContextGuard",
                "file": "src/app/shared/lifecycles/angular/with-template-context-guard.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "writingDocumentActions",
                "file": "src/app/core/stores/site-document/props/writing-document.props.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "writingDocumentAdapter",
                "file": "src/app/core/stores/site-document/adapters/writing-document.adapter.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "AnyFunction",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "function",
                "file": "src/app/shared/lifecycles/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 178
            },
            {
                "name": "AspNetData",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/http/create-api.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 194
            },
            {
                "name": "ObservableTuple",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/shared/rxjs/using-calculate.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 194
            },
            {
                "name": "Params",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/core/http/create-api.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "Prefix",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/shared/types/prefix.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 194
            },
            {
                "name": "ReactiveConstructor",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/shared/lifecycles/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 179
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/01-checkbox/checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/00-label/label.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/02-radio-table/radio-table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/03-textbox/textbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/04-textarea/textarea.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/05-select/select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/02-radio-group/radio-group.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/07-radio-group-textbox/radio-group-textbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/07-radio-table-textbox/radio-table-textbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/08-date/date.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/09-datetime/datetime.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/10-operative-list/operative-list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/12-number/number.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/13-cascade-select/cascade-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/16-linked-bool/linked-bool.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/17-asset-list/asset-list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/18-linked-dates/linked-dates.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/19-signature/signature.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/21-company-select/company-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/22-area-select/area-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/25-asset-groups-and-types/asset-groups-and-types.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/26-asset-inspection-schedules/asset-inspection-schedules.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/27-project-select/project-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/28-rams-select/rams-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/29-select-text/select-text.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/30-cascade-select-text/cascade-select-text.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/32-time/time.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/33-linked-times/linked-times.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/34-hra-select/hra-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/36-linked-date-time/linked-datetime.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/06-checkbox-textbox/checkbox-textbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "ToPipe",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "ReturnType<>",
                "file": "src/polyfills.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "TrackingStatus",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"Idle\" | \"Success\" | \"Error\" | \"Loading\"",
                "file": "src/app/shared/rxjs/track.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "UseOf",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "ReturnType<>",
                "file": "src/app/shared/rxjs/use.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "UsePipe",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "ReturnType<>",
                "file": "src/app/shared/rxjs/use.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "WaitForSelector",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "function",
                "file": "src/app/shared/testing/wait-for.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 178
            }
        ],
        "enumerations": [
            {
                "name": "QuestionType",
                "childs": [
                    {
                        "name": "Label",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 0
                    },
                    {
                        "name": "Checkbox",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 1
                    },
                    {
                        "name": "RadioGroup",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 2
                    },
                    {
                        "name": "Textbox",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 3
                    },
                    {
                        "name": "TextArea",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 4
                    },
                    {
                        "name": "Select",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 5
                    },
                    {
                        "name": "CheckboxTextbox",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 6
                    },
                    {
                        "name": "RadioGroupTextbox",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 7
                    },
                    {
                        "name": "Date",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 8
                    },
                    {
                        "name": "DateTime",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 9
                    },
                    {
                        "name": "OperativeList",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 10
                    },
                    {
                        "name": "WallOfText",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 11
                    },
                    {
                        "name": "Number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 12
                    },
                    {
                        "name": "CascadeDropdown",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 13
                    },
                    {
                        "name": "LinkedBool",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 16
                    },
                    {
                        "name": "AssetList",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 17
                    },
                    {
                        "name": "LinkedDates",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 18
                    },
                    {
                        "name": "Signature",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 19
                    },
                    {
                        "name": "CompanySelect",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 21
                    },
                    {
                        "name": "AreaSelect",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 22
                    },
                    {
                        "name": "AssetGroupsAndTypes",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 25
                    },
                    {
                        "name": "AssetInspectionSchedule",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 26
                    },
                    {
                        "name": "ProjectSelect",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 27
                    },
                    {
                        "name": "RamsSelect",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 28
                    },
                    {
                        "name": "SelectText",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 29
                    },
                    {
                        "name": "CascadeDropdownText",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 30
                    },
                    {
                        "name": "MultiCascade",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 31
                    },
                    {
                        "name": "Time",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 32
                    },
                    {
                        "name": "LinkedTimes",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 33
                    },
                    {
                        "name": "HraSelect",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 34
                    },
                    {
                        "name": "MultiCheckbox",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 35
                    },
                    {
                        "name": "LinkedDateAndTime",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 36
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/core/stores/site-document/models/site-document.model.ts"
            }
        ],
        "groupedVariables": {
            "src/app/shared/components/datetime-picker/datetime-picker.component.stories.ts": [
                {
                    "name": "DateOnly",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/datetime-picker/datetime-picker.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/datetime-picker/datetime-picker.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/datetime-picker/datetime-picker.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<DatetimePickerComponent>",
                    "defaultValue": "(args: DatetimePickerComponent) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/document-builder.page.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DocumentWithAllPermissionsTurnedOn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DocumentWithMultiplePages",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<DocumentBuilderPage>",
                    "defaultValue": "(args: DocumentBuilderPage) => ({\r\n  props: {\r\n    ...args,\r\n    id$: of(1)\r\n  },\r\n  styles: [`\r\n    app-document-builder { display: contents; }\r\n  `]\r\n})"
                }
            ],
            "src/app/core/pages/registration/registration.page.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/registration/registration.page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/registration/registration.page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<RegistrationPage>",
                    "defaultValue": "(args: RegistrationPage) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/shared/components/camera/camera.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/camera/camera.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/camera/camera.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<CameraComponent>",
                    "defaultValue": "(args: CameraComponent) => ({\r\n  props: args,\r\n  template: `\r\n    <camera [fill]=\"fill\" [expand]=\"expand\" [color]=\"color\">\r\n      Add Image\r\n    </camera>\r\n  `\r\n})"
                }
            ],
            "src/app/shared/components/multi-selectable/multi-selectable.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/multi-selectable/multi-selectable.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/multi-selectable/multi-selectable.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<MultiSelectableComponent>",
                    "defaultValue": "(args: MultiSelectableComponent) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/shared/components/selectable/selectable.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/selectable/selectable.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "ObjectSelectable",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/selectable/selectable.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({}) as StoryFn<SelectableComponent<{ name: string }>>"
                },
                {
                    "name": "PrepopulatedSelectable",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/selectable/selectable.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/selectable/selectable.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<SelectableComponent>",
                    "defaultValue": "(args: SelectableComponent) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/shared/components/signature-pad/signature-pad.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/signature-pad/signature-pad.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/signature-pad/signature-pad.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<SignaturePadComponent>",
                    "defaultValue": "args => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/shared/components/time-picker/time-picker.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/time-picker/time-picker.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/time-picker/time-picker.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<TimePickerComponent>",
                    "defaultValue": "args => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/shared/modals/operative-list/operative-list.modal.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modals/operative-list/operative-list.modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modals/operative-list/operative-list.modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<OperativeListModal>",
                    "defaultValue": "(args: OperativeListModal) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/shared/modals/asset-list/asset-list.modal.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modals/asset-list/asset-list.modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modals/asset-list/asset-list.modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<AssetListModal>",
                    "defaultValue": "(args: AssetListModal) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/info/asset-info/asset-info.page.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/info/asset-info/asset-info.page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "info",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/info/asset-info/asset-info.page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AssetInfo",
                    "defaultValue": "{\r\n  ID: 1,\r\n  AssetID: \"\",\r\n  AcquiredDate: new Date(),\r\n  DateOnSite: new Date(),\r\n  DateOffHired: new Date(),\r\n  TypeName: faker.lorem.word(),\r\n  Registration: faker.lorem.word(),\r\n  QRCode: \"\",\r\n  SiteID: 1,\r\n  AssetFileName: \"\",\r\n  DetailsLists: [],\r\n  Base64Img: null,\r\n  PurchaseValue: \"\",\r\n  AssetNotes: \"\",\r\n  Location: faker.lorem.word(),\r\n  TemplateIDs: [1]\r\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/info/asset-info/asset-info.page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<AssetInfoPage>",
                    "defaultValue": "args => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/child-document-card/child-document-card.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/child-document-card/child-document-card.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/child-document-card/child-document-card.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<ChildDocumentCardComponent>",
                    "defaultValue": "args => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/modals/document-summary/document-summary.modal.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/modals/document-summary/document-summary.modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "defaultDoc",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/modals/document-summary/document-summary.modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SiteDocument",
                    "defaultValue": "{\r\n  ...defaultSiteDocument,\r\n  DocumentTitle: faker.lorem.word(),\r\n  RemainAnon: true,\r\n  CurrentActionerOperativeID: 1,\r\n  CompanyActionerId: 1,\r\n  SiteId: 1,\r\n  AutoQueueID: 1,\r\n  QueueDuration: {\r\n    Value: 6,\r\n    Type: \"Hours\"\r\n  },\r\n  MetaData: {\r\n    ActionerText: \"Pick your actioner\",\r\n    SiteListTitle: \"Pick your site\"\r\n  },\r\n  Pages: [\r\n    {\r\n      PageID: 1,\r\n      PageTitle: faker.lorem.words(),\r\n      PageNo: 1,\r\n      Hidden: false,\r\n      Sections: Object\r\n        .values(QuestionType)\r\n        .filter(qt => typeof qt === \"number\")\r\n        .map((qt, idx) => \r\n          ({\r\n            ...defaultSection,\r\n            SectionID: idx,\r\n            SectionNo: idx,\r\n            SectionTitle: faker.lorem.words(),\r\n            TableTitles: [\r\n              faker.lorem.word(),\r\n              faker.lorem.word(),\r\n              faker.lorem.word()\r\n            ],\r\n            SectionQuestiontype: qt as QuestionType,\r\n            Questions: [\r\n              {\r\n                ...defaultQuestion,\r\n                QuestionText: QuestionType[qt as number].toString(),\r\n                AnswerText: faker.lorem.paragraphs()\r\n              }\r\n            ]\r\n          })\r\n        )\r\n    }\r\n  ]\r\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/modals/document-summary/document-summary.modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<DocumentSummaryModal>",
                    "defaultValue": "args => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/modals/template-menu/template-menu.modal.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/modals/template-menu/template-menu.modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/modals/template-menu/template-menu.modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<TemplateMenuModal>",
                    "defaultValue": "args => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/shared/modals/operative-list/components/local-operative-search/local-operative-search.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modals/operative-list/components/local-operative-search/local-operative-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modals/operative-list/components/local-operative-search/local-operative-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<LocalOperativeSearchComponent>",
                    "defaultValue": "(args: LocalOperativeSearchComponent) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/shared/modals/operative-list/components/online-operative-search/online-operative-search.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modals/operative-list/components/online-operative-search/online-operative-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modals/operative-list/components/online-operative-search/online-operative-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<OnlineOperativeSearchComponent>",
                    "defaultValue": "args => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/document-section/multi-checkbox-section/multi-checkbox-section.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/document-section/multi-checkbox-section/multi-checkbox-section.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/document-section/multi-checkbox-section/multi-checkbox-section.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<MultiCheckboxSectionComponent>",
                    "defaultValue": "args => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/input-types/actioner-select/actioner-select.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/actioner-select/actioner-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/actioner-select/actioner-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<ActionerSelectComponent>",
                    "defaultValue": "(args: ActionerSelectComponent) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/input-types/category-actioner-select/category-actioner-select.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/category-actioner-select/category-actioner-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/category-actioner-select/category-actioner-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<CategoryActionerSelectComponent>",
                    "defaultValue": "args => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/input-types/company-actioner-select/company-actioner-select.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/company-actioner-select/company-actioner-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "PrepopulatedCompany",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/company-actioner-select/company-actioner-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/company-actioner-select/company-actioner-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<CompanyActionerSelectComponent>",
                    "defaultValue": "args => ({\r\n  props: args\r\n})"
                },
                {
                    "name": "userStoreMock",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/company-actioner-select/company-actioner-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<UserStore>",
                    "defaultValue": "{\r\n  companies$: of<Company[]>(Array\r\n    .from({ length: 10 })\r\n    .map((val, idx) => \r\n      ({\r\n        Id: idx,\r\n        Name: faker.company.name()\r\n      })\r\n  ))\r\n}"
                }
            ],
            "src/app/core/pages/document-builder/components/input-types/document-image-upload/document-image-upload.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/document-image-upload/document-image-upload.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/document-image-upload/document-image-upload.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<DocumentImageUploadComponent>",
                    "defaultValue": "args => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/input-types/queue-duration/queue-duration.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/queue-duration/queue-duration.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/queue-duration/queue-duration.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<QueueDurationComponent>",
                    "defaultValue": "(args: QueueDurationComponent) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Prepopulated",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "queues",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Array\r\n  .from({ length: 10 })\r\n  .map((val, idx) => \r\n    ({\r\n      Id: idx,\r\n      Name: faker.lorem.word()\r\n    })\r\n  )"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<QueueSelectComponent>",
                    "defaultValue": "(args: QueueSelectComponent) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/input-types/responsibility-area-select/responsibility-area-select.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/responsibility-area-select/responsibility-area-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "resAreaType",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/responsibility-area-select/responsibility-area-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ResponsibilityAreaType",
                    "defaultValue": "{\r\n  Id: 1,\r\n  AppQuestionText: faker.lorem.words(),\r\n  TypeName: faker.lorem.word(),\r\n  Areas: Array\r\n    .from({ length: 10 })\r\n    .map((val, idx) => \r\n      ({\r\n        Id: idx,\r\n        Name: faker.commerce.department(),\r\n        DocResAreaTypeId: +faker.random.numeric()\r\n      })\r\n    )\r\n}"
                },
                {
                    "name": "responsibilityAreaTypesStore",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/responsibility-area-select/responsibility-area-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<ResponsibilityAreaTypesStore>",
                    "defaultValue": "{\r\n  responsibilityAreaTypeById$: () => of(resAreaType)\r\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/responsibility-area-select/responsibility-area-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<ResponsibilityAreaSelectComponent>",
                    "defaultValue": "args => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/input-types/site-select/site-select.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/site-select/site-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "PrepopulatedSite",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/site-select/site-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/site-select/site-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<SiteSelectComponent>",
                    "defaultValue": "args => ({\r\n  props: args\r\n})"
                },
                {
                    "name": "userStoreMock",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/site-select/site-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<UserStore>",
                    "defaultValue": "{\r\n  sites$: of(Array\r\n    .from({ length: 10 })\r\n    .map((val, idx) => \r\n      ({\r\n        Id: idx,\r\n        Name: faker.company.name()\r\n      })\r\n  ))\r\n}"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/01-checkbox/checkbox.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/01-checkbox/checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/01-checkbox/checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      YesNoNA: args[\"question.YesNoNA\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/00-label/label.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/00-label/label.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/00-label/label.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/input-types/remain-anonymous/remain-anonymous.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/remain-anonymous/remain-anonymous.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/remain-anonymous/remain-anonymous.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<RemainAnonymousComponent>",
                    "defaultValue": "(args: RemainAnonymousComponent) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/02-radio-table/radio-table.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/02-radio-table/radio-table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/02-radio-table/radio-table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      YesNoNA: args[\"question.YesNoNA\"] === \"Yes\" ? true \r\n        : args[\"question.YesNoNA\"] === \"No\" ? false\r\n        : args[\"question.YesNoNA\"] === \"NA\" ? null\r\n        : args[\"question.YesNoNA\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/03-textbox/textbox.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/03-textbox/textbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/03-textbox/textbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      AnswerText: args[\"question.AnswerText\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/04-textarea/textarea.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/04-textarea/textarea.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/04-textarea/textarea.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      AnswerText: args[\"question.AnswerText\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/05-select/select.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/05-select/select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/05-select/select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      AnswerOptions: args[\"question.AnswerOptions\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/02-radio-group/radio-group.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/02-radio-group/radio-group.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/02-radio-group/radio-group.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      YesNoNA: args[\"question.YesNoNA\"] === \"Yes\" ? true \r\n        : args[\"question.YesNoNA\"] === \"No\" ? false\r\n        : args[\"question.YesNoNA\"] === \"NA\" ? null\r\n        : args[\"question.YesNoNA\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    },\r\n    section: {\r\n      ...defaultSection,\r\n      TableTitles: args[\"section.TableTitles\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/07-radio-group-textbox/radio-group-textbox.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/07-radio-group-textbox/radio-group-textbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/07-radio-group-textbox/radio-group-textbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      YesNoNA: args[\"question.YesNoNA\"] === \"Yes\" ? true \r\n        : args[\"question.YesNoNA\"] === \"No\" ? false\r\n        : args[\"question.YesNoNA\"] === \"NA\" ? null\r\n        : args[\"question.YesNoNA\"],\r\n      AnswerText: args[\"question.AnswerText\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    },\r\n    section: {\r\n      ...defaultSection,\r\n      TableTitles: args[\"section.TableTitles\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/07-radio-table-textbox/radio-table-textbox.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/07-radio-table-textbox/radio-table-textbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/07-radio-table-textbox/radio-table-textbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      YesNoNA: args[\"question.YesNoNA\"] === \"Yes\" ? true \r\n        : args[\"question.YesNoNA\"] === \"No\" ? false\r\n        : args[\"question.YesNoNA\"] === \"NA\" ? null\r\n        : args[\"question.YesNoNA\"],\r\n      AnswerText: args[\"question.AnswerText\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/08-date/date.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/08-date/date.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/08-date/date.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      DateAndTime: args[\"question.DateAndTime\"],\r\n      ValidationData: args[\"question.ValidationData\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/09-datetime/datetime.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/09-datetime/datetime.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/09-datetime/datetime.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      DateAndTime: args[\"question.DateAndTime\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/10-operative-list/operative-list.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/10-operative-list/operative-list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/10-operative-list/operative-list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Operatives: args[\"question.Operatives\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/12-number/number.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/12-number/number.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/12-number/number.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      NumberVal: args[\"question.NumberVal\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/13-cascade-select/cascade-select.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/13-cascade-select/cascade-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/13-cascade-select/cascade-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      AnswerOptions: args[\"question.AnswerOptions\"],\r\n      CascadeOptions: args[\"question.CascadeOptions\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/16-linked-bool/linked-bool.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/16-linked-bool/linked-bool.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/16-linked-bool/linked-bool.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      YesNoNA: args[\"question.YesNoNA\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    },\r\n    section: {\r\n      ...defaultSection,\r\n      TableTitles: args[\"section.TableTitles\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/17-asset-list/asset-list.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/17-asset-list/asset-list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/17-asset-list/asset-list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Assets: args[\"question.Assets\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/18-linked-dates/linked-dates.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/18-linked-dates/linked-dates.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/18-linked-dates/linked-dates.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      CascadeOptionsText: args[\"question.CascadeOptionsText\"],\r\n      Required: args[\"question.Required\"],\r\n      DateAndTime: args[\"question.DateAndTime\"],\r\n      DateAndTime2: args[\"question.DateAndTime2\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/19-signature/signature.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/19-signature/signature.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/19-signature/signature.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      AnswerText: args[\"question.AnswerText\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/21-company-select/company-select.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/21-company-select/company-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/21-company-select/company-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: defaultQuestion\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/22-area-select/area-select.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/22-area-select/area-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/22-area-select/area-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: defaultQuestion\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/25-asset-groups-and-types/asset-groups-and-types.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/25-asset-groups-and-types/asset-groups-and-types.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/25-asset-groups-and-types/asset-groups-and-types.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: defaultQuestion\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/26-asset-inspection-schedules/asset-inspection-schedules.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/26-asset-inspection-schedules/asset-inspection-schedules.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/26-asset-inspection-schedules/asset-inspection-schedules.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: defaultQuestion\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/27-project-select/project-select.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/27-project-select/project-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/27-project-select/project-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: defaultQuestion\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/28-rams-select/rams-select.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/28-rams-select/rams-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/28-rams-select/rams-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: defaultQuestion\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/29-select-text/select-text.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/29-select-text/select-text.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/29-select-text/select-text.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      AnswerText: args[\"question.AnswerText\"],\r\n      AnswerOptions: args[\"question.AnswerOptions\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/30-cascade-select-text/cascade-select-text.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/30-cascade-select-text/cascade-select-text.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/30-cascade-select-text/cascade-select-text.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      CommentsText: args[\"question.CommentsText\"],\r\n      Required: args[\"question.Required\"],\r\n      AnswerOptions: args[\"question.AnswerOptions\"],\r\n      CascadeOptions: args[\"question.CascadeOptions\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/32-time/time.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/32-time/time.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/32-time/time.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      DateAndTime: args[\"question.DateAndTime\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/33-linked-times/linked-times.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/33-linked-times/linked-times.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/33-linked-times/linked-times.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      CascadeOptionsText: args[\"question.CascadeOptionsText\"],\r\n      Required: args[\"question.Required\"],\r\n      DateAndTime: args[\"question.DateAndTime\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/34-hra-select/hra-select.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/34-hra-select/hra-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/34-hra-select/hra-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: defaultQuestion\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/36-linked-date-time/linked-datetime.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/36-linked-date-time/linked-datetime.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/36-linked-date-time/linked-datetime.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: defaultQuestion\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/06-checkbox-textbox/checkbox-textbox.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/06-checkbox-textbox/checkbox-textbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/06-checkbox-textbox/checkbox-textbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      YesNoNA: args[\"question.YesNoNA\"],\r\n      AnswerText: args[\"question.AnswerText\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/input-types/remain-anonymous/summary/remain-anonymous-summary.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/remain-anonymous/summary/remain-anonymous-summary.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/remain-anonymous/summary/remain-anonymous-summary.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<RemainAnonymousSummaryComponent>",
                    "defaultValue": "args => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/18-linked-dates/summary/linked-dates-summary.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/18-linked-dates/summary/linked-dates-summary.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/18-linked-dates/summary/linked-dates-summary.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<LinkedDatesSummaryComponent>",
                    "defaultValue": "args => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/extras/camera-capture/camera-capture.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/extras/camera-capture/camera-capture.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/extras/camera-capture/camera-capture.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<CameraCaptureComponent>",
                    "defaultValue": "(args: CameraCaptureComponent) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/extras/file-upload/file-upload.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/extras/file-upload/file-upload.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/extras/file-upload/file-upload.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<FileUploadComponent>",
                    "defaultValue": "(args: FileUploadComponent) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true,\r\n  siteDocsApi: \"http://localhost:3002/api\",\r\n  apiTimeout: 60000\r\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false,\r\n  siteDocsApi: \"http://localhost:3002/api\",\r\n  apiTimeout: 60000\r\n}"
                }
            ],
            "src/app/shared/plugins/device.plugin.ts": [
                {
                    "name": "getDeviceString",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/plugins/device.plugin.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize(async () => {\r\n  const info = await Device.getInfo();\r\n  return `${info.model}@${info.platform}@${info.osVersion}`;\r\n})"
                },
                {
                    "name": "getDeviceUuid",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/plugins/device.plugin.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize(async () => {\r\n  const { uuid } = await Device.getId();\r\n  return uuid;\r\n})"
                }
            ],
            "src/app/shared/plugins/platform.plugin.ts": [
                {
                    "name": "isMobileApp",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/plugins/platform.plugin.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize(() => {\r\n  const platform = inject(Platform);\r\n\r\n  return platform.is(\"cordova\");\r\n})"
                }
            ],
            ".storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": ".storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\r\n  globalTypes: {\r\n    iosMode: {\r\n      name: \"IOS Mode\",\r\n      defaultValue: false\r\n    }\r\n  },\r\n  parameters: {\r\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\r\n    controls: {\r\n      matchers: {\r\n        color: /(background|color)$/i,\r\n        date: /Date$/,\r\n      },\r\n    },\r\n  },\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        importProvidersFrom(IonicModule.forRoot({})),\r\n        provideHttpClient(),\r\n        //provideHttpClientTesting(),\r\n        { provide: ErrorHandler, useClass: AppErrorHandler },\r\n        { provide: HTTP_INTERCEPTORS, useClass: HttpErrorInterceptor, multi: true }\r\n      ]\r\n    }),\r\n    componentWrapperDecorator(story => `<ion-app>${story}</ion-app>`)\r\n  ]\r\n}"
                }
            ],
            "src/app/core/stores/user/user.store.ts": [
                {
                    "name": "setAppUserUpdate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/user/user.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "pipeTap<User>(user => store.update(setAppUser(user)))"
                },
                {
                    "name": "sites$",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/user/user.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "userSelector(user => user?.UserSites || [])"
                },
                {
                    "name": "store",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/user/user.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createStore(\r\n  { name: \"user\" },\r\n  withAppUser()\r\n)"
                },
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/user/user.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "propsFactory(\"appUser\", { initialValue: null as User | null })"
                },
                {
                    "name": "userSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/user/user.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "selector(store.pipe(selectAppUser()))"
                }
            ],
            "src/app/core/stores/responsibility-area-types/responsibility-area-types.store.ts": [
                {
                    "name": "store",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/responsibility-area-types/responsibility-area-types.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createStore(\r\n  { name: \"responsibility-area-types\" },\r\n  withEntities<ResponsibilityAreaType, \"Id\">({ idKey: \"Id\" })\r\n)"
                }
            ],
            "src/app/core/stores/site-document/form-filler/form-filler.store.ts": [
                {
                    "name": "store",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/site-document/form-filler/form-filler.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createStore(\r\n  { name: \"form-filler\" },\r\n  withWritingDocument(null as SiteDocument | null),\r\n  withTemplateMenuEntities<TemplateMenuItem, \"Id\">({ idKey: \"Id\", initialValue: [] })\r\n)"
                },
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/site-document/form-filler/form-filler.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "entitiesPropsFactory(\"templateMenu\")"
                },
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/site-document/form-filler/form-filler.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "writingDocumentAdapter(store)"
                }
            ],
            "src/app/core/http/template.api.ts": [
                {
                    "name": "useAllTemplates",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/http/template.api.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize(() => {\r\n  const { getAllTemplates } = useTemplateApi();\r\n\r\n  return track(() => getAllTemplates());\r\n})"
                },
                {
                    "name": "useTemplate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/http/template.api.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "(id$: Observable<Nullable<number>>) => {\r\n  const { getTemplate } = useTemplateApi();\r\n  const loginId = param(\"loginId\") || 0;\r\n\r\n  return track(() => id$.pipe(\r\n    switchMap(id => id != null \r\n      ? getTemplate({ id }).pipe(\r\n        map(doc => ({\r\n          ...doc,\r\n          Images: [],\r\n          GroupedDocumentID: `${loginId}_${Date.now()}`,\r\n          QueueDuration: doc.CanHaveQueueDuration \r\n            ? { Value: 0, Type: \"Mins\" }\r\n            : null,\r\n          PageIdx: 1\r\n        }) as SiteDocument)\r\n      )\r\n      : of(null)\r\n    )\r\n  ));\r\n}"
                },
                {
                    "name": "useTemplateApi",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/http/template.api.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createApi({\r\n  baseUrl: `${environment.siteDocsApi}/TemplateApi`,\r\n  endpoints: ({ get }) => ({\r\n    getAllTemplates: get<TemplateItem[]>(\"GetAllTemplates\"),\r\n    getTemplate: get<SiteDocument, { id: number }>(\"GetDocumentTemplate\"),\r\n  })\r\n})"
                }
            ],
            "src/app/core/http/login.api.ts": [
                {
                    "name": "useAreas",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/http/login.api.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize(() => {\r\n  const { getAreas } = useLoginApi();\r\n\r\n  return track(() => getAreas());\r\n})"
                },
                {
                    "name": "useCategoryActioners",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/http/login.api.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize((categoryId: Nullable<number>) => {\r\n  const loginApi = useLoginApi();\r\n\r\n  return track(() => categoryId != null \r\n    ? loginApi.getCategoryActioners({ categoryId })\r\n    : new BehaviorSubject([]))\r\n})"
                },
                {
                    "name": "useCompanies",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/http/login.api.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize(() => {\r\n  const { getCompanies } = useLoginApi();\r\n\r\n  return track(() => getCompanies());\r\n})"
                },
                {
                    "name": "useLoginApi",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/http/login.api.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createApi({\r\n  baseUrl: `${environment.siteDocsApi}/LoginApi`,\r\n  endpoints: ({ get }) => ({\r\n    getCompanies: get<Company[]>(\"GetCompanies\"),\r\n    getSites: get<Site[]>(\"GetSites\"),\r\n    getAreas: get<Area[]>(\"GetAreas\"),\r\n    getRams: get<AspNetData<RamsItem>[]>(\"GetRams\"),\r\n    getCategoryActioners: get<CategoryActioner[], GetCategoryActionerParams>(\"GetCategoryActioners\"),\r\n    getResAreaTypes: get<ResponsibilityAreaType[]>(\"GetResAreas\")\r\n  })\r\n})"
                },
                {
                    "name": "useRams",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/http/login.api.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize(() => {\r\n  const { getRams } = useLoginApi();\r\n\r\n  const rams = track(() => getRams().pipe(\r\n    map(rams => rams.map(r => ({\r\n      ...r,\r\n      ExpiryDate: r.ExpiryDate?.toDate()\r\n    })))\r\n  ));\r\n\r\n  return {\r\n    ...rams,\r\n    thatArentExpiredToday: rams.data(items => items.filter(item => item.ExpiryDate == null || item.ExpiryDate.isEqualOrAfterToday()))\r\n  }\r\n})"
                },
                {
                    "name": "useResAreaTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/http/login.api.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize(() => {\r\n  const { getResAreaTypes } = useLoginApi();\r\n\r\n  const resAreaTypes = track(() => getResAreaTypes());\r\n\r\n  return {\r\n    ...resAreaTypes,\r\n    find: (predicate: (value: ResponsibilityAreaType, index: number) => boolean) => resAreaTypes.data(types => types.find(predicate)),\r\n    areas: resAreaTypes.data(types => types.flatMap(t => t.Areas))\r\n  }\r\n})"
                },
                {
                    "name": "useSites",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/http/login.api.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize(() => {\r\n  const { getSites } = useLoginApi();\r\n\r\n  return track(() => getSites());\r\n})"
                }
            ],
            "src/app/core/http/asset.api.ts": [
                {
                    "name": "useAssetApi",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/http/asset.api.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createApi({\r\n  baseUrl: `${environment.siteDocsApi}/AssetApi`,\r\n  endpoints: ({ get }) => ({\r\n    getAssetDetailsByAssetId: get<AssetInfo, GetAssetDetailsByAssetIdQuery>(\"AssetDetailsByAssetId\"),\r\n    getAssetDetailsByTag: get<AssetInfo, GetAssetDetailsByTagQuery>(\"AssetDetailsByTag\"),\r\n    getAssetsByRegistration: get<Asset[], GetAssetsByRegistrationParams>(\"GetAssetsByReg\"),\r\n    getAssetsByType: get<Asset[], GetAssetsByTypeParams>(\"getAssetsByType\"),\r\n    getAssetGroups: get<AssetGroup[]>(\"GetAssetGroups\"),\r\n    getAssetTypes: get<AssetType[]>(\"GetAssetTypes\"),\r\n    getAssetInspectionSchedules: get<AssetInspectionSchedule[]>(\"GetAssetInspectionSchedules\")\r\n  })\r\n})"
                },
                {
                    "name": "useAssetDetailsById",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/http/asset.api.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize((assetId: Nullable<number>) => {\r\n  const { getAssetDetailsByAssetId } = useAssetApi();\r\n\r\n  return track(() => assetId != null\r\n    ? getAssetDetailsByAssetId({ id: assetId })\r\n    : of(null)\r\n  )\r\n})"
                },
                {
                    "name": "useAssetDetailsByTag",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/http/asset.api.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize((tag: Nullable<string>) => {\r\n  const { getAssetDetailsByTag } = useAssetApi();\r\n\r\n  return track(() => tag != null \r\n    ? getAssetDetailsByTag({ tag }) \r\n    : of(null)\r\n  );\r\n})"
                },
                {
                    "name": "useAssetGroups",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/http/asset.api.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize(() => {\r\n  const { getAssetGroups } = useAssetApi();\r\n\r\n  const assetGroups = track(() => getAssetGroups());\r\n\r\n  return {\r\n    ...assetGroups,\r\n    options: assetGroups.data(groups => groups.map(g => \r\n      ({\r\n        GroupId: g.GroupID.toString(),\r\n        GroupName: g.GroupName\r\n      })\r\n    ))\r\n  }\r\n})"
                },
                {
                    "name": "useAssetInspectionSchedules",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/http/asset.api.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize(() => {\r\n  const { getAssetInspectionSchedules } = useAssetApi();\r\n\r\n  const inspectionSchedules = track(() => getAssetInspectionSchedules());\r\n\r\n  return {\r\n    ...inspectionSchedules,\r\n    options: inspectionSchedules.data(schedules => schedules.map(s => \r\n      ({\r\n        ScheduleId: s.ScheduleID.toString(),\r\n        ScheduleName: s.ScheduleName\r\n      })\r\n    ))\r\n  }\r\n})"
                },
                {
                    "name": "useAssetTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/http/asset.api.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize(() => {\r\n  const { getAssetTypes } = useAssetApi();\r\n\r\n  const assetTypes = track(() => getAssetTypes());\r\n\r\n  return {\r\n    ...assetTypes,\r\n    options: assetTypes.data(types => types.map(t => \r\n      ({\r\n        Id: t.Id.toString(),\r\n        Description: t.Description\r\n      })\r\n    ))\r\n  }\r\n})"
                },
                {
                    "name": "useFetchAssetsByRegistration",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/http/asset.api.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize((binding: Func<GetAssetsByRegistrationParams>) => {\r\n  const { getAssetsByRegistration } = useAssetApi();\r\n\r\n  return trackSend({\r\n    binding,\r\n    fn: params => getAssetsByRegistration(params)\r\n  });\r\n})"
                },
                {
                    "name": "useFetchAssetsByType",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/http/asset.api.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize((binding: Func<Partial<GetAssetsByTypeParams>>) => {\r\n  const { getAssetsByType } = useAssetApi();\r\n\r\n  return trackSend({\r\n    binding,\r\n    fn: params => getAssetsByType(params as GetAssetsByTypeParams)\r\n  })\r\n})"
                }
            ],
            "src/app/core/stores/asset/asset.store.ts": [
                {
                    "name": "useAssetStore",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/asset/asset.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize(() => {\r\n  const store = createStore(\r\n    { name: \"assets\" },\r\n    withEntities<Asset, \"Id\">({ idKey: \"Id\" })\r\n  );\r\n\r\n  return {\r\n    data: createPipe(store.pipe(selectAllEntities())),\r\n    update: store.update.bind(store)\r\n  }\r\n})"
                }
            ],
            "src/app/core/http/collab-plan.api.ts": [
                {
                    "name": "useCollabPlanApi",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/http/collab-plan.api.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createApi({\r\n  baseUrl: `${environment.siteDocsApi}/CollabPlanApi`,\r\n  endpoints: ({ get }) => ({\r\n    getProjects: get<HotspotProject[], { siteId: number }>(\"GetProjects\"),\r\n    getHighRiskActivities: get<HighRiskActivity[], { siteId: number }>(\"GetHighRiskActivities\")\r\n  })\r\n})"
                },
                {
                    "name": "useHighRiskActivities",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/http/collab-plan.api.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize((siteId: Nullable<number>) => {\r\n  const { getHighRiskActivities } = useCollabPlanApi();\r\n\r\n  return track(() => siteId != null\r\n    ? getHighRiskActivities({ siteId })\r\n    : new BehaviorSubject([])\r\n  );\r\n})"
                },
                {
                    "name": "useProjects",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/http/collab-plan.api.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize((siteId: Nullable<number>) => {\r\n  const { getProjects } = useCollabPlanApi();\r\n\r\n  return track(() => siteId != null \r\n    ? getProjects({ siteId })\r\n    : new BehaviorSubject([])\r\n  );\r\n})"
                }
            ],
            "src/app/core/stores/site-document-image/site-document-image.store.ts": [
                {
                    "name": "useDocumentImageStore",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/site-document-image/site-document-image.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize(() => buildStore<SiteDocumentImage>(\"document-images\", \"Id\"))"
                }
            ],
            "src/app/core/http/operative.api.ts": [
                {
                    "name": "useFetchOperativesByName",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/http/operative.api.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize((binding: () => OperativeSearchParams) => {\r\n  const { getOperativesByName } = useOperativeApi();\r\n\r\n  return trackSend({\r\n    binding,\r\n    fn: params => getOperativesByName(params)\r\n  })\r\n})"
                },
                {
                    "name": "useOperativeApi",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/http/operative.api.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createApi({\r\n  baseUrl: `${environment.siteDocsApi}/OperativeApi`,\r\n  endpoints: ({ get }) => ({\r\n    getOperativesByName: get<OperativeSearchResult[], OperativeSearchParams>(\"GetOperativesByName\")\r\n  })\r\n})"
                }
            ],
            "src/app/core/stores/user/login.store.ts": [
                {
                    "name": "useLogin",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/user/login.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize(() => {\n  \n})"
                }
            ],
            "src/app/core/stores/operative/operatives.store.ts": [
                {
                    "name": "useOperativeStore",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/operative/operatives.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize(() => {\r\n  const store = createStore(\r\n    { name: \"operatives\" },\r\n    withEntities<Operative, \"ID\">({ idKey: \"ID\" })\r\n  );\r\n\r\n  return {\r\n    data: store.pipe(selectAllEntities()).toPipe(),\r\n    update: store.update.bind(store)\r\n  }\r\n})"
                }
            ],
            "src/app/core/http/queues.api.ts": [
                {
                    "name": "useQueuesApi",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/http/queues.api.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createApi({\r\n  baseUrl: `${environment.siteDocsApi}/QueuesApi`,\r\n  endpoints: ({ post }) => ({\r\n    updateDocMove: post<QueueMovedInfo, UpdateDocMoveCommand>({ path: \"UpdateDocMove\" })\r\n  })\r\n})"
                },
                {
                    "name": "useUpdateDocMove",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/http/queues.api.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize(() => {\r\n  const { updateDocMove } = useQueuesApi();\r\n\r\n  return trackSend({\r\n    fn: (params: UpdateDocMoveCommand) => updateDocMove(params)\r\n  });\r\n})"
                }
            ],
            "src/app/core/http/site-document.api.ts": [
                {
                    "name": "useSiteDocumentApi",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/http/site-document.api.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createApi({\r\n  baseUrl: `${environment.siteDocsApi}/SiteDocumentApi`,\r\n  endpoints: ({ get, post }) => ({\r\n    getCompletedDocument: get<SiteDocument, { id: number }>(\"GetCompletedDocument\"),\r\n    uploadDocument: post<{ documentId: number }, { document: SiteDocument }>({ path: \"UploadCompletedDocument\" }),\r\n    uploadDocumentImage: post<void, AddDocumentLevelImageCommand>({ path: \"AddDocumentLevelImage\" }),\r\n    uploadQuestionImage: post<void, AddQuestionLevelImageCommand>({ path: \"AddQuestionLevelImage\" })\r\n  })\r\n})"
                },
                {
                    "name": "useSpecificDocument",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/http/site-document.api.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize((id: number) => {\r\n  const { getCompletedDocument } = useSiteDocumentApi();\r\n\r\n  return track(() => getCompletedDocument({ id }));\r\n})"
                },
                {
                    "name": "useUploadDocument",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/http/site-document.api.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize(() => {\r\n  const { uploadDocument } = useSiteDocumentApi();\r\n\r\n  return trackSend({\r\n    fn: (param: { document: SiteDocument }) => uploadDocument({ document: param.document }).pipe(\r\n      map(({ documentId }) => ({\r\n        submissionId: documentId,\r\n        document: param.document,\r\n        questions: param.document.Pages\r\n          .flatMap(p => p.Sections)\r\n          .flatMap(s => s.Questions)\r\n      }))\r\n    )\r\n  })\r\n})"
                },
                {
                    "name": "useUploadDocumentImages",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/http/site-document.api.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize(() => {\r\n  const { uploadDocumentImage } = useSiteDocumentApi();\r\n\r\n  return trackSend({\r\n    fn: (params: AddDocumentLevelImageCommand[]) => {\r\n      const uploads = params.map(p => uploadDocumentImage(p))\r\n\r\n      return concat(...uploads);\r\n    }\r\n  });\r\n})"
                },
                {
                    "name": "useUploadQuestionImages",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/http/site-document.api.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize(() => {\r\n  const { uploadQuestionImage } = useSiteDocumentApi();\r\n\r\n  return trackSend({\r\n    fn: (params: AddQuestionLevelImageCommand[]) => {\r\n      const uploads = params.map(p => uploadQuestionImage(p))\r\n    \r\n      return concat(...uploads);\r\n    }\r\n  });\r\n})"
                }
            ],
            "src/app/core/stores/site-document/site-document.store.ts": [
                {
                    "name": "useSiteDocumentStore",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/site-document/site-document.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize(() => buildStore<SiteDocument, \"DocumentID\">(\"Site-Document\", \"DocumentID\"))"
                }
            ],
            "src/app/shared/states/search-results.adapter.ts": [
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/states/search-results.adapter.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "entitiesPropsFactory(\"SearchResult\")"
                }
            ],
            "src/app/core/stores/site-document/adapters/writing-document.adapter.ts": [
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/site-document/adapters/writing-document.adapter.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "propsFactory(\"writingDocument\", { initialValue: null as SiteDocument | null })"
                }
            ],
            "src/app/core/stores/site-document/branching/branching.store.ts": [
                {
                    "name": "useBranchingStore",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/site-document/branching/branching.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize(() => {\r\n  const store = buildStore<{ documentId: number, hideIdxs: number[] }, \"documentId\">(\"branching\", \"documentId\");\r\n\r\n  return store;\r\n})"
                }
            ],
            "src/app/core/stores/site-document/props/writing-document.props.ts": [
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/site-document/props/writing-document.props.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "propsFactory(\"writingDocument\", { initialValue: null as SiteDocument | null })"
                }
            ],
            "src/app/core/stores/site-document/question-img/question-img.store.ts": [
                {
                    "name": "useQuestionImgStore",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/site-document/question-img/question-img.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize(() => {\r\n  const store = buildStore<QuestionImage>(\"question-images\", \"Id\");\r\n\r\n  return store;\r\n})"
                }
            ],
            "src/app/core/stores/site-document/form-filler/adapters/template-menu.adapter.ts": [
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/site-document/form-filler/adapters/template-menu.adapter.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "entitiesPropsFactory(\"templateMenu\")"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/shared/lifecycles/lifecycle-component.ts": [
                {
                    "name": "AngularComponent",
                    "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "ReturnType<T1>",
                    "jsdoctags": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "AngularComponent",
                    "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "AngularComponent",
                    "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h3",
                            "type": "T3",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h3",
                            "type": "T3",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "AngularComponent",
                    "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h3",
                            "type": "T3",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h4",
                            "type": "T4",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h3",
                            "type": "T3",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h4",
                            "type": "T4",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "AngularComponent",
                    "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h3",
                            "type": "T3",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h4",
                            "type": "T4",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h5",
                            "type": "T5",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h3",
                            "type": "T3",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h4",
                            "type": "T4",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h5",
                            "type": "T5",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "AngularComponent",
                    "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h3",
                            "type": "T3",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h4",
                            "type": "T4",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h5",
                            "type": "T5",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h6",
                            "type": "T6",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h3",
                            "type": "T3",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h4",
                            "type": "T4",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h5",
                            "type": "T5",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h6",
                            "type": "T6",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "AngularComponent",
                    "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                },
                {
                    "name": "AngularComponent",
                    "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "args",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true
                        }
                    ],
                    "returnType": "any",
                    "jsdoctags": [
                        {
                            "name": "args",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/lifecycles/lifecycle-directive.ts": [
                {
                    "name": "AngularDirective",
                    "file": "src/app/shared/lifecycles/lifecycle-directive.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "ReturnType<T1>",
                    "jsdoctags": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "AngularDirective",
                    "file": "src/app/shared/lifecycles/lifecycle-directive.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "AngularDirective",
                    "file": "src/app/shared/lifecycles/lifecycle-directive.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h3",
                            "type": "T3",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h3",
                            "type": "T3",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "AngularDirective",
                    "file": "src/app/shared/lifecycles/lifecycle-directive.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h3",
                            "type": "T3",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h4",
                            "type": "T4",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h3",
                            "type": "T3",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h4",
                            "type": "T4",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "AngularDirective",
                    "file": "src/app/shared/lifecycles/lifecycle-directive.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h3",
                            "type": "T3",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h4",
                            "type": "T4",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h5",
                            "type": "T5",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h3",
                            "type": "T3",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h4",
                            "type": "T4",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h5",
                            "type": "T5",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "AngularDirective",
                    "file": "src/app/shared/lifecycles/lifecycle-directive.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h3",
                            "type": "T3",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h4",
                            "type": "T4",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h5",
                            "type": "T5",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h6",
                            "type": "T6",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h3",
                            "type": "T3",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h4",
                            "type": "T4",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h5",
                            "type": "T5",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h6",
                            "type": "T6",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "AngularDirective",
                    "file": "src/app/shared/lifecycles/lifecycle-directive.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                },
                {
                    "name": "AngularDirective",
                    "file": "src/app/shared/lifecycles/lifecycle-directive.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "args",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true
                        }
                    ],
                    "returnType": "any",
                    "jsdoctags": [
                        {
                            "name": "args",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/states/boolean.state.ts": [
                {
                    "name": "booleanState",
                    "file": "src/app/shared/states/boolean.state.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "name",
                            "type": "AdapterConfig<boolean, BooleanState, TProps>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "1c29a636-7591-4142-bbf7-a8639947bd55",
                            "destructuredParameter": true
                        },
                        {
                            "name": "initialValue",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "1c29a636-7591-4142-bbf7-a8639947bd55",
                            "destructuredParameter": true
                        },
                        {
                            "name": "props",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "1c29a636-7591-4142-bbf7-a8639947bd55",
                            "destructuredParameter": true
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "AdapterConfig<boolean, BooleanState, TProps>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "1c29a636-7591-4142-bbf7-a8639947bd55",
                            "destructuredParameter": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "initialValue",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "1c29a636-7591-4142-bbf7-a8639947bd55",
                            "destructuredParameter": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "props",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "1c29a636-7591-4142-bbf7-a8639947bd55",
                            "destructuredParameter": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/rxjs/store.ts": [
                {
                    "name": "buildStore",
                    "file": "src/app/shared/rxjs/store.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "idKey",
                            "type": "TId",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "idKey",
                            "type": "TId",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/rxjs/calculate.ts": [
                {
                    "name": "calculate",
                    "file": "src/app/shared/rxjs/calculate.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "value",
                            "type": "CalculateOptions<T, R>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "6fc263a4-45ef-455c-a7b9-4086512b45de",
                            "destructuredParameter": true
                        },
                        {
                            "name": "when",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "6fc263a4-45ef-455c-a7b9-4086512b45de",
                            "destructuredParameter": true
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "CalculateOptions<T, R>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "6fc263a4-45ef-455c-a7b9-4086512b45de",
                            "destructuredParameter": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "when",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "6fc263a4-45ef-455c-a7b9-4086512b45de",
                            "destructuredParameter": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/rxjs/using-calculate.ts": [
                {
                    "name": "calculate",
                    "file": "src/app/shared/rxjs/using-calculate.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "deps",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "fn",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "UsePipe<R>",
                    "jsdoctags": [
                        {
                            "name": "deps",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "fn",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "calculate",
                    "file": "src/app/shared/rxjs/using-calculate.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "deps",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "op1",
                            "type": "OperatorFunction",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "UsePipe<A>",
                    "jsdoctags": [
                        {
                            "name": "deps",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "op1",
                            "type": "OperatorFunction",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "calculate",
                    "file": "src/app/shared/rxjs/using-calculate.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "deps",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "op1",
                            "type": "OperatorFunction",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "op2",
                            "type": "OperatorFunction",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "UsePipe<B>",
                    "jsdoctags": [
                        {
                            "name": "deps",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "op1",
                            "type": "OperatorFunction",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "op2",
                            "type": "OperatorFunction",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "calculate",
                    "file": "src/app/shared/rxjs/using-calculate.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "deps",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "op1",
                            "type": "OperatorFunction",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "op2",
                            "type": "OperatorFunction",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "op3",
                            "type": "OperatorFunction",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "UsePipe<C>",
                    "jsdoctags": [
                        {
                            "name": "deps",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "op1",
                            "type": "OperatorFunction",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "op2",
                            "type": "OperatorFunction",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "op3",
                            "type": "OperatorFunction",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "calculate",
                    "file": "src/app/shared/rxjs/using-calculate.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "deps",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "op1",
                            "type": "OperatorFunction",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "op2",
                            "type": "OperatorFunction",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "op3",
                            "type": "OperatorFunction",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "op4",
                            "type": "OperatorFunction",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "UsePipe<D>",
                    "jsdoctags": [
                        {
                            "name": "deps",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "op1",
                            "type": "OperatorFunction",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "op2",
                            "type": "OperatorFunction",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "op3",
                            "type": "OperatorFunction",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "op4",
                            "type": "OperatorFunction",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "calculate",
                    "file": "src/app/shared/rxjs/using-calculate.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "deps",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "args",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true
                        }
                    ],
                    "returnType": "UsePipe<any>",
                    "jsdoctags": [
                        {
                            "name": "deps",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "args",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "using",
                    "file": "src/app/shared/rxjs/using-calculate.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "sources",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "sources",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/reactions/click.reaction.ts": [
                {
                    "name": "clickReaction",
                    "file": "src/app/shared/reactions/click.reaction.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ],
            "src/app/core/http/create-api.ts": [
                {
                    "name": "createApi",
                    "file": "src/app/core/http/create-api.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "options",
                            "type": "CreateApiOptions",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "options",
                            "type": "CreateApiOptions",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createBuildApi",
                    "file": "src/app/core/http/create-api.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "options",
                            "type": "CreateApiOptions",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "BuildApi",
                    "jsdoctags": [
                        {
                            "name": "options",
                            "type": "CreateApiOptions",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/rxjs/effect.ts": [
                {
                    "name": "createEffect",
                    "file": "src/app/shared/rxjs/effect.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "effectFn",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "on",
                            "type": "Observable",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "effectFn",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "on",
                            "type": "Observable",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/rxjs/use.ts": [
                {
                    "name": "createPipe",
                    "file": "src/app/shared/rxjs/use.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "s",
                            "type": "Observable",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "s",
                            "type": "Observable",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "use",
                    "file": "src/app/shared/rxjs/use.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "initialState",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "initialState",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/testing/wait-for.ts": [
                {
                    "name": "createWaitForSelector",
                    "file": "src/app/shared/testing/wait-for.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "spectator",
                            "type": "Spectator",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "WaitForSelector",
                    "jsdoctags": [
                        {
                            "name": "spectator",
                            "type": "Spectator",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/components/upload/upload.component.ts": [
                {
                    "name": "fileReader",
                    "file": "src/app/shared/components/upload/upload.component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "FileReader"
                },
                {
                    "name": "fileToDataUrlFile",
                    "file": "src/app/shared/components/upload/upload.component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "file",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Promise<DataUrlFile>",
                    "jsdoctags": [
                        {
                            "name": "file",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/plugins/biometric.plugin.ts": [
                {
                    "name": "ifBiometricsIsAvailable",
                    "file": "src/app/shared/plugins/biometric.plugin.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                },
                {
                    "name": "isBiometricAvailable",
                    "file": "src/app/shared/plugins/biometric.plugin.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                },
                {
                    "name": "verifyIdentity",
                    "file": "src/app/shared/plugins/biometric.plugin.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "options",
                            "type": "BiometricOptions",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "options",
                            "type": "BiometricOptions",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/core/pages/document-builder/modals/document-builder-modals.import.ts": [
                {
                    "name": "importDocumentBuilderModals",
                    "file": "src/app/core/pages/document-builder/modals/document-builder-modals.import.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ],
            "src/app/core/pages/document-builder/components/info-types/info-types.import.ts": [
                {
                    "name": "importInfoTypes",
                    "file": "src/app/core/pages/document-builder/components/info-types/info-types.import.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ],
            "src/app/core/pages/document-builder/components/input-types/input-summaries.import.ts": [
                {
                    "name": "importInputSummaries",
                    "file": "src/app/core/pages/document-builder/components/input-types/input-summaries.import.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ],
            "src/app/core/pages/document-builder/components/input-types/input-types.import.ts": [
                {
                    "name": "importInputTypes",
                    "file": "src/app/core/pages/document-builder/components/input-types/input-types.import.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ],
            "src/app/shared/imports/ng-switch.import.ts": [
                {
                    "name": "importNgSwitch",
                    "file": "src/app/shared/imports/ng-switch.import.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/question-summary.imports.ts": [
                {
                    "name": "importQuestionSummaries",
                    "file": "src/app/core/pages/document-builder/components/question-types/question-summary.imports.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/question-types.import.ts": [
                {
                    "name": "importQuestionTypes",
                    "file": "src/app/core/pages/document-builder/components/question-types/question-types.import.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ],
            "src/app/shared/imports/rx-template.import.ts": [
                {
                    "name": "importRxAutoVirtualScroll",
                    "file": "src/app/shared/imports/rx-template.import.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Visit for more information: <a href=\"https://www.rx-angular.io/docs/template/api/virtual-scrolling#autosizevirtualscrollstrategy\">https://www.rx-angular.io/docs/template/api/virtual-scrolling#autosizevirtualscrollstrategy</a></p>\n",
                    "args": []
                },
                {
                    "name": "importRxDynamicVirtualScroll",
                    "file": "src/app/shared/imports/rx-template.import.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Visit for more information: <a href=\"https://www.rx-angular.io/docs/template/api/virtual-scrolling#dynamicsizevirtualscrollstrategy\">https://www.rx-angular.io/docs/template/api/virtual-scrolling#dynamicsizevirtualscrollstrategy</a></p>\n",
                    "args": []
                },
                {
                    "name": "importRxFixedVirtualScroll",
                    "file": "src/app/shared/imports/rx-template.import.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Visit for more information: <a href=\"https://www.rx-angular.io/docs/template/api/virtual-scrolling#fixedsizevirtualscrollstrategy\">https://www.rx-angular.io/docs/template/api/virtual-scrolling#fixedsizevirtualscrollstrategy</a></p>\n",
                    "args": []
                },
                {
                    "name": "importRxTemplate",
                    "file": "src/app/shared/imports/rx-template.import.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Documentation can be found here: <a href=\"https://www.rx-angular.io/docs/template\">https://www.rx-angular.io/docs/template</a></p>\n",
                    "args": []
                },
                {
                    "name": "importRxVirtualScroll",
                    "file": "src/app/shared/imports/rx-template.import.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "providers",
                            "type": "Array",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "providers",
                            "type": "Array",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/operators/rxjs/is-null.ts": [
                {
                    "name": "isNull",
                    "file": "src/app/shared/operators/rxjs/is-null.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ],
            "src/app/core/stores/site-document/models/site-document.model.ts": [
                {
                    "name": "maxDate",
                    "file": "src/app/core/stores/site-document/models/site-document.model.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "question",
                            "type": "Question",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "question",
                            "type": "Question",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "minDate",
                    "file": "src/app/core/stores/site-document/models/site-document.model.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "question",
                            "type": "Question",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "question",
                            "type": "Question",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "spreadDate",
                    "file": "src/app/core/stores/site-document/models/site-document.model.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "question",
                            "type": "Question",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "question",
                            "type": "Question",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "useValidationData",
                    "file": "src/app/core/stores/site-document/models/site-document.model.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "rules",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "rules",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/states/number.state.ts": [
                {
                    "name": "numberState",
                    "file": "src/app/shared/states/number.state.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "name",
                            "type": "AdapterConfig<number, NumberState, TProps>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "93f75a58-7128-4b47-825e-04cc3bdbedb8",
                            "destructuredParameter": true
                        },
                        {
                            "name": "initialValue",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "93f75a58-7128-4b47-825e-04cc3bdbedb8",
                            "destructuredParameter": true
                        },
                        {
                            "name": "props",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "93f75a58-7128-4b47-825e-04cc3bdbedb8",
                            "destructuredParameter": true
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "AdapterConfig<number, NumberState, TProps>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "93f75a58-7128-4b47-825e-04cc3bdbedb8",
                            "destructuredParameter": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "initialValue",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "93f75a58-7128-4b47-825e-04cc3bdbedb8",
                            "destructuredParameter": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "props",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "93f75a58-7128-4b47-825e-04cc3bdbedb8",
                            "destructuredParameter": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/route/param.route.ts": [
                {
                    "name": "param",
                    "file": "src/app/shared/route/param.route.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "queryParam",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "queryParam",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "param$",
                    "file": "src/app/shared/route/param.route.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "queryParam",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Observable<Nullable<string>>",
                    "jsdoctags": [
                        {
                            "name": "queryParam",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "param$",
                    "file": "src/app/shared/route/param.route.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "queryParam",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "project",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Observable<T>",
                    "jsdoctags": [
                        {
                            "name": "queryParam",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "project",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "param$",
                    "file": "src/app/shared/route/param.route.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "queryParam",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "project",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "queryParam",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "project",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/rxjs/pipes/pipe-tap.ts": [
                {
                    "name": "pipeTap",
                    "file": "src/app/shared/rxjs/pipes/pipe-tap.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "action",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "action",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/reactions/reaction.ts": [
                {
                    "name": "reaction",
                    "file": "src/app/shared/reactions/reaction.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "fn",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/states/search-results.adapter.ts": [
                {
                    "name": "searchResultsAdapt",
                    "file": "src/app/shared/states/search-results.adapter.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "store",
                            "type": "Store",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "store",
                            "type": "Store",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "searchResultsAdapter",
                    "file": "src/app/shared/states/search-results.adapter.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ],
            "src/app/shared/rxjs/selector.ts": [
                {
                    "name": "selector",
                    "file": "src/app/shared/rxjs/selector.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "observable",
                            "type": "Observable",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "observable",
                            "type": "Observable",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/core/stores/site-document/form-filler/adapters/template-menu.adapter.ts": [
                {
                    "name": "templateMenuAdapter",
                    "file": "src/app/core/stores/site-document/form-filler/adapters/template-menu.adapter.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "store",
                            "type": "Store",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "store",
                            "type": "Store",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/polyfills.ts": [
                {
                    "name": "toPipe",
                    "file": "src/polyfills.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "s",
                            "type": "Observable",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "s",
                            "type": "Observable",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/rxjs/track.ts": [
                {
                    "name": "track",
                    "file": "src/app/shared/rxjs/track.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "fn",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Tracking<TResult>",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "track",
                    "file": "src/app/shared/rxjs/track.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "options",
                            "type": "TrackingOptions",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Tracking<TResult>",
                    "jsdoctags": [
                        {
                            "name": "options",
                            "type": "TrackingOptions",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "track",
                    "file": "src/app/shared/rxjs/track.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "param",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Tracking<TResult>",
                    "jsdoctags": [
                        {
                            "name": "param",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "trackOf",
                    "file": "src/app/shared/rxjs/track.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "value",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "trackSend",
                    "file": "src/app/shared/rxjs/track.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "options",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "options",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/core/http/api.ts": [
                {
                    "name": "useApi",
                    "file": "src/app/core/http/api.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "baseUrl",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "baseUrl",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/17-asset-list/validation/asset-list.validator.ts": [
                {
                    "name": "useAssetListValidator",
                    "file": "src/app/core/pages/document-builder/components/question-types/17-asset-list/validation/asset-list.validator.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "value",
                            "type": "Func",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "Func",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/13-cascade-select/validation/cascade-select.validator.ts": [
                {
                    "name": "useCascadeSelectValidator",
                    "file": "src/app/core/pages/document-builder/components/question-types/13-cascade-select/validation/cascade-select.validator.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "value",
                            "type": "Func",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "Func",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/06-checkbox-textbox/validation/checkbox-textbox.validator.ts": [
                {
                    "name": "useCheckboxTextboxValidator",
                    "file": "src/app/core/pages/document-builder/components/question-types/06-checkbox-textbox/validation/checkbox-textbox.validator.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "value",
                            "type": "Func",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "Func",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/01-checkbox/validation/checkbox.validator.ts": [
                {
                    "name": "useCheckboxValidator",
                    "file": "src/app/core/pages/document-builder/components/question-types/01-checkbox/validation/checkbox.validator.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "value",
                            "type": "Func",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "Func",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/angular/element/element.ts": [
                {
                    "name": "useElement",
                    "file": "src/app/shared/angular/element/element.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ],
            "src/app/shared/route/go.route.ts": [
                {
                    "name": "useGo",
                    "file": "src/app/shared/route/go.route.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                },
                {
                    "name": "useGoRelative",
                    "file": "src/app/shared/route/go.route.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/00-label/validation/label.validator.ts": [
                {
                    "name": "useLabelValidator",
                    "file": "src/app/core/pages/document-builder/components/question-types/00-label/validation/label.validator.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "value",
                            "type": "Func",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "Func",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/16-linked-bool/validation/linked-bool.validator.ts": [
                {
                    "name": "useLinkedBoolValidator",
                    "file": "src/app/core/pages/document-builder/components/question-types/16-linked-bool/validation/linked-bool.validator.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "value",
                            "type": "Func",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "Func",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/12-number/validation/number.validator.ts": [
                {
                    "name": "useNumberValidator",
                    "file": "src/app/core/pages/document-builder/components/question-types/12-number/validation/number.validator.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "value",
                            "type": "Func",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "Func",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/10-operative-list/validation/operative-list.validator.ts": [
                {
                    "name": "useOperativeValidator",
                    "file": "src/app/core/pages/document-builder/components/question-types/10-operative-list/validation/operative-list.validator.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "value",
                            "type": "Func",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "Func",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/angular/element/parent-element.ts": [
                {
                    "name": "useParentElement",
                    "file": "src/app/shared/angular/element/parent-element.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/07-radio-group-textbox/validation/radio-group-textbox.validator.ts": [
                {
                    "name": "useRadioGroupTextboxValidator",
                    "file": "src/app/core/pages/document-builder/components/question-types/07-radio-group-textbox/validation/radio-group-textbox.validator.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "value",
                            "type": "Func",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "Func",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/02-radio-group/validation/radio-group.validator.ts": [
                {
                    "name": "useRadioGroupValidator",
                    "file": "src/app/core/pages/document-builder/components/question-types/02-radio-group/validation/radio-group.validator.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "value",
                            "type": "Func",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "Func",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/29-select-text/validation/select-text.validator.ts": [
                {
                    "name": "useSelectTextValidator",
                    "file": "src/app/core/pages/document-builder/components/question-types/29-select-text/validation/select-text.validator.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "value",
                            "type": "Func",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "Func",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/05-select/validation/select.validator.ts": [
                {
                    "name": "useSelectValidator",
                    "file": "src/app/core/pages/document-builder/components/question-types/05-select/validation/select.validator.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "value",
                            "type": "Func",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "Func",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/19-signature/validation/signature.validator.ts": [
                {
                    "name": "useSignatureValidator",
                    "file": "src/app/core/pages/document-builder/components/question-types/19-signature/validation/signature.validator.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "value",
                            "type": "Func",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "Func",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/03-textbox/validation/textbox-validator.ts": [
                {
                    "name": "useTextboxValidator",
                    "file": "src/app/core/pages/document-builder/components/question-types/03-textbox/validation/textbox-validator.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "value",
                            "type": "Func",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "Func",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/32-time/validation/time.validator.ts": [
                {
                    "name": "useTimeValidiator",
                    "file": "src/app/core/pages/document-builder/components/question-types/32-time/validation/time.validator.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "value",
                            "type": "Func",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "Func",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/services/toast.ts": [
                {
                    "name": "useToast",
                    "file": "src/app/shared/services/toast.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "opts",
                            "type": "ToastOptions",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "opts",
                            "type": "ToastOptions",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/lifecycles/angular/with-after-view-init.ts": [
                {
                    "name": "withAfterViewInit",
                    "file": "src/app/shared/lifecycles/angular/with-after-view-init.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/lifecycles/angular/with-template-context-guard.ts": [
                {
                    "name": "withGenericTemplateContextGuard",
                    "file": "src/app/shared/lifecycles/angular/with-template-context-guard.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "withTemplateContextGuard",
                    "file": "src/app/shared/lifecycles/angular/with-template-context-guard.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/lifecycles/ionic/with-ion-view-did-enter.ts": [
                {
                    "name": "withIonViewDidEnter",
                    "file": "src/app/shared/lifecycles/ionic/with-ion-view-did-enter.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/lifecycles/ionic/with-ion-view-did-leave.ts": [
                {
                    "name": "withIonViewDidLeave",
                    "file": "src/app/shared/lifecycles/ionic/with-ion-view-did-leave.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/lifecycles/ionic/with-ion-view-will-enter.ts": [
                {
                    "name": "withIonViewWillEnter",
                    "file": "src/app/shared/lifecycles/ionic/with-ion-view-will-enter.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/lifecycles/ionic/with-ion-view-will-leave.ts": [
                {
                    "name": "withIonViewWillLeave",
                    "file": "src/app/shared/lifecycles/ionic/with-ion-view-will-leave.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/lifecycles/with-noop.ts": [
                {
                    "name": "withNoop",
                    "file": "src/app/shared/lifecycles/with-noop.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/lifecycles/angular/with-on-changes.ts": [
                {
                    "name": "withOnChanges",
                    "file": "src/app/shared/lifecycles/angular/with-on-changes.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/lifecycles/angular/with-on-init.ts": [
                {
                    "name": "withOnInit",
                    "file": "src/app/shared/lifecycles/angular/with-on-init.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/core/stores/site-document/props/writing-document.props.ts": [
                {
                    "name": "writingDocumentActions",
                    "file": "src/app/core/stores/site-document/props/writing-document.props.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "store",
                            "type": "Store",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "store",
                            "type": "Store",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/core/stores/site-document/adapters/writing-document.adapter.ts": [
                {
                    "name": "writingDocumentAdapter",
                    "file": "src/app/core/stores/site-document/adapters/writing-document.adapter.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "store",
                            "type": "Store",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "store",
                            "type": "Store",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {
            "src/app/core/stores/site-document/models/site-document.model.ts": [
                {
                    "name": "QuestionType",
                    "childs": [
                        {
                            "name": "Label",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 0
                        },
                        {
                            "name": "Checkbox",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 1
                        },
                        {
                            "name": "RadioGroup",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 2
                        },
                        {
                            "name": "Textbox",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 3
                        },
                        {
                            "name": "TextArea",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 4
                        },
                        {
                            "name": "Select",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 5
                        },
                        {
                            "name": "CheckboxTextbox",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 6
                        },
                        {
                            "name": "RadioGroupTextbox",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 7
                        },
                        {
                            "name": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 8
                        },
                        {
                            "name": "DateTime",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 9
                        },
                        {
                            "name": "OperativeList",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 10
                        },
                        {
                            "name": "WallOfText",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 11
                        },
                        {
                            "name": "Number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 12
                        },
                        {
                            "name": "CascadeDropdown",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 13
                        },
                        {
                            "name": "LinkedBool",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 16
                        },
                        {
                            "name": "AssetList",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 17
                        },
                        {
                            "name": "LinkedDates",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 18
                        },
                        {
                            "name": "Signature",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 19
                        },
                        {
                            "name": "CompanySelect",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 21
                        },
                        {
                            "name": "AreaSelect",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 22
                        },
                        {
                            "name": "AssetGroupsAndTypes",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 25
                        },
                        {
                            "name": "AssetInspectionSchedule",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 26
                        },
                        {
                            "name": "ProjectSelect",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 27
                        },
                        {
                            "name": "RamsSelect",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 28
                        },
                        {
                            "name": "SelectText",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 29
                        },
                        {
                            "name": "CascadeDropdownText",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 30
                        },
                        {
                            "name": "MultiCascade",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 31
                        },
                        {
                            "name": "Time",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 32
                        },
                        {
                            "name": "LinkedTimes",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 33
                        },
                        {
                            "name": "HraSelect",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 34
                        },
                        {
                            "name": "MultiCheckbox",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 35
                        },
                        {
                            "name": "LinkedDateAndTime",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 36
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/core/stores/site-document/models/site-document.model.ts"
                }
            ]
        },
        "groupedTypeAliases": {
            "src/app/shared/lifecycles/types.ts": [
                {
                    "name": "AnyFunction",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "function",
                    "file": "src/app/shared/lifecycles/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 178
                },
                {
                    "name": "ReactiveConstructor",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/shared/lifecycles/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 179
                }
            ],
            "src/app/core/http/create-api.ts": [
                {
                    "name": "AspNetData",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/http/create-api.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 194
                },
                {
                    "name": "Params",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/core/http/create-api.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                }
            ],
            "src/app/shared/rxjs/using-calculate.ts": [
                {
                    "name": "ObservableTuple",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/shared/rxjs/using-calculate.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 194
                }
            ],
            "src/app/shared/types/prefix.type.ts": [
                {
                    "name": "Prefix",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/shared/types/prefix.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 194
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/01-checkbox/checkbox.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/01-checkbox/checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/00-label/label.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/00-label/label.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/02-radio-table/radio-table.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/02-radio-table/radio-table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/03-textbox/textbox.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/03-textbox/textbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/04-textarea/textarea.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/04-textarea/textarea.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/05-select/select.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/05-select/select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/02-radio-group/radio-group.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/02-radio-group/radio-group.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/07-radio-group-textbox/radio-group-textbox.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/07-radio-group-textbox/radio-group-textbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/07-radio-table-textbox/radio-table-textbox.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/07-radio-table-textbox/radio-table-textbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/08-date/date.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/08-date/date.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/09-datetime/datetime.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/09-datetime/datetime.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/10-operative-list/operative-list.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/10-operative-list/operative-list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/12-number/number.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/12-number/number.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/13-cascade-select/cascade-select.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/13-cascade-select/cascade-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/16-linked-bool/linked-bool.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/16-linked-bool/linked-bool.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/17-asset-list/asset-list.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/17-asset-list/asset-list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/18-linked-dates/linked-dates.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/18-linked-dates/linked-dates.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/19-signature/signature.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/19-signature/signature.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/21-company-select/company-select.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/21-company-select/company-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/22-area-select/area-select.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/22-area-select/area-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/25-asset-groups-and-types/asset-groups-and-types.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/25-asset-groups-and-types/asset-groups-and-types.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/26-asset-inspection-schedules/asset-inspection-schedules.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/26-asset-inspection-schedules/asset-inspection-schedules.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/27-project-select/project-select.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/27-project-select/project-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/28-rams-select/rams-select.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/28-rams-select/rams-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/29-select-text/select-text.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/29-select-text/select-text.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/30-cascade-select-text/cascade-select-text.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/30-cascade-select-text/cascade-select-text.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/32-time/time.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/32-time/time.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/33-linked-times/linked-times.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/33-linked-times/linked-times.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/34-hra-select/hra-select.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/34-hra-select/hra-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/36-linked-date-time/linked-datetime.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/36-linked-date-time/linked-datetime.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/06-checkbox-textbox/checkbox-textbox.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/06-checkbox-textbox/checkbox-textbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/polyfills.ts": [
                {
                    "name": "ToPipe",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "ReturnType<>",
                    "file": "src/polyfills.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/app/shared/rxjs/track.ts": [
                {
                    "name": "TrackingStatus",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"Idle\" | \"Success\" | \"Error\" | \"Loading\"",
                    "file": "src/app/shared/rxjs/track.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "src/app/shared/rxjs/use.ts": [
                {
                    "name": "UseOf",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "ReturnType<>",
                    "file": "src/app/shared/rxjs/use.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                },
                {
                    "name": "UsePipe",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "ReturnType<>",
                    "file": "src/app/shared/rxjs/use.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/app/shared/testing/wait-for.ts": [
                {
                    "name": "WaitForSelector",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "function",
                    "file": "src/app/shared/testing/wait-for.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 178
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": ".storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/app.error-handler.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AppErrorHandler",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/api.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "Api",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/api.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Request",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/api.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "useApi",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/asset.api.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AssetGroup",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/asset.api.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AssetInfo",
                "coveragePercent": 0,
                "coverageCount": "0/17",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/asset.api.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AssetInspectionSchedule",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/asset.api.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AssetType",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/asset.api.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Detail",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/asset.api.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DetailListItem",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/asset.api.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DetailsList",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/asset.api.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DetailsListItem",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/asset.api.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "GetAssetDetailsByAssetIdQuery",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/asset.api.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "GetAssetDetailsByTagQuery",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/asset.api.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "GetAssetsByRegistrationParams",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/asset.api.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "GetAssetsByTypeParams",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/asset.api.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useAssetApi",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/asset.api.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useAssetDetailsById",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/asset.api.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useAssetDetailsByTag",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/asset.api.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useAssetGroups",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/asset.api.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useAssetInspectionSchedules",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/asset.api.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useAssetTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/asset.api.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useFetchAssetsByRegistration",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/asset.api.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useFetchAssetsByType",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/collab-plan.api.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "HighRiskActivity",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/collab-plan.api.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "HotspotProject",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/collab-plan.api.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useCollabPlanApi",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/collab-plan.api.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useHighRiskActivities",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/collab-plan.api.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useProjects",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/create-api.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BuildApi",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/create-api.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CreateApiOptions",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/create-api.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "GetRequestOptions",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/create-api.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PostRequestOptions",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/create-api.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "createApi",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/create-api.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "createBuildApi",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/interceptors/http-error.interceptor.ts",
                "type": "interceptor",
                "linktype": "interceptor",
                "name": "HttpErrorInterceptor",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/login.api.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "GetCategoryActionerParams",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/login.api.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "RamsItem",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/login.api.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ResponsibilityArea",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/login.api.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ResponsibilityAreaType",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/login.api.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useAreas",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/login.api.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useCategoryActioners",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/login.api.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useCompanies",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/login.api.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useLoginApi",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/login.api.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useRams",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/login.api.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useResAreaTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/login.api.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useSites",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/operative.api.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "OperativeSearchParams",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/operative.api.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "OperativeSearchResult",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/operative.api.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useFetchOperativesByName",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/operative.api.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useOperativeApi",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/queues.api.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "QueueMovedInfo",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/queues.api.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "UpdateDocMoveCommand",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/queues.api.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useQueuesApi",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/queues.api.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useUpdateDocMove",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/site-document.api.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AddDocumentLevelImageCommand",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/site-document.api.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AddQuestionLevelImageCommand",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/site-document.api.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useSiteDocumentApi",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/site-document.api.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useSpecificDocument",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/site-document.api.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useUploadDocument",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/site-document.api.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useUploadDocumentImages",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/site-document.api.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useUploadQuestionImages",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/template.api.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TemplateApi",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/template.api.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PaginatedList",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/template.api.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TemplateItem",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/template.api.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useAllTemplates",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/template.api.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/template.api.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useTemplateApi",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/child-document-card/child-document-card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/child-document-card/child-document-card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/child-document-card/child-document-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChildDocumentCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/document-navigation/document-navigation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DocumentNavigationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/document-page/document-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DocumentPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/document-section/document-section.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DocumentSectionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/document-section/document-section.component.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "QuestionsTemplateDirective",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/document-section/multi-checkbox-section/multi-checkbox-section.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/document-section/multi-checkbox-section/multi-checkbox-section.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/document-section/multi-checkbox-section/multi-checkbox-section.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MultiCheckboxSectionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/info-types/info-types.import.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "importInfoTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/info-types/preamble/preamble.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PreambleComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/info-types/require-gps/require-gps.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RequireGpsComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/info-types/site-banner/site-banner.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SiteBannerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/actioner-select/actioner-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/actioner-select/actioner-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/actioner-select/actioner-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ActionerSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/actioner-select/summary/actioner-select-summary.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ActionerSelectSummaryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/category-actioner-select/category-actioner-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/category-actioner-select/category-actioner-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/category-actioner-select/category-actioner-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CategoryActionerSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/category-actioner-select/summary/category-actioner-select-summary.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CategoryActionerSelectSummaryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/company-actioner-select/company-actioner-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/company-actioner-select/company-actioner-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PrepopulatedCompany",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/company-actioner-select/company-actioner-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/company-actioner-select/company-actioner-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "userStoreMock",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/company-actioner-select/company-actioner-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CompanyActionerSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/company-actioner-select/summary/company-actioner-select-summary.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CompanyActionerSelectSummaryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/document-image-upload/document-image-upload.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/document-image-upload/document-image-upload.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/document-image-upload/document-image-upload.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DocumentImageUploadComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/input-summaries.import.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "importInputSummaries",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/input-types.import.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "importInputTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/queue-duration/queue-duration.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/queue-duration/queue-duration.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/queue-duration/queue-duration.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "QueueDurationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/queue-duration/summary/queue-duration-summary.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "QueueDurationSummaryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Prepopulated",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "queues",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "QueueSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/queue-select/summary/queue-select-summary.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "QueueSelectSummaryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/remain-anonymous/remain-anonymous.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/remain-anonymous/remain-anonymous.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/remain-anonymous/remain-anonymous.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RemainAnonymousComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/remain-anonymous/summary/remain-anonymous-summary.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/remain-anonymous/summary/remain-anonymous-summary.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/remain-anonymous/summary/remain-anonymous-summary.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RemainAnonymousSummaryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/responsibility-area-select/responsibility-area-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/responsibility-area-select/responsibility-area-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "resAreaType",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/responsibility-area-select/responsibility-area-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "responsibilityAreaTypesStore",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/responsibility-area-select/responsibility-area-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/responsibility-area-select/responsibility-area-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ResponsibilityAreaSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/responsibility-area-select/summary/responsibility-area-select-summary.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ResponsibilityAreaSelectSummaryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/site-select/site-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/site-select/site-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PrepopulatedSite",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/site-select/site-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/site-select/site-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "userStoreMock",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/site-select/site-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SiteSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/site-select/summary/site-select-summary.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SiteSelectSummaryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/00-label/label.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/00-label/label.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/00-label/label.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LabelComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/00-label/summary/label-summary.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LabelSummaryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/00-label/validation/label.validator.ts",
                "type": "class",
                "linktype": "classe",
                "name": "LabelValidator",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/00-label/validation/label.validator.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "useLabelValidator",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/01-checkbox/checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/01-checkbox/checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/01-checkbox/checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/01-checkbox/summary/checkbox-summary.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxSummaryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/01-checkbox/validation/checkbox.validator.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CheckboxValidator",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/01-checkbox/validation/checkbox.validator.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "useCheckboxValidator",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/02-radio-group/radio-group.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/02-radio-group/radio-group.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/02-radio-group/radio-group.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RadioGroupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/02-radio-group/summary/radio-group-summary.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RadioGroupSummaryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/02-radio-group/validation/radio-group.validator.ts",
                "type": "class",
                "linktype": "classe",
                "name": "RadioGroupValidator",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/02-radio-group/validation/radio-group.validator.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "useRadioGroupValidator",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/02-radio-table/radio-table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/02-radio-table/radio-table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/02-radio-table/radio-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RadioTableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/03-textbox/summary/textbox-summary.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextboxSummaryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/03-textbox/textbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/03-textbox/textbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/03-textbox/textbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/03-textbox/validation/textbox-validator.ts",
                "type": "class",
                "linktype": "classe",
                "name": "TextboxValidator",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/03-textbox/validation/textbox-validator.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "useTextboxValidator",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/04-textarea/textarea.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/04-textarea/textarea.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/04-textarea/textarea.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextareaComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/05-select/select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/05-select/select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/05-select/select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/05-select/summary/select-summary.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectSummaryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/05-select/validation/select.validator.ts",
                "type": "class",
                "linktype": "classe",
                "name": "SelectValidator",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/05-select/validation/select.validator.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "useSelectValidator",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/06-checkbox-textbox/checkbox-textbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/06-checkbox-textbox/checkbox-textbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/06-checkbox-textbox/checkbox-textbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxTextboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/06-checkbox-textbox/summary/checkbox-textbox-summary.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxTextboxSummaryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/06-checkbox-textbox/validation/checkbox-textbox.validator.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CheckboxTextboxValidator",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/06-checkbox-textbox/validation/checkbox-textbox.validator.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "useCheckboxTextboxValidator",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/07-radio-group-textbox/radio-group-textbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/07-radio-group-textbox/radio-group-textbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/07-radio-group-textbox/radio-group-textbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RadioGroupTextboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/07-radio-group-textbox/summary/radio-group-textbox-summary.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RadioGroupTextboxSummaryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/07-radio-group-textbox/validation/radio-group-textbox.validator.ts",
                "type": "class",
                "linktype": "classe",
                "name": "RadioGroupTextboxValidator",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/07-radio-group-textbox/validation/radio-group-textbox.validator.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "useRadioGroupTextboxValidator",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/07-radio-table-textbox/radio-table-textbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/07-radio-table-textbox/radio-table-textbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/07-radio-table-textbox/radio-table-textbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RadioTableTextboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/08-date/date.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/08-date/date.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/08-date/date.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DateComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/08-date/summary/date-summary.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DateSummaryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/09-datetime/datetime.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/09-datetime/datetime.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/09-datetime/datetime.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DatetimeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/09-datetime/summary/datetime-summary.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DatetimeSummaryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/10-operative-list/operative-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/10-operative-list/operative-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/10-operative-list/operative-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OperativeListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/10-operative-list/summary/operative-list-summary.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OperativeListSummaryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/10-operative-list/validation/operative-list.validator.ts",
                "type": "class",
                "linktype": "classe",
                "name": "OperativeListValidator",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/10-operative-list/validation/operative-list.validator.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "useOperativeValidator",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/12-number/number.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/12-number/number.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/12-number/number.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NumberComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/12-number/summary/number-summary.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NumberSummaryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/12-number/validation/number.validator.ts",
                "type": "class",
                "linktype": "classe",
                "name": "NumberValidator",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/12-number/validation/number.validator.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "useNumberValidator",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/13-cascade-select/cascade-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/13-cascade-select/cascade-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/13-cascade-select/cascade-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CascadeSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/13-cascade-select/summary/cascade-select-summary.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CascadeSelectSummaryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/13-cascade-select/validation/cascade-select.validator.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CascadeSelectValidator",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/13-cascade-select/validation/cascade-select.validator.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "useCascadeSelectValidator",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/16-linked-bool/linked-bool.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/16-linked-bool/linked-bool.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/16-linked-bool/linked-bool.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LinkedBoolComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/16-linked-bool/summary/linked-bool-summary.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LinkedBoolSummaryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/16-linked-bool/validation/linked-bool.validator.ts",
                "type": "class",
                "linktype": "classe",
                "name": "LinkedBoolValidator",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/16-linked-bool/validation/linked-bool.validator.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "useLinkedBoolValidator",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/17-asset-list/asset-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/17-asset-list/asset-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/17-asset-list/asset-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AssetListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/17-asset-list/summary/asset-list-summary.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AssetListSummaryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/17-asset-list/validation/asset-list.validator.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AssetListValidator",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/17-asset-list/validation/asset-list.validator.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "useAssetListValidator",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/18-linked-dates/linked-dates.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/18-linked-dates/linked-dates.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/18-linked-dates/linked-dates.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LinkedDatesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/18-linked-dates/summary/linked-dates-summary.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/18-linked-dates/summary/linked-dates-summary.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/18-linked-dates/summary/linked-dates-summary.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LinkedDatesSummaryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/19-signature/signature.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/19-signature/signature.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/19-signature/signature.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignatureComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/19-signature/summary/signature-summary.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignatureSummaryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/19-signature/validation/signature.validator.ts",
                "type": "class",
                "linktype": "classe",
                "name": "SignatureValidator",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/19-signature/validation/signature.validator.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "useSignatureValidator",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/21-company-select/company-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/21-company-select/company-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/21-company-select/company-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CompanySelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/22-area-select/area-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/22-area-select/area-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/22-area-select/area-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AreaSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/25-asset-groups-and-types/asset-groups-and-types.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/25-asset-groups-and-types/asset-groups-and-types.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/25-asset-groups-and-types/asset-groups-and-types.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AssetGroupsAndTypesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/26-asset-inspection-schedules/asset-inspection-schedules.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/26-asset-inspection-schedules/asset-inspection-schedules.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/26-asset-inspection-schedules/asset-inspection-schedules.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AssetInspectionSchedulesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/27-project-select/project-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/27-project-select/project-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/27-project-select/project-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProjectSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/28-rams-select/rams-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/28-rams-select/rams-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/28-rams-select/rams-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RamsSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/29-select-text/select-text.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/29-select-text/select-text.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/29-select-text/select-text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectTextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/29-select-text/summary/select-text-summary.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectTextSummaryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/29-select-text/validation/select-text.validator.ts",
                "type": "class",
                "linktype": "classe",
                "name": "SelectTextValidator",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/29-select-text/validation/select-text.validator.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "useSelectTextValidator",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/30-cascade-select-text/cascade-select-text.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/30-cascade-select-text/cascade-select-text.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/30-cascade-select-text/cascade-select-text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CascadeSelectTextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/30-cascade-select-text/summary/cascade-select-text-summary.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CascadeSelectTextSummaryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/30-cascade-select-text/validation/cascade-select-text.validator.ts",
                "type": "class",
                "linktype": "classe",
                "name": "CascadeSelectTextValidator",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/32-time/summary/time-summary.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TimeSummaryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/32-time/time.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/32-time/time.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/32-time/time.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TimeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/32-time/validation/time.validator.ts",
                "type": "class",
                "linktype": "classe",
                "name": "TimeValidator",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/32-time/validation/time.validator.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "useTimeValidiator",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/33-linked-times/linked-times.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/33-linked-times/linked-times.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/33-linked-times/linked-times.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LinkedTimesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/33-linked-times/summary/linked-times-summary.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LinkedTimesSummaryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/34-hra-select/hra-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/34-hra-select/hra-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/34-hra-select/hra-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HraSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/36-linked-date-time/linked-datetime.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/36-linked-date-time/linked-datetime.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/36-linked-date-time/linked-datetime.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LinkedDatetimeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/36-linked-date-time/summary/linked-date-time-summary.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LinkedDateTimeSummaryComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/extras/camera-capture/camera-capture.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/extras/camera-capture/camera-capture.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/extras/camera-capture/camera-capture.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CameraCaptureComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/extras/file-upload/file-upload.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/extras/file-upload/file-upload.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/extras/file-upload/file-upload.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FileUploadComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/extras/question-text/question-text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "QuestionTextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/question-summary.imports.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "importQuestionSummaries",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/question-types.import.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "importQuestionTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DocumentWithAllPermissionsTurnedOn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DocumentWithMultiplePages",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/document-builder.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "DocumentBuilderPage",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/document-builder.page.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DocumentBuilderOptions",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/modals/document-builder-modals.import.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "importDocumentBuilderModals",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/modals/document-summary/document-summary.modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/modals/document-summary/document-summary.modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultDoc",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/modals/document-summary/document-summary.modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/modals/document-summary/document-summary.modal.ts",
                "type": "component",
                "linktype": "component",
                "name": "DocumentSummaryModal",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/modals/template-menu/template-menu.modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/modals/template-menu/template-menu.modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/modals/template-menu/template-menu.modal.ts",
                "type": "component",
                "linktype": "component",
                "name": "TemplateMenuModal",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/modals/template-menu/template-menu.modal.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PaginatedList",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/info/asset-info/asset-info.page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/info/asset-info/asset-info.page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "info",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/info/asset-info/asset-info.page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/info/asset-info/asset-info.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "AssetInfoPage",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/registration/registration.page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/registration/registration.page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/registration/registration.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "RegistrationPage",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/asset/asset.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Asset",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/asset/asset.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AssetGroup",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/asset/asset.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AssetInspectionSchedule",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/asset/asset.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AssetType",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/asset/asset.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useAssetStore",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/category-actioners/category-actioners.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CategoryActioner",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/live-queues/live-queues.store.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "LiveQueuesStore",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/operative/operatives.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Operative",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/operative/operatives.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useOperativeStore",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/responsibility-area-types/responsibility-area-types.store.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ResponsibilityAreaTypesStore",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/responsibility-area-types/responsibility-area-types.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ResponsibilityArea",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/responsibility-area-types/responsibility-area-types.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ResponsibilityAreaType",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/responsibility-area-types/responsibility-area-types.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "store",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document-image/site-document-image.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useDocumentImageStore",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/adapters/writing-document.adapter.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "writingDocumentAdapter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/adapters/writing-document.adapter.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/branching/branching.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useBranchingStore",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/form-filler/adapters/template-menu.adapter.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TemplateMenuItem",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/form-filler/adapters/template-menu.adapter.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "templateMenuAdapter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/form-filler/adapters/template-menu.adapter.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/form-filler/form-filler.store.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FormFillerStore",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/form-filler/form-filler.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TemplateMenuItem",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/form-filler/form-filler.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "store",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/form-filler/form-filler.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/form-filler/form-filler.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/models/site-document.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CascadeOption",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/models/site-document.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Page",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/models/site-document.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Question",
                "coveragePercent": 0,
                "coverageCount": "0/32",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/models/site-document.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Queue",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/models/site-document.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "QueueDuration",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/models/site-document.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Section",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/models/site-document.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SelectOption",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/models/site-document.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SelectOptionMetaData",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/models/site-document.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SiteDocument",
                "coveragePercent": 0,
                "coverageCount": "0/38",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/models/site-document.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SiteDocumentAsset",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/models/site-document.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SiteDocumentImage",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/models/site-document.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SiteDocumentMetaData",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/models/site-document.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SiteDocumentOperative",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/models/site-document.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ValidationData",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/models/site-document.model.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "maxDate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/models/site-document.model.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "minDate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/models/site-document.model.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "spreadDate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/models/site-document.model.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "useValidationData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/props/writing-document.props.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "writingDocumentActions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/props/writing-document.props.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/question-img/question-img.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "QuestionImage",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/question-img/question-img.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useQuestionImgStore",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/site-document.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useSiteDocumentStore",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/user/login.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Login",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/user/login.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useLogin",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/user/user.store.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UserStore",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/user/user.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Area",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/user/user.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Company",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/user/user.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Site",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/user/user.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/62",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/user/user.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "setAppUserUpdate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/user/user.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sites$",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/user/user.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "store",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/user/user.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/user/user.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "userSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/angular/element/element.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "useElement",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/angular/element/parent-element.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "useParentElement",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/camera/camera.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/camera/camera.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/camera/camera.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CameraComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/datetime-picker/datetime-picker.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DateOnly",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/datetime-picker/datetime-picker.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/datetime-picker/datetime-picker.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/datetime-picker/datetime-picker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DatetimePickerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/if/if.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IfComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/multi-selectable/multi-selectable.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/multi-selectable/multi-selectable.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/multi-selectable/multi-selectable.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MultiSelectableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/selectable/selectable.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/selectable/selectable.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ObjectSelectable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/selectable/selectable.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PrepopulatedSelectable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/selectable/selectable.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/selectable/selectable.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/selectable/selectable.component.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ItemsTemplateDirective",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/signature-pad/signature-pad.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/signature-pad/signature-pad.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/signature-pad/signature-pad.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignaturePadComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/signature-pad/signature-pad.component.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "SignaturePadDirective",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/time-picker/time-picker.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/time-picker/time-picker.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/time-picker/time-picker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TimePickerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/toggle-button/toggle-button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ToggleButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/upload/upload.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UploadComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/upload/upload.component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "fileReader",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/upload/upload.component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "fileToDataUrlFile",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/directives/barcode-scanner/barcode-scanner.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "BarcodeScannerDirective",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/directives/camera/take-photo/take-photo.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "TakePhotoDirective",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/directives/camera/upload-photo/upload-photo.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "UploadPhotoDirective",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/directives/date/date.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "DateDirective",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/directives/photo-viewer/photo-viewer.directive.ts",
                "type": "component",
                "linktype": "component",
                "name": "PhotoViewerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/directives/photo-viewer/photo-viewer.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "PhotoViewerDirective",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/imports/ng-switch.import.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "importNgSwitch",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/imports/rx-template.import.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "importRxAutoVirtualScroll",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/imports/rx-template.import.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "importRxDynamicVirtualScroll",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/imports/rx-template.import.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "importRxFixedVirtualScroll",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/imports/rx-template.import.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "importRxTemplate",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/imports/rx-template.import.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "importRxVirtualScroll",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/angular/with-after-view-init.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "withAfterViewInit",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/angular/with-on-changes.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "withOnChanges",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/angular/with-on-init.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "withOnInit",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/angular/with-template-context-guard.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "withGenericTemplateContextGuard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/angular/with-template-context-guard.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "withTemplateContextGuard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/ionic/with-ion-view-did-enter.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "withIonViewDidEnter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/ionic/with-ion-view-did-leave.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "withIonViewDidLeave",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/ionic/with-ion-view-will-enter.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "withIonViewWillEnter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/ionic/with-ion-view-will-leave.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "withIonViewWillLeave",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ReactiveComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "AngularComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "AngularComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "AngularComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "AngularComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "AngularComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "AngularComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "AngularComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "AngularComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ReactiveDirective",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-directive.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "AngularDirective",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-directive.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "AngularDirective",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-directive.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "AngularDirective",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-directive.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "AngularDirective",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-directive.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "AngularDirective",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-directive.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "AngularDirective",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-directive.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "AngularDirective",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-directive.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "AngularDirective",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/with-noop.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "withNoop",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/asset-list/asset-list.modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/asset-list/asset-list.modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/asset-list/asset-list.modal.ts",
                "type": "component",
                "linktype": "component",
                "name": "AssetListModal",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/asset-list/components/local-asset-search/local-asset-search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LocalAssetSearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/asset-list/components/online-asset-search/online-asset-search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OnlineAssetSearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/operative-list/components/local-operative-search/local-operative-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/operative-list/components/local-operative-search/local-operative-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/operative-list/components/local-operative-search/local-operative-search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LocalOperativeSearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/operative-list/components/online-operative-search/online-operative-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/operative-list/components/online-operative-search/online-operative-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/operative-list/components/online-operative-search/online-operative-search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OnlineOperativeSearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/operative-list/operative-list.modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/operative-list/operative-list.modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/operative-list/operative-list.modal.ts",
                "type": "component",
                "linktype": "component",
                "name": "OperativeListModal",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/events/target-event.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TargetEvent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/files/data-url-file.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DataUrlFile",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/operators/rxjs/is-null.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "isNull",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/pipes/filter-out/filter-out.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "FilterOutPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/pipes/filter/filter.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "FilterPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/pipes/find/find.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "FindPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/pipes/fuse/fuse.pipe.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FuseOptions",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/pipes/fuse/fuse.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "FusePipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/pipes/to-string-values/to-string-values.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "ToStringValuesPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/pipes/utc-date/utc-date.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "UtcDatePipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/pipes/utc-datetime/utc-date-time.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "UtcDateTimePipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/plugins/biometric.plugin.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "ifBiometricsIsAvailable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/plugins/biometric.plugin.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "isBiometricAvailable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/plugins/biometric.plugin.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "verifyIdentity",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/plugins/device.plugin.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getDeviceString",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/plugins/device.plugin.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getDeviceUuid",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/plugins/platform.plugin.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "isMobileApp",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/reactions/click.reaction.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "clickReaction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/reactions/reaction.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "reaction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/route/go.route.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "useGo",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/route/go.route.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "useGoRelative",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/route/param.route.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "param",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/route/param.route.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "param$",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/route/param.route.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "param$",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/route/param.route.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "param$",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/rxjs/calculate.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CalculateOptions",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/rxjs/calculate.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "calculate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/rxjs/effect.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "createEffect",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/rxjs/pipes/pipe-tap.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "pipeTap",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/rxjs/selector.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "selector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/rxjs/store.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "buildStore",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/rxjs/track.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Tracking",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/rxjs/track.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TrackingOptions",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/rxjs/track.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "track",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/rxjs/track.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "track",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/rxjs/track.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "track",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/rxjs/track.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "trackOf",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/rxjs/track.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "trackSend",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/rxjs/use.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "createPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/rxjs/use.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "use",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/rxjs/using-calculate.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "calculate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/rxjs/using-calculate.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "calculate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/rxjs/using-calculate.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "calculate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/rxjs/using-calculate.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "calculate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/rxjs/using-calculate.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "calculate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/rxjs/using-calculate.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "calculate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/rxjs/using-calculate.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "using",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/onesignal/onesignal.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "OneSignalService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/toast.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "useToast",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/states/adapter-config.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AdapterConfig",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/states/boolean.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BooleanState",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/states/boolean.state.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "booleanState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/states/number.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "NumberState",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/states/number.state.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "numberState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/states/search-results.adapter.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SearchEntitiesType",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/states/search-results.adapter.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "searchResultsAdapt",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/states/search-results.adapter.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "searchResultsAdapter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/states/search-results.adapter.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/testing/wait-for.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "createWaitForSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/validation/validator.ts",
                "type": "class",
                "linktype": "classe",
                "name": "RxValidator",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/polyfills.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Observable",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/polyfills.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "toPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}