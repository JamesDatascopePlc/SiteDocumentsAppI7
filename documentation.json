{
    "pipes": [
        {
            "name": "FindPipe",
            "id": "pipe-FindPipe-150a7380c1449d63f4c5b8a1b32925836a787ed6648ffc6a87f407709fe4b4d9cbd466abb45fb68b41fef1b7fc58a52abd0ca7a70a4df2debc45ce2548236091",
            "file": "src/app/shared/pipes/find/find.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "Observable<T[]>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "predicate",
                            "type": "Partial<T>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "Observable<T[]>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "predicate",
                            "type": "Partial<T>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "find",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\nimport { find } from 'lodash-es';\nimport { Observable, map } from 'rxjs';\n\n@Pipe({\n  name: 'find',\n  standalone: true\n})\nexport class FindPipe implements PipeTransform {\n\n  transform<T>(value: Observable<T[]>, predicate: Partial<T>) {\n    return value.pipe(\n      map(vals => find(vals, predicate) as T)\n    );\n  }\n\n}\n"
        },
        {
            "name": "FusePipe",
            "id": "pipe-FusePipe-9e0e35d1e33d95da14a2483e81c42238fcc76660c55f7a5be13ffe713bc2008f6b73bb5ddd7350755c3f39ac54e83d4aa5c0d6980efe7806993f4ee735022a71",
            "file": "src/app/shared/pipes/fuse/fuse.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "values",
                            "type": "T[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "options",
                            "type": "FuseOptions<T>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "T[]",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "values",
                            "type": "T[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "options",
                            "type": "FuseOptions<T>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "values",
                            "type": "Observable<T[]>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "options",
                            "type": "FuseOptions<T>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<T[]>",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "values",
                            "type": "Observable<T[]>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "options",
                            "type": "FuseOptions<T>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "values",
                            "type": "Observable<T[]> | T[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "options",
                            "type": "FuseOptions<T>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable | []",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "values",
                            "type": "Observable<T[]> | T[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "options",
                            "type": "FuseOptions<T>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "fuse",
            "sourceCode": "import { Pipe, PipeTransform } from \"@angular/core\";\r\nimport Fuse from 'fuse.js'\r\nimport { Observable, map } from \"rxjs\";\r\n\r\nexport interface FuseOptions<T> extends Omit<Fuse.IFuseOptions<T>, \"keys\"> {\r\n  search: string | null | undefined,\r\n  keys?: keyof T | Array<keyof T>\r\n}\r\n\r\n@Pipe({\r\n  name: \"fuse\",\r\n  standalone: true\r\n})\r\nexport class FusePipe implements PipeTransform {\r\n  transform<T>(values: T[], options: FuseOptions<T>): T[] \r\n  transform<T>(values: Observable<T[]>, options: FuseOptions<T>): Observable<T[]>\r\n  transform<T>(values: Observable<T[]> | T[], options: FuseOptions<T>): Observable<T[]> | T[] {\r\n    if (options.search == null || options.search.length === 0)\r\n      return values;\r\n    \r\n    return values instanceof Observable<T[]>\r\n      ? values.pipe(\r\n        map(vals => new Fuse(vals, { \r\n          threshold: .1,\r\n          ignoreLocation: true,\r\n          ...options as Fuse.IFuseOptions<T>\r\n        })\r\n        .search(options.search!)\r\n        .map(val => val.item))\r\n      )\r\n      : new Fuse(values, { \r\n          threshold: .1,\r\n          ignoreLocation: true,\r\n          ...options as Fuse.IFuseOptions<T>\r\n        })\r\n        .search(options.search)\r\n        .map(val => val.item);\r\n  }\r\n}\r\n"
        },
        {
            "name": "ToStringValuesPipe",
            "id": "pipe-ToStringValuesPipe-66bbdb4d70cacc81c7fd6278d1f2859dbadbef70a4f5f641ade95ef20fe28deb9dfc06cad2b7a56160e59e8918e95fe477b3b30e4187134a329787df3d0b538d",
            "file": "src/app/shared/pipes/to-string-values/to-string-values.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "values",
                            "type": "T[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 10,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "values",
                            "type": "T[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "toStringValues",
            "sourceCode": "import { Pipe, PipeTransform } from '@angular/core';\nimport { mapValues } from 'lodash-es';\n\n@Pipe({\n  name: 'toStringValues',\n  standalone: true\n})\nexport class ToStringValuesPipe implements PipeTransform {\n\n  transform<T extends object>(values: T[]) {\n    return values.map(obj => mapValues(obj, val => val + \"\"));\n  }\n\n}\n"
        },
        {
            "name": "UtcDatePipe",
            "id": "pipe-UtcDatePipe-3df2da5943619820a08b43305a8b943b552901f746286765109aff8863f88916365dd7ef2c842b01f39b0c91904703a1d8ee240fc41b06d4ed1fc45b97f21c8f",
            "file": "src/app/shared/pipes/utc-date/utc-date.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "utcDate",
            "sourceCode": "import { Pipe, PipeTransform } from \"@angular/core\";\r\n\r\n@Pipe({\r\n  name: 'utcDate',\r\n  standalone: true\r\n})\r\nexport class UtcDatePipe implements PipeTransform {\r\n  transform(value: Date) {\r\n    return value.toFormat(\"yyyy-MM-dd\")\r\n  }\r\n}"
        },
        {
            "name": "UtcDateTimePipe",
            "id": "pipe-UtcDateTimePipe-f4ce147d888d6f615bc29a992c446868ddd63bb235fa8e74e9d5305ccde0ba63cbd294f0f07e53af0115241c96b85d95d9623a594f615956a20e13e9c6c15533",
            "file": "src/app/shared/pipes/utc-datetime/utc-date-time.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 8,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "utcDateTime",
            "sourceCode": "import { Pipe, PipeTransform } from \"@angular/core\";\r\n\r\n@Pipe({\r\n  name: 'utcDateTime',\r\n  standalone: true\r\n})\r\nexport class UtcDateTimePipe implements PipeTransform {\r\n  transform(value: Date) {\r\n    return value.toFormat(\"yyyy-MM-dd HH:mm\");\r\n  }\r\n}"
        }
    ],
    "interfaces": [
        {
            "name": "AdapterConfig",
            "id": "interface-AdapterConfig-0245decb74ff5f3ca0c9255691faf819bed16b92334744dbe9f804aa7db115409ca1924b9762501471b29d079440a22ba77ba5d00f5954c26e9a260d4ef122d2",
            "file": "src/app/shared/states/adapter-config.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface AdapterConfig<TValue, TState, TProps> {\r\n  name: string,\r\n  initialValue: TValue,\r\n  props?: (state: TState) => TProps\r\n}",
            "properties": [
                {
                    "name": "initialValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TValue",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "props",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": true,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AdapterTarget",
            "id": "interface-AdapterTarget-1bdbb626e75577b3a840a415e32b2694a95e70f778d041334621dea3933ebdc0b36d1794c1f6b3edb5b410d5a41920007f632d0f43d1e860b86f1cd3498e9a3b",
            "file": "src/app/core/stores/operative/adapters/operatives.adapter.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Store, StoreDef } from \"@ngneat/elf\";\r\nimport { addEntities, EntitiesRef, selectAllEntities, setEntities } from \"@ngneat/elf-entities\";\r\nimport { pipeTap } from \"src/app/shared/rxjs\";\r\nimport { Operative, OperativeSearchResult } from \"../operatives.store\";\r\n\r\ninterface EntitiesType {\r\n  entities: Record<number, Operative>,\r\n  ids: number[]\r\n}\r\n\r\nexport function operativesAdapter<TState extends EntitiesType>(store: Store<StoreDef<TState>>) {\r\n  return {\r\n    operatives$: () => store.pipe(selectAllEntities()),\r\n    addOperative: pipeTap<Operative>(operative => store.update(\r\n      addEntities(operative)\r\n    ))\r\n  }\r\n}\r\n\r\ninterface SearchEntitiesType {\r\n  SearchResultEntities: Record<number, OperativeSearchResult>,\r\n  SearchResultIds: number[]\r\n}\r\n\r\ntype SearchEntitiesRef = EntitiesRef<\"SearchResultEntities\", \"SearchResultIds\", \"idKeySearchResult\">;\r\n\r\ninterface AdapterTarget<TState extends SearchEntitiesType> {\r\n  store: Store<StoreDef<TState>>,\r\n  ref: SearchEntitiesRef\r\n}\r\n\r\nexport function operativeSearchAdapter<TState extends SearchEntitiesType>({ store, ref }: AdapterTarget<TState>) {\r\n  return {\r\n    searchResults$: () => store.pipe(selectAllEntities({ ref })),\r\n    setSearchResults: pipeTap<OperativeSearchResult[]>(results => store.update(\r\n      setEntities(results, { ref })\r\n    ))\r\n  }\r\n}",
            "properties": [
                {
                    "name": "ref",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SearchEntitiesRef",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "store",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Store<StoreDef<TState>>",
                    "optional": false,
                    "description": "",
                    "line": 28
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Area",
            "id": "interface-Area-853a61b57e97b1015338c1b3ad545ff7256fef0ca9acee4db5fd449e1c7e81fa68592cbea8c7e1b7dbac8501a6598d2487ebbfe41af8e6a90d93a03da6fa4117",
            "file": "src/app/core/stores/user/user.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\r\nimport { inject, Injectable } from \"@angular/core\";\r\nimport { createStore, propsFactory } from \"@ngneat/elf\";\r\nimport { localStorageStrategy, persistState } from \"@ngneat/elf-persist-state\";\r\nimport { combineLatest, Observable, switchMap } from \"rxjs\";\r\nimport { getDeviceString, getDeviceUuid } from \"src/app/shared/plugins/device.plugin\";\r\nimport { pipeTap, selector } from \"src/app/shared/rxjs\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\nexport interface User {\r\n  Id: number,\r\n  LastName: string,\r\n  FirstName: string,\r\n  CompanyId: number,\r\n  CompanyName: string,\r\n  Colour: string,\r\n  FontColour: string,\r\n  Token: string,\r\n  Pin: string,\r\n  Site: Site,\r\n  DocumentListingTab: \"Recent\" | \"Pinned\" | \"Issued\",\r\n  IsInSupervisorRole: boolean,\r\n  HasRegisteredPlayerId: number,\r\n  HasAssets: boolean,\r\n  HasAssetCreation: boolean,\r\n  HasDocQrCodes: boolean,\r\n  HasHadWifiPreferenceChecked: boolean,\r\n  HasUpdateableDocs: boolean,\r\n  HasDocQueues: boolean,\r\n  HasCompanies: boolean,\r\n  HasDataTouchAreas: boolean,\r\n  HasQueueSupervisors: boolean,\r\n  HasCategoryActioners: boolean,\r\n  UserSites: Site[],\r\n  UserCompanies: Company[],\r\n  HasPlanningMeeting: boolean,\r\n  HasReviewMeeting: boolean,\r\n  HasCollabPlanning: boolean,\r\n  HasRandomOperativebarcodes: boolean,\r\n  HasLiveQueues: boolean,\r\n  HasResAreas:boolean,\r\n  HasHideOperativeScan: boolean,\r\n  HasSites: boolean,\r\n  HasDocDrop: boolean,\r\n  HasBasicOpInfo: boolean,\r\n  HasSimpleSwipes: boolean,\r\n  HasProjectsOnDocDrop: boolean,\r\n  HasCustomLookups: boolean,\r\n  HasTemplateSender: boolean,\r\n  HasMyOpInfo: boolean,\r\n  HasViewDocumentAsSinglePage: boolean,\r\n  HasShowParentAnswersOnChildDoc: boolean,\r\n  HasCompanySelectWithOtherOption:boolean,\r\n  HideSearchOnOperativeInfo: boolean,\r\n  HideSearchOnOperativeAccess: boolean,\r\n  CanAddOperativesToDocsByName: boolean,\r\n  HasRamsList: boolean,\r\n  CanAddAsssetsToDocsByName: boolean,\r\n  ShowWeightingsOnApp: boolean,\r\n  TemplatesLastUpdate: Date,\r\n  Url: string,\r\n  UseFingerReader: boolean,\r\n  SelectedSite?: Site,\r\n  NavTab: \"Modules\" | \"Documents\",\r\n  NumberOfTemplates: number,\r\n  DownloadedTemplates: number,\r\n  //PermittedCategories: DocCategory[],\r\n  HasOperativeInfo: boolean,\r\n  CanOffHireAssets: boolean,\r\n  CanViewOtherOperativeInfo: boolean,\r\n  CanModifyOperativeQRs: boolean,\r\n  CanAddQRsToAssets: boolean\r\n}\r\n\r\nexport interface Site {\r\n  Id: number,\r\n  Name: string\r\n}\r\n\r\nexport interface Company {\r\n  Id: number,\r\n  Name: string\r\n}\r\n\r\nexport interface Area {\r\n  Id: number,\r\n  SiteId: number,\r\n  Name: string\r\n}\r\n\r\nconst {\r\n  withAppUser, \r\n  selectAppUser, \r\n  setAppUser\r\n} = propsFactory(\"appUser\", { initialValue: null as User | null });\r\n\r\nconst store = createStore(\r\n  { name: \"user\" },\r\n  withAppUser()\r\n);\r\n\r\nconst userSelector = selector(store.pipe(selectAppUser()));\r\nconst sites$ = userSelector(user => user?.UserSites || []);\r\n\r\nconst setAppUserUpdate = pipeTap<User>(user => store.update(setAppUser(user)));\r\n\r\npersistState(store, {\r\n  key: \"user\",\r\n  storage: localStorageStrategy\r\n});\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class UserStore {\r\n  httpClient = inject(HttpClient);\r\n\r\n  user$ = store.pipe(selectAppUser());\r\n  sites$ = sites$;\r\n  companies$ = userSelector(user => user?.UserCompanies || []);\r\n\r\n  getUserRequest$ = (action$: Observable<{ token: string, pin: string }>) => combineLatest({\r\n    login: action$,\r\n    deviceId: getDeviceUuid(),\r\n    deviceString: getDeviceString() \r\n  }).pipe(\r\n    switchMap(({ login, deviceId, deviceString }) => this.httpClient.post<User>(`${environment.siteDocsApi}/LoginApi/LoginSiteDocumentsApp`, {\r\n      deviceId,\r\n      deviceString\r\n    }, {\r\n      headers: {\r\n        appToken: login.token,\r\n        appPin: login.pin\r\n      }\r\n    })),\r\n    setAppUserUpdate()\r\n  );\r\n}",
            "properties": [
                {
                    "name": "Id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 86
                },
                {
                    "name": "Name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 88
                },
                {
                    "name": "SiteId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 87
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Asset",
            "id": "interface-Asset-fafc0814c44dfe3edbffc9bfe9f3883b30fba04102ec8ee7a979f7eea8e8a91fc0fd595e28f054d10745321687c40bc1798a195db93793f60e6b1e0f6fd57a92",
            "file": "src/app/core/stores/asset/asset.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { memoize } from \"lodash-es\";\r\nimport { use } from \"src/app/shared/rxjs\";\r\nimport { useLoginApi } from \"../../http\";\r\n\r\nexport interface Asset {\r\n  Id : number,\r\n  TypeName: string,\r\n  Registration: string | null\r\n}\r\n\r\nexport interface AssetGroup {\r\n  GroupId: number,\r\n  GroupName: string,\r\n  SiteId: number\r\n  Types: AssetType[]\r\n}\r\n\r\nexport interface AssetType {\r\n  Id: number,\r\n  Description: string,\r\n  GroupId: number\r\n}\r\n\r\nexport interface AssetInspectionSchedule {\r\n  ScheduleID: number,\r\n  ScheduleName: string\r\n}\r\n\r\n// @Injectable({ providedIn: \"root\" })\r\n// class AssetStore {\r\n//   assets = use<Asset[]>([]);\r\n//   async mutate(mutation: (assets: Asset[]) => Asset[]) {\r\n//     const assets = await lastValueFrom(this.assets());\r\n//     this.assets.next(mutation(assets));\r\n//   }\r\n// }\r\nexport const useAreas = memoize(() => {\r\n  const loginApi = useLoginApi();\r\n  return loginApi.getAreas();\r\n});\r\n\r\nexport const useAssetStore = memoize(() => use<Asset[]>([]));",
            "properties": [
                {
                    "name": "Id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "Registration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "TypeName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AssetGroup",
            "id": "interface-AssetGroup-9d20708124dc6008fdf31843e8acc6db70da743510cecc8073f657f9dbf0d9c1f4bf3afcdb5e1b9b086fdb8ea128d6a5992c19931414df702cfe909696ef5b12",
            "file": "src/app/core/http/asset.api.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Asset } from \"../stores/asset/asset.store\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { createApi } from \"./create-api\";\r\nimport { memoize } from \"lodash-es\";\r\nimport { track } from \"src/app/shared/rxjs\";\r\nimport { Subject } from \"rxjs\";\r\n\r\nexport interface GetAssetsByRegistrationParams { \r\n  searchString: string, \r\n  siteId?: number \r\n}\r\n\r\nexport interface AssetGroup {\r\n  GroupID: number,\r\n  GroupName: string,\r\n  SiteID: number\r\n}\r\n\r\nexport interface AssetType {\r\n  Id: number,\r\n  Description: string,\r\n  GroupID: number\r\n}\r\n\r\nexport const useAssetApi = createApi({\r\n  baseUrl: `${environment.siteDocsApi}/AssetApi`,\r\n  endpoints: ({ get }) => ({\r\n    getAssetsByRegistration: get<Asset[], GetAssetsByRegistrationParams>(\"GetAssetsByReg\"),\r\n    getAssetsByType: get<Asset[], { typeId: number, siteId?: number }>(\"getAssetsByType\"),\r\n    getAssetGroups: get<AssetGroup[]>(\"GetAssetGroups\"),\r\n    getAssetTypes: get<AssetType[]>(\"GetAssetTypes\")\r\n  })\r\n});\r\n\r\nexport const useFetchAssetsByRegistration = memoize((binding: () => GetAssetsByRegistrationParams) => {\r\n  const { getAssetsByRegistration } = useAssetApi();\r\n  const params$ = new Subject<GetAssetsByRegistrationParams>();\r\n\r\n  const assets = track({\r\n    deps: [params$],\r\n    fn: params => getAssetsByRegistration(params)\r\n  });\r\n\r\n  return {\r\n    ...assets,\r\n    fetch: () => {\r\n      const params = binding();\r\n      params$.next(params);\r\n    }\r\n  }\r\n})\r\n\r\nexport const useAssetGroups = memoize(() => {\r\n  const { getAssetGroups } = useAssetApi();\r\n\r\n  return track(() => getAssetGroups());\r\n});\r\n\r\nexport const useAssetTypes = memoize(() => {\r\n  const { getAssetTypes } = useAssetApi();\r\n\r\n  return track(() => getAssetTypes());\r\n});",
            "properties": [
                {
                    "name": "GroupID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "GroupName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "SiteID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AssetGroup",
            "id": "interface-AssetGroup-fafc0814c44dfe3edbffc9bfe9f3883b30fba04102ec8ee7a979f7eea8e8a91fc0fd595e28f054d10745321687c40bc1798a195db93793f60e6b1e0f6fd57a92-1",
            "file": "src/app/core/stores/asset/asset.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { memoize } from \"lodash-es\";\r\nimport { use } from \"src/app/shared/rxjs\";\r\nimport { useLoginApi } from \"../../http\";\r\n\r\nexport interface Asset {\r\n  Id : number,\r\n  TypeName: string,\r\n  Registration: string | null\r\n}\r\n\r\nexport interface AssetGroup {\r\n  GroupId: number,\r\n  GroupName: string,\r\n  SiteId: number\r\n  Types: AssetType[]\r\n}\r\n\r\nexport interface AssetType {\r\n  Id: number,\r\n  Description: string,\r\n  GroupId: number\r\n}\r\n\r\nexport interface AssetInspectionSchedule {\r\n  ScheduleID: number,\r\n  ScheduleName: string\r\n}\r\n\r\n// @Injectable({ providedIn: \"root\" })\r\n// class AssetStore {\r\n//   assets = use<Asset[]>([]);\r\n//   async mutate(mutation: (assets: Asset[]) => Asset[]) {\r\n//     const assets = await lastValueFrom(this.assets());\r\n//     this.assets.next(mutation(assets));\r\n//   }\r\n// }\r\nexport const useAreas = memoize(() => {\r\n  const loginApi = useLoginApi();\r\n  return loginApi.getAreas();\r\n});\r\n\r\nexport const useAssetStore = memoize(() => use<Asset[]>([]));",
            "properties": [
                {
                    "name": "GroupId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "GroupName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "SiteId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "Types",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AssetType[]",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "AssetGroup-1"
        },
        {
            "name": "AssetInspectionSchedule",
            "id": "interface-AssetInspectionSchedule-fafc0814c44dfe3edbffc9bfe9f3883b30fba04102ec8ee7a979f7eea8e8a91fc0fd595e28f054d10745321687c40bc1798a195db93793f60e6b1e0f6fd57a92",
            "file": "src/app/core/stores/asset/asset.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { memoize } from \"lodash-es\";\r\nimport { use } from \"src/app/shared/rxjs\";\r\nimport { useLoginApi } from \"../../http\";\r\n\r\nexport interface Asset {\r\n  Id : number,\r\n  TypeName: string,\r\n  Registration: string | null\r\n}\r\n\r\nexport interface AssetGroup {\r\n  GroupId: number,\r\n  GroupName: string,\r\n  SiteId: number\r\n  Types: AssetType[]\r\n}\r\n\r\nexport interface AssetType {\r\n  Id: number,\r\n  Description: string,\r\n  GroupId: number\r\n}\r\n\r\nexport interface AssetInspectionSchedule {\r\n  ScheduleID: number,\r\n  ScheduleName: string\r\n}\r\n\r\n// @Injectable({ providedIn: \"root\" })\r\n// class AssetStore {\r\n//   assets = use<Asset[]>([]);\r\n//   async mutate(mutation: (assets: Asset[]) => Asset[]) {\r\n//     const assets = await lastValueFrom(this.assets());\r\n//     this.assets.next(mutation(assets));\r\n//   }\r\n// }\r\nexport const useAreas = memoize(() => {\r\n  const loginApi = useLoginApi();\r\n  return loginApi.getAreas();\r\n});\r\n\r\nexport const useAssetStore = memoize(() => use<Asset[]>([]));",
            "properties": [
                {
                    "name": "ScheduleID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "ScheduleName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AssetType",
            "id": "interface-AssetType-9d20708124dc6008fdf31843e8acc6db70da743510cecc8073f657f9dbf0d9c1f4bf3afcdb5e1b9b086fdb8ea128d6a5992c19931414df702cfe909696ef5b12",
            "file": "src/app/core/http/asset.api.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Asset } from \"../stores/asset/asset.store\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { createApi } from \"./create-api\";\r\nimport { memoize } from \"lodash-es\";\r\nimport { track } from \"src/app/shared/rxjs\";\r\nimport { Subject } from \"rxjs\";\r\n\r\nexport interface GetAssetsByRegistrationParams { \r\n  searchString: string, \r\n  siteId?: number \r\n}\r\n\r\nexport interface AssetGroup {\r\n  GroupID: number,\r\n  GroupName: string,\r\n  SiteID: number\r\n}\r\n\r\nexport interface AssetType {\r\n  Id: number,\r\n  Description: string,\r\n  GroupID: number\r\n}\r\n\r\nexport const useAssetApi = createApi({\r\n  baseUrl: `${environment.siteDocsApi}/AssetApi`,\r\n  endpoints: ({ get }) => ({\r\n    getAssetsByRegistration: get<Asset[], GetAssetsByRegistrationParams>(\"GetAssetsByReg\"),\r\n    getAssetsByType: get<Asset[], { typeId: number, siteId?: number }>(\"getAssetsByType\"),\r\n    getAssetGroups: get<AssetGroup[]>(\"GetAssetGroups\"),\r\n    getAssetTypes: get<AssetType[]>(\"GetAssetTypes\")\r\n  })\r\n});\r\n\r\nexport const useFetchAssetsByRegistration = memoize((binding: () => GetAssetsByRegistrationParams) => {\r\n  const { getAssetsByRegistration } = useAssetApi();\r\n  const params$ = new Subject<GetAssetsByRegistrationParams>();\r\n\r\n  const assets = track({\r\n    deps: [params$],\r\n    fn: params => getAssetsByRegistration(params)\r\n  });\r\n\r\n  return {\r\n    ...assets,\r\n    fetch: () => {\r\n      const params = binding();\r\n      params$.next(params);\r\n    }\r\n  }\r\n})\r\n\r\nexport const useAssetGroups = memoize(() => {\r\n  const { getAssetGroups } = useAssetApi();\r\n\r\n  return track(() => getAssetGroups());\r\n});\r\n\r\nexport const useAssetTypes = memoize(() => {\r\n  const { getAssetTypes } = useAssetApi();\r\n\r\n  return track(() => getAssetTypes());\r\n});",
            "properties": [
                {
                    "name": "Description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "GroupID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "Id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AssetType",
            "id": "interface-AssetType-fafc0814c44dfe3edbffc9bfe9f3883b30fba04102ec8ee7a979f7eea8e8a91fc0fd595e28f054d10745321687c40bc1798a195db93793f60e6b1e0f6fd57a92-1",
            "file": "src/app/core/stores/asset/asset.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { memoize } from \"lodash-es\";\r\nimport { use } from \"src/app/shared/rxjs\";\r\nimport { useLoginApi } from \"../../http\";\r\n\r\nexport interface Asset {\r\n  Id : number,\r\n  TypeName: string,\r\n  Registration: string | null\r\n}\r\n\r\nexport interface AssetGroup {\r\n  GroupId: number,\r\n  GroupName: string,\r\n  SiteId: number\r\n  Types: AssetType[]\r\n}\r\n\r\nexport interface AssetType {\r\n  Id: number,\r\n  Description: string,\r\n  GroupId: number\r\n}\r\n\r\nexport interface AssetInspectionSchedule {\r\n  ScheduleID: number,\r\n  ScheduleName: string\r\n}\r\n\r\n// @Injectable({ providedIn: \"root\" })\r\n// class AssetStore {\r\n//   assets = use<Asset[]>([]);\r\n//   async mutate(mutation: (assets: Asset[]) => Asset[]) {\r\n//     const assets = await lastValueFrom(this.assets());\r\n//     this.assets.next(mutation(assets));\r\n//   }\r\n// }\r\nexport const useAreas = memoize(() => {\r\n  const loginApi = useLoginApi();\r\n  return loginApi.getAreas();\r\n});\r\n\r\nexport const useAssetStore = memoize(() => use<Asset[]>([]));",
            "properties": [
                {
                    "name": "Description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "GroupId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "Id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "AssetType-1"
        },
        {
            "name": "BooleanState",
            "id": "interface-BooleanState-c4d2886ffa0583c246e0cc2f356d63b24f3996db3d35f014ef1d40185ce698861e00f785bfe0e3af33dc412b6c2c401744304fab78073ea2c29aadb756d411ad",
            "file": "src/app/shared/states/boolean.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { createStore, propsFactory } from \"@ngneat/elf\";\r\nimport { Observable } from \"rxjs\";\r\nimport { AdapterConfig } from \"./adapter-config.model\";\r\n\r\nexport interface BooleanState {\r\n  value$: Observable<boolean>,\r\n  toggle: () => void,\r\n  set: (value: boolean) => void\r\n}\r\n\r\nexport function booleanState<TProps = {}>({ name, initialValue, props }: AdapterConfig<boolean, BooleanState, TProps>): TProps & BooleanState {\r\n  const propsFn = props != null \r\n    ? props\r\n    : () => ({});\r\n\r\n    const { \r\n      withBoolean,\r\n      selectBoolean,\r\n      setBoolean\r\n    } = propsFactory(\"boolean\", {\r\n      initialValue\r\n    });\r\n  \r\n    const store = createStore(\r\n      { name }, \r\n      withBoolean()\r\n    );\r\n  \r\n    const state: BooleanState = {\r\n      value$: store.pipe(selectBoolean()),\r\n      toggle: () => store.update(setBoolean(state => !state.boolean)),\r\n      set: (val: boolean) => store.update(setBoolean(val))\r\n    };\r\n\r\n    return {\r\n      ...propsFn(state),\r\n      ...state\r\n    } as TProps & BooleanState;\r\n}",
            "properties": [
                {
                    "name": "set",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "toggle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "value$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "BuildApi",
            "id": "interface-BuildApi-4616d93f9abbd4f20499e21676f3f6f79c9bd8d6fe8e904156d53b3f3bdf64f26fd4b0ef60abdbcdbe758227a33f70c895b15ff589e722d6455bfdfbd33be8a7",
            "file": "src/app/core/http/create-api.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\r\nimport { inject } from \"@angular/core\";\r\nimport { mapValues, memoize, omitBy } from \"lodash-es\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nexport type AspNetData<T> = {\r\n  [name in keyof T]: T[name] extends Date | undefined | null \r\n    ? string \r\n    : T[name] \r\n}\r\n\r\nexport interface GetRequestOptions<TParams> {\r\n  path: string,\r\n  query?: (params: TParams) => object,\r\n  headers?: (params: TParams) => object\r\n}\r\n\r\nexport interface PostRequestOptions<TParams> {\r\n  path: string,\r\n  body?: (params: TParams) => object,\r\n  headers?: (params: TParams) => object\r\n}\r\n\r\nexport interface BuildApi {\r\n  get: <TResponse, TParams = object | void>(getOptions: string | GetRequestOptions<TParams>) => (params: TParams) => Observable<TResponse>\r\n  post: <TResponse, TParams = object | void>(postOptions: PostRequestOptions<TParams>) => (params: TParams) => Observable<TResponse>\r\n}\r\n\r\nexport interface CreateApiOptions<TApi> {\r\n  baseUrl: string,\r\n  headers?: object,\r\n  endpoints: (build: BuildApi) => TApi\r\n}\r\n\r\nexport type Params = {\r\n  [param: string]: string | number | boolean | ReadonlyArray<string | number | boolean>\r\n}\r\n\r\nexport function createBuildApi<TApi>(options: CreateApiOptions<TApi>): BuildApi {\r\n  const http = inject(HttpClient);\r\n\r\n  return {\r\n    get: <TResponse, TParams = object | void>(getOptions: string | GetRequestOptions<TParams>) => \r\n      typeof getOptions === \"string\" \r\n        ? () => http.get<TResponse>(`${options.baseUrl}/${getOptions}`)\r\n        : (params: TParams) => http.get<TResponse>(`${options.baseUrl}/${getOptions.path}`, {\r\n            headers: getOptions.headers != null \r\n              ? mapValues(omitBy(getOptions.headers(params) as Params, val => val == null), val => val.toString()) \r\n              : {},\r\n            params: getOptions.query != null \r\n              ? getOptions.query(params) as Params\r\n              : params != null\r\n              ? omitBy(params, val => val == null) as Params\r\n              : {}\r\n        }),\r\n    post: <TResponse, TParams = object | void>(postOptions: PostRequestOptions<TParams>) =>\r\n      (params: TParams) => http.post<TResponse>(`${options.baseUrl}/${postOptions.path}`, {}, {})\r\n  }\r\n}\r\n\r\nexport function createApi<TApi>(options: CreateApiOptions<TApi>) {\r\n  return memoize(() => {\r\n    const build = createBuildApi(options);\r\n\r\n    return options.endpoints(build);\r\n  });\r\n}",
            "properties": [
                {
                    "name": "get",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "post",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 26
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "CascadeOption",
            "id": "interface-CascadeOption-fb56d08da6dcb5e38a9b83ed7cde99c4b1bdfdc334b06db1fab4473570caad69478c2c574d1e78cb27acdd0c8b9c6e0322b6bedf7d106dfa697e1fbbb514a67e",
            "file": "src/app/core/stores/site-document/models/site-document.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { PointGroup } from \"signature_pad\";\r\n\r\nexport interface SiteDocument {\r\n  DocumentID: number;\r\n  DocumentTitle: string;\r\n  Pinned: boolean;\r\n  Pages: Page[];\r\n  AllowAnon: boolean;\r\n  RemainAnon: boolean;\r\n  Queues: { Key: string, Value: string }[],\r\n  DocumentGroup: string;\r\n  DocumentCategory?: number;\r\n  CanCreateHotspot: boolean;\r\n  CanBeAddedToHotspot?: boolean;\r\n  CanBeSavedAsDraft?: boolean;\r\n  CanAddActionerFromApp: boolean;\r\n  CanAddCategoryActioner: boolean;\r\n  CanCreateAssetsFromDocument: boolean;\r\n  CanHaveQueueDuration: boolean;\r\n  CanHaveDocumentLevelImages: boolean;\r\n  CanHaveDocLevelPhotoRoll: boolean;\r\n  CurrentActionerOperativeID?: number;\r\n  CompanyActionerId?: number;\r\n  ShowDocLevelPhotoButtonAtStartOfDoc: boolean;\r\n  CanAddAsset?: boolean;\r\n  CanAddOperative?: boolean;\r\n  CanHaveCompanyActioner: boolean;\r\n  MetaData: Partial<SiteDocumentMetaData>;\r\n  SiteId?: number;\r\n  AutoQueueID?: number;\r\n  QueueDuration?: {\r\n    Value: number;\r\n    Type: string;\r\n  }\r\n}\r\n\r\nexport interface SiteDocumentImage {\r\n  DocumentId: number,\r\n  DocumentSubmissionId: number,\r\n  Base64: string,\r\n  ImageNo: number\r\n}\r\n\r\nexport interface SiteDocumentMetaData {\r\n  ActionerText: string;\r\n  CanBeEditableDocument: boolean;\r\n  CannotAddSelfAsActioner: boolean;\r\n  ColourHex: string;\r\n  QueueSelectorTitle: string;\r\n  HasSiteList: boolean;\r\n  SiteListTitle: string;\r\n  UsesRadioGroupTable: boolean;\r\n}\r\n\r\nexport interface SiteDocumentAsset {\r\n  AssetID: number;\r\n  Tag: string;\r\n  Name: string;\r\n  QRCode?: string;\r\n  TemplateID?: number;\r\n}\r\n\r\nexport interface SiteDocumentOperative {\r\n  AttendeeID: number;\r\n  Name: string;\r\n  DateAttended: Date;\r\n}\r\n\r\nexport interface Page {\r\n  PageID: number;\r\n  PageTitle: string;\r\n  Sections: Section[]\r\n}\r\n\r\nexport interface Section {\r\n  SectionID: number;\r\n  SectionNo: number;\r\n  SectionTitle: string;\r\n  Questions: Question[];\r\n  SectionQuestiontype: QuestionType;\r\n  IsRepeatable: boolean;\r\n  TableTitles: string[];\r\n}\r\n\r\nexport enum QuestionType {\r\n  Label = 0,\r\n  Checkbox = 1,\r\n  RadioGroup = 2,\r\n  Textbox = 3,\r\n  TextArea = 4,\r\n  Select = 5,\r\n  CheckboxTextbox = 6,\r\n  RadioGroupTextbox = 7,\r\n  Date = 8,\r\n  DateTime = 9,\r\n  OperativeList = 10,\r\n  WallOfText = 11,\r\n  Number = 12,\r\n  CascadeDropdown = 13,\r\n  LinkedBool = 16,\r\n  AssetList = 17,\r\n  LinkedDates = 18,\r\n  Signature = 19,\r\n  CompanySelect = 21,\r\n  AreaSelect = 22,\r\n  AssetGroupsAndTypes = 25,\r\n  AssetInspectionSchedule = 26,\r\n  ProjectSelect = 27,\r\n  RamsSelect = 28,\r\n  SelectText = 29,\r\n  CascadeDropdownText = 30,\r\n  MultiCascade = 31,\r\n  Time = 32,\r\n  LinkedTimes = 33,\r\n  HraSelect = 34,\r\n  MultiCheckbox = 35,\r\n  LinkedDateAndTime = 36\r\n}\r\n\r\nexport interface Question {\r\n  QuestionID: number;\r\n  QuestionText: string;\r\n  CascadeOptionsText: string;\r\n  CommentsText: string;\r\n  Assets: SiteDocumentAsset[];\r\n  Operatives: SiteDocumentOperative[];\r\n  Required: boolean;\r\n  AnswerText: string;\r\n  DateAndTime: Date;\r\n  DateAndTime2: Date;\r\n  NumberVal?: number;\r\n  OptionVal?: string | null;\r\n  Options: SelectOption[];\r\n  CascadeOptions: CascadeOption[];\r\n  CascadeOptionVal?: string | null;\r\n  YesNoNA: boolean | null;\r\n  CanHaveImg: boolean;\r\n  CanHaveFiles: boolean;\r\n  SignaturePoints?: PointGroup[];\r\n  ValidationData: ValidationData[];\r\n}\r\n\r\nexport interface ValidationData {\r\n  Key: \"Min\" | \"Max\",\r\n  Value: string,\r\n  Msg: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  Active?: boolean;\r\n  Text: string;\r\n  Val: string;\r\n  MetaData?: any;\r\n  OptionsMetadataJson?: string;\r\n}\r\n\r\nexport interface SelectOptionMetaData {\r\n  ColourHex?: string;\r\n}\r\n\r\nexport interface CascadeOption { \r\n  ParentVal: string, \r\n  Text: string, \r\n  Val: string \r\n}",
            "properties": [
                {
                    "name": "ParentVal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 162
                },
                {
                    "name": "Text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 163
                },
                {
                    "name": "Val",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 164
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "CategoryActioner",
            "id": "interface-CategoryActioner-2c9bb246a56bad8e49cf36012d241df6a6ba0c6f2b1b6b609d06f6d9a6b9be9714d8b998a3700dfa7c013befa950cb01e94388e4b746475cb5ecc5a54f9c1573",
            "file": "src/app/core/stores/category-actioners/category-actioners.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable, inject } from \"@angular/core\";\r\nimport { createStore } from \"@ngneat/elf\";\r\nimport { selectAllEntities, withEntities } from \"@ngneat/elf-entities\";\r\nimport { memoize } from \"lodash-es\";\r\nimport { map } from \"rxjs\";\r\nimport { useLoginApi } from \"../../http\";\r\nimport { track } from \"src/app/shared/rxjs\";\r\n\r\nexport interface CategoryActioner {\r\n  Id: number,\r\n  Name: string,\r\n  CategoryId: number\r\n}\r\n\r\nconst store = createStore(\r\n  { name: \"site-documents\" },\r\n  withEntities<CategoryActioner, \"Id\">({ idKey: \"Id\" })\r\n);\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class CategoryActionersStore {\r\n  http = inject(HttpClient);\r\n\r\n  categoryActioners$ = store.pipe(selectAllEntities());\r\n  categoryActionersById$ = (categoryId: number) => this.categoryActioners$.pipe(\r\n    map(catActioners => catActioners.filter(ca => ca.CategoryId === categoryId))\r\n  );\r\n\r\n  downloadCategoryActioners$ = (siteId: number) => this.http.get<CategoryActioner[]>(\"api/LoginApi/GetCategoryActioners\", {\r\n    params: {\r\n      siteId: siteId.toString()\r\n    }\r\n  });\r\n}\r\n\r\nexport const useCategoryActioners = memoize((siteId: number) => {\r\n  const loginApi = useLoginApi();\r\n\r\n  return track(() => loginApi.getCategoryActioners({ siteId }))\r\n});",
            "properties": [
                {
                    "name": "CategoryId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "Id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "Name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Company",
            "id": "interface-Company-853a61b57e97b1015338c1b3ad545ff7256fef0ca9acee4db5fd449e1c7e81fa68592cbea8c7e1b7dbac8501a6598d2487ebbfe41af8e6a90d93a03da6fa4117",
            "file": "src/app/core/stores/user/user.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\r\nimport { inject, Injectable } from \"@angular/core\";\r\nimport { createStore, propsFactory } from \"@ngneat/elf\";\r\nimport { localStorageStrategy, persistState } from \"@ngneat/elf-persist-state\";\r\nimport { combineLatest, Observable, switchMap } from \"rxjs\";\r\nimport { getDeviceString, getDeviceUuid } from \"src/app/shared/plugins/device.plugin\";\r\nimport { pipeTap, selector } from \"src/app/shared/rxjs\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\nexport interface User {\r\n  Id: number,\r\n  LastName: string,\r\n  FirstName: string,\r\n  CompanyId: number,\r\n  CompanyName: string,\r\n  Colour: string,\r\n  FontColour: string,\r\n  Token: string,\r\n  Pin: string,\r\n  Site: Site,\r\n  DocumentListingTab: \"Recent\" | \"Pinned\" | \"Issued\",\r\n  IsInSupervisorRole: boolean,\r\n  HasRegisteredPlayerId: number,\r\n  HasAssets: boolean,\r\n  HasAssetCreation: boolean,\r\n  HasDocQrCodes: boolean,\r\n  HasHadWifiPreferenceChecked: boolean,\r\n  HasUpdateableDocs: boolean,\r\n  HasDocQueues: boolean,\r\n  HasCompanies: boolean,\r\n  HasDataTouchAreas: boolean,\r\n  HasQueueSupervisors: boolean,\r\n  HasCategoryActioners: boolean,\r\n  UserSites: Site[],\r\n  UserCompanies: Company[],\r\n  HasPlanningMeeting: boolean,\r\n  HasReviewMeeting: boolean,\r\n  HasCollabPlanning: boolean,\r\n  HasRandomOperativebarcodes: boolean,\r\n  HasLiveQueues: boolean,\r\n  HasResAreas:boolean,\r\n  HasHideOperativeScan: boolean,\r\n  HasSites: boolean,\r\n  HasDocDrop: boolean,\r\n  HasBasicOpInfo: boolean,\r\n  HasSimpleSwipes: boolean,\r\n  HasProjectsOnDocDrop: boolean,\r\n  HasCustomLookups: boolean,\r\n  HasTemplateSender: boolean,\r\n  HasMyOpInfo: boolean,\r\n  HasViewDocumentAsSinglePage: boolean,\r\n  HasShowParentAnswersOnChildDoc: boolean,\r\n  HasCompanySelectWithOtherOption:boolean,\r\n  HideSearchOnOperativeInfo: boolean,\r\n  HideSearchOnOperativeAccess: boolean,\r\n  CanAddOperativesToDocsByName: boolean,\r\n  HasRamsList: boolean,\r\n  CanAddAsssetsToDocsByName: boolean,\r\n  ShowWeightingsOnApp: boolean,\r\n  TemplatesLastUpdate: Date,\r\n  Url: string,\r\n  UseFingerReader: boolean,\r\n  SelectedSite?: Site,\r\n  NavTab: \"Modules\" | \"Documents\",\r\n  NumberOfTemplates: number,\r\n  DownloadedTemplates: number,\r\n  //PermittedCategories: DocCategory[],\r\n  HasOperativeInfo: boolean,\r\n  CanOffHireAssets: boolean,\r\n  CanViewOtherOperativeInfo: boolean,\r\n  CanModifyOperativeQRs: boolean,\r\n  CanAddQRsToAssets: boolean\r\n}\r\n\r\nexport interface Site {\r\n  Id: number,\r\n  Name: string\r\n}\r\n\r\nexport interface Company {\r\n  Id: number,\r\n  Name: string\r\n}\r\n\r\nexport interface Area {\r\n  Id: number,\r\n  SiteId: number,\r\n  Name: string\r\n}\r\n\r\nconst {\r\n  withAppUser, \r\n  selectAppUser, \r\n  setAppUser\r\n} = propsFactory(\"appUser\", { initialValue: null as User | null });\r\n\r\nconst store = createStore(\r\n  { name: \"user\" },\r\n  withAppUser()\r\n);\r\n\r\nconst userSelector = selector(store.pipe(selectAppUser()));\r\nconst sites$ = userSelector(user => user?.UserSites || []);\r\n\r\nconst setAppUserUpdate = pipeTap<User>(user => store.update(setAppUser(user)));\r\n\r\npersistState(store, {\r\n  key: \"user\",\r\n  storage: localStorageStrategy\r\n});\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class UserStore {\r\n  httpClient = inject(HttpClient);\r\n\r\n  user$ = store.pipe(selectAppUser());\r\n  sites$ = sites$;\r\n  companies$ = userSelector(user => user?.UserCompanies || []);\r\n\r\n  getUserRequest$ = (action$: Observable<{ token: string, pin: string }>) => combineLatest({\r\n    login: action$,\r\n    deviceId: getDeviceUuid(),\r\n    deviceString: getDeviceString() \r\n  }).pipe(\r\n    switchMap(({ login, deviceId, deviceString }) => this.httpClient.post<User>(`${environment.siteDocsApi}/LoginApi/LoginSiteDocumentsApp`, {\r\n      deviceId,\r\n      deviceString\r\n    }, {\r\n      headers: {\r\n        appToken: login.token,\r\n        appPin: login.pin\r\n      }\r\n    })),\r\n    setAppUserUpdate()\r\n  );\r\n}",
            "properties": [
                {
                    "name": "Id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 81
                },
                {
                    "name": "Name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 82
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "CreateApiOptions",
            "id": "interface-CreateApiOptions-4616d93f9abbd4f20499e21676f3f6f79c9bd8d6fe8e904156d53b3f3bdf64f26fd4b0ef60abdbcdbe758227a33f70c895b15ff589e722d6455bfdfbd33be8a7",
            "file": "src/app/core/http/create-api.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\r\nimport { inject } from \"@angular/core\";\r\nimport { mapValues, memoize, omitBy } from \"lodash-es\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nexport type AspNetData<T> = {\r\n  [name in keyof T]: T[name] extends Date | undefined | null \r\n    ? string \r\n    : T[name] \r\n}\r\n\r\nexport interface GetRequestOptions<TParams> {\r\n  path: string,\r\n  query?: (params: TParams) => object,\r\n  headers?: (params: TParams) => object\r\n}\r\n\r\nexport interface PostRequestOptions<TParams> {\r\n  path: string,\r\n  body?: (params: TParams) => object,\r\n  headers?: (params: TParams) => object\r\n}\r\n\r\nexport interface BuildApi {\r\n  get: <TResponse, TParams = object | void>(getOptions: string | GetRequestOptions<TParams>) => (params: TParams) => Observable<TResponse>\r\n  post: <TResponse, TParams = object | void>(postOptions: PostRequestOptions<TParams>) => (params: TParams) => Observable<TResponse>\r\n}\r\n\r\nexport interface CreateApiOptions<TApi> {\r\n  baseUrl: string,\r\n  headers?: object,\r\n  endpoints: (build: BuildApi) => TApi\r\n}\r\n\r\nexport type Params = {\r\n  [param: string]: string | number | boolean | ReadonlyArray<string | number | boolean>\r\n}\r\n\r\nexport function createBuildApi<TApi>(options: CreateApiOptions<TApi>): BuildApi {\r\n  const http = inject(HttpClient);\r\n\r\n  return {\r\n    get: <TResponse, TParams = object | void>(getOptions: string | GetRequestOptions<TParams>) => \r\n      typeof getOptions === \"string\" \r\n        ? () => http.get<TResponse>(`${options.baseUrl}/${getOptions}`)\r\n        : (params: TParams) => http.get<TResponse>(`${options.baseUrl}/${getOptions.path}`, {\r\n            headers: getOptions.headers != null \r\n              ? mapValues(omitBy(getOptions.headers(params) as Params, val => val == null), val => val.toString()) \r\n              : {},\r\n            params: getOptions.query != null \r\n              ? getOptions.query(params) as Params\r\n              : params != null\r\n              ? omitBy(params, val => val == null) as Params\r\n              : {}\r\n        }),\r\n    post: <TResponse, TParams = object | void>(postOptions: PostRequestOptions<TParams>) =>\r\n      (params: TParams) => http.post<TResponse>(`${options.baseUrl}/${postOptions.path}`, {}, {})\r\n  }\r\n}\r\n\r\nexport function createApi<TApi>(options: CreateApiOptions<TApi>) {\r\n  return memoize(() => {\r\n    const build = createBuildApi(options);\r\n\r\n    return options.endpoints(build);\r\n  });\r\n}",
            "properties": [
                {
                    "name": "baseUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "endpoints",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "headers",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "optional": true,
                    "description": "",
                    "line": 31
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "DataUrlFile",
            "id": "interface-DataUrlFile-72a893f9b32b755dc1fe36e5b3f6b437b2ba78f53017509834bbd9f5c10f723a550ec054aae91e6e10674e584785de02b909c5342982820ab89c416224f1b014",
            "file": "src/app/shared/models/files/data-url-file.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface DataUrlFile extends Pick<File, \"name\" | \"lastModified\" | \"size\" | \"type\"> {\r\n  dataUrl: string\r\n}",
            "properties": [
                {
                    "name": "dataUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "extends": "Pick"
        },
        {
            "name": "EntitiesType",
            "id": "interface-EntitiesType-1bdbb626e75577b3a840a415e32b2694a95e70f778d041334621dea3933ebdc0b36d1794c1f6b3edb5b410d5a41920007f632d0f43d1e860b86f1cd3498e9a3b",
            "file": "src/app/core/stores/operative/adapters/operatives.adapter.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Store, StoreDef } from \"@ngneat/elf\";\r\nimport { addEntities, EntitiesRef, selectAllEntities, setEntities } from \"@ngneat/elf-entities\";\r\nimport { pipeTap } from \"src/app/shared/rxjs\";\r\nimport { Operative, OperativeSearchResult } from \"../operatives.store\";\r\n\r\ninterface EntitiesType {\r\n  entities: Record<number, Operative>,\r\n  ids: number[]\r\n}\r\n\r\nexport function operativesAdapter<TState extends EntitiesType>(store: Store<StoreDef<TState>>) {\r\n  return {\r\n    operatives$: () => store.pipe(selectAllEntities()),\r\n    addOperative: pipeTap<Operative>(operative => store.update(\r\n      addEntities(operative)\r\n    ))\r\n  }\r\n}\r\n\r\ninterface SearchEntitiesType {\r\n  SearchResultEntities: Record<number, OperativeSearchResult>,\r\n  SearchResultIds: number[]\r\n}\r\n\r\ntype SearchEntitiesRef = EntitiesRef<\"SearchResultEntities\", \"SearchResultIds\", \"idKeySearchResult\">;\r\n\r\ninterface AdapterTarget<TState extends SearchEntitiesType> {\r\n  store: Store<StoreDef<TState>>,\r\n  ref: SearchEntitiesRef\r\n}\r\n\r\nexport function operativeSearchAdapter<TState extends SearchEntitiesType>({ store, ref }: AdapterTarget<TState>) {\r\n  return {\r\n    searchResults$: () => store.pipe(selectAllEntities({ ref })),\r\n    setSearchResults: pipeTap<OperativeSearchResult[]>(results => store.update(\r\n      setEntities(results, { ref })\r\n    ))\r\n  }\r\n}",
            "properties": [
                {
                    "name": "entities",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<number | Operative>",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "ids",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number[]",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "FuseOptions",
            "id": "interface-FuseOptions-9e0e35d1e33d95da14a2483e81c42238fcc76660c55f7a5be13ffe713bc2008f6b73bb5ddd7350755c3f39ac54e83d4aa5c0d6980efe7806993f4ee735022a71",
            "file": "src/app/shared/pipes/fuse/fuse.pipe.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Pipe, PipeTransform } from \"@angular/core\";\r\nimport Fuse from 'fuse.js'\r\nimport { Observable, map } from \"rxjs\";\r\n\r\nexport interface FuseOptions<T> extends Omit<Fuse.IFuseOptions<T>, \"keys\"> {\r\n  search: string | null | undefined,\r\n  keys?: keyof T | Array<keyof T>\r\n}\r\n\r\n@Pipe({\r\n  name: \"fuse\",\r\n  standalone: true\r\n})\r\nexport class FusePipe implements PipeTransform {\r\n  transform<T>(values: T[], options: FuseOptions<T>): T[] \r\n  transform<T>(values: Observable<T[]>, options: FuseOptions<T>): Observable<T[]>\r\n  transform<T>(values: Observable<T[]> | T[], options: FuseOptions<T>): Observable<T[]> | T[] {\r\n    if (options.search == null || options.search.length === 0)\r\n      return values;\r\n    \r\n    return values instanceof Observable<T[]>\r\n      ? values.pipe(\r\n        map(vals => new Fuse(vals, { \r\n          threshold: .1,\r\n          ignoreLocation: true,\r\n          ...options as Fuse.IFuseOptions<T>\r\n        })\r\n        .search(options.search!)\r\n        .map(val => val.item))\r\n      )\r\n      : new Fuse(values, { \r\n          threshold: .1,\r\n          ignoreLocation: true,\r\n          ...options as Fuse.IFuseOptions<T>\r\n        })\r\n        .search(options.search)\r\n        .map(val => val.item);\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "keys",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | Array<T>",
                    "optional": true,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "search",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null | undefined",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "extends": "Omit"
        },
        {
            "name": "GetAssetsByRegistrationParams",
            "id": "interface-GetAssetsByRegistrationParams-9d20708124dc6008fdf31843e8acc6db70da743510cecc8073f657f9dbf0d9c1f4bf3afcdb5e1b9b086fdb8ea128d6a5992c19931414df702cfe909696ef5b12",
            "file": "src/app/core/http/asset.api.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Asset } from \"../stores/asset/asset.store\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { createApi } from \"./create-api\";\r\nimport { memoize } from \"lodash-es\";\r\nimport { track } from \"src/app/shared/rxjs\";\r\nimport { Subject } from \"rxjs\";\r\n\r\nexport interface GetAssetsByRegistrationParams { \r\n  searchString: string, \r\n  siteId?: number \r\n}\r\n\r\nexport interface AssetGroup {\r\n  GroupID: number,\r\n  GroupName: string,\r\n  SiteID: number\r\n}\r\n\r\nexport interface AssetType {\r\n  Id: number,\r\n  Description: string,\r\n  GroupID: number\r\n}\r\n\r\nexport const useAssetApi = createApi({\r\n  baseUrl: `${environment.siteDocsApi}/AssetApi`,\r\n  endpoints: ({ get }) => ({\r\n    getAssetsByRegistration: get<Asset[], GetAssetsByRegistrationParams>(\"GetAssetsByReg\"),\r\n    getAssetsByType: get<Asset[], { typeId: number, siteId?: number }>(\"getAssetsByType\"),\r\n    getAssetGroups: get<AssetGroup[]>(\"GetAssetGroups\"),\r\n    getAssetTypes: get<AssetType[]>(\"GetAssetTypes\")\r\n  })\r\n});\r\n\r\nexport const useFetchAssetsByRegistration = memoize((binding: () => GetAssetsByRegistrationParams) => {\r\n  const { getAssetsByRegistration } = useAssetApi();\r\n  const params$ = new Subject<GetAssetsByRegistrationParams>();\r\n\r\n  const assets = track({\r\n    deps: [params$],\r\n    fn: params => getAssetsByRegistration(params)\r\n  });\r\n\r\n  return {\r\n    ...assets,\r\n    fetch: () => {\r\n      const params = binding();\r\n      params$.next(params);\r\n    }\r\n  }\r\n})\r\n\r\nexport const useAssetGroups = memoize(() => {\r\n  const { getAssetGroups } = useAssetApi();\r\n\r\n  return track(() => getAssetGroups());\r\n});\r\n\r\nexport const useAssetTypes = memoize(() => {\r\n  const { getAssetTypes } = useAssetApi();\r\n\r\n  return track(() => getAssetTypes());\r\n});",
            "properties": [
                {
                    "name": "searchString",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "siteId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "GetRequestOptions",
            "id": "interface-GetRequestOptions-4616d93f9abbd4f20499e21676f3f6f79c9bd8d6fe8e904156d53b3f3bdf64f26fd4b0ef60abdbcdbe758227a33f70c895b15ff589e722d6455bfdfbd33be8a7",
            "file": "src/app/core/http/create-api.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\r\nimport { inject } from \"@angular/core\";\r\nimport { mapValues, memoize, omitBy } from \"lodash-es\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nexport type AspNetData<T> = {\r\n  [name in keyof T]: T[name] extends Date | undefined | null \r\n    ? string \r\n    : T[name] \r\n}\r\n\r\nexport interface GetRequestOptions<TParams> {\r\n  path: string,\r\n  query?: (params: TParams) => object,\r\n  headers?: (params: TParams) => object\r\n}\r\n\r\nexport interface PostRequestOptions<TParams> {\r\n  path: string,\r\n  body?: (params: TParams) => object,\r\n  headers?: (params: TParams) => object\r\n}\r\n\r\nexport interface BuildApi {\r\n  get: <TResponse, TParams = object | void>(getOptions: string | GetRequestOptions<TParams>) => (params: TParams) => Observable<TResponse>\r\n  post: <TResponse, TParams = object | void>(postOptions: PostRequestOptions<TParams>) => (params: TParams) => Observable<TResponse>\r\n}\r\n\r\nexport interface CreateApiOptions<TApi> {\r\n  baseUrl: string,\r\n  headers?: object,\r\n  endpoints: (build: BuildApi) => TApi\r\n}\r\n\r\nexport type Params = {\r\n  [param: string]: string | number | boolean | ReadonlyArray<string | number | boolean>\r\n}\r\n\r\nexport function createBuildApi<TApi>(options: CreateApiOptions<TApi>): BuildApi {\r\n  const http = inject(HttpClient);\r\n\r\n  return {\r\n    get: <TResponse, TParams = object | void>(getOptions: string | GetRequestOptions<TParams>) => \r\n      typeof getOptions === \"string\" \r\n        ? () => http.get<TResponse>(`${options.baseUrl}/${getOptions}`)\r\n        : (params: TParams) => http.get<TResponse>(`${options.baseUrl}/${getOptions.path}`, {\r\n            headers: getOptions.headers != null \r\n              ? mapValues(omitBy(getOptions.headers(params) as Params, val => val == null), val => val.toString()) \r\n              : {},\r\n            params: getOptions.query != null \r\n              ? getOptions.query(params) as Params\r\n              : params != null\r\n              ? omitBy(params, val => val == null) as Params\r\n              : {}\r\n        }),\r\n    post: <TResponse, TParams = object | void>(postOptions: PostRequestOptions<TParams>) =>\r\n      (params: TParams) => http.post<TResponse>(`${options.baseUrl}/${postOptions.path}`, {}, {})\r\n  }\r\n}\r\n\r\nexport function createApi<TApi>(options: CreateApiOptions<TApi>) {\r\n  return memoize(() => {\r\n    const build = createBuildApi(options);\r\n\r\n    return options.endpoints(build);\r\n  });\r\n}",
            "properties": [
                {
                    "name": "headers",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "path",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "query",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": true,
                    "description": "",
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "HighRiskActivity",
            "id": "interface-HighRiskActivity-5c4d116b6b1a100800a351f83b4bd33fbc701a9e822cbe2a72c53a3cbb630e3263682d21ac751dfcac1a94493e49798b9a356dfcef234a7922f88f90b98887b0",
            "file": "src/app/core/pages/document-builder/components/question-types/34-hra-select/hra-select.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\nimport { IonicModule } from \"@ionic/angular\";\nimport { importRxTemplate } from \"src/app/shared/imports\";\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\nimport { SelectableComponent } from \"src/app/shared/components\";\nimport { Question } from \"src/app/core/stores/site-document/models\";\n\ninterface HighRiskActivity {\n  Id: number,\n  Activity: string\n}\n\n@Component({\n  selector: \"hra-select-question\",\n  template: `\n    <ion-list>\n      <ion-item lines=\"none\">\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n        <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\n        <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\n      </ion-item>\n      <selectable \n        placeholder=\"Select\"\n        [title]=\"question.QuestionText\"\n        [items]=\"hras\"\n        itemValue=\"Id\"\n        itemText=\"Activity\"\n        [canClear]=\"!question.Required\" />\n    </ion-list>\n  `,\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    IonicModule,\n    ...importRxTemplate(),\n    QuestionTextComponent,\n    SelectableComponent,\n    CameraCaptureComponent,\n    FileUploadComponent\n  ]\n})\nexport class HraSelectComponent {\n  @Input({ required: true })\n  question!: Question;\n\n  hras: HighRiskActivity[] = [];\n}\n",
            "properties": [
                {
                    "name": "Activity",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "Id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "NumberState",
            "id": "interface-NumberState-08ac5100878d5ecdc96750e0cb4703ba5b848a4a3ad01aadc5d7bed2535b5a0386836b46ba1ce7d17e6f1a44eab134e6973f0d7b8212c8e0e993dcb26aea81ed",
            "file": "src/app/shared/states/number.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { createStore, propsFactory } from \"@ngneat/elf\";\r\nimport { Observable, map, shareReplay } from \"rxjs\";\r\nimport { AdapterConfig } from \"./adapter-config.model\";\r\n\r\nexport interface NumberState {\r\n  value$: Observable<number>,\r\n  increment: () => void,\r\n  decrement: () => void,\r\n  is$: (predicate: (value: number) => boolean) => Observable<boolean>,\r\n  set: (value: number) => void\r\n}\r\n\r\nexport function numberState<TProps = {}>({ name, initialValue, props }: AdapterConfig<number, NumberState, TProps>): TProps & NumberState {\r\n  const propsFn = props != null \r\n    ? props\r\n    : () => ({}); \r\n\r\n  const {\r\n    withNumber,\r\n    selectNumber,\r\n    setNumber\r\n  } = propsFactory(\"number\", {\r\n    initialValue\r\n  });\r\n\r\n  const store = createStore(\r\n    { name },\r\n    withNumber()\r\n  );\r\n\r\n  const state: NumberState = {\r\n    value$: store.pipe(selectNumber(), shareReplay()),\r\n    increment: () => store.update(setNumber(state => state.number + 1)),\r\n    decrement: () => store.update(setNumber(state => state.number - 1)),\r\n    is$: (predicate: (value: number) => boolean) => store.pipe(\r\n      selectNumber(),\r\n      map(predicate)\r\n    ),\r\n    set: (value: number) => store.update(setNumber(value))\r\n  }\r\n  \r\n  return {\r\n    ...propsFn(state),\r\n    ...state\r\n  } as TProps & NumberState\r\n}",
            "properties": [
                {
                    "name": "decrement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "increment",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "is$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "set",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "value$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<number>",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Operative",
            "id": "interface-Operative-91556e30f45bb35500235156580cdd5001d82990d959ec1360343f8ea5e07f00f6aabfb8f55e3b3890c5062d28956f08d90c0ad3f60c9686df6f84eab48733ab",
            "file": "src/app/core/stores/operative/operatives.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable, inject } from \"@angular/core\"\r\nimport { createStore } from \"@ngneat/elf\";\r\nimport { addEntities, withEntities } from \"@ngneat/elf-entities\";\r\nimport { localStorageStrategy, persistState } from \"@ngneat/elf-persist-state\";\r\nimport { searchResultsAdapter } from \"src/app/shared/states/search-results.adapter\";\r\nimport { operativesAdapter } from \"./adapters/operatives.adapter\";\r\nimport { tap } from \"rxjs\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { createRequestsStatusOperator, selectIsRequestPending, updateRequestStatus, withRequestsStatus } from \"@ngneat/elf-requests\";\r\n\r\nexport interface Operative {\r\n  ID: number,\r\n  Name: string\r\n}\r\n\r\nexport interface OperativeSearchParams {\r\n  search: string,\r\n  noAppLimit: boolean,\r\n  siteId?: number\r\n}\r\n\r\nexport interface OperativeSearchResult {\r\n  ID: number,\r\n  Name: string,\r\n  CompanyName: string,\r\n  HasQRCode: boolean,\r\n  HasAppAccess: boolean\r\n}\r\n\r\nconst {\r\n  SearchResultEntitiesRef,\r\n  withSearchResultEntities,\r\n  searchResultsAdapt\r\n} = searchResultsAdapter();\r\n\r\n// function withTapUpdate(): PropsFactory<{ tapUpdate: object }, EmptyConfig> {\r\n//   return {\r\n//     props: {\r\n//       tapUpdate: pipe(\r\n//         tap()\r\n//       )\r\n//     }\r\n//   }\r\n// }\r\n\r\nconst store = createStore(\r\n  { name: \"operatives\" },\r\n  withEntities<Operative, \"ID\">({ idKey: \"ID\" }),\r\n  withSearchResultEntities<OperativeSearchResult, \"ID\">({ idKey: \"ID\" }),\r\n  withRequestsStatus<\"operativesSearch\">()\r\n);\r\n\r\nconst { \r\n  operatives$, \r\n  addOperative,\r\n  searchResults$,\r\n  setSearchResults\r\n} = {\r\n  ...operativesAdapter(store),\r\n  ...searchResultsAdapt(store)\r\n}\r\n\r\nconst trackRequestStatus = createRequestsStatusOperator(store);\r\n\r\npersistState(store, {\r\n  key: \"operatives\",\r\n  storage: localStorageStrategy\r\n});\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class OperativesStore {\r\n  httpClient = inject(HttpClient);\r\n\r\n  operatives$ = operatives$();\r\n  searchResults$ = searchResults$();\r\n  searchResultsIsPending$ = store.pipe(selectIsRequestPending(\"operativesSearch\"));\r\n\r\n  addOperative = addOperative;\r\n  setSearchResults = setSearchResults;\r\n\r\n  getSearchResults = (params: OperativeSearchParams) => this.httpClient.get<OperativeSearchResult[]>(`${environment.siteDocsApi}/OperativeApi/GetOperativesByName`, {\r\n    params: {\r\n      search: params.search,\r\n      noAppLimit: params.noAppLimit,\r\n      siteId: params.siteId?.toString() || \"null\"\r\n    }\r\n  }).pipe(\r\n    trackRequestStatus(\"operativesSearch\"),\r\n    tap(searchResults => store.update(\r\n      addEntities(searchResults, { ref: SearchResultEntitiesRef }),\r\n      updateRequestStatus(\"operativesSearch\", \"success\")\r\n    ))\r\n  );\r\n}",
            "properties": [
                {
                    "name": "ID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "Name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "OperativeSearchParams",
            "id": "interface-OperativeSearchParams-40665c0f504b610bef6218e4b0869537a434da6ff045eaef3e8449fadabfef570d2ecabd2175102a9f2a00f223bbd525d2423decb9b7d1503eed59619db4a638",
            "file": "src/app/core/http/operative.api.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { environment } from \"src/environments/environment\";\r\nimport { createApi } from \"./create-api\";\r\nimport { Subject } from \"rxjs\";\r\nimport { track } from \"src/app/shared/rxjs\";\r\nimport { memoize } from \"lodash-es\";\r\n\r\nexport interface OperativeSearchParams {\r\n  search: string,\r\n  noAppLimit: boolean,\r\n  siteId?: number\r\n}\r\n\r\nexport interface OperativeSearchResult {\r\n  ID: number,\r\n  Name: string,\r\n  CompanyName: string,\r\n  HasQRCode: boolean,\r\n  HasAppAccess: boolean\r\n}\r\n\r\nexport const useOperativeApi = createApi({\r\n  baseUrl: `${environment.siteDocsApi}/OperativeApi`,\r\n  endpoints: ({ get }) => ({\r\n    getOperativesByName: get<OperativeSearchResult[], OperativeSearchParams>(\"GetOperativesByName\")\r\n  })\r\n});\r\n\r\nexport const useFetchOperativesByName = memoize((binding: () => OperativeSearchParams) => {\r\n  const { getOperativesByName } = useOperativeApi();\r\n  const params$ = new Subject<OperativeSearchParams>();\r\n  \r\n  const searchRes = track({\r\n    deps: [params$],\r\n    fn: params => getOperativesByName(params)\r\n  });\r\n\r\n  return {\r\n    ...searchRes,\r\n    fetch: () => {\r\n      const params = binding();\r\n      params$.next(params);\r\n    }\r\n  }\r\n});",
            "properties": [
                {
                    "name": "noAppLimit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "search",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "siteId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "OperativeSearchParams",
            "id": "interface-OperativeSearchParams-91556e30f45bb35500235156580cdd5001d82990d959ec1360343f8ea5e07f00f6aabfb8f55e3b3890c5062d28956f08d90c0ad3f60c9686df6f84eab48733ab-1",
            "file": "src/app/core/stores/operative/operatives.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable, inject } from \"@angular/core\"\r\nimport { createStore } from \"@ngneat/elf\";\r\nimport { addEntities, withEntities } from \"@ngneat/elf-entities\";\r\nimport { localStorageStrategy, persistState } from \"@ngneat/elf-persist-state\";\r\nimport { searchResultsAdapter } from \"src/app/shared/states/search-results.adapter\";\r\nimport { operativesAdapter } from \"./adapters/operatives.adapter\";\r\nimport { tap } from \"rxjs\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { createRequestsStatusOperator, selectIsRequestPending, updateRequestStatus, withRequestsStatus } from \"@ngneat/elf-requests\";\r\n\r\nexport interface Operative {\r\n  ID: number,\r\n  Name: string\r\n}\r\n\r\nexport interface OperativeSearchParams {\r\n  search: string,\r\n  noAppLimit: boolean,\r\n  siteId?: number\r\n}\r\n\r\nexport interface OperativeSearchResult {\r\n  ID: number,\r\n  Name: string,\r\n  CompanyName: string,\r\n  HasQRCode: boolean,\r\n  HasAppAccess: boolean\r\n}\r\n\r\nconst {\r\n  SearchResultEntitiesRef,\r\n  withSearchResultEntities,\r\n  searchResultsAdapt\r\n} = searchResultsAdapter();\r\n\r\n// function withTapUpdate(): PropsFactory<{ tapUpdate: object }, EmptyConfig> {\r\n//   return {\r\n//     props: {\r\n//       tapUpdate: pipe(\r\n//         tap()\r\n//       )\r\n//     }\r\n//   }\r\n// }\r\n\r\nconst store = createStore(\r\n  { name: \"operatives\" },\r\n  withEntities<Operative, \"ID\">({ idKey: \"ID\" }),\r\n  withSearchResultEntities<OperativeSearchResult, \"ID\">({ idKey: \"ID\" }),\r\n  withRequestsStatus<\"operativesSearch\">()\r\n);\r\n\r\nconst { \r\n  operatives$, \r\n  addOperative,\r\n  searchResults$,\r\n  setSearchResults\r\n} = {\r\n  ...operativesAdapter(store),\r\n  ...searchResultsAdapt(store)\r\n}\r\n\r\nconst trackRequestStatus = createRequestsStatusOperator(store);\r\n\r\npersistState(store, {\r\n  key: \"operatives\",\r\n  storage: localStorageStrategy\r\n});\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class OperativesStore {\r\n  httpClient = inject(HttpClient);\r\n\r\n  operatives$ = operatives$();\r\n  searchResults$ = searchResults$();\r\n  searchResultsIsPending$ = store.pipe(selectIsRequestPending(\"operativesSearch\"));\r\n\r\n  addOperative = addOperative;\r\n  setSearchResults = setSearchResults;\r\n\r\n  getSearchResults = (params: OperativeSearchParams) => this.httpClient.get<OperativeSearchResult[]>(`${environment.siteDocsApi}/OperativeApi/GetOperativesByName`, {\r\n    params: {\r\n      search: params.search,\r\n      noAppLimit: params.noAppLimit,\r\n      siteId: params.siteId?.toString() || \"null\"\r\n    }\r\n  }).pipe(\r\n    trackRequestStatus(\"operativesSearch\"),\r\n    tap(searchResults => store.update(\r\n      addEntities(searchResults, { ref: SearchResultEntitiesRef }),\r\n      updateRequestStatus(\"operativesSearch\", \"success\")\r\n    ))\r\n  );\r\n}",
            "properties": [
                {
                    "name": "noAppLimit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "search",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "siteId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 20
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "OperativeSearchParams-1"
        },
        {
            "name": "OperativeSearchResult",
            "id": "interface-OperativeSearchResult-40665c0f504b610bef6218e4b0869537a434da6ff045eaef3e8449fadabfef570d2ecabd2175102a9f2a00f223bbd525d2423decb9b7d1503eed59619db4a638",
            "file": "src/app/core/http/operative.api.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { environment } from \"src/environments/environment\";\r\nimport { createApi } from \"./create-api\";\r\nimport { Subject } from \"rxjs\";\r\nimport { track } from \"src/app/shared/rxjs\";\r\nimport { memoize } from \"lodash-es\";\r\n\r\nexport interface OperativeSearchParams {\r\n  search: string,\r\n  noAppLimit: boolean,\r\n  siteId?: number\r\n}\r\n\r\nexport interface OperativeSearchResult {\r\n  ID: number,\r\n  Name: string,\r\n  CompanyName: string,\r\n  HasQRCode: boolean,\r\n  HasAppAccess: boolean\r\n}\r\n\r\nexport const useOperativeApi = createApi({\r\n  baseUrl: `${environment.siteDocsApi}/OperativeApi`,\r\n  endpoints: ({ get }) => ({\r\n    getOperativesByName: get<OperativeSearchResult[], OperativeSearchParams>(\"GetOperativesByName\")\r\n  })\r\n});\r\n\r\nexport const useFetchOperativesByName = memoize((binding: () => OperativeSearchParams) => {\r\n  const { getOperativesByName } = useOperativeApi();\r\n  const params$ = new Subject<OperativeSearchParams>();\r\n  \r\n  const searchRes = track({\r\n    deps: [params$],\r\n    fn: params => getOperativesByName(params)\r\n  });\r\n\r\n  return {\r\n    ...searchRes,\r\n    fetch: () => {\r\n      const params = binding();\r\n      params$.next(params);\r\n    }\r\n  }\r\n});",
            "properties": [
                {
                    "name": "CompanyName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "HasAppAccess",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "HasQRCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "ID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "Name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "OperativeSearchResult",
            "id": "interface-OperativeSearchResult-91556e30f45bb35500235156580cdd5001d82990d959ec1360343f8ea5e07f00f6aabfb8f55e3b3890c5062d28956f08d90c0ad3f60c9686df6f84eab48733ab-1",
            "file": "src/app/core/stores/operative/operatives.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable, inject } from \"@angular/core\"\r\nimport { createStore } from \"@ngneat/elf\";\r\nimport { addEntities, withEntities } from \"@ngneat/elf-entities\";\r\nimport { localStorageStrategy, persistState } from \"@ngneat/elf-persist-state\";\r\nimport { searchResultsAdapter } from \"src/app/shared/states/search-results.adapter\";\r\nimport { operativesAdapter } from \"./adapters/operatives.adapter\";\r\nimport { tap } from \"rxjs\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { createRequestsStatusOperator, selectIsRequestPending, updateRequestStatus, withRequestsStatus } from \"@ngneat/elf-requests\";\r\n\r\nexport interface Operative {\r\n  ID: number,\r\n  Name: string\r\n}\r\n\r\nexport interface OperativeSearchParams {\r\n  search: string,\r\n  noAppLimit: boolean,\r\n  siteId?: number\r\n}\r\n\r\nexport interface OperativeSearchResult {\r\n  ID: number,\r\n  Name: string,\r\n  CompanyName: string,\r\n  HasQRCode: boolean,\r\n  HasAppAccess: boolean\r\n}\r\n\r\nconst {\r\n  SearchResultEntitiesRef,\r\n  withSearchResultEntities,\r\n  searchResultsAdapt\r\n} = searchResultsAdapter();\r\n\r\n// function withTapUpdate(): PropsFactory<{ tapUpdate: object }, EmptyConfig> {\r\n//   return {\r\n//     props: {\r\n//       tapUpdate: pipe(\r\n//         tap()\r\n//       )\r\n//     }\r\n//   }\r\n// }\r\n\r\nconst store = createStore(\r\n  { name: \"operatives\" },\r\n  withEntities<Operative, \"ID\">({ idKey: \"ID\" }),\r\n  withSearchResultEntities<OperativeSearchResult, \"ID\">({ idKey: \"ID\" }),\r\n  withRequestsStatus<\"operativesSearch\">()\r\n);\r\n\r\nconst { \r\n  operatives$, \r\n  addOperative,\r\n  searchResults$,\r\n  setSearchResults\r\n} = {\r\n  ...operativesAdapter(store),\r\n  ...searchResultsAdapt(store)\r\n}\r\n\r\nconst trackRequestStatus = createRequestsStatusOperator(store);\r\n\r\npersistState(store, {\r\n  key: \"operatives\",\r\n  storage: localStorageStrategy\r\n});\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class OperativesStore {\r\n  httpClient = inject(HttpClient);\r\n\r\n  operatives$ = operatives$();\r\n  searchResults$ = searchResults$();\r\n  searchResultsIsPending$ = store.pipe(selectIsRequestPending(\"operativesSearch\"));\r\n\r\n  addOperative = addOperative;\r\n  setSearchResults = setSearchResults;\r\n\r\n  getSearchResults = (params: OperativeSearchParams) => this.httpClient.get<OperativeSearchResult[]>(`${environment.siteDocsApi}/OperativeApi/GetOperativesByName`, {\r\n    params: {\r\n      search: params.search,\r\n      noAppLimit: params.noAppLimit,\r\n      siteId: params.siteId?.toString() || \"null\"\r\n    }\r\n  }).pipe(\r\n    trackRequestStatus(\"operativesSearch\"),\r\n    tap(searchResults => store.update(\r\n      addEntities(searchResults, { ref: SearchResultEntitiesRef }),\r\n      updateRequestStatus(\"operativesSearch\", \"success\")\r\n    ))\r\n  );\r\n}",
            "properties": [
                {
                    "name": "CompanyName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "HasAppAccess",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "HasQRCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "ID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "Name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "OperativeSearchResult-1"
        },
        {
            "name": "Page",
            "id": "interface-Page-fb56d08da6dcb5e38a9b83ed7cde99c4b1bdfdc334b06db1fab4473570caad69478c2c574d1e78cb27acdd0c8b9c6e0322b6bedf7d106dfa697e1fbbb514a67e",
            "file": "src/app/core/stores/site-document/models/site-document.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { PointGroup } from \"signature_pad\";\r\n\r\nexport interface SiteDocument {\r\n  DocumentID: number;\r\n  DocumentTitle: string;\r\n  Pinned: boolean;\r\n  Pages: Page[];\r\n  AllowAnon: boolean;\r\n  RemainAnon: boolean;\r\n  Queues: { Key: string, Value: string }[],\r\n  DocumentGroup: string;\r\n  DocumentCategory?: number;\r\n  CanCreateHotspot: boolean;\r\n  CanBeAddedToHotspot?: boolean;\r\n  CanBeSavedAsDraft?: boolean;\r\n  CanAddActionerFromApp: boolean;\r\n  CanAddCategoryActioner: boolean;\r\n  CanCreateAssetsFromDocument: boolean;\r\n  CanHaveQueueDuration: boolean;\r\n  CanHaveDocumentLevelImages: boolean;\r\n  CanHaveDocLevelPhotoRoll: boolean;\r\n  CurrentActionerOperativeID?: number;\r\n  CompanyActionerId?: number;\r\n  ShowDocLevelPhotoButtonAtStartOfDoc: boolean;\r\n  CanAddAsset?: boolean;\r\n  CanAddOperative?: boolean;\r\n  CanHaveCompanyActioner: boolean;\r\n  MetaData: Partial<SiteDocumentMetaData>;\r\n  SiteId?: number;\r\n  AutoQueueID?: number;\r\n  QueueDuration?: {\r\n    Value: number;\r\n    Type: string;\r\n  }\r\n}\r\n\r\nexport interface SiteDocumentImage {\r\n  DocumentId: number,\r\n  DocumentSubmissionId: number,\r\n  Base64: string,\r\n  ImageNo: number\r\n}\r\n\r\nexport interface SiteDocumentMetaData {\r\n  ActionerText: string;\r\n  CanBeEditableDocument: boolean;\r\n  CannotAddSelfAsActioner: boolean;\r\n  ColourHex: string;\r\n  QueueSelectorTitle: string;\r\n  HasSiteList: boolean;\r\n  SiteListTitle: string;\r\n  UsesRadioGroupTable: boolean;\r\n}\r\n\r\nexport interface SiteDocumentAsset {\r\n  AssetID: number;\r\n  Tag: string;\r\n  Name: string;\r\n  QRCode?: string;\r\n  TemplateID?: number;\r\n}\r\n\r\nexport interface SiteDocumentOperative {\r\n  AttendeeID: number;\r\n  Name: string;\r\n  DateAttended: Date;\r\n}\r\n\r\nexport interface Page {\r\n  PageID: number;\r\n  PageTitle: string;\r\n  Sections: Section[]\r\n}\r\n\r\nexport interface Section {\r\n  SectionID: number;\r\n  SectionNo: number;\r\n  SectionTitle: string;\r\n  Questions: Question[];\r\n  SectionQuestiontype: QuestionType;\r\n  IsRepeatable: boolean;\r\n  TableTitles: string[];\r\n}\r\n\r\nexport enum QuestionType {\r\n  Label = 0,\r\n  Checkbox = 1,\r\n  RadioGroup = 2,\r\n  Textbox = 3,\r\n  TextArea = 4,\r\n  Select = 5,\r\n  CheckboxTextbox = 6,\r\n  RadioGroupTextbox = 7,\r\n  Date = 8,\r\n  DateTime = 9,\r\n  OperativeList = 10,\r\n  WallOfText = 11,\r\n  Number = 12,\r\n  CascadeDropdown = 13,\r\n  LinkedBool = 16,\r\n  AssetList = 17,\r\n  LinkedDates = 18,\r\n  Signature = 19,\r\n  CompanySelect = 21,\r\n  AreaSelect = 22,\r\n  AssetGroupsAndTypes = 25,\r\n  AssetInspectionSchedule = 26,\r\n  ProjectSelect = 27,\r\n  RamsSelect = 28,\r\n  SelectText = 29,\r\n  CascadeDropdownText = 30,\r\n  MultiCascade = 31,\r\n  Time = 32,\r\n  LinkedTimes = 33,\r\n  HraSelect = 34,\r\n  MultiCheckbox = 35,\r\n  LinkedDateAndTime = 36\r\n}\r\n\r\nexport interface Question {\r\n  QuestionID: number;\r\n  QuestionText: string;\r\n  CascadeOptionsText: string;\r\n  CommentsText: string;\r\n  Assets: SiteDocumentAsset[];\r\n  Operatives: SiteDocumentOperative[];\r\n  Required: boolean;\r\n  AnswerText: string;\r\n  DateAndTime: Date;\r\n  DateAndTime2: Date;\r\n  NumberVal?: number;\r\n  OptionVal?: string | null;\r\n  Options: SelectOption[];\r\n  CascadeOptions: CascadeOption[];\r\n  CascadeOptionVal?: string | null;\r\n  YesNoNA: boolean | null;\r\n  CanHaveImg: boolean;\r\n  CanHaveFiles: boolean;\r\n  SignaturePoints?: PointGroup[];\r\n  ValidationData: ValidationData[];\r\n}\r\n\r\nexport interface ValidationData {\r\n  Key: \"Min\" | \"Max\",\r\n  Value: string,\r\n  Msg: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  Active?: boolean;\r\n  Text: string;\r\n  Val: string;\r\n  MetaData?: any;\r\n  OptionsMetadataJson?: string;\r\n}\r\n\r\nexport interface SelectOptionMetaData {\r\n  ColourHex?: string;\r\n}\r\n\r\nexport interface CascadeOption { \r\n  ParentVal: string, \r\n  Text: string, \r\n  Val: string \r\n}",
            "properties": [
                {
                    "name": "PageID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 70
                },
                {
                    "name": "PageTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 71
                },
                {
                    "name": "Sections",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Section[]",
                    "optional": false,
                    "description": "",
                    "line": 72
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "PaginatedList",
            "id": "interface-PaginatedList-c11bea9e2e3a73af489915b8a5ef33e114ecb863592086aeab6d2de6f4d7a56b5dab9db6ea8bb9769ee8ace63c87209979df2cf415d4f232c7635a132045b982",
            "file": "src/app/core/http/template.api.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable, inject } from \"@angular/core\";\r\nimport { SiteDocument } from \"../stores/site-document/models\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { EMPTY, Subject, expand, map, mergeMap, reduce } from \"rxjs\";\r\nimport { memoize, orderBy } from \"lodash-es\";\r\nimport { createApi } from \"./create-api\";\r\nimport { track } from \"src/app/shared/rxjs\";\r\n\r\nexport interface TemplateItem {\r\n  Id: number,\r\n  Title: string\r\n}\r\n\r\nexport interface PaginatedList<T> {\r\n  Items: T[],\r\n  PageNumber: number,\r\n  TotalPage: number,\r\n  TotalCount: number,\r\n  HasPreviousPage: boolean,\r\n  HasNextPage: boolean\r\n}\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class TemplateApi {\r\n  protected httpClient = inject(HttpClient);\r\n\r\n  getTemplates() {\r\n    return this.httpClient.get<PaginatedList<SiteDocument>>(`${environment.siteDocsApi}/TemplateApi/GetLatestTemplatesWithPagination`, {\r\n      params: {\r\n        pageNumber: 1,\r\n        pageSize: 20\r\n      }\r\n    }).pipe(\r\n      expand((res, idx) => res.HasNextPage\r\n        ? this.httpClient.get<PaginatedList<SiteDocument>>(`${environment.siteDocsApi}/TemplateApi/GetLatestTemplatesWithPagination`, {\r\n          params: {\r\n            pageNumber: idx + 2,\r\n            pageSize: 20\r\n          }\r\n        })\r\n        : EMPTY\r\n      ),\r\n      map(res => res.Items),\r\n      reduce((acc, docs) => [...acc, ...docs]),\r\n      map(tpls => orderBy(tpls, \"DocumentTitle\"))\r\n    )\r\n  }\r\n\r\n  getTemplate(params: { id: number }) {\r\n    return this.httpClient.get<SiteDocument>(`${environment.siteDocsApi}/TemplateApi/GetDocumentTemplate`, {\r\n      params: {\r\n        id: params.id.toString()\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport const useTemplateApi = createApi({\r\n  baseUrl: `${environment.siteDocsApi}/TemplateApi`,\r\n  endpoints: ({ get }) => ({\r\n    getAllTemplates: get<TemplateItem[]>(\"GetAllTemplates\"),\r\n    getTemplate: get<SiteDocument, { id: number }>(\"GetDocumentTemplate\"),\r\n  })\r\n});\r\n\r\nexport const useAllTemplates = memoize(() => {\r\n  const { getAllTemplates } = useTemplateApi();\r\n\r\n  return track(() => getAllTemplates());\r\n});\r\n\r\nexport function useTemplate() {\r\n  const { getTemplate } = useTemplateApi();\r\n  const params$ = new Subject<{ id: number }>();\r\n  \r\n  const template = track(() => params$.pipe(\r\n    mergeMap(params => getTemplate(params))\r\n  ));\r\n\r\n  return {\r\n    ...template,\r\n    fetch: (params: { id: number }) => params$.next(params)\r\n  }\r\n}",
            "properties": [
                {
                    "name": "HasNextPage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "HasPreviousPage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "Items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T[]",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "PageNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "TotalCount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "TotalPage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "PaginatedList",
            "id": "interface-PaginatedList-ea19741563b0220d009e60c1a96250d8d5296f55d943647cad1701acc75a0de05d5730bd3421d5b1d2968de415e56881da300fdb03433502db45b4e72ced45e1-1",
            "file": "src/app/core/pages/document-builder/modals/template-menu/template-menu.modal.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\r\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, inject } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { useAllTemplates } from \"src/app/core/http/template.api\";\r\nimport { importRxTemplate, importRxFixedVirtualScroll } from \"src/app/shared/imports\";\r\n\r\nexport interface PaginatedList<T> {\r\n  Items: T[],\r\n  PageNumber: number,\r\n  TotalPage: number,\r\n  TotalCount: number,\r\n  HasPreviousPage: boolean,\r\n  HasNextPage: boolean\r\n}\r\n\r\n@Component({\r\n  selector: \"template-menu-modal\",\r\n  template: `\r\n    <ion-modal #modal [isOpen]=\"isOpen\">\r\n      <ng-template>\r\n        <ion-header>\r\n          <ion-toolbar>\r\n            <ion-title class=\"text-center\">\r\n              Templates\r\n              <ion-spinner *rxIf=\"templates.isLoading()\" class=\"float-right\" />\r\n            </ion-title>\r\n          </ion-toolbar>\r\n        </ion-header>\r\n\r\n        <ion-content class=\"ion-padding\">\r\n          <ion-list class=\"h-full\">\r\n            <rx-virtual-scroll-viewport [itemSize]=\"50\">\r\n              <ion-item *rxVirtualFor=\"let template of templates.data()\" class=\"w-full\" (click)=\"select.emit(template.Id); modal.dismiss()\" button>\r\n                {{ template.Title }}\r\n              </ion-item>\r\n            </rx-virtual-scroll-viewport>\r\n          </ion-list>\r\n        </ion-content>\r\n      </ng-template>\r\n    </ion-modal>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    ...importRxFixedVirtualScroll()\r\n  ]\r\n})\r\nexport class TemplateMenuModal {\r\n  httpClient = inject(HttpClient);\r\n\r\n  templates = useAllTemplates();\r\n\r\n  @Input()\r\n  isOpen: boolean = false;\r\n\r\n  @Output()\r\n  select = new EventEmitter<number>();\r\n}\r\n",
            "properties": [
                {
                    "name": "HasNextPage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "HasPreviousPage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "Items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T[]",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "PageNumber",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "TotalCount",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "TotalPage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "PaginatedList-1"
        },
        {
            "name": "PostRequestOptions",
            "id": "interface-PostRequestOptions-4616d93f9abbd4f20499e21676f3f6f79c9bd8d6fe8e904156d53b3f3bdf64f26fd4b0ef60abdbcdbe758227a33f70c895b15ff589e722d6455bfdfbd33be8a7",
            "file": "src/app/core/http/create-api.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\r\nimport { inject } from \"@angular/core\";\r\nimport { mapValues, memoize, omitBy } from \"lodash-es\";\r\nimport { Observable } from \"rxjs\";\r\n\r\nexport type AspNetData<T> = {\r\n  [name in keyof T]: T[name] extends Date | undefined | null \r\n    ? string \r\n    : T[name] \r\n}\r\n\r\nexport interface GetRequestOptions<TParams> {\r\n  path: string,\r\n  query?: (params: TParams) => object,\r\n  headers?: (params: TParams) => object\r\n}\r\n\r\nexport interface PostRequestOptions<TParams> {\r\n  path: string,\r\n  body?: (params: TParams) => object,\r\n  headers?: (params: TParams) => object\r\n}\r\n\r\nexport interface BuildApi {\r\n  get: <TResponse, TParams = object | void>(getOptions: string | GetRequestOptions<TParams>) => (params: TParams) => Observable<TResponse>\r\n  post: <TResponse, TParams = object | void>(postOptions: PostRequestOptions<TParams>) => (params: TParams) => Observable<TResponse>\r\n}\r\n\r\nexport interface CreateApiOptions<TApi> {\r\n  baseUrl: string,\r\n  headers?: object,\r\n  endpoints: (build: BuildApi) => TApi\r\n}\r\n\r\nexport type Params = {\r\n  [param: string]: string | number | boolean | ReadonlyArray<string | number | boolean>\r\n}\r\n\r\nexport function createBuildApi<TApi>(options: CreateApiOptions<TApi>): BuildApi {\r\n  const http = inject(HttpClient);\r\n\r\n  return {\r\n    get: <TResponse, TParams = object | void>(getOptions: string | GetRequestOptions<TParams>) => \r\n      typeof getOptions === \"string\" \r\n        ? () => http.get<TResponse>(`${options.baseUrl}/${getOptions}`)\r\n        : (params: TParams) => http.get<TResponse>(`${options.baseUrl}/${getOptions.path}`, {\r\n            headers: getOptions.headers != null \r\n              ? mapValues(omitBy(getOptions.headers(params) as Params, val => val == null), val => val.toString()) \r\n              : {},\r\n            params: getOptions.query != null \r\n              ? getOptions.query(params) as Params\r\n              : params != null\r\n              ? omitBy(params, val => val == null) as Params\r\n              : {}\r\n        }),\r\n    post: <TResponse, TParams = object | void>(postOptions: PostRequestOptions<TParams>) =>\r\n      (params: TParams) => http.post<TResponse>(`${options.baseUrl}/${postOptions.path}`, {}, {})\r\n  }\r\n}\r\n\r\nexport function createApi<TApi>(options: CreateApiOptions<TApi>) {\r\n  return memoize(() => {\r\n    const build = createBuildApi(options);\r\n\r\n    return options.endpoints(build);\r\n  });\r\n}",
            "properties": [
                {
                    "name": "body",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": true,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "headers",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": true,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "path",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Question",
            "id": "interface-Question-fb56d08da6dcb5e38a9b83ed7cde99c4b1bdfdc334b06db1fab4473570caad69478c2c574d1e78cb27acdd0c8b9c6e0322b6bedf7d106dfa697e1fbbb514a67e",
            "file": "src/app/core/stores/site-document/models/site-document.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { PointGroup } from \"signature_pad\";\r\n\r\nexport interface SiteDocument {\r\n  DocumentID: number;\r\n  DocumentTitle: string;\r\n  Pinned: boolean;\r\n  Pages: Page[];\r\n  AllowAnon: boolean;\r\n  RemainAnon: boolean;\r\n  Queues: { Key: string, Value: string }[],\r\n  DocumentGroup: string;\r\n  DocumentCategory?: number;\r\n  CanCreateHotspot: boolean;\r\n  CanBeAddedToHotspot?: boolean;\r\n  CanBeSavedAsDraft?: boolean;\r\n  CanAddActionerFromApp: boolean;\r\n  CanAddCategoryActioner: boolean;\r\n  CanCreateAssetsFromDocument: boolean;\r\n  CanHaveQueueDuration: boolean;\r\n  CanHaveDocumentLevelImages: boolean;\r\n  CanHaveDocLevelPhotoRoll: boolean;\r\n  CurrentActionerOperativeID?: number;\r\n  CompanyActionerId?: number;\r\n  ShowDocLevelPhotoButtonAtStartOfDoc: boolean;\r\n  CanAddAsset?: boolean;\r\n  CanAddOperative?: boolean;\r\n  CanHaveCompanyActioner: boolean;\r\n  MetaData: Partial<SiteDocumentMetaData>;\r\n  SiteId?: number;\r\n  AutoQueueID?: number;\r\n  QueueDuration?: {\r\n    Value: number;\r\n    Type: string;\r\n  }\r\n}\r\n\r\nexport interface SiteDocumentImage {\r\n  DocumentId: number,\r\n  DocumentSubmissionId: number,\r\n  Base64: string,\r\n  ImageNo: number\r\n}\r\n\r\nexport interface SiteDocumentMetaData {\r\n  ActionerText: string;\r\n  CanBeEditableDocument: boolean;\r\n  CannotAddSelfAsActioner: boolean;\r\n  ColourHex: string;\r\n  QueueSelectorTitle: string;\r\n  HasSiteList: boolean;\r\n  SiteListTitle: string;\r\n  UsesRadioGroupTable: boolean;\r\n}\r\n\r\nexport interface SiteDocumentAsset {\r\n  AssetID: number;\r\n  Tag: string;\r\n  Name: string;\r\n  QRCode?: string;\r\n  TemplateID?: number;\r\n}\r\n\r\nexport interface SiteDocumentOperative {\r\n  AttendeeID: number;\r\n  Name: string;\r\n  DateAttended: Date;\r\n}\r\n\r\nexport interface Page {\r\n  PageID: number;\r\n  PageTitle: string;\r\n  Sections: Section[]\r\n}\r\n\r\nexport interface Section {\r\n  SectionID: number;\r\n  SectionNo: number;\r\n  SectionTitle: string;\r\n  Questions: Question[];\r\n  SectionQuestiontype: QuestionType;\r\n  IsRepeatable: boolean;\r\n  TableTitles: string[];\r\n}\r\n\r\nexport enum QuestionType {\r\n  Label = 0,\r\n  Checkbox = 1,\r\n  RadioGroup = 2,\r\n  Textbox = 3,\r\n  TextArea = 4,\r\n  Select = 5,\r\n  CheckboxTextbox = 6,\r\n  RadioGroupTextbox = 7,\r\n  Date = 8,\r\n  DateTime = 9,\r\n  OperativeList = 10,\r\n  WallOfText = 11,\r\n  Number = 12,\r\n  CascadeDropdown = 13,\r\n  LinkedBool = 16,\r\n  AssetList = 17,\r\n  LinkedDates = 18,\r\n  Signature = 19,\r\n  CompanySelect = 21,\r\n  AreaSelect = 22,\r\n  AssetGroupsAndTypes = 25,\r\n  AssetInspectionSchedule = 26,\r\n  ProjectSelect = 27,\r\n  RamsSelect = 28,\r\n  SelectText = 29,\r\n  CascadeDropdownText = 30,\r\n  MultiCascade = 31,\r\n  Time = 32,\r\n  LinkedTimes = 33,\r\n  HraSelect = 34,\r\n  MultiCheckbox = 35,\r\n  LinkedDateAndTime = 36\r\n}\r\n\r\nexport interface Question {\r\n  QuestionID: number;\r\n  QuestionText: string;\r\n  CascadeOptionsText: string;\r\n  CommentsText: string;\r\n  Assets: SiteDocumentAsset[];\r\n  Operatives: SiteDocumentOperative[];\r\n  Required: boolean;\r\n  AnswerText: string;\r\n  DateAndTime: Date;\r\n  DateAndTime2: Date;\r\n  NumberVal?: number;\r\n  OptionVal?: string | null;\r\n  Options: SelectOption[];\r\n  CascadeOptions: CascadeOption[];\r\n  CascadeOptionVal?: string | null;\r\n  YesNoNA: boolean | null;\r\n  CanHaveImg: boolean;\r\n  CanHaveFiles: boolean;\r\n  SignaturePoints?: PointGroup[];\r\n  ValidationData: ValidationData[];\r\n}\r\n\r\nexport interface ValidationData {\r\n  Key: \"Min\" | \"Max\",\r\n  Value: string,\r\n  Msg: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  Active?: boolean;\r\n  Text: string;\r\n  Val: string;\r\n  MetaData?: any;\r\n  OptionsMetadataJson?: string;\r\n}\r\n\r\nexport interface SelectOptionMetaData {\r\n  ColourHex?: string;\r\n}\r\n\r\nexport interface CascadeOption { \r\n  ParentVal: string, \r\n  Text: string, \r\n  Val: string \r\n}",
            "properties": [
                {
                    "name": "AnswerText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 128
                },
                {
                    "name": "Assets",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SiteDocumentAsset[]",
                    "optional": false,
                    "description": "",
                    "line": 125
                },
                {
                    "name": "CanHaveFiles",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 138
                },
                {
                    "name": "CanHaveImg",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 137
                },
                {
                    "name": "CascadeOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CascadeOption[]",
                    "optional": false,
                    "description": "",
                    "line": 134
                },
                {
                    "name": "CascadeOptionsText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 123
                },
                {
                    "name": "CascadeOptionVal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": true,
                    "description": "",
                    "line": 135
                },
                {
                    "name": "CommentsText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 124
                },
                {
                    "name": "DateAndTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 129
                },
                {
                    "name": "DateAndTime2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 130
                },
                {
                    "name": "NumberVal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 131
                },
                {
                    "name": "Operatives",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SiteDocumentOperative[]",
                    "optional": false,
                    "description": "",
                    "line": 126
                },
                {
                    "name": "Options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SelectOption[]",
                    "optional": false,
                    "description": "",
                    "line": 133
                },
                {
                    "name": "OptionVal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": true,
                    "description": "",
                    "line": 132
                },
                {
                    "name": "QuestionID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 121
                },
                {
                    "name": "QuestionText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 122
                },
                {
                    "name": "Required",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 127
                },
                {
                    "name": "SignaturePoints",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "PointGroup[]",
                    "optional": true,
                    "description": "",
                    "line": 139
                },
                {
                    "name": "ValidationData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ValidationData[]",
                    "optional": false,
                    "description": "",
                    "line": 140
                },
                {
                    "name": "YesNoNA",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean | null",
                    "optional": false,
                    "description": "",
                    "line": 136
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "RamsItem",
            "id": "interface-RamsItem-d022c870c1b2a33062f43a6fc480a2d691375d63c81e8f94ceb86e0f9568a165a87482fcf3acdc324e75a349b6b8b8cb5608218ac313d35ab703871b4f5db146",
            "file": "src/app/core/http/login.api.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { environment } from \"src/environments/environment\";\r\nimport { Area, Company, Site } from \"../stores/user/user.store\";\r\nimport { createApi } from \"./create-api\";\r\nimport { CategoryActioner } from \"../stores/category-actioners/category-actioners.store\";\r\nimport { flatMap, memoize } from \"lodash-es\";\r\nimport { track } from \"src/app/shared/rxjs\";\r\n\r\nexport interface RamsItem {\r\n  Reference: string,\r\n  Description: string,\r\n  SiteId: number,\r\n  ExpiryDate: Date | null\r\n}\r\n\r\nexport interface ResponsibilityAreaType {\r\n  Id: number,\r\n  TypeName: string,\r\n  AppQuestionText: string,\r\n  Areas: ResponsibilityArea[]\r\n}\r\n\r\nexport interface ResponsibilityArea {\r\n  Id: number,\r\n  Name: string,\r\n  DocResAreaTypeId: number,\r\n  SiteId?: number\r\n}\r\n\r\nexport const useLoginApi = createApi({\r\n  baseUrl: `${environment.siteDocsApi}/LoginApi`,\r\n  endpoints: ({ get }) => ({\r\n    getCompanies: get<Company[]>(\"GetCompanies\"),\r\n    getSites: get<Site[]>(\"GetSites\"),\r\n    getAreas: get<Area[]>(\"GetAreas\"),\r\n    getRams: get<RamsItem[]>(\"GetRams\"),\r\n    getCategoryActioners: get<CategoryActioner[], { siteId: number }>(\"GetCategoryActioners\"),\r\n    getResAreaTypes: get<ResponsibilityAreaType[]>(\"GetResAreas\")\r\n  })\r\n});\r\n\r\nexport const useSites = memoize(() => {\r\n  const { getSites } = useLoginApi();\r\n\r\n  return track(() => getSites());\r\n});\r\n\r\nexport const useCompanies = memoize(() => {\r\n  const { getCompanies } = useLoginApi();\r\n\r\n  return track(() => getCompanies());\r\n});\r\n\r\nexport const useAreas = memoize(() => {\r\n  const { getAreas } = useLoginApi();\r\n\r\n  return track(() => getAreas());\r\n});\r\n\r\nexport const useRams = memoize(() => {\r\n  const { getRams } = useLoginApi();\r\n\r\n  const rams = track(() => getRams());\r\n\r\n  return {\r\n    ...rams,\r\n    thatArentExpiredToday: rams.data(items => items.filter(item => item.ExpiryDate == null || item.ExpiryDate.isEqualOrAfterToday()))\r\n  }\r\n});\r\n\r\nexport const useResAreaTypes = memoize(() => {\r\n  const { getResAreaTypes } = useLoginApi();\r\n\r\n  const resAreaTypes = track(() => getResAreaTypes());\r\n\r\n  return {\r\n    ...resAreaTypes,\r\n    areas: resAreaTypes.data(types => flatMap(types, t => t.Areas))\r\n  }\r\n})",
            "properties": [
                {
                    "name": "Description",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "ExpiryDate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date | null",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "Reference",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "SiteId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ResponsibilityArea",
            "id": "interface-ResponsibilityArea-d022c870c1b2a33062f43a6fc480a2d691375d63c81e8f94ceb86e0f9568a165a87482fcf3acdc324e75a349b6b8b8cb5608218ac313d35ab703871b4f5db146",
            "file": "src/app/core/http/login.api.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { environment } from \"src/environments/environment\";\r\nimport { Area, Company, Site } from \"../stores/user/user.store\";\r\nimport { createApi } from \"./create-api\";\r\nimport { CategoryActioner } from \"../stores/category-actioners/category-actioners.store\";\r\nimport { flatMap, memoize } from \"lodash-es\";\r\nimport { track } from \"src/app/shared/rxjs\";\r\n\r\nexport interface RamsItem {\r\n  Reference: string,\r\n  Description: string,\r\n  SiteId: number,\r\n  ExpiryDate: Date | null\r\n}\r\n\r\nexport interface ResponsibilityAreaType {\r\n  Id: number,\r\n  TypeName: string,\r\n  AppQuestionText: string,\r\n  Areas: ResponsibilityArea[]\r\n}\r\n\r\nexport interface ResponsibilityArea {\r\n  Id: number,\r\n  Name: string,\r\n  DocResAreaTypeId: number,\r\n  SiteId?: number\r\n}\r\n\r\nexport const useLoginApi = createApi({\r\n  baseUrl: `${environment.siteDocsApi}/LoginApi`,\r\n  endpoints: ({ get }) => ({\r\n    getCompanies: get<Company[]>(\"GetCompanies\"),\r\n    getSites: get<Site[]>(\"GetSites\"),\r\n    getAreas: get<Area[]>(\"GetAreas\"),\r\n    getRams: get<RamsItem[]>(\"GetRams\"),\r\n    getCategoryActioners: get<CategoryActioner[], { siteId: number }>(\"GetCategoryActioners\"),\r\n    getResAreaTypes: get<ResponsibilityAreaType[]>(\"GetResAreas\")\r\n  })\r\n});\r\n\r\nexport const useSites = memoize(() => {\r\n  const { getSites } = useLoginApi();\r\n\r\n  return track(() => getSites());\r\n});\r\n\r\nexport const useCompanies = memoize(() => {\r\n  const { getCompanies } = useLoginApi();\r\n\r\n  return track(() => getCompanies());\r\n});\r\n\r\nexport const useAreas = memoize(() => {\r\n  const { getAreas } = useLoginApi();\r\n\r\n  return track(() => getAreas());\r\n});\r\n\r\nexport const useRams = memoize(() => {\r\n  const { getRams } = useLoginApi();\r\n\r\n  const rams = track(() => getRams());\r\n\r\n  return {\r\n    ...rams,\r\n    thatArentExpiredToday: rams.data(items => items.filter(item => item.ExpiryDate == null || item.ExpiryDate.isEqualOrAfterToday()))\r\n  }\r\n});\r\n\r\nexport const useResAreaTypes = memoize(() => {\r\n  const { getResAreaTypes } = useLoginApi();\r\n\r\n  const resAreaTypes = track(() => getResAreaTypes());\r\n\r\n  return {\r\n    ...resAreaTypes,\r\n    areas: resAreaTypes.data(types => flatMap(types, t => t.Areas))\r\n  }\r\n})",
            "properties": [
                {
                    "name": "DocResAreaTypeId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "Id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "Name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "SiteId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 26
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ResponsibilityArea",
            "id": "interface-ResponsibilityArea-617b4801fa08a8e08bf98e552c0e7fad70edfa4f661170432e41b2a0de0233527ebb03bcf87a177e832f9b057238fef606b23964cff87ae7f1ea0081f82689fd-1",
            "file": "src/app/core/stores/responsibility-area-types/responsibility-area-types.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { createStore } from \"@ngneat/elf\";\nimport { selectAllEntities, withEntities } from \"@ngneat/elf-entities\";\nimport { map } from \"rxjs\";\n\nexport interface ResponsibilityArea {\n  Id: number,\n  Name: string,\n  DocResAreaTypeId: number,\n  SiteId?: number\n}\n\nexport interface ResponsibilityAreaType {\n  Id: number,\n  TypeName: string,\n  AppQuestionText: string,\n  Areas: ResponsibilityArea[]\n}\n\nconst store = createStore(\n  { name: \"responsibility-area-types\" },\n  withEntities<ResponsibilityAreaType, \"Id\">({ idKey: \"Id\" })\n);\n\n@Injectable({ providedIn: \"root\" })\nexport class ResponsibilityAreaTypesStore {\n  responsibilityAreaTypes$ = store.pipe(selectAllEntities());\n  responsibilityAreaTypeById$ = (id: number) => this.responsibilityAreaTypes$.pipe(\n    map(resAreaTypes => resAreaTypes.find(t => t.Id === id))\n  );\n}\n",
            "properties": [
                {
                    "name": "DocResAreaTypeId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "Id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "Name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "SiteId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "ResponsibilityArea-1"
        },
        {
            "name": "ResponsibilityAreaType",
            "id": "interface-ResponsibilityAreaType-d022c870c1b2a33062f43a6fc480a2d691375d63c81e8f94ceb86e0f9568a165a87482fcf3acdc324e75a349b6b8b8cb5608218ac313d35ab703871b4f5db146",
            "file": "src/app/core/http/login.api.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { environment } from \"src/environments/environment\";\r\nimport { Area, Company, Site } from \"../stores/user/user.store\";\r\nimport { createApi } from \"./create-api\";\r\nimport { CategoryActioner } from \"../stores/category-actioners/category-actioners.store\";\r\nimport { flatMap, memoize } from \"lodash-es\";\r\nimport { track } from \"src/app/shared/rxjs\";\r\n\r\nexport interface RamsItem {\r\n  Reference: string,\r\n  Description: string,\r\n  SiteId: number,\r\n  ExpiryDate: Date | null\r\n}\r\n\r\nexport interface ResponsibilityAreaType {\r\n  Id: number,\r\n  TypeName: string,\r\n  AppQuestionText: string,\r\n  Areas: ResponsibilityArea[]\r\n}\r\n\r\nexport interface ResponsibilityArea {\r\n  Id: number,\r\n  Name: string,\r\n  DocResAreaTypeId: number,\r\n  SiteId?: number\r\n}\r\n\r\nexport const useLoginApi = createApi({\r\n  baseUrl: `${environment.siteDocsApi}/LoginApi`,\r\n  endpoints: ({ get }) => ({\r\n    getCompanies: get<Company[]>(\"GetCompanies\"),\r\n    getSites: get<Site[]>(\"GetSites\"),\r\n    getAreas: get<Area[]>(\"GetAreas\"),\r\n    getRams: get<RamsItem[]>(\"GetRams\"),\r\n    getCategoryActioners: get<CategoryActioner[], { siteId: number }>(\"GetCategoryActioners\"),\r\n    getResAreaTypes: get<ResponsibilityAreaType[]>(\"GetResAreas\")\r\n  })\r\n});\r\n\r\nexport const useSites = memoize(() => {\r\n  const { getSites } = useLoginApi();\r\n\r\n  return track(() => getSites());\r\n});\r\n\r\nexport const useCompanies = memoize(() => {\r\n  const { getCompanies } = useLoginApi();\r\n\r\n  return track(() => getCompanies());\r\n});\r\n\r\nexport const useAreas = memoize(() => {\r\n  const { getAreas } = useLoginApi();\r\n\r\n  return track(() => getAreas());\r\n});\r\n\r\nexport const useRams = memoize(() => {\r\n  const { getRams } = useLoginApi();\r\n\r\n  const rams = track(() => getRams());\r\n\r\n  return {\r\n    ...rams,\r\n    thatArentExpiredToday: rams.data(items => items.filter(item => item.ExpiryDate == null || item.ExpiryDate.isEqualOrAfterToday()))\r\n  }\r\n});\r\n\r\nexport const useResAreaTypes = memoize(() => {\r\n  const { getResAreaTypes } = useLoginApi();\r\n\r\n  const resAreaTypes = track(() => getResAreaTypes());\r\n\r\n  return {\r\n    ...resAreaTypes,\r\n    areas: resAreaTypes.data(types => flatMap(types, t => t.Areas))\r\n  }\r\n})",
            "properties": [
                {
                    "name": "AppQuestionText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "Areas",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ResponsibilityArea[]",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "Id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "TypeName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ResponsibilityAreaType",
            "id": "interface-ResponsibilityAreaType-617b4801fa08a8e08bf98e552c0e7fad70edfa4f661170432e41b2a0de0233527ebb03bcf87a177e832f9b057238fef606b23964cff87ae7f1ea0081f82689fd-1",
            "file": "src/app/core/stores/responsibility-area-types/responsibility-area-types.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { createStore } from \"@ngneat/elf\";\nimport { selectAllEntities, withEntities } from \"@ngneat/elf-entities\";\nimport { map } from \"rxjs\";\n\nexport interface ResponsibilityArea {\n  Id: number,\n  Name: string,\n  DocResAreaTypeId: number,\n  SiteId?: number\n}\n\nexport interface ResponsibilityAreaType {\n  Id: number,\n  TypeName: string,\n  AppQuestionText: string,\n  Areas: ResponsibilityArea[]\n}\n\nconst store = createStore(\n  { name: \"responsibility-area-types\" },\n  withEntities<ResponsibilityAreaType, \"Id\">({ idKey: \"Id\" })\n);\n\n@Injectable({ providedIn: \"root\" })\nexport class ResponsibilityAreaTypesStore {\n  responsibilityAreaTypes$ = store.pipe(selectAllEntities());\n  responsibilityAreaTypeById$ = (id: number) => this.responsibilityAreaTypes$.pipe(\n    map(resAreaTypes => resAreaTypes.find(t => t.Id === id))\n  );\n}\n",
            "properties": [
                {
                    "name": "AppQuestionText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "Areas",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ResponsibilityArea[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "Id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "TypeName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "ResponsibilityAreaType-1"
        },
        {
            "name": "SearchEntitiesType",
            "id": "interface-SearchEntitiesType-2e50ce7c6b5b004936ea8217210e3b1cc5b95e2c9e42c273120bfac43a66bb250c30427e91b8d2c9d2092689922f548e964925711c3f829e3ce66985d78aa119",
            "file": "src/app/shared/states/search-results.adapter.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Store, StoreDef } from \"@ngneat/elf\";\r\nimport { entitiesPropsFactory, selectAllEntities, setEntities } from \"@ngneat/elf-entities\";\r\nimport { pipeTap } from \"../rxjs\";\r\n\r\nconst { SearchResultEntitiesRef, withSearchResultEntities } = entitiesPropsFactory(\"SearchResult\")\r\n\r\nexport interface SearchEntitiesType<TResult> {\r\n  SearchResultEntities: Record<number, TResult>,\r\n  SearchResultIds: number[]\r\n}\r\n\r\nfunction searchResultsAdapt<TResult, TState extends SearchEntitiesType<TResult>>(store: Store<StoreDef<TState>>) {\r\n  return {\r\n    searchResults$: () => store.pipe(selectAllEntities({ ref: SearchResultEntitiesRef })),\r\n    setSearchResults: pipeTap<TResult[]>(results => store.update(\r\n      setEntities(results, { ref: SearchResultEntitiesRef })\r\n    ))\r\n  }\r\n}\r\n\r\nexport function searchResultsAdapter() {\r\n  return {\r\n    SearchResultEntitiesRef,\r\n    withSearchResultEntities,\r\n    searchResultsAdapt\r\n  }\r\n}",
            "properties": [
                {
                    "name": "SearchResultEntities",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<number | TResult>",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "SearchResultIds",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "SearchEntitiesType",
            "id": "interface-SearchEntitiesType-1bdbb626e75577b3a840a415e32b2694a95e70f778d041334621dea3933ebdc0b36d1794c1f6b3edb5b410d5a41920007f632d0f43d1e860b86f1cd3498e9a3b-1",
            "file": "src/app/core/stores/operative/adapters/operatives.adapter.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Store, StoreDef } from \"@ngneat/elf\";\r\nimport { addEntities, EntitiesRef, selectAllEntities, setEntities } from \"@ngneat/elf-entities\";\r\nimport { pipeTap } from \"src/app/shared/rxjs\";\r\nimport { Operative, OperativeSearchResult } from \"../operatives.store\";\r\n\r\ninterface EntitiesType {\r\n  entities: Record<number, Operative>,\r\n  ids: number[]\r\n}\r\n\r\nexport function operativesAdapter<TState extends EntitiesType>(store: Store<StoreDef<TState>>) {\r\n  return {\r\n    operatives$: () => store.pipe(selectAllEntities()),\r\n    addOperative: pipeTap<Operative>(operative => store.update(\r\n      addEntities(operative)\r\n    ))\r\n  }\r\n}\r\n\r\ninterface SearchEntitiesType {\r\n  SearchResultEntities: Record<number, OperativeSearchResult>,\r\n  SearchResultIds: number[]\r\n}\r\n\r\ntype SearchEntitiesRef = EntitiesRef<\"SearchResultEntities\", \"SearchResultIds\", \"idKeySearchResult\">;\r\n\r\ninterface AdapterTarget<TState extends SearchEntitiesType> {\r\n  store: Store<StoreDef<TState>>,\r\n  ref: SearchEntitiesRef\r\n}\r\n\r\nexport function operativeSearchAdapter<TState extends SearchEntitiesType>({ store, ref }: AdapterTarget<TState>) {\r\n  return {\r\n    searchResults$: () => store.pipe(selectAllEntities({ ref })),\r\n    setSearchResults: pipeTap<OperativeSearchResult[]>(results => store.update(\r\n      setEntities(results, { ref })\r\n    ))\r\n  }\r\n}",
            "properties": [
                {
                    "name": "SearchResultEntities",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<number | OperativeSearchResult>",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "SearchResultIds",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number[]",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "SearchEntitiesType-1"
        },
        {
            "name": "Section",
            "id": "interface-Section-fb56d08da6dcb5e38a9b83ed7cde99c4b1bdfdc334b06db1fab4473570caad69478c2c574d1e78cb27acdd0c8b9c6e0322b6bedf7d106dfa697e1fbbb514a67e",
            "file": "src/app/core/stores/site-document/models/site-document.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { PointGroup } from \"signature_pad\";\r\n\r\nexport interface SiteDocument {\r\n  DocumentID: number;\r\n  DocumentTitle: string;\r\n  Pinned: boolean;\r\n  Pages: Page[];\r\n  AllowAnon: boolean;\r\n  RemainAnon: boolean;\r\n  Queues: { Key: string, Value: string }[],\r\n  DocumentGroup: string;\r\n  DocumentCategory?: number;\r\n  CanCreateHotspot: boolean;\r\n  CanBeAddedToHotspot?: boolean;\r\n  CanBeSavedAsDraft?: boolean;\r\n  CanAddActionerFromApp: boolean;\r\n  CanAddCategoryActioner: boolean;\r\n  CanCreateAssetsFromDocument: boolean;\r\n  CanHaveQueueDuration: boolean;\r\n  CanHaveDocumentLevelImages: boolean;\r\n  CanHaveDocLevelPhotoRoll: boolean;\r\n  CurrentActionerOperativeID?: number;\r\n  CompanyActionerId?: number;\r\n  ShowDocLevelPhotoButtonAtStartOfDoc: boolean;\r\n  CanAddAsset?: boolean;\r\n  CanAddOperative?: boolean;\r\n  CanHaveCompanyActioner: boolean;\r\n  MetaData: Partial<SiteDocumentMetaData>;\r\n  SiteId?: number;\r\n  AutoQueueID?: number;\r\n  QueueDuration?: {\r\n    Value: number;\r\n    Type: string;\r\n  }\r\n}\r\n\r\nexport interface SiteDocumentImage {\r\n  DocumentId: number,\r\n  DocumentSubmissionId: number,\r\n  Base64: string,\r\n  ImageNo: number\r\n}\r\n\r\nexport interface SiteDocumentMetaData {\r\n  ActionerText: string;\r\n  CanBeEditableDocument: boolean;\r\n  CannotAddSelfAsActioner: boolean;\r\n  ColourHex: string;\r\n  QueueSelectorTitle: string;\r\n  HasSiteList: boolean;\r\n  SiteListTitle: string;\r\n  UsesRadioGroupTable: boolean;\r\n}\r\n\r\nexport interface SiteDocumentAsset {\r\n  AssetID: number;\r\n  Tag: string;\r\n  Name: string;\r\n  QRCode?: string;\r\n  TemplateID?: number;\r\n}\r\n\r\nexport interface SiteDocumentOperative {\r\n  AttendeeID: number;\r\n  Name: string;\r\n  DateAttended: Date;\r\n}\r\n\r\nexport interface Page {\r\n  PageID: number;\r\n  PageTitle: string;\r\n  Sections: Section[]\r\n}\r\n\r\nexport interface Section {\r\n  SectionID: number;\r\n  SectionNo: number;\r\n  SectionTitle: string;\r\n  Questions: Question[];\r\n  SectionQuestiontype: QuestionType;\r\n  IsRepeatable: boolean;\r\n  TableTitles: string[];\r\n}\r\n\r\nexport enum QuestionType {\r\n  Label = 0,\r\n  Checkbox = 1,\r\n  RadioGroup = 2,\r\n  Textbox = 3,\r\n  TextArea = 4,\r\n  Select = 5,\r\n  CheckboxTextbox = 6,\r\n  RadioGroupTextbox = 7,\r\n  Date = 8,\r\n  DateTime = 9,\r\n  OperativeList = 10,\r\n  WallOfText = 11,\r\n  Number = 12,\r\n  CascadeDropdown = 13,\r\n  LinkedBool = 16,\r\n  AssetList = 17,\r\n  LinkedDates = 18,\r\n  Signature = 19,\r\n  CompanySelect = 21,\r\n  AreaSelect = 22,\r\n  AssetGroupsAndTypes = 25,\r\n  AssetInspectionSchedule = 26,\r\n  ProjectSelect = 27,\r\n  RamsSelect = 28,\r\n  SelectText = 29,\r\n  CascadeDropdownText = 30,\r\n  MultiCascade = 31,\r\n  Time = 32,\r\n  LinkedTimes = 33,\r\n  HraSelect = 34,\r\n  MultiCheckbox = 35,\r\n  LinkedDateAndTime = 36\r\n}\r\n\r\nexport interface Question {\r\n  QuestionID: number;\r\n  QuestionText: string;\r\n  CascadeOptionsText: string;\r\n  CommentsText: string;\r\n  Assets: SiteDocumentAsset[];\r\n  Operatives: SiteDocumentOperative[];\r\n  Required: boolean;\r\n  AnswerText: string;\r\n  DateAndTime: Date;\r\n  DateAndTime2: Date;\r\n  NumberVal?: number;\r\n  OptionVal?: string | null;\r\n  Options: SelectOption[];\r\n  CascadeOptions: CascadeOption[];\r\n  CascadeOptionVal?: string | null;\r\n  YesNoNA: boolean | null;\r\n  CanHaveImg: boolean;\r\n  CanHaveFiles: boolean;\r\n  SignaturePoints?: PointGroup[];\r\n  ValidationData: ValidationData[];\r\n}\r\n\r\nexport interface ValidationData {\r\n  Key: \"Min\" | \"Max\",\r\n  Value: string,\r\n  Msg: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  Active?: boolean;\r\n  Text: string;\r\n  Val: string;\r\n  MetaData?: any;\r\n  OptionsMetadataJson?: string;\r\n}\r\n\r\nexport interface SelectOptionMetaData {\r\n  ColourHex?: string;\r\n}\r\n\r\nexport interface CascadeOption { \r\n  ParentVal: string, \r\n  Text: string, \r\n  Val: string \r\n}",
            "properties": [
                {
                    "name": "IsRepeatable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 81
                },
                {
                    "name": "Questions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Question[]",
                    "optional": false,
                    "description": "",
                    "line": 79
                },
                {
                    "name": "SectionID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 76
                },
                {
                    "name": "SectionNo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 77
                },
                {
                    "name": "SectionQuestiontype",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QuestionType",
                    "optional": false,
                    "description": "",
                    "line": 80
                },
                {
                    "name": "SectionTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 78
                },
                {
                    "name": "TableTitles",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 82
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "SelectOption",
            "id": "interface-SelectOption-fb56d08da6dcb5e38a9b83ed7cde99c4b1bdfdc334b06db1fab4473570caad69478c2c574d1e78cb27acdd0c8b9c6e0322b6bedf7d106dfa697e1fbbb514a67e",
            "file": "src/app/core/stores/site-document/models/site-document.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { PointGroup } from \"signature_pad\";\r\n\r\nexport interface SiteDocument {\r\n  DocumentID: number;\r\n  DocumentTitle: string;\r\n  Pinned: boolean;\r\n  Pages: Page[];\r\n  AllowAnon: boolean;\r\n  RemainAnon: boolean;\r\n  Queues: { Key: string, Value: string }[],\r\n  DocumentGroup: string;\r\n  DocumentCategory?: number;\r\n  CanCreateHotspot: boolean;\r\n  CanBeAddedToHotspot?: boolean;\r\n  CanBeSavedAsDraft?: boolean;\r\n  CanAddActionerFromApp: boolean;\r\n  CanAddCategoryActioner: boolean;\r\n  CanCreateAssetsFromDocument: boolean;\r\n  CanHaveQueueDuration: boolean;\r\n  CanHaveDocumentLevelImages: boolean;\r\n  CanHaveDocLevelPhotoRoll: boolean;\r\n  CurrentActionerOperativeID?: number;\r\n  CompanyActionerId?: number;\r\n  ShowDocLevelPhotoButtonAtStartOfDoc: boolean;\r\n  CanAddAsset?: boolean;\r\n  CanAddOperative?: boolean;\r\n  CanHaveCompanyActioner: boolean;\r\n  MetaData: Partial<SiteDocumentMetaData>;\r\n  SiteId?: number;\r\n  AutoQueueID?: number;\r\n  QueueDuration?: {\r\n    Value: number;\r\n    Type: string;\r\n  }\r\n}\r\n\r\nexport interface SiteDocumentImage {\r\n  DocumentId: number,\r\n  DocumentSubmissionId: number,\r\n  Base64: string,\r\n  ImageNo: number\r\n}\r\n\r\nexport interface SiteDocumentMetaData {\r\n  ActionerText: string;\r\n  CanBeEditableDocument: boolean;\r\n  CannotAddSelfAsActioner: boolean;\r\n  ColourHex: string;\r\n  QueueSelectorTitle: string;\r\n  HasSiteList: boolean;\r\n  SiteListTitle: string;\r\n  UsesRadioGroupTable: boolean;\r\n}\r\n\r\nexport interface SiteDocumentAsset {\r\n  AssetID: number;\r\n  Tag: string;\r\n  Name: string;\r\n  QRCode?: string;\r\n  TemplateID?: number;\r\n}\r\n\r\nexport interface SiteDocumentOperative {\r\n  AttendeeID: number;\r\n  Name: string;\r\n  DateAttended: Date;\r\n}\r\n\r\nexport interface Page {\r\n  PageID: number;\r\n  PageTitle: string;\r\n  Sections: Section[]\r\n}\r\n\r\nexport interface Section {\r\n  SectionID: number;\r\n  SectionNo: number;\r\n  SectionTitle: string;\r\n  Questions: Question[];\r\n  SectionQuestiontype: QuestionType;\r\n  IsRepeatable: boolean;\r\n  TableTitles: string[];\r\n}\r\n\r\nexport enum QuestionType {\r\n  Label = 0,\r\n  Checkbox = 1,\r\n  RadioGroup = 2,\r\n  Textbox = 3,\r\n  TextArea = 4,\r\n  Select = 5,\r\n  CheckboxTextbox = 6,\r\n  RadioGroupTextbox = 7,\r\n  Date = 8,\r\n  DateTime = 9,\r\n  OperativeList = 10,\r\n  WallOfText = 11,\r\n  Number = 12,\r\n  CascadeDropdown = 13,\r\n  LinkedBool = 16,\r\n  AssetList = 17,\r\n  LinkedDates = 18,\r\n  Signature = 19,\r\n  CompanySelect = 21,\r\n  AreaSelect = 22,\r\n  AssetGroupsAndTypes = 25,\r\n  AssetInspectionSchedule = 26,\r\n  ProjectSelect = 27,\r\n  RamsSelect = 28,\r\n  SelectText = 29,\r\n  CascadeDropdownText = 30,\r\n  MultiCascade = 31,\r\n  Time = 32,\r\n  LinkedTimes = 33,\r\n  HraSelect = 34,\r\n  MultiCheckbox = 35,\r\n  LinkedDateAndTime = 36\r\n}\r\n\r\nexport interface Question {\r\n  QuestionID: number;\r\n  QuestionText: string;\r\n  CascadeOptionsText: string;\r\n  CommentsText: string;\r\n  Assets: SiteDocumentAsset[];\r\n  Operatives: SiteDocumentOperative[];\r\n  Required: boolean;\r\n  AnswerText: string;\r\n  DateAndTime: Date;\r\n  DateAndTime2: Date;\r\n  NumberVal?: number;\r\n  OptionVal?: string | null;\r\n  Options: SelectOption[];\r\n  CascadeOptions: CascadeOption[];\r\n  CascadeOptionVal?: string | null;\r\n  YesNoNA: boolean | null;\r\n  CanHaveImg: boolean;\r\n  CanHaveFiles: boolean;\r\n  SignaturePoints?: PointGroup[];\r\n  ValidationData: ValidationData[];\r\n}\r\n\r\nexport interface ValidationData {\r\n  Key: \"Min\" | \"Max\",\r\n  Value: string,\r\n  Msg: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  Active?: boolean;\r\n  Text: string;\r\n  Val: string;\r\n  MetaData?: any;\r\n  OptionsMetadataJson?: string;\r\n}\r\n\r\nexport interface SelectOptionMetaData {\r\n  ColourHex?: string;\r\n}\r\n\r\nexport interface CascadeOption { \r\n  ParentVal: string, \r\n  Text: string, \r\n  Val: string \r\n}",
            "properties": [
                {
                    "name": "Active",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 150
                },
                {
                    "name": "MetaData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 153
                },
                {
                    "name": "OptionsMetadataJson",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 154
                },
                {
                    "name": "Text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 151
                },
                {
                    "name": "Val",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 152
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "SelectOptionMetaData",
            "id": "interface-SelectOptionMetaData-fb56d08da6dcb5e38a9b83ed7cde99c4b1bdfdc334b06db1fab4473570caad69478c2c574d1e78cb27acdd0c8b9c6e0322b6bedf7d106dfa697e1fbbb514a67e",
            "file": "src/app/core/stores/site-document/models/site-document.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { PointGroup } from \"signature_pad\";\r\n\r\nexport interface SiteDocument {\r\n  DocumentID: number;\r\n  DocumentTitle: string;\r\n  Pinned: boolean;\r\n  Pages: Page[];\r\n  AllowAnon: boolean;\r\n  RemainAnon: boolean;\r\n  Queues: { Key: string, Value: string }[],\r\n  DocumentGroup: string;\r\n  DocumentCategory?: number;\r\n  CanCreateHotspot: boolean;\r\n  CanBeAddedToHotspot?: boolean;\r\n  CanBeSavedAsDraft?: boolean;\r\n  CanAddActionerFromApp: boolean;\r\n  CanAddCategoryActioner: boolean;\r\n  CanCreateAssetsFromDocument: boolean;\r\n  CanHaveQueueDuration: boolean;\r\n  CanHaveDocumentLevelImages: boolean;\r\n  CanHaveDocLevelPhotoRoll: boolean;\r\n  CurrentActionerOperativeID?: number;\r\n  CompanyActionerId?: number;\r\n  ShowDocLevelPhotoButtonAtStartOfDoc: boolean;\r\n  CanAddAsset?: boolean;\r\n  CanAddOperative?: boolean;\r\n  CanHaveCompanyActioner: boolean;\r\n  MetaData: Partial<SiteDocumentMetaData>;\r\n  SiteId?: number;\r\n  AutoQueueID?: number;\r\n  QueueDuration?: {\r\n    Value: number;\r\n    Type: string;\r\n  }\r\n}\r\n\r\nexport interface SiteDocumentImage {\r\n  DocumentId: number,\r\n  DocumentSubmissionId: number,\r\n  Base64: string,\r\n  ImageNo: number\r\n}\r\n\r\nexport interface SiteDocumentMetaData {\r\n  ActionerText: string;\r\n  CanBeEditableDocument: boolean;\r\n  CannotAddSelfAsActioner: boolean;\r\n  ColourHex: string;\r\n  QueueSelectorTitle: string;\r\n  HasSiteList: boolean;\r\n  SiteListTitle: string;\r\n  UsesRadioGroupTable: boolean;\r\n}\r\n\r\nexport interface SiteDocumentAsset {\r\n  AssetID: number;\r\n  Tag: string;\r\n  Name: string;\r\n  QRCode?: string;\r\n  TemplateID?: number;\r\n}\r\n\r\nexport interface SiteDocumentOperative {\r\n  AttendeeID: number;\r\n  Name: string;\r\n  DateAttended: Date;\r\n}\r\n\r\nexport interface Page {\r\n  PageID: number;\r\n  PageTitle: string;\r\n  Sections: Section[]\r\n}\r\n\r\nexport interface Section {\r\n  SectionID: number;\r\n  SectionNo: number;\r\n  SectionTitle: string;\r\n  Questions: Question[];\r\n  SectionQuestiontype: QuestionType;\r\n  IsRepeatable: boolean;\r\n  TableTitles: string[];\r\n}\r\n\r\nexport enum QuestionType {\r\n  Label = 0,\r\n  Checkbox = 1,\r\n  RadioGroup = 2,\r\n  Textbox = 3,\r\n  TextArea = 4,\r\n  Select = 5,\r\n  CheckboxTextbox = 6,\r\n  RadioGroupTextbox = 7,\r\n  Date = 8,\r\n  DateTime = 9,\r\n  OperativeList = 10,\r\n  WallOfText = 11,\r\n  Number = 12,\r\n  CascadeDropdown = 13,\r\n  LinkedBool = 16,\r\n  AssetList = 17,\r\n  LinkedDates = 18,\r\n  Signature = 19,\r\n  CompanySelect = 21,\r\n  AreaSelect = 22,\r\n  AssetGroupsAndTypes = 25,\r\n  AssetInspectionSchedule = 26,\r\n  ProjectSelect = 27,\r\n  RamsSelect = 28,\r\n  SelectText = 29,\r\n  CascadeDropdownText = 30,\r\n  MultiCascade = 31,\r\n  Time = 32,\r\n  LinkedTimes = 33,\r\n  HraSelect = 34,\r\n  MultiCheckbox = 35,\r\n  LinkedDateAndTime = 36\r\n}\r\n\r\nexport interface Question {\r\n  QuestionID: number;\r\n  QuestionText: string;\r\n  CascadeOptionsText: string;\r\n  CommentsText: string;\r\n  Assets: SiteDocumentAsset[];\r\n  Operatives: SiteDocumentOperative[];\r\n  Required: boolean;\r\n  AnswerText: string;\r\n  DateAndTime: Date;\r\n  DateAndTime2: Date;\r\n  NumberVal?: number;\r\n  OptionVal?: string | null;\r\n  Options: SelectOption[];\r\n  CascadeOptions: CascadeOption[];\r\n  CascadeOptionVal?: string | null;\r\n  YesNoNA: boolean | null;\r\n  CanHaveImg: boolean;\r\n  CanHaveFiles: boolean;\r\n  SignaturePoints?: PointGroup[];\r\n  ValidationData: ValidationData[];\r\n}\r\n\r\nexport interface ValidationData {\r\n  Key: \"Min\" | \"Max\",\r\n  Value: string,\r\n  Msg: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  Active?: boolean;\r\n  Text: string;\r\n  Val: string;\r\n  MetaData?: any;\r\n  OptionsMetadataJson?: string;\r\n}\r\n\r\nexport interface SelectOptionMetaData {\r\n  ColourHex?: string;\r\n}\r\n\r\nexport interface CascadeOption { \r\n  ParentVal: string, \r\n  Text: string, \r\n  Val: string \r\n}",
            "properties": [
                {
                    "name": "ColourHex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 158
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Site",
            "id": "interface-Site-853a61b57e97b1015338c1b3ad545ff7256fef0ca9acee4db5fd449e1c7e81fa68592cbea8c7e1b7dbac8501a6598d2487ebbfe41af8e6a90d93a03da6fa4117",
            "file": "src/app/core/stores/user/user.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\r\nimport { inject, Injectable } from \"@angular/core\";\r\nimport { createStore, propsFactory } from \"@ngneat/elf\";\r\nimport { localStorageStrategy, persistState } from \"@ngneat/elf-persist-state\";\r\nimport { combineLatest, Observable, switchMap } from \"rxjs\";\r\nimport { getDeviceString, getDeviceUuid } from \"src/app/shared/plugins/device.plugin\";\r\nimport { pipeTap, selector } from \"src/app/shared/rxjs\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\nexport interface User {\r\n  Id: number,\r\n  LastName: string,\r\n  FirstName: string,\r\n  CompanyId: number,\r\n  CompanyName: string,\r\n  Colour: string,\r\n  FontColour: string,\r\n  Token: string,\r\n  Pin: string,\r\n  Site: Site,\r\n  DocumentListingTab: \"Recent\" | \"Pinned\" | \"Issued\",\r\n  IsInSupervisorRole: boolean,\r\n  HasRegisteredPlayerId: number,\r\n  HasAssets: boolean,\r\n  HasAssetCreation: boolean,\r\n  HasDocQrCodes: boolean,\r\n  HasHadWifiPreferenceChecked: boolean,\r\n  HasUpdateableDocs: boolean,\r\n  HasDocQueues: boolean,\r\n  HasCompanies: boolean,\r\n  HasDataTouchAreas: boolean,\r\n  HasQueueSupervisors: boolean,\r\n  HasCategoryActioners: boolean,\r\n  UserSites: Site[],\r\n  UserCompanies: Company[],\r\n  HasPlanningMeeting: boolean,\r\n  HasReviewMeeting: boolean,\r\n  HasCollabPlanning: boolean,\r\n  HasRandomOperativebarcodes: boolean,\r\n  HasLiveQueues: boolean,\r\n  HasResAreas:boolean,\r\n  HasHideOperativeScan: boolean,\r\n  HasSites: boolean,\r\n  HasDocDrop: boolean,\r\n  HasBasicOpInfo: boolean,\r\n  HasSimpleSwipes: boolean,\r\n  HasProjectsOnDocDrop: boolean,\r\n  HasCustomLookups: boolean,\r\n  HasTemplateSender: boolean,\r\n  HasMyOpInfo: boolean,\r\n  HasViewDocumentAsSinglePage: boolean,\r\n  HasShowParentAnswersOnChildDoc: boolean,\r\n  HasCompanySelectWithOtherOption:boolean,\r\n  HideSearchOnOperativeInfo: boolean,\r\n  HideSearchOnOperativeAccess: boolean,\r\n  CanAddOperativesToDocsByName: boolean,\r\n  HasRamsList: boolean,\r\n  CanAddAsssetsToDocsByName: boolean,\r\n  ShowWeightingsOnApp: boolean,\r\n  TemplatesLastUpdate: Date,\r\n  Url: string,\r\n  UseFingerReader: boolean,\r\n  SelectedSite?: Site,\r\n  NavTab: \"Modules\" | \"Documents\",\r\n  NumberOfTemplates: number,\r\n  DownloadedTemplates: number,\r\n  //PermittedCategories: DocCategory[],\r\n  HasOperativeInfo: boolean,\r\n  CanOffHireAssets: boolean,\r\n  CanViewOtherOperativeInfo: boolean,\r\n  CanModifyOperativeQRs: boolean,\r\n  CanAddQRsToAssets: boolean\r\n}\r\n\r\nexport interface Site {\r\n  Id: number,\r\n  Name: string\r\n}\r\n\r\nexport interface Company {\r\n  Id: number,\r\n  Name: string\r\n}\r\n\r\nexport interface Area {\r\n  Id: number,\r\n  SiteId: number,\r\n  Name: string\r\n}\r\n\r\nconst {\r\n  withAppUser, \r\n  selectAppUser, \r\n  setAppUser\r\n} = propsFactory(\"appUser\", { initialValue: null as User | null });\r\n\r\nconst store = createStore(\r\n  { name: \"user\" },\r\n  withAppUser()\r\n);\r\n\r\nconst userSelector = selector(store.pipe(selectAppUser()));\r\nconst sites$ = userSelector(user => user?.UserSites || []);\r\n\r\nconst setAppUserUpdate = pipeTap<User>(user => store.update(setAppUser(user)));\r\n\r\npersistState(store, {\r\n  key: \"user\",\r\n  storage: localStorageStrategy\r\n});\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class UserStore {\r\n  httpClient = inject(HttpClient);\r\n\r\n  user$ = store.pipe(selectAppUser());\r\n  sites$ = sites$;\r\n  companies$ = userSelector(user => user?.UserCompanies || []);\r\n\r\n  getUserRequest$ = (action$: Observable<{ token: string, pin: string }>) => combineLatest({\r\n    login: action$,\r\n    deviceId: getDeviceUuid(),\r\n    deviceString: getDeviceString() \r\n  }).pipe(\r\n    switchMap(({ login, deviceId, deviceString }) => this.httpClient.post<User>(`${environment.siteDocsApi}/LoginApi/LoginSiteDocumentsApp`, {\r\n      deviceId,\r\n      deviceString\r\n    }, {\r\n      headers: {\r\n        appToken: login.token,\r\n        appPin: login.pin\r\n      }\r\n    })),\r\n    setAppUserUpdate()\r\n  );\r\n}",
            "properties": [
                {
                    "name": "Id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 76
                },
                {
                    "name": "Name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 77
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "SiteDocument",
            "id": "interface-SiteDocument-fb56d08da6dcb5e38a9b83ed7cde99c4b1bdfdc334b06db1fab4473570caad69478c2c574d1e78cb27acdd0c8b9c6e0322b6bedf7d106dfa697e1fbbb514a67e",
            "file": "src/app/core/stores/site-document/models/site-document.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { PointGroup } from \"signature_pad\";\r\n\r\nexport interface SiteDocument {\r\n  DocumentID: number;\r\n  DocumentTitle: string;\r\n  Pinned: boolean;\r\n  Pages: Page[];\r\n  AllowAnon: boolean;\r\n  RemainAnon: boolean;\r\n  Queues: { Key: string, Value: string }[],\r\n  DocumentGroup: string;\r\n  DocumentCategory?: number;\r\n  CanCreateHotspot: boolean;\r\n  CanBeAddedToHotspot?: boolean;\r\n  CanBeSavedAsDraft?: boolean;\r\n  CanAddActionerFromApp: boolean;\r\n  CanAddCategoryActioner: boolean;\r\n  CanCreateAssetsFromDocument: boolean;\r\n  CanHaveQueueDuration: boolean;\r\n  CanHaveDocumentLevelImages: boolean;\r\n  CanHaveDocLevelPhotoRoll: boolean;\r\n  CurrentActionerOperativeID?: number;\r\n  CompanyActionerId?: number;\r\n  ShowDocLevelPhotoButtonAtStartOfDoc: boolean;\r\n  CanAddAsset?: boolean;\r\n  CanAddOperative?: boolean;\r\n  CanHaveCompanyActioner: boolean;\r\n  MetaData: Partial<SiteDocumentMetaData>;\r\n  SiteId?: number;\r\n  AutoQueueID?: number;\r\n  QueueDuration?: {\r\n    Value: number;\r\n    Type: string;\r\n  }\r\n}\r\n\r\nexport interface SiteDocumentImage {\r\n  DocumentId: number,\r\n  DocumentSubmissionId: number,\r\n  Base64: string,\r\n  ImageNo: number\r\n}\r\n\r\nexport interface SiteDocumentMetaData {\r\n  ActionerText: string;\r\n  CanBeEditableDocument: boolean;\r\n  CannotAddSelfAsActioner: boolean;\r\n  ColourHex: string;\r\n  QueueSelectorTitle: string;\r\n  HasSiteList: boolean;\r\n  SiteListTitle: string;\r\n  UsesRadioGroupTable: boolean;\r\n}\r\n\r\nexport interface SiteDocumentAsset {\r\n  AssetID: number;\r\n  Tag: string;\r\n  Name: string;\r\n  QRCode?: string;\r\n  TemplateID?: number;\r\n}\r\n\r\nexport interface SiteDocumentOperative {\r\n  AttendeeID: number;\r\n  Name: string;\r\n  DateAttended: Date;\r\n}\r\n\r\nexport interface Page {\r\n  PageID: number;\r\n  PageTitle: string;\r\n  Sections: Section[]\r\n}\r\n\r\nexport interface Section {\r\n  SectionID: number;\r\n  SectionNo: number;\r\n  SectionTitle: string;\r\n  Questions: Question[];\r\n  SectionQuestiontype: QuestionType;\r\n  IsRepeatable: boolean;\r\n  TableTitles: string[];\r\n}\r\n\r\nexport enum QuestionType {\r\n  Label = 0,\r\n  Checkbox = 1,\r\n  RadioGroup = 2,\r\n  Textbox = 3,\r\n  TextArea = 4,\r\n  Select = 5,\r\n  CheckboxTextbox = 6,\r\n  RadioGroupTextbox = 7,\r\n  Date = 8,\r\n  DateTime = 9,\r\n  OperativeList = 10,\r\n  WallOfText = 11,\r\n  Number = 12,\r\n  CascadeDropdown = 13,\r\n  LinkedBool = 16,\r\n  AssetList = 17,\r\n  LinkedDates = 18,\r\n  Signature = 19,\r\n  CompanySelect = 21,\r\n  AreaSelect = 22,\r\n  AssetGroupsAndTypes = 25,\r\n  AssetInspectionSchedule = 26,\r\n  ProjectSelect = 27,\r\n  RamsSelect = 28,\r\n  SelectText = 29,\r\n  CascadeDropdownText = 30,\r\n  MultiCascade = 31,\r\n  Time = 32,\r\n  LinkedTimes = 33,\r\n  HraSelect = 34,\r\n  MultiCheckbox = 35,\r\n  LinkedDateAndTime = 36\r\n}\r\n\r\nexport interface Question {\r\n  QuestionID: number;\r\n  QuestionText: string;\r\n  CascadeOptionsText: string;\r\n  CommentsText: string;\r\n  Assets: SiteDocumentAsset[];\r\n  Operatives: SiteDocumentOperative[];\r\n  Required: boolean;\r\n  AnswerText: string;\r\n  DateAndTime: Date;\r\n  DateAndTime2: Date;\r\n  NumberVal?: number;\r\n  OptionVal?: string | null;\r\n  Options: SelectOption[];\r\n  CascadeOptions: CascadeOption[];\r\n  CascadeOptionVal?: string | null;\r\n  YesNoNA: boolean | null;\r\n  CanHaveImg: boolean;\r\n  CanHaveFiles: boolean;\r\n  SignaturePoints?: PointGroup[];\r\n  ValidationData: ValidationData[];\r\n}\r\n\r\nexport interface ValidationData {\r\n  Key: \"Min\" | \"Max\",\r\n  Value: string,\r\n  Msg: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  Active?: boolean;\r\n  Text: string;\r\n  Val: string;\r\n  MetaData?: any;\r\n  OptionsMetadataJson?: string;\r\n}\r\n\r\nexport interface SelectOptionMetaData {\r\n  ColourHex?: string;\r\n}\r\n\r\nexport interface CascadeOption { \r\n  ParentVal: string, \r\n  Text: string, \r\n  Val: string \r\n}",
            "properties": [
                {
                    "name": "AllowAnon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "AutoQueueID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "CanAddActionerFromApp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "CanAddAsset",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "CanAddCategoryActioner",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "CanAddOperative",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "CanBeAddedToHotspot",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "CanBeSavedAsDraft",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "CanCreateAssetsFromDocument",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "CanCreateHotspot",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "CanHaveCompanyActioner",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "CanHaveDocLevelPhotoRoll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "CanHaveDocumentLevelImages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "CanHaveQueueDuration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "CompanyActionerId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "CurrentActionerOperativeID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "DocumentCategory",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "DocumentGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "DocumentID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "DocumentTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "MetaData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<SiteDocumentMetaData>",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "Pages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Page[]",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "Pinned",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "QueueDuration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": true,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "Queues",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "RemainAnon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "ShowDocLevelPhotoButtonAtStartOfDoc",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "SiteId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 29
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "SiteDocumentAsset",
            "id": "interface-SiteDocumentAsset-fb56d08da6dcb5e38a9b83ed7cde99c4b1bdfdc334b06db1fab4473570caad69478c2c574d1e78cb27acdd0c8b9c6e0322b6bedf7d106dfa697e1fbbb514a67e",
            "file": "src/app/core/stores/site-document/models/site-document.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { PointGroup } from \"signature_pad\";\r\n\r\nexport interface SiteDocument {\r\n  DocumentID: number;\r\n  DocumentTitle: string;\r\n  Pinned: boolean;\r\n  Pages: Page[];\r\n  AllowAnon: boolean;\r\n  RemainAnon: boolean;\r\n  Queues: { Key: string, Value: string }[],\r\n  DocumentGroup: string;\r\n  DocumentCategory?: number;\r\n  CanCreateHotspot: boolean;\r\n  CanBeAddedToHotspot?: boolean;\r\n  CanBeSavedAsDraft?: boolean;\r\n  CanAddActionerFromApp: boolean;\r\n  CanAddCategoryActioner: boolean;\r\n  CanCreateAssetsFromDocument: boolean;\r\n  CanHaveQueueDuration: boolean;\r\n  CanHaveDocumentLevelImages: boolean;\r\n  CanHaveDocLevelPhotoRoll: boolean;\r\n  CurrentActionerOperativeID?: number;\r\n  CompanyActionerId?: number;\r\n  ShowDocLevelPhotoButtonAtStartOfDoc: boolean;\r\n  CanAddAsset?: boolean;\r\n  CanAddOperative?: boolean;\r\n  CanHaveCompanyActioner: boolean;\r\n  MetaData: Partial<SiteDocumentMetaData>;\r\n  SiteId?: number;\r\n  AutoQueueID?: number;\r\n  QueueDuration?: {\r\n    Value: number;\r\n    Type: string;\r\n  }\r\n}\r\n\r\nexport interface SiteDocumentImage {\r\n  DocumentId: number,\r\n  DocumentSubmissionId: number,\r\n  Base64: string,\r\n  ImageNo: number\r\n}\r\n\r\nexport interface SiteDocumentMetaData {\r\n  ActionerText: string;\r\n  CanBeEditableDocument: boolean;\r\n  CannotAddSelfAsActioner: boolean;\r\n  ColourHex: string;\r\n  QueueSelectorTitle: string;\r\n  HasSiteList: boolean;\r\n  SiteListTitle: string;\r\n  UsesRadioGroupTable: boolean;\r\n}\r\n\r\nexport interface SiteDocumentAsset {\r\n  AssetID: number;\r\n  Tag: string;\r\n  Name: string;\r\n  QRCode?: string;\r\n  TemplateID?: number;\r\n}\r\n\r\nexport interface SiteDocumentOperative {\r\n  AttendeeID: number;\r\n  Name: string;\r\n  DateAttended: Date;\r\n}\r\n\r\nexport interface Page {\r\n  PageID: number;\r\n  PageTitle: string;\r\n  Sections: Section[]\r\n}\r\n\r\nexport interface Section {\r\n  SectionID: number;\r\n  SectionNo: number;\r\n  SectionTitle: string;\r\n  Questions: Question[];\r\n  SectionQuestiontype: QuestionType;\r\n  IsRepeatable: boolean;\r\n  TableTitles: string[];\r\n}\r\n\r\nexport enum QuestionType {\r\n  Label = 0,\r\n  Checkbox = 1,\r\n  RadioGroup = 2,\r\n  Textbox = 3,\r\n  TextArea = 4,\r\n  Select = 5,\r\n  CheckboxTextbox = 6,\r\n  RadioGroupTextbox = 7,\r\n  Date = 8,\r\n  DateTime = 9,\r\n  OperativeList = 10,\r\n  WallOfText = 11,\r\n  Number = 12,\r\n  CascadeDropdown = 13,\r\n  LinkedBool = 16,\r\n  AssetList = 17,\r\n  LinkedDates = 18,\r\n  Signature = 19,\r\n  CompanySelect = 21,\r\n  AreaSelect = 22,\r\n  AssetGroupsAndTypes = 25,\r\n  AssetInspectionSchedule = 26,\r\n  ProjectSelect = 27,\r\n  RamsSelect = 28,\r\n  SelectText = 29,\r\n  CascadeDropdownText = 30,\r\n  MultiCascade = 31,\r\n  Time = 32,\r\n  LinkedTimes = 33,\r\n  HraSelect = 34,\r\n  MultiCheckbox = 35,\r\n  LinkedDateAndTime = 36\r\n}\r\n\r\nexport interface Question {\r\n  QuestionID: number;\r\n  QuestionText: string;\r\n  CascadeOptionsText: string;\r\n  CommentsText: string;\r\n  Assets: SiteDocumentAsset[];\r\n  Operatives: SiteDocumentOperative[];\r\n  Required: boolean;\r\n  AnswerText: string;\r\n  DateAndTime: Date;\r\n  DateAndTime2: Date;\r\n  NumberVal?: number;\r\n  OptionVal?: string | null;\r\n  Options: SelectOption[];\r\n  CascadeOptions: CascadeOption[];\r\n  CascadeOptionVal?: string | null;\r\n  YesNoNA: boolean | null;\r\n  CanHaveImg: boolean;\r\n  CanHaveFiles: boolean;\r\n  SignaturePoints?: PointGroup[];\r\n  ValidationData: ValidationData[];\r\n}\r\n\r\nexport interface ValidationData {\r\n  Key: \"Min\" | \"Max\",\r\n  Value: string,\r\n  Msg: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  Active?: boolean;\r\n  Text: string;\r\n  Val: string;\r\n  MetaData?: any;\r\n  OptionsMetadataJson?: string;\r\n}\r\n\r\nexport interface SelectOptionMetaData {\r\n  ColourHex?: string;\r\n}\r\n\r\nexport interface CascadeOption { \r\n  ParentVal: string, \r\n  Text: string, \r\n  Val: string \r\n}",
            "properties": [
                {
                    "name": "AssetID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "Name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "QRCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 59
                },
                {
                    "name": "Tag",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "TemplateID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 60
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "SiteDocumentImage",
            "id": "interface-SiteDocumentImage-fb56d08da6dcb5e38a9b83ed7cde99c4b1bdfdc334b06db1fab4473570caad69478c2c574d1e78cb27acdd0c8b9c6e0322b6bedf7d106dfa697e1fbbb514a67e",
            "file": "src/app/core/stores/site-document/models/site-document.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { PointGroup } from \"signature_pad\";\r\n\r\nexport interface SiteDocument {\r\n  DocumentID: number;\r\n  DocumentTitle: string;\r\n  Pinned: boolean;\r\n  Pages: Page[];\r\n  AllowAnon: boolean;\r\n  RemainAnon: boolean;\r\n  Queues: { Key: string, Value: string }[],\r\n  DocumentGroup: string;\r\n  DocumentCategory?: number;\r\n  CanCreateHotspot: boolean;\r\n  CanBeAddedToHotspot?: boolean;\r\n  CanBeSavedAsDraft?: boolean;\r\n  CanAddActionerFromApp: boolean;\r\n  CanAddCategoryActioner: boolean;\r\n  CanCreateAssetsFromDocument: boolean;\r\n  CanHaveQueueDuration: boolean;\r\n  CanHaveDocumentLevelImages: boolean;\r\n  CanHaveDocLevelPhotoRoll: boolean;\r\n  CurrentActionerOperativeID?: number;\r\n  CompanyActionerId?: number;\r\n  ShowDocLevelPhotoButtonAtStartOfDoc: boolean;\r\n  CanAddAsset?: boolean;\r\n  CanAddOperative?: boolean;\r\n  CanHaveCompanyActioner: boolean;\r\n  MetaData: Partial<SiteDocumentMetaData>;\r\n  SiteId?: number;\r\n  AutoQueueID?: number;\r\n  QueueDuration?: {\r\n    Value: number;\r\n    Type: string;\r\n  }\r\n}\r\n\r\nexport interface SiteDocumentImage {\r\n  DocumentId: number,\r\n  DocumentSubmissionId: number,\r\n  Base64: string,\r\n  ImageNo: number\r\n}\r\n\r\nexport interface SiteDocumentMetaData {\r\n  ActionerText: string;\r\n  CanBeEditableDocument: boolean;\r\n  CannotAddSelfAsActioner: boolean;\r\n  ColourHex: string;\r\n  QueueSelectorTitle: string;\r\n  HasSiteList: boolean;\r\n  SiteListTitle: string;\r\n  UsesRadioGroupTable: boolean;\r\n}\r\n\r\nexport interface SiteDocumentAsset {\r\n  AssetID: number;\r\n  Tag: string;\r\n  Name: string;\r\n  QRCode?: string;\r\n  TemplateID?: number;\r\n}\r\n\r\nexport interface SiteDocumentOperative {\r\n  AttendeeID: number;\r\n  Name: string;\r\n  DateAttended: Date;\r\n}\r\n\r\nexport interface Page {\r\n  PageID: number;\r\n  PageTitle: string;\r\n  Sections: Section[]\r\n}\r\n\r\nexport interface Section {\r\n  SectionID: number;\r\n  SectionNo: number;\r\n  SectionTitle: string;\r\n  Questions: Question[];\r\n  SectionQuestiontype: QuestionType;\r\n  IsRepeatable: boolean;\r\n  TableTitles: string[];\r\n}\r\n\r\nexport enum QuestionType {\r\n  Label = 0,\r\n  Checkbox = 1,\r\n  RadioGroup = 2,\r\n  Textbox = 3,\r\n  TextArea = 4,\r\n  Select = 5,\r\n  CheckboxTextbox = 6,\r\n  RadioGroupTextbox = 7,\r\n  Date = 8,\r\n  DateTime = 9,\r\n  OperativeList = 10,\r\n  WallOfText = 11,\r\n  Number = 12,\r\n  CascadeDropdown = 13,\r\n  LinkedBool = 16,\r\n  AssetList = 17,\r\n  LinkedDates = 18,\r\n  Signature = 19,\r\n  CompanySelect = 21,\r\n  AreaSelect = 22,\r\n  AssetGroupsAndTypes = 25,\r\n  AssetInspectionSchedule = 26,\r\n  ProjectSelect = 27,\r\n  RamsSelect = 28,\r\n  SelectText = 29,\r\n  CascadeDropdownText = 30,\r\n  MultiCascade = 31,\r\n  Time = 32,\r\n  LinkedTimes = 33,\r\n  HraSelect = 34,\r\n  MultiCheckbox = 35,\r\n  LinkedDateAndTime = 36\r\n}\r\n\r\nexport interface Question {\r\n  QuestionID: number;\r\n  QuestionText: string;\r\n  CascadeOptionsText: string;\r\n  CommentsText: string;\r\n  Assets: SiteDocumentAsset[];\r\n  Operatives: SiteDocumentOperative[];\r\n  Required: boolean;\r\n  AnswerText: string;\r\n  DateAndTime: Date;\r\n  DateAndTime2: Date;\r\n  NumberVal?: number;\r\n  OptionVal?: string | null;\r\n  Options: SelectOption[];\r\n  CascadeOptions: CascadeOption[];\r\n  CascadeOptionVal?: string | null;\r\n  YesNoNA: boolean | null;\r\n  CanHaveImg: boolean;\r\n  CanHaveFiles: boolean;\r\n  SignaturePoints?: PointGroup[];\r\n  ValidationData: ValidationData[];\r\n}\r\n\r\nexport interface ValidationData {\r\n  Key: \"Min\" | \"Max\",\r\n  Value: string,\r\n  Msg: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  Active?: boolean;\r\n  Text: string;\r\n  Val: string;\r\n  MetaData?: any;\r\n  OptionsMetadataJson?: string;\r\n}\r\n\r\nexport interface SelectOptionMetaData {\r\n  ColourHex?: string;\r\n}\r\n\r\nexport interface CascadeOption { \r\n  ParentVal: string, \r\n  Text: string, \r\n  Val: string \r\n}",
            "properties": [
                {
                    "name": "Base64",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "DocumentId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "DocumentSubmissionId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "ImageNo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 41
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "SiteDocumentMetaData",
            "id": "interface-SiteDocumentMetaData-fb56d08da6dcb5e38a9b83ed7cde99c4b1bdfdc334b06db1fab4473570caad69478c2c574d1e78cb27acdd0c8b9c6e0322b6bedf7d106dfa697e1fbbb514a67e",
            "file": "src/app/core/stores/site-document/models/site-document.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { PointGroup } from \"signature_pad\";\r\n\r\nexport interface SiteDocument {\r\n  DocumentID: number;\r\n  DocumentTitle: string;\r\n  Pinned: boolean;\r\n  Pages: Page[];\r\n  AllowAnon: boolean;\r\n  RemainAnon: boolean;\r\n  Queues: { Key: string, Value: string }[],\r\n  DocumentGroup: string;\r\n  DocumentCategory?: number;\r\n  CanCreateHotspot: boolean;\r\n  CanBeAddedToHotspot?: boolean;\r\n  CanBeSavedAsDraft?: boolean;\r\n  CanAddActionerFromApp: boolean;\r\n  CanAddCategoryActioner: boolean;\r\n  CanCreateAssetsFromDocument: boolean;\r\n  CanHaveQueueDuration: boolean;\r\n  CanHaveDocumentLevelImages: boolean;\r\n  CanHaveDocLevelPhotoRoll: boolean;\r\n  CurrentActionerOperativeID?: number;\r\n  CompanyActionerId?: number;\r\n  ShowDocLevelPhotoButtonAtStartOfDoc: boolean;\r\n  CanAddAsset?: boolean;\r\n  CanAddOperative?: boolean;\r\n  CanHaveCompanyActioner: boolean;\r\n  MetaData: Partial<SiteDocumentMetaData>;\r\n  SiteId?: number;\r\n  AutoQueueID?: number;\r\n  QueueDuration?: {\r\n    Value: number;\r\n    Type: string;\r\n  }\r\n}\r\n\r\nexport interface SiteDocumentImage {\r\n  DocumentId: number,\r\n  DocumentSubmissionId: number,\r\n  Base64: string,\r\n  ImageNo: number\r\n}\r\n\r\nexport interface SiteDocumentMetaData {\r\n  ActionerText: string;\r\n  CanBeEditableDocument: boolean;\r\n  CannotAddSelfAsActioner: boolean;\r\n  ColourHex: string;\r\n  QueueSelectorTitle: string;\r\n  HasSiteList: boolean;\r\n  SiteListTitle: string;\r\n  UsesRadioGroupTable: boolean;\r\n}\r\n\r\nexport interface SiteDocumentAsset {\r\n  AssetID: number;\r\n  Tag: string;\r\n  Name: string;\r\n  QRCode?: string;\r\n  TemplateID?: number;\r\n}\r\n\r\nexport interface SiteDocumentOperative {\r\n  AttendeeID: number;\r\n  Name: string;\r\n  DateAttended: Date;\r\n}\r\n\r\nexport interface Page {\r\n  PageID: number;\r\n  PageTitle: string;\r\n  Sections: Section[]\r\n}\r\n\r\nexport interface Section {\r\n  SectionID: number;\r\n  SectionNo: number;\r\n  SectionTitle: string;\r\n  Questions: Question[];\r\n  SectionQuestiontype: QuestionType;\r\n  IsRepeatable: boolean;\r\n  TableTitles: string[];\r\n}\r\n\r\nexport enum QuestionType {\r\n  Label = 0,\r\n  Checkbox = 1,\r\n  RadioGroup = 2,\r\n  Textbox = 3,\r\n  TextArea = 4,\r\n  Select = 5,\r\n  CheckboxTextbox = 6,\r\n  RadioGroupTextbox = 7,\r\n  Date = 8,\r\n  DateTime = 9,\r\n  OperativeList = 10,\r\n  WallOfText = 11,\r\n  Number = 12,\r\n  CascadeDropdown = 13,\r\n  LinkedBool = 16,\r\n  AssetList = 17,\r\n  LinkedDates = 18,\r\n  Signature = 19,\r\n  CompanySelect = 21,\r\n  AreaSelect = 22,\r\n  AssetGroupsAndTypes = 25,\r\n  AssetInspectionSchedule = 26,\r\n  ProjectSelect = 27,\r\n  RamsSelect = 28,\r\n  SelectText = 29,\r\n  CascadeDropdownText = 30,\r\n  MultiCascade = 31,\r\n  Time = 32,\r\n  LinkedTimes = 33,\r\n  HraSelect = 34,\r\n  MultiCheckbox = 35,\r\n  LinkedDateAndTime = 36\r\n}\r\n\r\nexport interface Question {\r\n  QuestionID: number;\r\n  QuestionText: string;\r\n  CascadeOptionsText: string;\r\n  CommentsText: string;\r\n  Assets: SiteDocumentAsset[];\r\n  Operatives: SiteDocumentOperative[];\r\n  Required: boolean;\r\n  AnswerText: string;\r\n  DateAndTime: Date;\r\n  DateAndTime2: Date;\r\n  NumberVal?: number;\r\n  OptionVal?: string | null;\r\n  Options: SelectOption[];\r\n  CascadeOptions: CascadeOption[];\r\n  CascadeOptionVal?: string | null;\r\n  YesNoNA: boolean | null;\r\n  CanHaveImg: boolean;\r\n  CanHaveFiles: boolean;\r\n  SignaturePoints?: PointGroup[];\r\n  ValidationData: ValidationData[];\r\n}\r\n\r\nexport interface ValidationData {\r\n  Key: \"Min\" | \"Max\",\r\n  Value: string,\r\n  Msg: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  Active?: boolean;\r\n  Text: string;\r\n  Val: string;\r\n  MetaData?: any;\r\n  OptionsMetadataJson?: string;\r\n}\r\n\r\nexport interface SelectOptionMetaData {\r\n  ColourHex?: string;\r\n}\r\n\r\nexport interface CascadeOption { \r\n  ParentVal: string, \r\n  Text: string, \r\n  Val: string \r\n}",
            "properties": [
                {
                    "name": "ActionerText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "CanBeEditableDocument",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "CannotAddSelfAsActioner",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "ColourHex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "HasSiteList",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "QueueSelectorTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "SiteListTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "UsesRadioGroupTable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 52
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "SiteDocumentOperative",
            "id": "interface-SiteDocumentOperative-fb56d08da6dcb5e38a9b83ed7cde99c4b1bdfdc334b06db1fab4473570caad69478c2c574d1e78cb27acdd0c8b9c6e0322b6bedf7d106dfa697e1fbbb514a67e",
            "file": "src/app/core/stores/site-document/models/site-document.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { PointGroup } from \"signature_pad\";\r\n\r\nexport interface SiteDocument {\r\n  DocumentID: number;\r\n  DocumentTitle: string;\r\n  Pinned: boolean;\r\n  Pages: Page[];\r\n  AllowAnon: boolean;\r\n  RemainAnon: boolean;\r\n  Queues: { Key: string, Value: string }[],\r\n  DocumentGroup: string;\r\n  DocumentCategory?: number;\r\n  CanCreateHotspot: boolean;\r\n  CanBeAddedToHotspot?: boolean;\r\n  CanBeSavedAsDraft?: boolean;\r\n  CanAddActionerFromApp: boolean;\r\n  CanAddCategoryActioner: boolean;\r\n  CanCreateAssetsFromDocument: boolean;\r\n  CanHaveQueueDuration: boolean;\r\n  CanHaveDocumentLevelImages: boolean;\r\n  CanHaveDocLevelPhotoRoll: boolean;\r\n  CurrentActionerOperativeID?: number;\r\n  CompanyActionerId?: number;\r\n  ShowDocLevelPhotoButtonAtStartOfDoc: boolean;\r\n  CanAddAsset?: boolean;\r\n  CanAddOperative?: boolean;\r\n  CanHaveCompanyActioner: boolean;\r\n  MetaData: Partial<SiteDocumentMetaData>;\r\n  SiteId?: number;\r\n  AutoQueueID?: number;\r\n  QueueDuration?: {\r\n    Value: number;\r\n    Type: string;\r\n  }\r\n}\r\n\r\nexport interface SiteDocumentImage {\r\n  DocumentId: number,\r\n  DocumentSubmissionId: number,\r\n  Base64: string,\r\n  ImageNo: number\r\n}\r\n\r\nexport interface SiteDocumentMetaData {\r\n  ActionerText: string;\r\n  CanBeEditableDocument: boolean;\r\n  CannotAddSelfAsActioner: boolean;\r\n  ColourHex: string;\r\n  QueueSelectorTitle: string;\r\n  HasSiteList: boolean;\r\n  SiteListTitle: string;\r\n  UsesRadioGroupTable: boolean;\r\n}\r\n\r\nexport interface SiteDocumentAsset {\r\n  AssetID: number;\r\n  Tag: string;\r\n  Name: string;\r\n  QRCode?: string;\r\n  TemplateID?: number;\r\n}\r\n\r\nexport interface SiteDocumentOperative {\r\n  AttendeeID: number;\r\n  Name: string;\r\n  DateAttended: Date;\r\n}\r\n\r\nexport interface Page {\r\n  PageID: number;\r\n  PageTitle: string;\r\n  Sections: Section[]\r\n}\r\n\r\nexport interface Section {\r\n  SectionID: number;\r\n  SectionNo: number;\r\n  SectionTitle: string;\r\n  Questions: Question[];\r\n  SectionQuestiontype: QuestionType;\r\n  IsRepeatable: boolean;\r\n  TableTitles: string[];\r\n}\r\n\r\nexport enum QuestionType {\r\n  Label = 0,\r\n  Checkbox = 1,\r\n  RadioGroup = 2,\r\n  Textbox = 3,\r\n  TextArea = 4,\r\n  Select = 5,\r\n  CheckboxTextbox = 6,\r\n  RadioGroupTextbox = 7,\r\n  Date = 8,\r\n  DateTime = 9,\r\n  OperativeList = 10,\r\n  WallOfText = 11,\r\n  Number = 12,\r\n  CascadeDropdown = 13,\r\n  LinkedBool = 16,\r\n  AssetList = 17,\r\n  LinkedDates = 18,\r\n  Signature = 19,\r\n  CompanySelect = 21,\r\n  AreaSelect = 22,\r\n  AssetGroupsAndTypes = 25,\r\n  AssetInspectionSchedule = 26,\r\n  ProjectSelect = 27,\r\n  RamsSelect = 28,\r\n  SelectText = 29,\r\n  CascadeDropdownText = 30,\r\n  MultiCascade = 31,\r\n  Time = 32,\r\n  LinkedTimes = 33,\r\n  HraSelect = 34,\r\n  MultiCheckbox = 35,\r\n  LinkedDateAndTime = 36\r\n}\r\n\r\nexport interface Question {\r\n  QuestionID: number;\r\n  QuestionText: string;\r\n  CascadeOptionsText: string;\r\n  CommentsText: string;\r\n  Assets: SiteDocumentAsset[];\r\n  Operatives: SiteDocumentOperative[];\r\n  Required: boolean;\r\n  AnswerText: string;\r\n  DateAndTime: Date;\r\n  DateAndTime2: Date;\r\n  NumberVal?: number;\r\n  OptionVal?: string | null;\r\n  Options: SelectOption[];\r\n  CascadeOptions: CascadeOption[];\r\n  CascadeOptionVal?: string | null;\r\n  YesNoNA: boolean | null;\r\n  CanHaveImg: boolean;\r\n  CanHaveFiles: boolean;\r\n  SignaturePoints?: PointGroup[];\r\n  ValidationData: ValidationData[];\r\n}\r\n\r\nexport interface ValidationData {\r\n  Key: \"Min\" | \"Max\",\r\n  Value: string,\r\n  Msg: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  Active?: boolean;\r\n  Text: string;\r\n  Val: string;\r\n  MetaData?: any;\r\n  OptionsMetadataJson?: string;\r\n}\r\n\r\nexport interface SelectOptionMetaData {\r\n  ColourHex?: string;\r\n}\r\n\r\nexport interface CascadeOption { \r\n  ParentVal: string, \r\n  Text: string, \r\n  Val: string \r\n}",
            "properties": [
                {
                    "name": "AttendeeID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 64
                },
                {
                    "name": "DateAttended",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 66
                },
                {
                    "name": "Name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 65
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "TargetEvent",
            "id": "interface-TargetEvent-d8ce4e5a23f6985bd019f1bec5424336d6270524c10493fcde06ec6a16c08d27300fc7b01504d272ab1fb52cc4f4bd58ae56bdfe79d6250aafbf2aa964c4e293",
            "file": "src/app/shared/models/events/target-event.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface TargetEvent<T> {\r\n  target: T\r\n}\r\n",
            "properties": [
                {
                    "name": "target",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "TemplateItem",
            "id": "interface-TemplateItem-c11bea9e2e3a73af489915b8a5ef33e114ecb863592086aeab6d2de6f4d7a56b5dab9db6ea8bb9769ee8ace63c87209979df2cf415d4f232c7635a132045b982",
            "file": "src/app/core/http/template.api.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable, inject } from \"@angular/core\";\r\nimport { SiteDocument } from \"../stores/site-document/models\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { EMPTY, Subject, expand, map, mergeMap, reduce } from \"rxjs\";\r\nimport { memoize, orderBy } from \"lodash-es\";\r\nimport { createApi } from \"./create-api\";\r\nimport { track } from \"src/app/shared/rxjs\";\r\n\r\nexport interface TemplateItem {\r\n  Id: number,\r\n  Title: string\r\n}\r\n\r\nexport interface PaginatedList<T> {\r\n  Items: T[],\r\n  PageNumber: number,\r\n  TotalPage: number,\r\n  TotalCount: number,\r\n  HasPreviousPage: boolean,\r\n  HasNextPage: boolean\r\n}\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class TemplateApi {\r\n  protected httpClient = inject(HttpClient);\r\n\r\n  getTemplates() {\r\n    return this.httpClient.get<PaginatedList<SiteDocument>>(`${environment.siteDocsApi}/TemplateApi/GetLatestTemplatesWithPagination`, {\r\n      params: {\r\n        pageNumber: 1,\r\n        pageSize: 20\r\n      }\r\n    }).pipe(\r\n      expand((res, idx) => res.HasNextPage\r\n        ? this.httpClient.get<PaginatedList<SiteDocument>>(`${environment.siteDocsApi}/TemplateApi/GetLatestTemplatesWithPagination`, {\r\n          params: {\r\n            pageNumber: idx + 2,\r\n            pageSize: 20\r\n          }\r\n        })\r\n        : EMPTY\r\n      ),\r\n      map(res => res.Items),\r\n      reduce((acc, docs) => [...acc, ...docs]),\r\n      map(tpls => orderBy(tpls, \"DocumentTitle\"))\r\n    )\r\n  }\r\n\r\n  getTemplate(params: { id: number }) {\r\n    return this.httpClient.get<SiteDocument>(`${environment.siteDocsApi}/TemplateApi/GetDocumentTemplate`, {\r\n      params: {\r\n        id: params.id.toString()\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport const useTemplateApi = createApi({\r\n  baseUrl: `${environment.siteDocsApi}/TemplateApi`,\r\n  endpoints: ({ get }) => ({\r\n    getAllTemplates: get<TemplateItem[]>(\"GetAllTemplates\"),\r\n    getTemplate: get<SiteDocument, { id: number }>(\"GetDocumentTemplate\"),\r\n  })\r\n});\r\n\r\nexport const useAllTemplates = memoize(() => {\r\n  const { getAllTemplates } = useTemplateApi();\r\n\r\n  return track(() => getAllTemplates());\r\n});\r\n\r\nexport function useTemplate() {\r\n  const { getTemplate } = useTemplateApi();\r\n  const params$ = new Subject<{ id: number }>();\r\n  \r\n  const template = track(() => params$.pipe(\r\n    mergeMap(params => getTemplate(params))\r\n  ));\r\n\r\n  return {\r\n    ...template,\r\n    fetch: (params: { id: number }) => params$.next(params)\r\n  }\r\n}",
            "properties": [
                {
                    "name": "Id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "Title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "TemplateMenuItem",
            "id": "interface-TemplateMenuItem-c2be98fffa7ec3ef9d374c97515526030466fc8b8f692ec4c721d9c75e06b55b91db2588bc54399f129804f9964bc9e7d2971d09806048451193ca2c25e1224b",
            "file": "src/app/core/stores/site-document/form-filler/form-filler.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\r\nimport { inject, Injectable } from \"@angular/core\";\r\nimport { createStore } from \"@ngneat/elf\";\r\nimport { entitiesPropsFactory } from \"@ngneat/elf-entities\";\r\nimport { Observable, switchMap } from \"rxjs\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { withWritingDocument } from \"../props\";\r\nimport { writingDocumentAdapter } from \"../adapters/writing-document.adapter\";\r\nimport { SiteDocument } from \"../models\";\r\n\r\nexport interface TemplateMenuItem {\r\n  Id: number;\r\n  Title: string;\r\n  SiteDocumentType: number;\r\n  RevNo: number;\r\n}\r\n\r\nconst { withTemplateMenuEntities } = entitiesPropsFactory(\"templateMenu\");\r\n\r\nconst store = createStore(\r\n  { name: \"form-filler\" },\r\n  withWritingDocument(null as SiteDocument | null),\r\n  withTemplateMenuEntities<TemplateMenuItem, \"Id\">({ idKey: \"Id\", initialValue: [] })\r\n);\r\n\r\nconst { \r\n  selectWritingDocument, \r\n  setWritingDocument \r\n} = writingDocumentAdapter(store);\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class FormFillerStore {\r\n  protected http = inject(HttpClient);\r\n\r\n  writingDocument$ = selectWritingDocument();\r\n\r\n  getTemplateRequest$ = (action$: Observable<number>) => action$.pipe(\r\n    switchMap(id => this.http.get<SiteDocument>(`${environment.siteDocsApi}/TemplateApi/GetDocumentTemplate`, {\r\n      params: {\r\n        id: id!.toString()\r\n      }\r\n    })),\r\n    setWritingDocument()\r\n  );\r\n\r\n  getTemplatesRequest$ = () => this.http.get<SiteDocument[]>(`${environment.siteDocsApi}/TemplateApi/`).pipe(\r\n    \r\n  );\r\n\r\n  submitDocument$ = (action$: Observable<SiteDocument>) => action$.pipe(\r\n    switchMap(doc => this.http.post<number>(`${environment.siteDocsApi}/TemplateApi/UploadDocument`, doc))\r\n  );\r\n}",
            "properties": [
                {
                    "name": "Id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "RevNo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "SiteDocumentType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "Title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "TemplateMenuItem",
            "id": "interface-TemplateMenuItem-c86354364b6b3d193563e8480ebd82ec9f5afd4b337ff3335f21f07773abf5051d3e7e713c849024a59fc6b33242400400e65266ffa8e384125d7cbc99ddda10-1",
            "file": "src/app/core/stores/site-document/form-filler/adapters/template-menu.adapter.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Store, StoreDef } from \"@ngneat/elf\";\r\nimport { entitiesPropsFactory, selectAllEntities, setEntities } from \"@ngneat/elf-entities\";\r\nimport { pipeTap } from \"src/app/shared/rxjs\";\r\n\r\nexport interface TemplateMenuItem {\r\n  Id: number;\r\n  Title: string;\r\n  SiteDocumentType: number;\r\n  RevNo: number;\r\n}\r\n\r\nconst { templateMenuEntitiesRef, withTemplateMenuEntities } = entitiesPropsFactory(\"templateMenu\");\r\n\r\nexport { withTemplateMenuEntities }\r\n\r\nexport function templateMenuAdapter(store: Store<StoreDef>) {\r\n  return {\r\n    selectTemplateMenu: () => store.pipe(selectAllEntities({ ref: templateMenuEntitiesRef })),\r\n    setTemplateMenu: pipeTap<TemplateMenuItem[]>(templates => store.update(setEntities(templates, { ref: templateMenuEntitiesRef })))\r\n  }\r\n}",
            "properties": [
                {
                    "name": "Id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "RevNo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "SiteDocumentType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "Title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "TemplateMenuItem-1"
        },
        {
            "name": "Tracking",
            "id": "interface-Tracking-e73ab1f15cf76ead750cf226f5b530ae3792bcae72d50680acbd7df194c45a24721b5f5d3e23977b0a2dd605b840253ec598cda8a1ac39be608d3b981adb3cd5",
            "file": "src/app/shared/rxjs/track.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { EMPTY, Observable, catchError, merge, mergeMap, shareReplay, tap } from \"rxjs\";\r\nimport { use, UseOf, UsePipe, createPipe } from \"../rxjs\";\r\n\r\nexport type TrackingStatus = \"Idle\" | \"Success\" | \"Error\" | \"Loading\";\r\n\r\nexport interface Tracking<T> {\r\n  status: UseOf<TrackingStatus>,\r\n  error: UseOf<unknown>,\r\n  data: UsePipe<T>\r\n  isIdle: UsePipe<boolean>,\r\n  isSuccess: UsePipe<boolean>,\r\n  isError: UsePipe<boolean>,\r\n  isLoading: UsePipe<boolean>\r\n}\r\n\r\nexport interface TrackingOptions<TParams, TResult> {\r\n  deps: Observable<TParams>[],\r\n  fn: (params: TParams) => Observable<TResult>\r\n}\r\n\r\nexport function track<TResult>(fn: () => Observable<TResult>): Tracking<TResult>;\r\nexport function track<TParams, TResult>(options: TrackingOptions<TParams, TResult>): Tracking<TResult>;\r\nexport function track<TParams, TResult>(param: TrackingOptions<TParams, TResult> | (() => Observable<TResult>)): Tracking<TResult> {\r\n  const status = use<TrackingStatus>(\"Idle\");\r\n  const error = use<unknown>();\r\n  const trackingFn = typeof param === \"function\" \r\n    ? () => {\r\n      status.next(\"Loading\");\r\n      return param();\r\n    }\r\n    : () => merge(...param.deps).pipe(\r\n      tap(() => status.next(\"Loading\")),\r\n      mergeMap(params => param.fn(params))\r\n    );\r\n    \r\n\r\n  return {\r\n    status,\r\n    data: createPipe(trackingFn().pipe(\r\n      tap(() => {\r\n        status.next(\"Success\");\r\n      }),\r\n      catchError((err) => {\r\n        status.next(\"Error\");\r\n        error.next(err);\r\n\r\n        return EMPTY;\r\n      }),\r\n      shareReplay()\r\n    )),\r\n    error,\r\n    isIdle: status(s => s === \"Idle\"),\r\n    isSuccess: status(s => s === \"Success\"),\r\n    isError: status(s => s === \"Error\"),\r\n    isLoading: status(s => s === \"Loading\")\r\n  }\r\n\r\n}",
            "properties": [
                {
                    "name": "data",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UsePipe<T>",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "error",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UseOf<>",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "isError",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UsePipe<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "isIdle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UsePipe<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "isLoading",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UsePipe<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "isSuccess",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UsePipe<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "status",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "UseOf<TrackingStatus>",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "TrackingOptions",
            "id": "interface-TrackingOptions-e73ab1f15cf76ead750cf226f5b530ae3792bcae72d50680acbd7df194c45a24721b5f5d3e23977b0a2dd605b840253ec598cda8a1ac39be608d3b981adb3cd5",
            "file": "src/app/shared/rxjs/track.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { EMPTY, Observable, catchError, merge, mergeMap, shareReplay, tap } from \"rxjs\";\r\nimport { use, UseOf, UsePipe, createPipe } from \"../rxjs\";\r\n\r\nexport type TrackingStatus = \"Idle\" | \"Success\" | \"Error\" | \"Loading\";\r\n\r\nexport interface Tracking<T> {\r\n  status: UseOf<TrackingStatus>,\r\n  error: UseOf<unknown>,\r\n  data: UsePipe<T>\r\n  isIdle: UsePipe<boolean>,\r\n  isSuccess: UsePipe<boolean>,\r\n  isError: UsePipe<boolean>,\r\n  isLoading: UsePipe<boolean>\r\n}\r\n\r\nexport interface TrackingOptions<TParams, TResult> {\r\n  deps: Observable<TParams>[],\r\n  fn: (params: TParams) => Observable<TResult>\r\n}\r\n\r\nexport function track<TResult>(fn: () => Observable<TResult>): Tracking<TResult>;\r\nexport function track<TParams, TResult>(options: TrackingOptions<TParams, TResult>): Tracking<TResult>;\r\nexport function track<TParams, TResult>(param: TrackingOptions<TParams, TResult> | (() => Observable<TResult>)): Tracking<TResult> {\r\n  const status = use<TrackingStatus>(\"Idle\");\r\n  const error = use<unknown>();\r\n  const trackingFn = typeof param === \"function\" \r\n    ? () => {\r\n      status.next(\"Loading\");\r\n      return param();\r\n    }\r\n    : () => merge(...param.deps).pipe(\r\n      tap(() => status.next(\"Loading\")),\r\n      mergeMap(params => param.fn(params))\r\n    );\r\n    \r\n\r\n  return {\r\n    status,\r\n    data: createPipe(trackingFn().pipe(\r\n      tap(() => {\r\n        status.next(\"Success\");\r\n      }),\r\n      catchError((err) => {\r\n        status.next(\"Error\");\r\n        error.next(err);\r\n\r\n        return EMPTY;\r\n      }),\r\n      shareReplay()\r\n    )),\r\n    error,\r\n    isIdle: status(s => s === \"Idle\"),\r\n    isSuccess: status(s => s === \"Success\"),\r\n    isError: status(s => s === \"Error\"),\r\n    isLoading: status(s => s === \"Loading\")\r\n  }\r\n\r\n}",
            "properties": [
                {
                    "name": "deps",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<TParams>[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "fn",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 18
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "User",
            "id": "interface-User-853a61b57e97b1015338c1b3ad545ff7256fef0ca9acee4db5fd449e1c7e81fa68592cbea8c7e1b7dbac8501a6598d2487ebbfe41af8e6a90d93a03da6fa4117",
            "file": "src/app/core/stores/user/user.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\r\nimport { inject, Injectable } from \"@angular/core\";\r\nimport { createStore, propsFactory } from \"@ngneat/elf\";\r\nimport { localStorageStrategy, persistState } from \"@ngneat/elf-persist-state\";\r\nimport { combineLatest, Observable, switchMap } from \"rxjs\";\r\nimport { getDeviceString, getDeviceUuid } from \"src/app/shared/plugins/device.plugin\";\r\nimport { pipeTap, selector } from \"src/app/shared/rxjs\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\nexport interface User {\r\n  Id: number,\r\n  LastName: string,\r\n  FirstName: string,\r\n  CompanyId: number,\r\n  CompanyName: string,\r\n  Colour: string,\r\n  FontColour: string,\r\n  Token: string,\r\n  Pin: string,\r\n  Site: Site,\r\n  DocumentListingTab: \"Recent\" | \"Pinned\" | \"Issued\",\r\n  IsInSupervisorRole: boolean,\r\n  HasRegisteredPlayerId: number,\r\n  HasAssets: boolean,\r\n  HasAssetCreation: boolean,\r\n  HasDocQrCodes: boolean,\r\n  HasHadWifiPreferenceChecked: boolean,\r\n  HasUpdateableDocs: boolean,\r\n  HasDocQueues: boolean,\r\n  HasCompanies: boolean,\r\n  HasDataTouchAreas: boolean,\r\n  HasQueueSupervisors: boolean,\r\n  HasCategoryActioners: boolean,\r\n  UserSites: Site[],\r\n  UserCompanies: Company[],\r\n  HasPlanningMeeting: boolean,\r\n  HasReviewMeeting: boolean,\r\n  HasCollabPlanning: boolean,\r\n  HasRandomOperativebarcodes: boolean,\r\n  HasLiveQueues: boolean,\r\n  HasResAreas:boolean,\r\n  HasHideOperativeScan: boolean,\r\n  HasSites: boolean,\r\n  HasDocDrop: boolean,\r\n  HasBasicOpInfo: boolean,\r\n  HasSimpleSwipes: boolean,\r\n  HasProjectsOnDocDrop: boolean,\r\n  HasCustomLookups: boolean,\r\n  HasTemplateSender: boolean,\r\n  HasMyOpInfo: boolean,\r\n  HasViewDocumentAsSinglePage: boolean,\r\n  HasShowParentAnswersOnChildDoc: boolean,\r\n  HasCompanySelectWithOtherOption:boolean,\r\n  HideSearchOnOperativeInfo: boolean,\r\n  HideSearchOnOperativeAccess: boolean,\r\n  CanAddOperativesToDocsByName: boolean,\r\n  HasRamsList: boolean,\r\n  CanAddAsssetsToDocsByName: boolean,\r\n  ShowWeightingsOnApp: boolean,\r\n  TemplatesLastUpdate: Date,\r\n  Url: string,\r\n  UseFingerReader: boolean,\r\n  SelectedSite?: Site,\r\n  NavTab: \"Modules\" | \"Documents\",\r\n  NumberOfTemplates: number,\r\n  DownloadedTemplates: number,\r\n  //PermittedCategories: DocCategory[],\r\n  HasOperativeInfo: boolean,\r\n  CanOffHireAssets: boolean,\r\n  CanViewOtherOperativeInfo: boolean,\r\n  CanModifyOperativeQRs: boolean,\r\n  CanAddQRsToAssets: boolean\r\n}\r\n\r\nexport interface Site {\r\n  Id: number,\r\n  Name: string\r\n}\r\n\r\nexport interface Company {\r\n  Id: number,\r\n  Name: string\r\n}\r\n\r\nexport interface Area {\r\n  Id: number,\r\n  SiteId: number,\r\n  Name: string\r\n}\r\n\r\nconst {\r\n  withAppUser, \r\n  selectAppUser, \r\n  setAppUser\r\n} = propsFactory(\"appUser\", { initialValue: null as User | null });\r\n\r\nconst store = createStore(\r\n  { name: \"user\" },\r\n  withAppUser()\r\n);\r\n\r\nconst userSelector = selector(store.pipe(selectAppUser()));\r\nconst sites$ = userSelector(user => user?.UserSites || []);\r\n\r\nconst setAppUserUpdate = pipeTap<User>(user => store.update(setAppUser(user)));\r\n\r\npersistState(store, {\r\n  key: \"user\",\r\n  storage: localStorageStrategy\r\n});\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class UserStore {\r\n  httpClient = inject(HttpClient);\r\n\r\n  user$ = store.pipe(selectAppUser());\r\n  sites$ = sites$;\r\n  companies$ = userSelector(user => user?.UserCompanies || []);\r\n\r\n  getUserRequest$ = (action$: Observable<{ token: string, pin: string }>) => combineLatest({\r\n    login: action$,\r\n    deviceId: getDeviceUuid(),\r\n    deviceString: getDeviceString() \r\n  }).pipe(\r\n    switchMap(({ login, deviceId, deviceString }) => this.httpClient.post<User>(`${environment.siteDocsApi}/LoginApi/LoginSiteDocumentsApp`, {\r\n      deviceId,\r\n      deviceString\r\n    }, {\r\n      headers: {\r\n        appToken: login.token,\r\n        appPin: login.pin\r\n      }\r\n    })),\r\n    setAppUserUpdate()\r\n  );\r\n}",
            "properties": [
                {
                    "name": "CanAddAsssetsToDocsByName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "CanAddOperativesToDocsByName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "CanAddQRsToAssets",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 72
                },
                {
                    "name": "CanModifyOperativeQRs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 71
                },
                {
                    "name": "CanOffHireAssets",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 69
                },
                {
                    "name": "CanViewOtherOperativeInfo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 70
                },
                {
                    "name": "Colour",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "CompanyId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "CompanyName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "DocumentListingTab",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"Recent\" | \"Pinned\" | \"Issued\"",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "DownloadedTemplates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 66
                },
                {
                    "name": "FirstName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "FontColour",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "HasAssetCreation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "HasAssets",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "HasBasicOpInfo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "HasCategoryActioners",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "HasCollabPlanning",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "HasCompanies",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "HasCompanySelectWithOtherOption",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "HasCustomLookups",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "HasDataTouchAreas",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "HasDocDrop",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "HasDocQrCodes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "HasDocQueues",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "HasHadWifiPreferenceChecked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "HasHideOperativeScan",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "HasLiveQueues",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "HasMyOpInfo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "HasOperativeInfo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 68
                },
                {
                    "name": "HasPlanningMeeting",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "HasProjectsOnDocDrop",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "HasQueueSupervisors",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "HasRamsList",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "HasRandomOperativebarcodes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "HasRegisteredPlayerId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "HasResAreas",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "HasReviewMeeting",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "HasShowParentAnswersOnChildDoc",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "HasSimpleSwipes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "HasSites",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "HasTemplateSender",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "HasUpdateableDocs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "HasViewDocumentAsSinglePage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "HideSearchOnOperativeAccess",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "HideSearchOnOperativeInfo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "Id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "IsInSupervisorRole",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "LastName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "NavTab",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"Modules\" | \"Documents\"",
                    "optional": false,
                    "description": "",
                    "line": 64
                },
                {
                    "name": "NumberOfTemplates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 65
                },
                {
                    "name": "Pin",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "SelectedSite",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Site",
                    "optional": true,
                    "description": "",
                    "line": 63
                },
                {
                    "name": "ShowWeightingsOnApp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 59
                },
                {
                    "name": "Site",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Site",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "TemplatesLastUpdate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 60
                },
                {
                    "name": "Token",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "Url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "UseFingerReader",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "UserCompanies",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Company[]",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "UserSites",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Site[]",
                    "optional": false,
                    "description": "",
                    "line": 34
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ValidationData",
            "id": "interface-ValidationData-fb56d08da6dcb5e38a9b83ed7cde99c4b1bdfdc334b06db1fab4473570caad69478c2c574d1e78cb27acdd0c8b9c6e0322b6bedf7d106dfa697e1fbbb514a67e",
            "file": "src/app/core/stores/site-document/models/site-document.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { PointGroup } from \"signature_pad\";\r\n\r\nexport interface SiteDocument {\r\n  DocumentID: number;\r\n  DocumentTitle: string;\r\n  Pinned: boolean;\r\n  Pages: Page[];\r\n  AllowAnon: boolean;\r\n  RemainAnon: boolean;\r\n  Queues: { Key: string, Value: string }[],\r\n  DocumentGroup: string;\r\n  DocumentCategory?: number;\r\n  CanCreateHotspot: boolean;\r\n  CanBeAddedToHotspot?: boolean;\r\n  CanBeSavedAsDraft?: boolean;\r\n  CanAddActionerFromApp: boolean;\r\n  CanAddCategoryActioner: boolean;\r\n  CanCreateAssetsFromDocument: boolean;\r\n  CanHaveQueueDuration: boolean;\r\n  CanHaveDocumentLevelImages: boolean;\r\n  CanHaveDocLevelPhotoRoll: boolean;\r\n  CurrentActionerOperativeID?: number;\r\n  CompanyActionerId?: number;\r\n  ShowDocLevelPhotoButtonAtStartOfDoc: boolean;\r\n  CanAddAsset?: boolean;\r\n  CanAddOperative?: boolean;\r\n  CanHaveCompanyActioner: boolean;\r\n  MetaData: Partial<SiteDocumentMetaData>;\r\n  SiteId?: number;\r\n  AutoQueueID?: number;\r\n  QueueDuration?: {\r\n    Value: number;\r\n    Type: string;\r\n  }\r\n}\r\n\r\nexport interface SiteDocumentImage {\r\n  DocumentId: number,\r\n  DocumentSubmissionId: number,\r\n  Base64: string,\r\n  ImageNo: number\r\n}\r\n\r\nexport interface SiteDocumentMetaData {\r\n  ActionerText: string;\r\n  CanBeEditableDocument: boolean;\r\n  CannotAddSelfAsActioner: boolean;\r\n  ColourHex: string;\r\n  QueueSelectorTitle: string;\r\n  HasSiteList: boolean;\r\n  SiteListTitle: string;\r\n  UsesRadioGroupTable: boolean;\r\n}\r\n\r\nexport interface SiteDocumentAsset {\r\n  AssetID: number;\r\n  Tag: string;\r\n  Name: string;\r\n  QRCode?: string;\r\n  TemplateID?: number;\r\n}\r\n\r\nexport interface SiteDocumentOperative {\r\n  AttendeeID: number;\r\n  Name: string;\r\n  DateAttended: Date;\r\n}\r\n\r\nexport interface Page {\r\n  PageID: number;\r\n  PageTitle: string;\r\n  Sections: Section[]\r\n}\r\n\r\nexport interface Section {\r\n  SectionID: number;\r\n  SectionNo: number;\r\n  SectionTitle: string;\r\n  Questions: Question[];\r\n  SectionQuestiontype: QuestionType;\r\n  IsRepeatable: boolean;\r\n  TableTitles: string[];\r\n}\r\n\r\nexport enum QuestionType {\r\n  Label = 0,\r\n  Checkbox = 1,\r\n  RadioGroup = 2,\r\n  Textbox = 3,\r\n  TextArea = 4,\r\n  Select = 5,\r\n  CheckboxTextbox = 6,\r\n  RadioGroupTextbox = 7,\r\n  Date = 8,\r\n  DateTime = 9,\r\n  OperativeList = 10,\r\n  WallOfText = 11,\r\n  Number = 12,\r\n  CascadeDropdown = 13,\r\n  LinkedBool = 16,\r\n  AssetList = 17,\r\n  LinkedDates = 18,\r\n  Signature = 19,\r\n  CompanySelect = 21,\r\n  AreaSelect = 22,\r\n  AssetGroupsAndTypes = 25,\r\n  AssetInspectionSchedule = 26,\r\n  ProjectSelect = 27,\r\n  RamsSelect = 28,\r\n  SelectText = 29,\r\n  CascadeDropdownText = 30,\r\n  MultiCascade = 31,\r\n  Time = 32,\r\n  LinkedTimes = 33,\r\n  HraSelect = 34,\r\n  MultiCheckbox = 35,\r\n  LinkedDateAndTime = 36\r\n}\r\n\r\nexport interface Question {\r\n  QuestionID: number;\r\n  QuestionText: string;\r\n  CascadeOptionsText: string;\r\n  CommentsText: string;\r\n  Assets: SiteDocumentAsset[];\r\n  Operatives: SiteDocumentOperative[];\r\n  Required: boolean;\r\n  AnswerText: string;\r\n  DateAndTime: Date;\r\n  DateAndTime2: Date;\r\n  NumberVal?: number;\r\n  OptionVal?: string | null;\r\n  Options: SelectOption[];\r\n  CascadeOptions: CascadeOption[];\r\n  CascadeOptionVal?: string | null;\r\n  YesNoNA: boolean | null;\r\n  CanHaveImg: boolean;\r\n  CanHaveFiles: boolean;\r\n  SignaturePoints?: PointGroup[];\r\n  ValidationData: ValidationData[];\r\n}\r\n\r\nexport interface ValidationData {\r\n  Key: \"Min\" | \"Max\",\r\n  Value: string,\r\n  Msg: string\r\n}\r\n\r\nexport interface SelectOption {\r\n  Active?: boolean;\r\n  Text: string;\r\n  Val: string;\r\n  MetaData?: any;\r\n  OptionsMetadataJson?: string;\r\n}\r\n\r\nexport interface SelectOptionMetaData {\r\n  ColourHex?: string;\r\n}\r\n\r\nexport interface CascadeOption { \r\n  ParentVal: string, \r\n  Text: string, \r\n  Val: string \r\n}",
            "properties": [
                {
                    "name": "Key",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"Min\" | \"Max\"",
                    "optional": false,
                    "description": "",
                    "line": 144
                },
                {
                    "name": "Msg",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 146
                },
                {
                    "name": "Value",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 145
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "CategoryActionersStore",
            "id": "injectable-CategoryActionersStore-2c9bb246a56bad8e49cf36012d241df6a6ba0c6f2b1b6b609d06f6d9a6b9be9714d8b998a3700dfa7c013befa950cb01e94388e4b746475cb5ecc5a54f9c1573",
            "file": "src/app/core/stores/category-actioners/category-actioners.store.ts",
            "properties": [
                {
                    "name": "categoryActioners$",
                    "defaultValue": "store.pipe(selectAllEntities())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "categoryActionersById$",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "downloadCategoryActioners$",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "http",
                    "defaultValue": "inject(HttpClient)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable, inject } from \"@angular/core\";\r\nimport { createStore } from \"@ngneat/elf\";\r\nimport { selectAllEntities, withEntities } from \"@ngneat/elf-entities\";\r\nimport { memoize } from \"lodash-es\";\r\nimport { map } from \"rxjs\";\r\nimport { useLoginApi } from \"../../http\";\r\nimport { track } from \"src/app/shared/rxjs\";\r\n\r\nexport interface CategoryActioner {\r\n  Id: number,\r\n  Name: string,\r\n  CategoryId: number\r\n}\r\n\r\nconst store = createStore(\r\n  { name: \"site-documents\" },\r\n  withEntities<CategoryActioner, \"Id\">({ idKey: \"Id\" })\r\n);\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class CategoryActionersStore {\r\n  http = inject(HttpClient);\r\n\r\n  categoryActioners$ = store.pipe(selectAllEntities());\r\n  categoryActionersById$ = (categoryId: number) => this.categoryActioners$.pipe(\r\n    map(catActioners => catActioners.filter(ca => ca.CategoryId === categoryId))\r\n  );\r\n\r\n  downloadCategoryActioners$ = (siteId: number) => this.http.get<CategoryActioner[]>(\"api/LoginApi/GetCategoryActioners\", {\r\n    params: {\r\n      siteId: siteId.toString()\r\n    }\r\n  });\r\n}\r\n\r\nexport const useCategoryActioners = memoize((siteId: number) => {\r\n  const loginApi = useLoginApi();\r\n\r\n  return track(() => loginApi.getCategoryActioners({ siteId }))\r\n});",
            "type": "injectable"
        },
        {
            "name": "DocumentBuilderRoute",
            "id": "injectable-DocumentBuilderRoute-c973672b015e50cff53881f78277389485c0906171aaf0311c829a1c23735c9f56bbfa4b833d68c89b0675a67c190c9612122a3060f9f8a61127211d1104a33b",
            "file": "src/app/core/pages/document-builder/document-builder.route.ts",
            "properties": [
                {
                    "name": "documentIds$",
                    "defaultValue": "this.route.queryParams.pipe(\r\n    filter(params => params[\"ids\"] != null),\r\n    map(params => JSON.parse(params[\"ids\"]) as number[])\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "lastDocumentId$",
                    "defaultValue": "this.documentIds$.pipe(\r\n    map(ids => ids[ids.length - 1] || 0)\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "noParams$",
                    "defaultValue": "this.route.queryParams.pipe(\r\n    map(params => Object.keys(params).length === 0)\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "route",
                    "defaultValue": "inject(ActivatedRoute)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        122,
                        144
                    ]
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable, inject } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { filter, map } from \"rxjs\";\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class DocumentBuilderRoute {\r\n  protected readonly route = inject(ActivatedRoute);\r\n  \r\n  documentIds$ = this.route.queryParams.pipe(\r\n    filter(params => params[\"ids\"] != null),\r\n    map(params => JSON.parse(params[\"ids\"]) as number[])\r\n  );\r\n\r\n  lastDocumentId$ = this.documentIds$.pipe(\r\n    map(ids => ids[ids.length - 1] || 0)\r\n  );\r\n\r\n  noParams$ = this.route.queryParams.pipe(\r\n    map(params => Object.keys(params).length === 0)\r\n  );\r\n}",
            "type": "injectable"
        },
        {
            "name": "FormFillerStore",
            "id": "injectable-FormFillerStore-c2be98fffa7ec3ef9d374c97515526030466fc8b8f692ec4c721d9c75e06b55b91db2588bc54399f129804f9964bc9e7d2971d09806048451193ca2c25e1224b",
            "file": "src/app/core/stores/site-document/form-filler/form-filler.store.ts",
            "properties": [
                {
                    "name": "getTemplateRequest$",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "getTemplatesRequest$",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "http",
                    "defaultValue": "inject(HttpClient)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "submitDocument$",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "writingDocument$",
                    "defaultValue": "selectWritingDocument()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\r\nimport { inject, Injectable } from \"@angular/core\";\r\nimport { createStore } from \"@ngneat/elf\";\r\nimport { entitiesPropsFactory } from \"@ngneat/elf-entities\";\r\nimport { Observable, switchMap } from \"rxjs\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { withWritingDocument } from \"../props\";\r\nimport { writingDocumentAdapter } from \"../adapters/writing-document.adapter\";\r\nimport { SiteDocument } from \"../models\";\r\n\r\nexport interface TemplateMenuItem {\r\n  Id: number;\r\n  Title: string;\r\n  SiteDocumentType: number;\r\n  RevNo: number;\r\n}\r\n\r\nconst { withTemplateMenuEntities } = entitiesPropsFactory(\"templateMenu\");\r\n\r\nconst store = createStore(\r\n  { name: \"form-filler\" },\r\n  withWritingDocument(null as SiteDocument | null),\r\n  withTemplateMenuEntities<TemplateMenuItem, \"Id\">({ idKey: \"Id\", initialValue: [] })\r\n);\r\n\r\nconst { \r\n  selectWritingDocument, \r\n  setWritingDocument \r\n} = writingDocumentAdapter(store);\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class FormFillerStore {\r\n  protected http = inject(HttpClient);\r\n\r\n  writingDocument$ = selectWritingDocument();\r\n\r\n  getTemplateRequest$ = (action$: Observable<number>) => action$.pipe(\r\n    switchMap(id => this.http.get<SiteDocument>(`${environment.siteDocsApi}/TemplateApi/GetDocumentTemplate`, {\r\n      params: {\r\n        id: id!.toString()\r\n      }\r\n    })),\r\n    setWritingDocument()\r\n  );\r\n\r\n  getTemplatesRequest$ = () => this.http.get<SiteDocument[]>(`${environment.siteDocsApi}/TemplateApi/`).pipe(\r\n    \r\n  );\r\n\r\n  submitDocument$ = (action$: Observable<SiteDocument>) => action$.pipe(\r\n    switchMap(doc => this.http.post<number>(`${environment.siteDocsApi}/TemplateApi/UploadDocument`, doc))\r\n  );\r\n}",
            "type": "injectable"
        },
        {
            "name": "LiveQueuesStore",
            "id": "injectable-LiveQueuesStore-6ae04e27af71dc6fe72681cc0f7599954569a976ca8f41fd2987179a13271d2ad1cd908773969b69b1112191fcf8eb5a96be7ee5e391f9ae0412b85cc6edfb1e",
            "file": "src/app/core/stores/live-queues/live-queues.store.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\r\n\r\n// const store = createStore(\r\n//   { name: \"live-queues\" },\r\n//   withProps<{ hideEmptyQueues: boolean }>({\r\n//     hideEmptyQueues: false\r\n//   })\r\n// );\r\n\r\n// const toggleHideEmptyQueues = () => store.update(\r\n//   setProp(\"hideEmptyQueues\", prop => !prop)\r\n// );\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class LiveQueuesStore {\r\n  \r\n}\r\n",
            "type": "injectable"
        },
        {
            "name": "OneSignalService",
            "id": "injectable-OneSignalService-e78ff462076a7fccd0567c75effd1633d725b18c3d6b1b6d1f66e201fb21ce0892fa0e188810ea18fc4a573992c808fb53d3dd49ff5b284c779626cd4a6844df",
            "file": "src/app/shared/services/onesignal/onesignal.service.ts",
            "properties": [
                {
                    "name": "notificationReceived",
                    "defaultValue": "use<NotificationReceivedEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "toast$",
                    "defaultValue": "this.notificationReceived(\r\n    map(nr => nr.getNotification()),\r\n    switchMap(notification => this.toastCtrl.create({\r\n      header: notification.title,\r\n      message: notification.body,\r\n      duration: 5000,\r\n      position: \"top\"\r\n    })),\r\n    tap(toast => toast.present())\r\n  )()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "toastCtrl",
                    "defaultValue": "inject(ToastController)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methods": [
                {
                    "name": "startup",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 27,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { inject, Injectable } from \"@angular/core\";\r\nimport { Device } from \"@capacitor/device\";\r\nimport { ToastController } from \"@ionic/angular\";\r\nimport OneSignal from \"onesignal-cordova-plugin\";\r\nimport NotificationReceivedEvent from \"onesignal-cordova-plugin/dist/NotificationReceivedEvent\";\r\nimport { map, switchMap, tap } from \"rxjs\";\r\nimport { use } from \"../../rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class OneSignalService {\r\n  protected toastCtrl = inject(ToastController);\r\n  protected notificationReceived = use<NotificationReceivedEvent>();\r\n\r\n  protected toast$ = this.notificationReceived(\r\n    map(nr => nr.getNotification()),\r\n    switchMap(notification => this.toastCtrl.create({\r\n      header: notification.title,\r\n      message: notification.body,\r\n      duration: 5000,\r\n      position: \"top\"\r\n    })),\r\n    tap(toast => toast.present())\r\n  )();\r\n\r\n  async startup() {\r\n    const device = await Device.getInfo();\r\n\r\n    if (device.platform === \"web\")\r\n      return;\r\n\r\n    this.toast$.subscribe();\r\n\r\n    OneSignal.setAppId(\"\");\r\n\r\n    OneSignal.promptForPushNotificationsWithUserResponse(() => \r\n      OneSignal.setNotificationWillShowInForegroundHandler(notification => this.notificationReceived.next(notification))\r\n    );\r\n  }\r\n}\r\n",
            "type": "injectable"
        },
        {
            "name": "OperativesStore",
            "id": "injectable-OperativesStore-91556e30f45bb35500235156580cdd5001d82990d959ec1360343f8ea5e07f00f6aabfb8f55e3b3890c5062d28956f08d90c0ad3f60c9686df6f84eab48733ab",
            "file": "src/app/core/stores/operative/operatives.store.ts",
            "properties": [
                {
                    "name": "addOperative",
                    "defaultValue": "addOperative",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 79
                },
                {
                    "name": "getSearchResults",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 82
                },
                {
                    "name": "httpClient",
                    "defaultValue": "inject(HttpClient)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 73
                },
                {
                    "name": "operatives$",
                    "defaultValue": "operatives$()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 75
                },
                {
                    "name": "searchResults$",
                    "defaultValue": "searchResults$()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 76
                },
                {
                    "name": "searchResultsIsPending$",
                    "defaultValue": "store.pipe(selectIsRequestPending(\"operativesSearch\"))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 77
                },
                {
                    "name": "setSearchResults",
                    "defaultValue": "setSearchResults",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 80
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable, inject } from \"@angular/core\"\r\nimport { createStore } from \"@ngneat/elf\";\r\nimport { addEntities, withEntities } from \"@ngneat/elf-entities\";\r\nimport { localStorageStrategy, persistState } from \"@ngneat/elf-persist-state\";\r\nimport { searchResultsAdapter } from \"src/app/shared/states/search-results.adapter\";\r\nimport { operativesAdapter } from \"./adapters/operatives.adapter\";\r\nimport { tap } from \"rxjs\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { createRequestsStatusOperator, selectIsRequestPending, updateRequestStatus, withRequestsStatus } from \"@ngneat/elf-requests\";\r\n\r\nexport interface Operative {\r\n  ID: number,\r\n  Name: string\r\n}\r\n\r\nexport interface OperativeSearchParams {\r\n  search: string,\r\n  noAppLimit: boolean,\r\n  siteId?: number\r\n}\r\n\r\nexport interface OperativeSearchResult {\r\n  ID: number,\r\n  Name: string,\r\n  CompanyName: string,\r\n  HasQRCode: boolean,\r\n  HasAppAccess: boolean\r\n}\r\n\r\nconst {\r\n  SearchResultEntitiesRef,\r\n  withSearchResultEntities,\r\n  searchResultsAdapt\r\n} = searchResultsAdapter();\r\n\r\n// function withTapUpdate(): PropsFactory<{ tapUpdate: object }, EmptyConfig> {\r\n//   return {\r\n//     props: {\r\n//       tapUpdate: pipe(\r\n//         tap()\r\n//       )\r\n//     }\r\n//   }\r\n// }\r\n\r\nconst store = createStore(\r\n  { name: \"operatives\" },\r\n  withEntities<Operative, \"ID\">({ idKey: \"ID\" }),\r\n  withSearchResultEntities<OperativeSearchResult, \"ID\">({ idKey: \"ID\" }),\r\n  withRequestsStatus<\"operativesSearch\">()\r\n);\r\n\r\nconst { \r\n  operatives$, \r\n  addOperative,\r\n  searchResults$,\r\n  setSearchResults\r\n} = {\r\n  ...operativesAdapter(store),\r\n  ...searchResultsAdapt(store)\r\n}\r\n\r\nconst trackRequestStatus = createRequestsStatusOperator(store);\r\n\r\npersistState(store, {\r\n  key: \"operatives\",\r\n  storage: localStorageStrategy\r\n});\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class OperativesStore {\r\n  httpClient = inject(HttpClient);\r\n\r\n  operatives$ = operatives$();\r\n  searchResults$ = searchResults$();\r\n  searchResultsIsPending$ = store.pipe(selectIsRequestPending(\"operativesSearch\"));\r\n\r\n  addOperative = addOperative;\r\n  setSearchResults = setSearchResults;\r\n\r\n  getSearchResults = (params: OperativeSearchParams) => this.httpClient.get<OperativeSearchResult[]>(`${environment.siteDocsApi}/OperativeApi/GetOperativesByName`, {\r\n    params: {\r\n      search: params.search,\r\n      noAppLimit: params.noAppLimit,\r\n      siteId: params.siteId?.toString() || \"null\"\r\n    }\r\n  }).pipe(\r\n    trackRequestStatus(\"operativesSearch\"),\r\n    tap(searchResults => store.update(\r\n      addEntities(searchResults, { ref: SearchResultEntitiesRef }),\r\n      updateRequestStatus(\"operativesSearch\", \"success\")\r\n    ))\r\n  );\r\n}",
            "type": "injectable"
        },
        {
            "name": "ResponsibilityAreaTypesStore",
            "id": "injectable-ResponsibilityAreaTypesStore-617b4801fa08a8e08bf98e552c0e7fad70edfa4f661170432e41b2a0de0233527ebb03bcf87a177e832f9b057238fef606b23964cff87ae7f1ea0081f82689fd",
            "file": "src/app/core/stores/responsibility-area-types/responsibility-area-types.store.ts",
            "properties": [
                {
                    "name": "responsibilityAreaTypeById$",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "responsibilityAreaTypes$",
                    "defaultValue": "store.pipe(selectAllEntities())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { createStore } from \"@ngneat/elf\";\nimport { selectAllEntities, withEntities } from \"@ngneat/elf-entities\";\nimport { map } from \"rxjs\";\n\nexport interface ResponsibilityArea {\n  Id: number,\n  Name: string,\n  DocResAreaTypeId: number,\n  SiteId?: number\n}\n\nexport interface ResponsibilityAreaType {\n  Id: number,\n  TypeName: string,\n  AppQuestionText: string,\n  Areas: ResponsibilityArea[]\n}\n\nconst store = createStore(\n  { name: \"responsibility-area-types\" },\n  withEntities<ResponsibilityAreaType, \"Id\">({ idKey: \"Id\" })\n);\n\n@Injectable({ providedIn: \"root\" })\nexport class ResponsibilityAreaTypesStore {\n  responsibilityAreaTypes$ = store.pipe(selectAllEntities());\n  responsibilityAreaTypeById$ = (id: number) => this.responsibilityAreaTypes$.pipe(\n    map(resAreaTypes => resAreaTypes.find(t => t.Id === id))\n  );\n}\n",
            "type": "injectable"
        },
        {
            "name": "SiteDocumentImageStore",
            "id": "injectable-SiteDocumentImageStore-4fd102b627a08f3daf343ec9e1671ced7a924c711e0f0c352f4a5968af753a737cb68d1dc539cbd987bbabc60134200ea82ee42d1e386cfc315a492f37d6d269",
            "file": "src/app/core/stores/site-document-image/site-document-image.store.ts",
            "properties": [],
            "methods": [
                {
                    "name": "useImages",
                    "args": [
                        {
                            "name": "document",
                            "type": "SiteDocument",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "document",
                            "type": "SiteDocument",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\r\nimport { createStore } from \"@ngneat/elf\";\r\nimport { addEntities, deleteEntitiesByPredicate, selectAllEntitiesApply, withEntities } from \"@ngneat/elf-entities\";\r\nimport { SiteDocument, SiteDocumentImage } from \"../site-document/models/site-document.model\";\r\n\r\nconst store = createStore(\r\n  { name: \"site-document-image\" }, \r\n  withEntities<SiteDocumentImage, \"DocumentId\">({ idKey: \"DocumentId\" })\r\n);\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class SiteDocumentImageStore {\r\n  useImages(document: SiteDocument) {\r\n    return [\r\n      store.pipe(\r\n        selectAllEntitiesApply({\r\n          filterEntity: e => e.DocumentId === document.DocumentID\r\n        })\r\n      ),\r\n      \r\n      (images: string[]) => store.update(\r\n        deleteEntitiesByPredicate(e => e.DocumentId === document.DocumentID),\r\n        addEntities(images.map((img, idx) => \r\n          ({\r\n            DocumentId: document.DocumentID,\r\n            DocumentSubmissionId: 1,\r\n            Base64: img,\r\n            ImageNo: idx\r\n          })\r\n        ))\r\n      )\r\n    ]\r\n  }\r\n}\r\n",
            "type": "injectable"
        },
        {
            "name": "SiteDocumentStore",
            "id": "injectable-SiteDocumentStore-32acf99a56bcc331853319c5ceb3f3197263b857f3ecaefa5c6fc3969a4c55da811f630092fdc9227bec9b13f4233f929b40434265d03612bc184655db0f6b6b",
            "file": "src/app/core/stores/site-document/site-document.store.ts",
            "properties": [
                {
                    "name": "templates$",
                    "defaultValue": "store.pipe(selectAllEntities())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\r\nimport { createStore } from \"@ngneat/elf\";\r\nimport { selectAllEntities, withEntities } from \"@ngneat/elf-entities\";\r\nimport { SiteDocument } from \"./models\";\r\n\r\nconst store = createStore(\r\n  { name: \"site-documents\" },\r\n  withEntities<SiteDocument, \"DocumentID\">({ idKey: \"DocumentID\" })\r\n);\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class SiteDocumentStore {\r\n  templates$ = store.pipe(selectAllEntities());\r\n}",
            "type": "injectable"
        },
        {
            "name": "TemplateApi",
            "id": "injectable-TemplateApi-c11bea9e2e3a73af489915b8a5ef33e114ecb863592086aeab6d2de6f4d7a56b5dab9db6ea8bb9769ee8ace63c87209979df2cf415d4f232c7635a132045b982",
            "file": "src/app/core/http/template.api.ts",
            "properties": [
                {
                    "name": "httpClient",
                    "defaultValue": "inject(HttpClient)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methods": [
                {
                    "name": "getTemplate",
                    "args": [
                        {
                            "name": "params",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 52,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "params",
                            "type": "literal type",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getTemplates",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable, inject } from \"@angular/core\";\r\nimport { SiteDocument } from \"../stores/site-document/models\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { EMPTY, Subject, expand, map, mergeMap, reduce } from \"rxjs\";\r\nimport { memoize, orderBy } from \"lodash-es\";\r\nimport { createApi } from \"./create-api\";\r\nimport { track } from \"src/app/shared/rxjs\";\r\n\r\nexport interface TemplateItem {\r\n  Id: number,\r\n  Title: string\r\n}\r\n\r\nexport interface PaginatedList<T> {\r\n  Items: T[],\r\n  PageNumber: number,\r\n  TotalPage: number,\r\n  TotalCount: number,\r\n  HasPreviousPage: boolean,\r\n  HasNextPage: boolean\r\n}\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class TemplateApi {\r\n  protected httpClient = inject(HttpClient);\r\n\r\n  getTemplates() {\r\n    return this.httpClient.get<PaginatedList<SiteDocument>>(`${environment.siteDocsApi}/TemplateApi/GetLatestTemplatesWithPagination`, {\r\n      params: {\r\n        pageNumber: 1,\r\n        pageSize: 20\r\n      }\r\n    }).pipe(\r\n      expand((res, idx) => res.HasNextPage\r\n        ? this.httpClient.get<PaginatedList<SiteDocument>>(`${environment.siteDocsApi}/TemplateApi/GetLatestTemplatesWithPagination`, {\r\n          params: {\r\n            pageNumber: idx + 2,\r\n            pageSize: 20\r\n          }\r\n        })\r\n        : EMPTY\r\n      ),\r\n      map(res => res.Items),\r\n      reduce((acc, docs) => [...acc, ...docs]),\r\n      map(tpls => orderBy(tpls, \"DocumentTitle\"))\r\n    )\r\n  }\r\n\r\n  getTemplate(params: { id: number }) {\r\n    return this.httpClient.get<SiteDocument>(`${environment.siteDocsApi}/TemplateApi/GetDocumentTemplate`, {\r\n      params: {\r\n        id: params.id.toString()\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nexport const useTemplateApi = createApi({\r\n  baseUrl: `${environment.siteDocsApi}/TemplateApi`,\r\n  endpoints: ({ get }) => ({\r\n    getAllTemplates: get<TemplateItem[]>(\"GetAllTemplates\"),\r\n    getTemplate: get<SiteDocument, { id: number }>(\"GetDocumentTemplate\"),\r\n  })\r\n});\r\n\r\nexport const useAllTemplates = memoize(() => {\r\n  const { getAllTemplates } = useTemplateApi();\r\n\r\n  return track(() => getAllTemplates());\r\n});\r\n\r\nexport function useTemplate() {\r\n  const { getTemplate } = useTemplateApi();\r\n  const params$ = new Subject<{ id: number }>();\r\n  \r\n  const template = track(() => params$.pipe(\r\n    mergeMap(params => getTemplate(params))\r\n  ));\r\n\r\n  return {\r\n    ...template,\r\n    fetch: (params: { id: number }) => params$.next(params)\r\n  }\r\n}",
            "type": "injectable"
        },
        {
            "name": "UserStore",
            "id": "injectable-UserStore-853a61b57e97b1015338c1b3ad545ff7256fef0ca9acee4db5fd449e1c7e81fa68592cbea8c7e1b7dbac8501a6598d2487ebbfe41af8e6a90d93a03da6fa4117",
            "file": "src/app/core/stores/user/user.store.ts",
            "properties": [
                {
                    "name": "companies$",
                    "defaultValue": "userSelector(user => user?.UserCompanies || [])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 118
                },
                {
                    "name": "getUserRequest$",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 120
                },
                {
                    "name": "httpClient",
                    "defaultValue": "inject(HttpClient)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 114
                },
                {
                    "name": "sites$",
                    "defaultValue": "sites$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 117
                },
                {
                    "name": "user$",
                    "defaultValue": "store.pipe(selectAppUser())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 116
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\r\nimport { inject, Injectable } from \"@angular/core\";\r\nimport { createStore, propsFactory } from \"@ngneat/elf\";\r\nimport { localStorageStrategy, persistState } from \"@ngneat/elf-persist-state\";\r\nimport { combineLatest, Observable, switchMap } from \"rxjs\";\r\nimport { getDeviceString, getDeviceUuid } from \"src/app/shared/plugins/device.plugin\";\r\nimport { pipeTap, selector } from \"src/app/shared/rxjs\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\nexport interface User {\r\n  Id: number,\r\n  LastName: string,\r\n  FirstName: string,\r\n  CompanyId: number,\r\n  CompanyName: string,\r\n  Colour: string,\r\n  FontColour: string,\r\n  Token: string,\r\n  Pin: string,\r\n  Site: Site,\r\n  DocumentListingTab: \"Recent\" | \"Pinned\" | \"Issued\",\r\n  IsInSupervisorRole: boolean,\r\n  HasRegisteredPlayerId: number,\r\n  HasAssets: boolean,\r\n  HasAssetCreation: boolean,\r\n  HasDocQrCodes: boolean,\r\n  HasHadWifiPreferenceChecked: boolean,\r\n  HasUpdateableDocs: boolean,\r\n  HasDocQueues: boolean,\r\n  HasCompanies: boolean,\r\n  HasDataTouchAreas: boolean,\r\n  HasQueueSupervisors: boolean,\r\n  HasCategoryActioners: boolean,\r\n  UserSites: Site[],\r\n  UserCompanies: Company[],\r\n  HasPlanningMeeting: boolean,\r\n  HasReviewMeeting: boolean,\r\n  HasCollabPlanning: boolean,\r\n  HasRandomOperativebarcodes: boolean,\r\n  HasLiveQueues: boolean,\r\n  HasResAreas:boolean,\r\n  HasHideOperativeScan: boolean,\r\n  HasSites: boolean,\r\n  HasDocDrop: boolean,\r\n  HasBasicOpInfo: boolean,\r\n  HasSimpleSwipes: boolean,\r\n  HasProjectsOnDocDrop: boolean,\r\n  HasCustomLookups: boolean,\r\n  HasTemplateSender: boolean,\r\n  HasMyOpInfo: boolean,\r\n  HasViewDocumentAsSinglePage: boolean,\r\n  HasShowParentAnswersOnChildDoc: boolean,\r\n  HasCompanySelectWithOtherOption:boolean,\r\n  HideSearchOnOperativeInfo: boolean,\r\n  HideSearchOnOperativeAccess: boolean,\r\n  CanAddOperativesToDocsByName: boolean,\r\n  HasRamsList: boolean,\r\n  CanAddAsssetsToDocsByName: boolean,\r\n  ShowWeightingsOnApp: boolean,\r\n  TemplatesLastUpdate: Date,\r\n  Url: string,\r\n  UseFingerReader: boolean,\r\n  SelectedSite?: Site,\r\n  NavTab: \"Modules\" | \"Documents\",\r\n  NumberOfTemplates: number,\r\n  DownloadedTemplates: number,\r\n  //PermittedCategories: DocCategory[],\r\n  HasOperativeInfo: boolean,\r\n  CanOffHireAssets: boolean,\r\n  CanViewOtherOperativeInfo: boolean,\r\n  CanModifyOperativeQRs: boolean,\r\n  CanAddQRsToAssets: boolean\r\n}\r\n\r\nexport interface Site {\r\n  Id: number,\r\n  Name: string\r\n}\r\n\r\nexport interface Company {\r\n  Id: number,\r\n  Name: string\r\n}\r\n\r\nexport interface Area {\r\n  Id: number,\r\n  SiteId: number,\r\n  Name: string\r\n}\r\n\r\nconst {\r\n  withAppUser, \r\n  selectAppUser, \r\n  setAppUser\r\n} = propsFactory(\"appUser\", { initialValue: null as User | null });\r\n\r\nconst store = createStore(\r\n  { name: \"user\" },\r\n  withAppUser()\r\n);\r\n\r\nconst userSelector = selector(store.pipe(selectAppUser()));\r\nconst sites$ = userSelector(user => user?.UserSites || []);\r\n\r\nconst setAppUserUpdate = pipeTap<User>(user => store.update(setAppUser(user)));\r\n\r\npersistState(store, {\r\n  key: \"user\",\r\n  storage: localStorageStrategy\r\n});\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class UserStore {\r\n  httpClient = inject(HttpClient);\r\n\r\n  user$ = store.pipe(selectAppUser());\r\n  sites$ = sites$;\r\n  companies$ = userSelector(user => user?.UserCompanies || []);\r\n\r\n  getUserRequest$ = (action$: Observable<{ token: string, pin: string }>) => combineLatest({\r\n    login: action$,\r\n    deviceId: getDeviceUuid(),\r\n    deviceString: getDeviceString() \r\n  }).pipe(\r\n    switchMap(({ login, deviceId, deviceString }) => this.httpClient.post<User>(`${environment.siteDocsApi}/LoginApi/LoginSiteDocumentsApp`, {\r\n      deviceId,\r\n      deviceString\r\n    }, {\r\n      headers: {\r\n        appToken: login.token,\r\n        appPin: login.pin\r\n      }\r\n    })),\r\n    setAppUserUpdate()\r\n  );\r\n}",
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [
        {
            "name": "BarcodeScannerDirective",
            "id": "directive-BarcodeScannerDirective-e7ab6e64f44fc426c4d8d715ee139a730b17b8b0304d2ed60c9bd1963305c222b91562838f03e7d909258d5d1b915ddc777b6614fa4103b28777a1fefaa3e26b",
            "file": "src/app/shared/directives/barcode-scanner/barcode-scanner.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, EventEmitter, HostListener, Input, Output } from \"@angular/core\";\nimport { BarcodeScanner, ScanOptions } from \"@capacitor-community/barcode-scanner\";\n\n@Directive({\n  selector: \"[barcode-scanner]\",\n  standalone: true\n})\nexport class BarcodeScannerDirective {\n  @Input(\"barcode-scanner\")\n  options: ScanOptions = {}\n\n  @Output(\"scan\") \n  scan = new EventEmitter<string>();\n\n  @HostListener(\"click\")\n  async scanCode() {\n    await BarcodeScanner.hideBackground();\n    const res = await BarcodeScanner.startScan({ targetedFormats: [] });\n    \n    if (res.hasContent)\n      this.scan.emit(res.content);\n  }\n}\n",
            "selector": "[barcode-scanner]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "barcode-scanner",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "ScanOptions",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "scan",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "EventEmitter"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "click",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "scanCode",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'click'"
                        }
                    ],
                    "modifierKind": [
                        131
                    ]
                }
            ]
        },
        {
            "name": "DateDirective",
            "id": "directive-DateDirective-1397f47f6f5d806c9e68682f3672b2e5b9f87b7fc952605269f3aec383c67e10f8d537c08b0c6c947d9df5f50e1affcdf0ddff72a08bc186eda2988f7f7ef301",
            "file": "src/app/shared/directives/date/date.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, EventEmitter, HostListener, Input, Output } from \"@angular/core\";\r\nimport { useElement } from \"../../angular/element\";\r\n\r\n@Directive({\r\n  selector: \"[date]\",\r\n  standalone: true\r\n})\r\nexport class DateDirective {\r\n  protected element: Element & { value: string } = useElement();\r\n  \r\n  @Input(\"date\")\r\n  date!: Date;\r\n  \r\n  @Output()\r\n  dateChange = new EventEmitter<Date>();\r\n  \r\n  ngOnChanges() {\r\n    this.element.value = this.date.toISOString();\r\n  }\r\n\r\n  @HostListener(\"change\")\r\n  @HostListener(\"ionChange\")\r\n  change() {\r\n    this.date = Date.fromISOString(this.element.value);\r\n    this.dateChange.emit(this.date);\r\n  }\r\n}\r\n",
            "selector": "[date]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "Date",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "dateChange",
                    "defaultValue": "new EventEmitter<Date>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "change",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23
                },
                {
                    "name": "ionChange",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23
                }
            ],
            "propertiesClass": [
                {
                    "name": "element",
                    "defaultValue": "useElement()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "change",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 23,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'change'"
                        },
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'ionChange'"
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 17,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ]
        },
        {
            "name": "ItemsTemplateDirective",
            "id": "directive-ItemsTemplateDirective-8f8bfe16d66b0d7044553566dbc1c4fc55c26cad6d40bf8c8d4e996e31446a079525f40fe82bd6892b5458f8456ab95b9a42de2fe64de37c8b7c784cb72f122b",
            "file": "src/app/shared/components/selectable/selectable.component.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Component, ContentChild, Directive, EventEmitter, Input, Output, TemplateRef } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { importRxFixedVirtualScroll, importRxTemplate } from \"../../imports\";\r\nimport { FusePipe } from \"../../pipes\";\r\nimport { AngularComponent, AngularDirective, withAfterViewInit, withGenericTemplateContextGuard, withOnChanges } from \"../../lifecycles\";\r\nimport { using } from \"../../rxjs\";\r\nimport { Nullable } from \"../../types\";\r\n\r\n@Directive({\r\n  selector: \"ng-template[items]\",\r\n  standalone: true\r\n})\r\nexport class ItemsTemplateDirective<T> extends AngularDirective(withGenericTemplateContextGuard) {\r\n  @Input()\r\n  items!: T[];\r\n}\r\n\r\n@Component({\r\n  selector: \"selectable\",\r\n  template: `\r\n    <!-- <ng-template #itemTpl let-item>\r\n      <ion-label class=\"ion-text-wrap\">{{ itemText != null ? item[itemText] : item }}</ion-label>\r\n    </ng-template> -->\r\n\r\n    <ion-item [id]=\"id\" detail=\"false\" button>\r\n      <ion-label *rxLet=\"item(); let item\" [color]=\"value == null ? 'medium' : ''\" class=\"ion-text-wrap\">\r\n      {{ \r\n        item != null \r\n          ? itemText != null \r\n          ? item[itemText] \r\n          : item \r\n          : placeholder\r\n      }}\r\n      </ion-label>\r\n      <ion-button *rxIf=\"canClear && value != null\" (click)=\"$event.stopPropagation(); clear();\" fill=\"clear\">\r\n        <ion-icon name=\"close-outline\" color=\"danger\" slot=\"icon-only\" />\r\n      </ion-button>\r\n      <ion-icon name=\"caret-down-outline\" slot=\"end\" />\r\n    </ion-item>\r\n\r\n    <ion-modal #modal [trigger]=\"id\">\r\n      <ng-template>\r\n        <ion-header>\r\n          <ion-toolbar>\r\n            <ion-buttons slot=\"start\">\r\n              <ion-button (click)=\"modal.dismiss()\" [unpatch] fill=\"clear\">\r\n                <ion-icon name=\"arrow-back-outline\" slot=\"icon-only\" />\r\n              </ion-button>\r\n            </ion-buttons>\r\n            <ion-title class=\"ion-text-center\">{{ title }}</ion-title>\r\n          </ion-toolbar>\r\n          <ion-toolbar>\r\n            <ion-searchbar \r\n              [(ngModel)]=\"searchValue\"\r\n              debounce=\"300\" \r\n              placeholder=\"Search\" />\r\n          </ion-toolbar>\r\n        </ion-header>\r\n\r\n        <ion-content>\r\n          <ion-list class=\"h-full\">\r\n            <rx-virtual-scroll-viewport [itemSize]=\"50\">\r\n              <ion-item \r\n                *rxVirtualFor=\"let item of items \r\n                  | fuse: {\r\n                    search: searchValue,\r\n                    keys: itemText != null \r\n                      ? [itemText]\r\n                      : []\r\n                  }; \r\n                  last as isLast\" \r\n                class=\"w-full\"\r\n                (click)=\"select(item); modal.dismiss();\"\r\n                [lines]=\"isLast \r\n                  ? 'none' \r\n                  : 'inset'\" \r\n                [unpatch] \r\n                button>\r\n                <ion-label class=\"ion-text-wrap\">{{ itemText != null ? item[itemText] : item }}</ion-label>\r\n              </ion-item>\r\n            </rx-virtual-scroll-viewport>\r\n          </ion-list>\r\n        </ion-content>\r\n      </ng-template>\r\n    </ion-modal>\r\n  `,\r\n  standalone: true,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    ...importRxFixedVirtualScroll(),\r\n    FormsModule,\r\n    FusePipe\r\n  ]\r\n})\r\nexport class SelectableComponent<T = unknown> extends AngularComponent(withAfterViewInit, withOnChanges) {\r\n  id = crypto.randomUUID();\r\n\r\n  @Input()\r\n  placeholder: string = \"\";\r\n\r\n  @Input()\r\n  title: string = \"\";\r\n\r\n  @Input()\r\n  items: T[] = [];\r\n\r\n  @Input()\r\n  itemText: Nullable<keyof T> = null;\r\n\r\n  @Input()\r\n  itemValue: Nullable<keyof T> = null;\r\n\r\n  @Input()\r\n  value: Nullable<T | T[keyof T]> = null;\r\n\r\n  @Output()\r\n  itemChange = new EventEmitter<T | null>();\r\n\r\n  @Output()\r\n  valueChange = new EventEmitter<any>();\r\n\r\n  item = using(this.afterViewInit(), this.input(\"items\"), this.input(\"value\"), this.itemChange)\r\n    .calculate(() => this.itemValue != null \r\n      ? this.items.find(item => item[this.itemValue as keyof T] === this.value)\r\n      : this.value as T\r\n    );\r\n\r\n  @Input()\r\n  canClear: boolean = true;\r\n\r\n  searchValue: string = \"\";\r\n\r\n  @ContentChild(ItemsTemplateDirective, { read: ItemsTemplateDirective })\r\n  itemsTpl!: TemplateRef<unknown>;\r\n\r\n  select(item: T) {\r\n    if (this.itemValue != null) {\r\n      this.value = item[this.itemValue];\r\n      this.valueChange.emit(item[this.itemValue]);\r\n    } else {\r\n      this.value = item;\r\n    }\r\n\r\n    this.itemChange.emit(item);\r\n  }\r\n\r\n  clear() {\r\n    this.value = null;\r\n    this.itemChange.emit(null);\r\n    this.valueChange.emit(null);\r\n  }\r\n}",
            "selector": "ng-template[items]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "items",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "T[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": []
        },
        {
            "name": "PhotoViewerDirective",
            "id": "directive-PhotoViewerDirective-30494dccfe64ae3a3d25877bbc341320a63f1760aef31783aeef01903d6ef0cab40c96a4f6bdf4f536e99fbc2f7534b6b60f4c7ad851bac0f173828227d2e185",
            "file": "src/app/shared/directives/photo-viewer/photo-viewer.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { CUSTOM_ELEMENTS_SCHEMA, ChangeDetectionStrategy, Component, Directive, HostListener, Input, inject } from \"@angular/core\";\r\nimport { IonicModule, ModalController } from \"@ionic/angular\";\r\n\r\n@Component({\r\n  selector: \"photo-viewer\",\r\n  template: `\r\n    <ion-header>\r\n      <ion-toolbar>\r\n        <ion-buttons slot=\"primary\">\r\n          <ion-button (click)=\"close()\">\r\n            <ion-icon slot=\"icon-only\" name=\"close\" />\r\n          </ion-button>\r\n        </ion-buttons>\r\n      </ion-toolbar>\r\n    </ion-header>\r\n\r\n    <ion-content class=\"ion-padding\">\r\n      <swiper-container>\r\n        <swiper-slide>\r\n          <img class=\"\r\n            max-w-full \r\n            max-h-full \r\n            absolute \r\n            top-1/2 \r\n            left-1/2 \r\n            -translate-x-1/2 \r\n            -translate-y-1/2\r\n            p-4\" \r\n            [src]=\"src\" />\r\n        </swiper-slide>\r\n      </swiper-container>\r\n    </ion-content>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n  imports: [IonicModule]\r\n})\r\nclass PhotoViewerComponent {\r\n  modalCtrl = inject(ModalController);\r\n\r\n  @Input({ required: true })\r\n  src!: string;\r\n\r\n  close() {\r\n    this.modalCtrl.dismiss();\r\n  }\r\n}\r\n\r\n@Directive({\r\n  selector: \"[src]\",\r\n  standalone: true\r\n})\r\nexport class PhotoViewerDirective {\r\n  modalCtrl = inject(ModalController);\r\n\r\n  @Input()\r\n  src!: string;\r\n\r\n  @HostListener(\"click\")\r\n  async view() {\r\n    const modal = await this.modalCtrl.create({\r\n      component: PhotoViewerComponent,\r\n      componentProps: {\r\n        src: this.src\r\n      }\r\n    });\r\n\r\n    modal.present();\r\n  }\r\n}\r\n",
            "selector": "[src]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "src",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 58,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "click",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 61
                }
            ],
            "propertiesClass": [
                {
                    "name": "modalCtrl",
                    "defaultValue": "inject(ModalController)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 55
                }
            ],
            "methodsClass": [
                {
                    "name": "view",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'click'"
                        }
                    ],
                    "modifierKind": [
                        131
                    ]
                }
            ]
        },
        {
            "name": "QuestionsTemplateDirective",
            "id": "directive-QuestionsTemplateDirective-b4fe87217bb51f2bf53ab1cbc302f3e9253bdc5f4bc5cca4f17342f204cccf41c06f6c6411682347e6d6e8005befe2e94a340e32f5a7dff3bb333adada5f42bc",
            "file": "src/app/core/pages/document-builder/components/document-section/document-section.component.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { NgTemplateOutlet } from \"@angular/common\";\r\nimport { ChangeDetectionStrategy, Component, ContentChild, Directive, Input, TemplateRef } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question, QuestionType, Section } from \"src/app/core/stores/site-document/models\";\r\nimport { IfComponent } from \"src/app/shared/components\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { MultiCheckboxSectionComponent } from \"./multi-checkbox-section/multi-checkbox-section.component\";\r\nimport { AngularDirective, withTemplateContextGuard } from \"src/app/shared/lifecycles\";\r\n\r\n@Directive({\r\n  selector: \"ng-template[questions]\",\r\n  standalone: true\r\n})\r\nexport class QuestionsTemplateDirective extends AngularDirective(withTemplateContextGuard<Question>) {\r\n  @Input()\r\n  questions!: Question[];\r\n}\r\n\r\n@Component({\r\n  selector: \"document-section[section]\",\r\n  template: `\r\n    <ion-label>{{ section.SectionTitle }}</ion-label>\r\n    <ng-container *rxIf=\"section.IsRepeatable\">\r\n      <ion-button color=\"secondary\" fill=\"clear\">\r\n        <ion-icon name=\"duplicate-outline\" />\r\n      </ion-button>\r\n      <ion-button color=\"secondary\" fill=\"clear\">\r\n        <ion-icon name=\"remove-circle-outline\" />\r\n      </ion-button>\r\n    </ng-container>\r\n\r\n    <if [condition]=\"section.SectionQuestiontype === QuestionType.MultiCheckbox\">\r\n      <multi-checkbox-section show [section]=\"section\" />\r\n\r\n      <ng-container else *rxFor=\"let question of section.Questions\">\r\n        <ng-container *ngTemplateOutlet=\"questionsTpl; context: { $implicit: question }\" />\r\n      </ng-container>\r\n    </if>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    NgTemplateOutlet,\r\n    IfComponent,\r\n    MultiCheckboxSectionComponent,\r\n    QuestionsTemplateDirective\r\n  ]\r\n})\r\nexport class DocumentSectionComponent {\r\n  QuestionType = QuestionType;\r\n\r\n  @Input()\r\n  section!: Section;\r\n\r\n  @ContentChild(QuestionsTemplateDirective, { read: TemplateRef }) \r\n  questionsTpl!: TemplateRef<unknown>;\r\n}\r\n",
            "selector": "ng-template[questions]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": []
        },
        {
            "name": "ReactiveDirective",
            "id": "directive-ReactiveDirective-880ed07caf69ca09455f8e952711a383e4e7d9534cc516d6ef9a1fee1994a4e511b9a63125d2f52850b93c76dc3fd49c5f4eb76b374d950066d7523154155e47",
            "file": "src/app/shared/lifecycles/lifecycle-directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive } from \"@angular/core\";\r\nimport { flow } from \"lodash-es\";\r\nimport { withNoop } from \"./with-noop\";\r\nimport { AnyFunction } from \"./types\";\r\n\r\n@Directive()\r\nclass ReactiveDirective {}\r\n\r\nexport function AngularDirective<T1 extends AnyFunction>(h1: T1): ReturnType<T1>\r\nexport function AngularDirective<T1 extends AnyFunction, T2 extends AnyFunction>(h1: T1, h2: T2): ReturnType<T1> & ReturnType<T2>\r\nexport function AngularDirective<T1 extends AnyFunction, T2 extends AnyFunction, T3 extends AnyFunction>(h1: T1, h2: T2, h3: T3): ReturnType<T1> & ReturnType<T2> & ReturnType<T3>\r\nexport function AngularDirective<T1 extends AnyFunction, T2 extends AnyFunction, T3 extends AnyFunction, T4 extends AnyFunction>(h1: T1, h2: T2, h3: T3, h4: T4): ReturnType<T1> & ReturnType<T2> & ReturnType<T3> & ReturnType<T4>\r\nexport function AngularDirective<T1 extends AnyFunction, T2 extends AnyFunction, T3 extends AnyFunction, T4 extends AnyFunction, T5 extends AnyFunction>(h1: T1, h2: T2, h3: T3, h4: T4, h5: T5): ReturnType<T1> & ReturnType<T2> & ReturnType<T3> & ReturnType<T4> & ReturnType<T5>\r\nexport function AngularDirective<T1 extends AnyFunction, T2 extends AnyFunction, T3 extends AnyFunction, T4 extends AnyFunction, T5 extends AnyFunction, T6 extends AnyFunction>(h1: T1, h2: T2, h3: T3, h4: T4, h5: T5, h6: T6): ReturnType<T1> & ReturnType<T2> & ReturnType<T3> & ReturnType<T4> & ReturnType<T5> & ReturnType<T6>\r\nexport function AngularDirective(): ReturnType<typeof withNoop> & ReactiveDirective;\r\nexport function AngularDirective(...args: AnyFunction[]): any {\r\n  if (args == null || args.length === 0) return ReactiveDirective;\r\n  \r\n  const withHooks = flow(args);\r\n  return withHooks(ReactiveDirective);\r\n}",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": []
        },
        {
            "name": "SignaturePadDirective",
            "id": "directive-SignaturePadDirective-1da0267139a8aa2e6121517ac4050fbb3a947ade01fd2538e5c752dc83f0647dacd50385143417137c7e3155718ac3ccd132a2ee4b846438880c892cb47f9f01",
            "file": "src/app/shared/components/signature-pad/signature-pad.component.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Directive, EventEmitter, Input, Output, ViewChild } from \"@angular/core\";\r\nimport { debounceTime, map, merge } from \"rxjs\";\r\nimport SignaturePad, { PointGroup } from \"signature_pad\";\r\nimport { AngularComponent, withAfterViewInit } from \"../../lifecycles\";\r\nimport { PushPipe } from \"@rx-angular/template/push\";\r\nimport { use } from \"../../rxjs/use\";\r\nimport { useElement, useParentElement } from \"../../angular/element\";\r\n\r\n@Directive({\r\n  selector: \"canvas[signature-pad]\",\r\n  standalone: true\r\n})\r\nexport class SignaturePadDirective {\r\n  element = useElement<HTMLCanvasElement>();\r\n\r\n  signaturePad = new SignaturePad(this.element, {\r\n    minWidth: 2,\r\n    maxWidth: 5,\r\n    backgroundColor: \"rgb(255,255,255)\"\r\n  });\r\n\r\n  @Input()\r\n  points?: PointGroup[] = [];\r\n\r\n  @Output()\r\n  pointsChange = new EventEmitter<PointGroup[]>();\r\n\r\n  ngOnInit() {\r\n    this.signaturePad.fromData(this.points || []);\r\n  }\r\n\r\n  dataPoints() {\r\n    return this.signaturePad.toData();\r\n  }\r\n\r\n  toDataUrl() {\r\n    return this.signaturePad.toDataURL();\r\n  }\r\n\r\n  clear() {\r\n    this.signaturePad.clear();\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: \"signature-pad\",\r\n  template: `\r\n    <canvas \r\n      signature-pad \r\n      [points]=\"points\"\r\n      class=\"border border-black bg-white\" \r\n      (window:resize)=\"resize.next()\"\r\n      [width]=\"width$ | push\"\r\n      [height]=\"height$ | push\">\r\n    </canvas>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [PushPipe, SignaturePadDirective]\r\n})\r\nexport class SignaturePadComponent extends AngularComponent(withAfterViewInit) {\r\n  @ViewChild(SignaturePadDirective)\r\n  signatureDirective?: SignaturePadDirective;\r\n\r\n  @Input()\r\n  points?: PointGroup[] = [];\r\n\r\n  parentElement = useParentElement();\r\n  resize = use();\r\n\r\n  width$ = merge(this.afterViewInit(), this.resize()).pipe(\r\n    debounceTime(300),\r\n    map(() => this.parentElement.offsetWidth - 2)\r\n  );\r\n\r\n  height$ = merge(this.afterViewInit(), this.resize()).pipe(\r\n    debounceTime(300),\r\n    map(() => this.parentElement.offsetHeight - 2)\r\n  );\r\n\r\n  dataPoints() {\r\n    return this.signatureDirective?.dataPoints();\r\n  }\r\n\r\n  toDataUrl() {\r\n    return this.signatureDirective?.toDataUrl();\r\n  }\r\n\r\n  clear() {\r\n    this.signatureDirective?.clear();\r\n  }\r\n}",
            "selector": "canvas[signature-pad]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "points",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "PointGroup[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "pointsChange",
                    "defaultValue": "new EventEmitter<PointGroup[]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "EventEmitter"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [
                {
                    "name": "element",
                    "defaultValue": "useElement<HTMLCanvasElement>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "signaturePad",
                    "defaultValue": "new SignaturePad(this.element, {\r\n    minWidth: 2,\r\n    maxWidth: 5,\r\n    backgroundColor: \"rgb(255,255,255)\"\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "clear",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "dataPoints",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 32,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toDataUrl",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 36,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ]
        },
        {
            "name": "TakePhotoDirective",
            "id": "directive-TakePhotoDirective-4943e1988081405feaad29d025431937e85a2af60303bbb94154efe9bcc7a807fba787ea98235d77a690dc680048881cacb4f3b7ed17607e1a7357277330220f",
            "file": "src/app/shared/directives/camera/take-photo/take-photo.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, EventEmitter, HostListener, Output } from \"@angular/core\";\r\nimport { Camera, CameraResultType, Photo } from \"@capacitor/camera\";\r\n\r\n@Directive({\r\n  selector: \"[takePhoto]\",\r\n  standalone: true\r\n})\r\nexport class TakePhotoDirective {\r\n  @Output(\"takePhoto\")\r\n  takePhoto = new EventEmitter<Photo>();\r\n\r\n  @HostListener(\"click\")\r\n  async take() {\r\n    const photo = await Camera.getPhoto({\r\n      resultType: CameraResultType.Base64\r\n    });\r\n    this.takePhoto.emit(photo);\r\n  }\r\n}\r\n",
            "selector": "[takePhoto]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "takePhoto",
                    "defaultValue": "new EventEmitter<Photo>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "EventEmitter"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "click",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "take",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'click'"
                        }
                    ],
                    "modifierKind": [
                        131
                    ]
                }
            ]
        },
        {
            "name": "UploadPhotoDirective",
            "id": "directive-UploadPhotoDirective-f797aded15eb523b9c696f792468c038ab265331bf4e5a4c77aef4fa959485ccd908008e16d8359afccc789476340d4d44489d818d91ec1077fa141f7c6a9894",
            "file": "src/app/shared/directives/camera/upload-photo/upload-photo.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, EventEmitter, HostListener, Output } from \"@angular/core\";\r\nimport { Camera, CameraResultType, CameraSource, Photo } from \"@capacitor/camera\";\r\n\r\n@Directive({\r\n  selector: \"[uploadPhoto]\",\r\n  standalone: true\r\n})\r\nexport class UploadPhotoDirective {\r\n  @Output(\"uploadPhoto\")\r\n  uploadPhoto = new EventEmitter<Photo>();\r\n\r\n  @HostListener(\"click\")\r\n  async upload() {\r\n    const photo = await Camera.getPhoto({\r\n      resultType: CameraResultType.Base64,\r\n      source: CameraSource.Photos\r\n    });\r\n    \r\n    this.uploadPhoto.emit(photo);\r\n  }\r\n}\r\n",
            "selector": "[uploadPhoto]",
            "providers": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "uploadPhoto",
                    "defaultValue": "new EventEmitter<Photo>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "EventEmitter"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "click",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "upload",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'click'"
                        }
                    ],
                    "modifierKind": [
                        131
                    ]
                }
            ]
        }
    ],
    "components": [
        {
            "name": "ActionerSelectComponent",
            "id": "component-ActionerSelectComponent-105aee29bc8fc5811d39e10d53e0100eefbcd7f743097dd94f242239e7e078fd348cf4000171bc6eeb490eeb143f9feee2543e8c6cc45510cc320d6b0af0764d",
            "file": "src/app/core/pages/document-builder/components/input-types/actioner-select/actioner-select.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "actioner-select",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-card>\n  <ion-card-header>\n    <ion-card-title class=\"text-center\">{{ title || \"To Action / Attention Of\" }}</ion-card-title>\n  </ion-card-header>\n  <ion-card-content>\n    <ion-list>\n      <ion-item [id]=\"id\" button>\n        <ion-label *rxLet=\"selectedActioner$; let actioner\" class=\"ion-text-wrap\">{{ actioner?.Name || \"Select an Actioner\" }}</ion-label>\n        <ion-icon name=\"person-outline\" slot=\"start\" />\n        <operative-list-modal [trigger]=\"id\" (select)=\"actionerId = $event.ID; actionerIdChange.emit($event.ID)\" />\n      </ion-item>\n    </ion-list>\n  </ion-card-content>\n</ion-card>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "actionerId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "hideMyself",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "actionerIdChange",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "id",
                    "defaultValue": "crypto.randomUUID()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "operatives$",
                    "defaultValue": "this.operativesStore.operatives$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "operativesStore",
                    "defaultValue": "inject(OperativesStore)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "selectedActioner$",
                    "defaultValue": "merge(\r\n    this.afterViewInit(), \r\n    this.input(\"actionerId\"), \r\n    this.actionerIdChange\r\n  ).pipe(\r\n    switchMap(() => this.operatives$),\r\n    map(operatives => operatives.find(o => o.ID === this.actionerId) || null),\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Operative | null>",
                    "optional": false,
                    "description": "",
                    "line": 54
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, inject } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Observable, map, merge, switchMap } from \"rxjs\";\r\nimport { Operative, OperativesStore } from \"src/app/core/stores/operative/operatives.store\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { AngularComponent, withAfterViewInit, withOnChanges } from \"src/app/shared/lifecycles\";\r\nimport { OperativeListModal } from \"src/app/shared/modals/operative-list/operative-list.modal\";\r\n\r\n@Component({\r\n  selector: \"actioner-select\",\r\n  template: `\r\n    <ion-card>\r\n      <ion-card-header>\r\n        <ion-card-title class=\"text-center\">{{ title || \"To Action / Attention Of\" }}</ion-card-title>\r\n      </ion-card-header>\r\n      <ion-card-content>\r\n        <ion-list>\r\n          <ion-item [id]=\"id\" button>\r\n            <ion-label *rxLet=\"selectedActioner$; let actioner\" class=\"ion-text-wrap\">{{ actioner?.Name || \"Select an Actioner\" }}</ion-label>\r\n            <ion-icon name=\"person-outline\" slot=\"start\" />\r\n            <operative-list-modal [trigger]=\"id\" (select)=\"actionerId = $event.ID; actionerIdChange.emit($event.ID)\" />\r\n          </ion-item>\r\n        </ion-list>\r\n      </ion-card-content>\r\n    </ion-card>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    OperativeListModal\r\n  ]\r\n})\r\nexport class ActionerSelectComponent extends AngularComponent(withAfterViewInit, withOnChanges) {\r\n  operativesStore = inject(OperativesStore);\r\n\r\n  operatives$ = this.operativesStore.operatives$;\r\n\r\n  id = crypto.randomUUID();\r\n\r\n  @Input()\r\n  title?: string;\r\n\r\n  @Input()\r\n  hideMyself: boolean = false;\r\n\r\n  @Input()\r\n  actionerId?: number;\r\n\r\n  @Output()\r\n  actionerIdChange = new EventEmitter<number>();\r\n\r\n  selectedActioner$: Observable<Operative | null> = merge(\r\n    this.afterViewInit(), \r\n    this.input(\"actionerId\"), \r\n    this.actionerIdChange\r\n  ).pipe(\r\n    switchMap(() => this.operatives$),\r\n    map(operatives => operatives.find(o => o.ID === this.actionerId) || null),\r\n  );\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-d41cfd42d13923078762ea410fbe2dca1567b4115e79eed159cf8ddb724e841d83ae01cc29a79701af47deae4a91fa8962e9322fcc26c1f1cbe8126ef1638a0c",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-app>\n  <ion-router-outlet></ion-router-outlet>\n</ion-app>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { IonicModule } from '@ionic/angular';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <ion-app>\n      <ion-router-outlet></ion-router-outlet>\n    </ion-app>\n  `,\n  standalone: true,\n  imports: [IonicModule],\n})\nexport class AppComponent {\n  constructor() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 14
            }
        },
        {
            "name": "AreaSelectComponent",
            "id": "component-AreaSelectComponent-cd4efa6fa4e0421727e3cfd82294d82804d828a043c54b1c95d5aed931f722598ba3a91d3c04aa74b915ed2eb31ba7ab2468f627b6a075c0038f5dbda021e561",
            "file": "src/app/core/pages/document-builder/components/question-types/22-area-select/area-select.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "area-select-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n    <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\n    <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\n  </ion-item>\n\n  <selectable\n    placeholder=\"Select\"\n    [title]=\"question.QuestionText\"\n    [items]=\"areas.data()\n      | push\n      | toStringValues\"\n    itemValue=\"Id\"\n    itemText=\"Name\"\n    [canClear]=\"!question.Required\" />\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "areas",
                    "defaultValue": "useAreas()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 47
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\nimport { IonicModule } from \"@ionic/angular\";\nimport { importRxTemplate } from \"src/app/shared/imports\";\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\nimport { SelectableComponent } from \"src/app/shared/components\";\nimport { Question } from \"src/app/core/stores/site-document/models\";\nimport { useAreas } from \"src/app/core/http/login.api\";\nimport { ToStringValuesPipe } from \"src/app/shared/pipes\";\n\n@Component({\n  selector: \"area-select-question\",\n  template: `\n    <ion-list>\n      <ion-item lines=\"none\">\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n        <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\n        <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\n      </ion-item>\n\n      <selectable\n        placeholder=\"Select\"\n        [title]=\"question.QuestionText\"\n        [items]=\"areas.data() \n          | push \n          | toStringValues\"\n        itemValue=\"Id\"\n        itemText=\"Name\"\n        [canClear]=\"!question.Required\" />\n    </ion-list>\n  `,\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    IonicModule,\n    ...importRxTemplate(),\n    QuestionTextComponent,\n    SelectableComponent,\n    CameraCaptureComponent,\n    FileUploadComponent,\n    ToStringValuesPipe\n  ]\n})\nexport class AreaSelectComponent {\n  @Input({ required: true })\n  question!: Question;\n  \n  areas = useAreas();\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "AssetGroupsAndTypesComponent",
            "id": "component-AssetGroupsAndTypesComponent-db9da4d8b1b0a06139acd44287a3c94ec522d86fa6e0c0f14af50cd4d3e67b2063012b6cb76157e36144971f1d5c2e65979482834090467d609d5cbcabd1ec69",
            "file": "src/app/core/pages/document-builder/components/question-types/25-asset-groups-and-types/asset-groups-and-types.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "asset-groups-and-types-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n    <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\n    <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\n  </ion-item>\n\n  <selectable\n    placeholder=\"Select\"\n    [title]=\"question.QuestionText\"\n    [items]=\"assetGroups.data() | push\"\n    itemValue=\"GroupId\"\n    itemText=\"GroupName\"\n    [canClear]=\"!question.Required\" />\n\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.CascadeOptionsText }}</question-text>\n  </ion-item>\n\n  <selectable\n    placeholder=\"Select\"\n    [title]=\"question.CascadeOptionsText\"\n    [items]=\"assetTypes.data()\n      | fuse: {\n        search: question.OptionVal,\n        keys: ['Id']\n      }\n      | push\"\n    itemValue=\"Id\"\n    itemText=\"Description\"\n    [canClear]=\"!question.Required\" />\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 60,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "assetGroups",
                    "defaultValue": "useAssetGroups()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "assetTypes",
                    "defaultValue": "useAssetTypes()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 63
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\nimport { SelectableComponent } from \"src/app/shared/components\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { FusePipe } from \"src/app/shared/pipes\";\r\nimport { useAssetGroups, useAssetTypes } from \"src/app/core/http/asset.api\";\r\n\r\n@Component({\r\n  selector: \"asset-groups-and-types-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n        <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\r\n        <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\r\n      </ion-item>\r\n      \r\n      <selectable \r\n        placeholder=\"Select\"\r\n        [title]=\"question.QuestionText\"\r\n        [items]=\"assetGroups.data() | push\"\r\n        itemValue=\"GroupId\"\r\n        itemText=\"GroupName\"\r\n        [canClear]=\"!question.Required\" />\r\n\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.CascadeOptionsText }}</question-text>\r\n      </ion-item>\r\n\r\n      <selectable\r\n        placeholder=\"Select\"\r\n        [title]=\"question.CascadeOptionsText\"\r\n        [items]=\"assetTypes.data()\r\n          | fuse: {\r\n            search: question.OptionVal,\r\n            keys: ['Id']\r\n          }\r\n          | push\"\r\n        itemValue=\"Id\"\r\n        itemText=\"Description\"\r\n        [canClear]=\"!question.Required\" />\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    QuestionTextComponent,\r\n    SelectableComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent,\r\n    FusePipe\r\n  ]\r\n})\r\nexport class AssetGroupsAndTypesComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n\r\n  assetGroups = useAssetGroups();\r\n  assetTypes = useAssetTypes();\r\n}\r\n\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "AssetInspectionSchedulesComponent",
            "id": "component-AssetInspectionSchedulesComponent-3e628cc3d4760469bd7934d056d7d9b8368f1acb242d361e6269406fa40b2e6c29e3f8fffd3d35f8b42f03d4f24d350701f54f9d2791f9cd09c852316249af80",
            "file": "src/app/core/pages/document-builder/components/question-types/26-asset-inspection-schedules/asset-inspection-schedules.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "asset-inspection-schedules-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n    <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\n    <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\n  </ion-item>\n\n  <selectable\n    placeholder=\"Select\"\n    [title]=\"question.QuestionText\"\n    [items]=\"schedules\"\n    itemValue=\"ScheduleID\"\n    itemText=\"ScheduleName\"\n    [canClear]=\"!question.Required\" />\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "schedules",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AssetInspectionSchedule[]",
                    "optional": false,
                    "description": "",
                    "line": 43
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\nimport { IonicModule } from \"@ionic/angular\";\nimport { importRxTemplate } from \"src/app/shared/imports\";\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\nimport { SelectableComponent } from \"src/app/shared/components\";\nimport { Question } from \"src/app/core/stores/site-document/models\";\nimport { AssetInspectionSchedule } from \"src/app/core/stores/asset/asset.store\";\n\n@Component({\n  selector: \"asset-inspection-schedules-question\",\n  template: `\n    <ion-list>\n      <ion-item lines=\"none\">\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n        <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\n        <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\n      </ion-item>\n\n      <selectable\n        placeholder=\"Select\"\n        [title]=\"question.QuestionText\"\n        [items]=\"schedules\"\n        itemValue=\"ScheduleID\"\n        itemText=\"ScheduleName\"\n        [canClear]=\"!question.Required\" />\n    </ion-list>\n  `,\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    IonicModule,\n    ...importRxTemplate(),\n    QuestionTextComponent,\n    SelectableComponent,\n    CameraCaptureComponent,\n    FileUploadComponent\n  ]\n})\nexport class AssetInspectionSchedulesComponent {\n  @Input({ required: true })\n  question!: Question;\n\n  schedules: AssetInspectionSchedule[] = [];\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "AssetListComponent",
            "id": "component-AssetListComponent-041ca05010b428fbf902ece4dcc39ad6ce6e90fef5cf468b5812c15dc047147b54707d3bd2faeb05a41e9746e041038ca9dd2b463baaf9c9886dd06ba17f8936",
            "file": "src/app/core/pages/document-builder/components/question-types/17-asset-list/asset-list.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "asset-list-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text>{{ question.QuestionText }}</question-text>\n    <ion-button *rxIf=\"isMobileApp\" fill=\"clear\" slot=\"end\">\n      <ion-icon name=\"scan-outline\" slots=\"icon-only\" />\n    </ion-button>\n    <ion-button [id]=\"id\" fill=\"clear\" slot=\"end\">\n      <asset-list-modal [trigger]=\"id\" (select)=\"select($event)\" />\n      <ion-icon name=\"search-outline\" slot=\"icon-only\" />\n    </ion-button>\n  </ion-item>\n</ion-list>\n\n<ion-list>\n  <ion-item-sliding *rxFor=\"let asset of question.Assets; last as isLast\">\n    <ion-item [lines]=\"isLast ? 'none' : 'inset'\" button>\n      <ion-label>{{ asset.AssetID }}: {{ asset.Name }}</ion-label>\n    </ion-item>\n\n    <ion-item-options side=\"end\">\n      <ion-item-option color=\"danger\" (click)=\"remove(asset.AssetID)\">\n        <ion-icon name=\"trash-outline\" slot=\"icon-only\" />\n      </ion-item-option>\n    </ion-item-options>\n  </ion-item-sliding>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "id",
                    "defaultValue": "crypto.randomUUID()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "isMobileApp",
                    "defaultValue": "isMobileApp()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 55
                }
            ],
            "methodsClass": [
                {
                    "name": "remove",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "select",
                    "args": [
                        {
                            "name": "asset",
                            "type": "Asset",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "asset",
                            "type": "Asset",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { isMobileApp } from \"src/app/shared/plugins/platform.plugin\";\r\nimport { QuestionTextComponent } from \"../extras\";\r\nimport { AssetListModal } from \"src/app/shared/modals/asset-list/asset-list.modal\";\r\nimport { Asset } from \"src/app/core/stores/asset/asset.store\";\r\n\r\n@Component({\r\n  selector: \"asset-list-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text>{{ question.QuestionText }}</question-text>\r\n        <ion-button *rxIf=\"isMobileApp\" fill=\"clear\" slot=\"end\">\r\n          <ion-icon name=\"scan-outline\" slots=\"icon-only\" />\r\n        </ion-button>\r\n        <ion-button [id]=\"id\" fill=\"clear\" slot=\"end\">\r\n          <asset-list-modal [trigger]=\"id\" (select)=\"select($event)\" />\r\n          <ion-icon name=\"search-outline\" slot=\"icon-only\" />\r\n        </ion-button>\r\n      </ion-item>\r\n    </ion-list>\r\n\r\n    <ion-list>\r\n      <ion-item-sliding *rxFor=\"let asset of question.Assets; last as isLast\">\r\n        <ion-item [lines]=\"isLast ? 'none' : 'inset'\" button>\r\n          <ion-label>{{ asset.AssetID }}: {{ asset.Name }}</ion-label>\r\n        </ion-item>\r\n\r\n        <ion-item-options side=\"end\">\r\n          <ion-item-option color=\"danger\" (click)=\"remove(asset.AssetID)\">\r\n            <ion-icon name=\"trash-outline\" slot=\"icon-only\" />\r\n          </ion-item-option>\r\n        </ion-item-options>\r\n      </ion-item-sliding>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    QuestionTextComponent,\r\n    AssetListModal\r\n  ]\r\n})\r\nexport class AssetListComponent {\r\n  id = crypto.randomUUID();\r\n\r\n  @Input({ required: true })\r\n  question!: Question;\r\n\r\n  isMobileApp = isMobileApp();\r\n\r\n  select(asset: Asset) {\r\n    if (this.question.Assets.find(a => a.AssetID === asset.Id) == null)\r\n      this.question.Assets.push({\r\n        AssetID: asset.Id,\r\n        Name: asset.Registration || \"\",\r\n        Tag: \"\"\r\n      });\r\n  }\r\n\r\n  remove(id: number) {\r\n    this.question.Assets = this.question.Assets.filter(a => a.AssetID !== id);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "AssetListModal",
            "id": "component-AssetListModal-ad2d670511bd13a69e0ceb98ffa0877fafcc3dbb9876437ff8ac9c312fde8e6aba64bfe7e293457d521f1a43e5275784922468a46744e28f31b51c44d220e6ea",
            "file": "src/app/shared/modals/asset-list/asset-list.modal.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "asset-list-modal",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-modal #modal [trigger]=\"trigger\" [isOpen]=\"isOpen\">\n  <ng-template>\n    <ion-header>\n      <ion-toolbar>\n        <ion-title class=\"ion-text-center\">Select an Asset</ion-title>\n        <ion-buttons slot=\"end\">\n          <ion-button (click)=\"modal.dismiss()\" [unpatch]>\n            <ion-icon name=\"close-outline\" slot=\"icon-only\" />\n          </ion-button>\n        </ion-buttons>\n      </ion-toolbar>\n\n      <ion-toolbar>\n        <ion-segment [(ngModel)]=\"segment\" class=\"w-full\">\n          <ion-segment-button value=\"local\">\n            <ion-icon name=\"phone-portrait-outline\" />\n          </ion-segment-button>\n          <ion-segment-button value=\"online\">\n            <ion-icon name=\"wifi-outline\" />\n          </ion-segment-button>\n        </ion-segment>\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content [ngSwitch]=\"segment\" class=\"ion-padding\">\n      <local-asset-search *ngSwitchCase=\"'local'\" (select)=\"select.emit($event); modal.dismiss();\" />\n      <online-asset-search *ngSwitchCase=\"'online'\" />\n    </ion-content>\n  </ng-template>\n</ion-modal>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 58,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "select",
                    "defaultValue": "new EventEmitter<Asset>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 61,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "segment",
                    "defaultValue": "\"local\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"local\" | \"online\"",
                    "optional": false,
                    "description": "",
                    "line": 63
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { importNgSwitch, importRxTemplate } from \"../../imports\";\r\nimport { LocalAssetSearchComponent, OnlineAssetSearchComponent } from \"./components\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { Asset } from \"src/app/core/stores/asset/asset.store\";\r\n\r\n@Component({\r\n  selector: \"asset-list-modal\",\r\n  template: `\r\n    <ion-modal #modal [trigger]=\"trigger\" [isOpen]=\"isOpen\">\r\n      <ng-template>\r\n        <ion-header>\r\n          <ion-toolbar>\r\n            <ion-title class=\"ion-text-center\">Select an Asset</ion-title>\r\n            <ion-buttons slot=\"end\">\r\n              <ion-button (click)=\"modal.dismiss()\" [unpatch]>\r\n                <ion-icon name=\"close-outline\" slot=\"icon-only\" />\r\n              </ion-button>\r\n            </ion-buttons>\r\n          </ion-toolbar>\r\n\r\n          <ion-toolbar>\r\n            <ion-segment [(ngModel)]=\"segment\" class=\"w-full\">\r\n              <ion-segment-button value=\"local\">\r\n                <ion-icon name=\"phone-portrait-outline\" />\r\n              </ion-segment-button>\r\n              <ion-segment-button value=\"online\">\r\n                <ion-icon name=\"wifi-outline\" />\r\n              </ion-segment-button>\r\n            </ion-segment>\r\n          </ion-toolbar>\r\n        </ion-header>\r\n\r\n        <ion-content [ngSwitch]=\"segment\" class=\"ion-padding\">\r\n          <local-asset-search *ngSwitchCase=\"'local'\" (select)=\"select.emit($event); modal.dismiss();\" />\r\n          <online-asset-search *ngSwitchCase=\"'online'\" />\r\n        </ion-content>\r\n      </ng-template>\r\n    </ion-modal>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    ...importNgSwitch(),\r\n    FormsModule,\r\n    LocalAssetSearchComponent,\r\n    OnlineAssetSearchComponent\r\n  ]\r\n})\r\nexport class AssetListModal {\r\n  @Input({ required: true })\r\n  trigger!: string;\r\n\r\n  @Input()\r\n  isOpen: boolean = false;\r\n\r\n  @Output()\r\n  select = new EventEmitter<Asset>();\r\n\r\n  segment: \"local\" | \"online\" = \"local\";\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CameraCaptureComponent",
            "id": "component-CameraCaptureComponent-e52830438fd3ac22616aba2830350a32e42c7390141c8502ce44440d4e9e064beaaa617edde363029a2b17978960bdcf6360a4647fcd1690d68e08a12d9a0b47",
            "file": "src/app/core/pages/document-builder/components/question-types/extras/camera-capture/camera-capture.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "camera-capture",
            "styleUrls": [],
            "styles": [],
            "template": "<if [condition]=\"base64Img == null\">\n  <camera show (takePhoto)=\"take($event)\" fill=\"clear\">\n    <ion-icon name=\"camera-outline\" slot=\"icon-only\" />\n  </camera>\n\n  <ng-container else>\n    <ion-button [src]=\"base64Img!\" fill=\"clear\">\n      <ion-icon name=\"eye-outline\" slot=\"icon-only\" />\n    </ion-button>\n    <ion-button (click)=\"remove()\" fill=\"clear\" color=\"danger\">\n      <ion-icon name=\"close-outline\" slot=\"icon-only\" />\n    </ion-button>\n  </ng-container>\n</if>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "base64Img",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "base64ImgChange",
                    "defaultValue": "new EventEmitter<string | null>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "remove",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "take",
                    "args": [
                        {
                            "name": "base64Img",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "base64Img",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { CameraComponent, IfComponent } from \"src/app/shared/components\";\r\nimport { PhotoViewerDirective } from \"src/app/shared/directives\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\n\r\n@Component({\r\n  selector: \"camera-capture\",\r\n  template: `\r\n    <if [condition]=\"base64Img == null\">\r\n      <camera show (takePhoto)=\"take($event)\" fill=\"clear\">\r\n        <ion-icon name=\"camera-outline\" slot=\"icon-only\" />\r\n      </camera>\r\n\r\n      <ng-container else>\r\n        <ion-button [src]=\"base64Img!\" fill=\"clear\">\r\n          <ion-icon name=\"eye-outline\" slot=\"icon-only\" />\r\n        </ion-button>\r\n        <ion-button (click)=\"remove()\" fill=\"clear\" color=\"danger\">\r\n          <ion-icon name=\"close-outline\" slot=\"icon-only\" />\r\n        </ion-button>\r\n      </ng-container>\r\n    </if>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    IfComponent,\r\n    CameraComponent,\r\n    PhotoViewerDirective\r\n  ]\r\n})\r\nexport class CameraCaptureComponent {\r\n\r\n  @Input()\r\n  base64Img: string | null = null;\r\n\r\n  @Output()\r\n  base64ImgChange = new EventEmitter<string | null>();\r\n\r\n  take(base64Img: string) {\r\n    this.base64Img = base64Img || null;\r\n    this.base64ImgChange.emit(this.base64Img);\r\n  }\r\n\r\n  remove() {\r\n    this.base64Img = null;\r\n    this.base64ImgChange.emit(this.base64Img);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CameraComponent",
            "id": "component-CameraComponent-b78ac01393857956967f0f8ca994fda8482eb9021d08a2340447491753eb7d30d56065ec2e7e4768a03c78edcc2aec3a0eac08eb8e63362c0f314abf67bb1773",
            "file": "src/app/shared/components/camera/camera.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "camera",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-button [fill]=\"fill\" [expand]=\"expand\" [color]=\"color\">\n  <if [condition]=\"isMobileApp\">\n    <div show (click)=\"take()\"></div>\n    <upload else (uploadFiles)=\"upload($event)\" accept=\"image/*\" />\n  </if>\n  <ng-content></ng-content>\n</ion-button>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "expand",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "\"block\" | \"full\"",
                    "decorators": []
                },
                {
                    "name": "fill",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "\"clear\" | \"outline\" | \"solid\"",
                    "decorators": []
                },
                {
                    "name": "options",
                    "defaultValue": "{\r\n    resultType: CameraResultType.Base64\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "ImageOptions",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "takePhoto",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "isMobileApp",
                    "defaultValue": "isMobileApp()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                }
            ],
            "methodsClass": [
                {
                    "name": "take",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                },
                {
                    "name": "upload",
                    "args": [
                        {
                            "name": "files",
                            "type": "DataUrlFile[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 56,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "files",
                            "type": "DataUrlFile[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { importRxTemplate } from \"../../imports\";\r\nimport { isMobileApp } from \"../../plugins/platform.plugin\";\r\nimport { IfComponent } from \"../if/if.component\";\r\nimport { UploadComponent } from \"../upload/upload.component\";\r\nimport { Camera, CameraResultType, ImageOptions } from \"@capacitor/camera\";\r\nimport { DataUrlFile } from \"../../models/files/data-url-file.model\";\r\n\r\n@Component({\r\n  selector: \"camera\",\r\n  template: `\r\n    <ion-button [fill]=\"fill\" [expand]=\"expand\" [color]=\"color\">\r\n      <if [condition]=\"isMobileApp\">\r\n        <div show (click)=\"take()\"></div>\r\n        <upload else (uploadFiles)=\"upload($event)\" accept=\"image/*\" />\r\n      </if>\r\n      <ng-content></ng-content>\r\n    </ion-button>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule, \r\n    ...importRxTemplate(),\r\n    IfComponent,\r\n    UploadComponent\r\n  ]\r\n})\r\nexport class CameraComponent {\r\n  @Input()\r\n  fill?: \"clear\" | \"outline\" | \"solid\";\r\n\r\n  @Input()\r\n  expand?: \"block\" | \"full\";\r\n\r\n  @Input()\r\n  color?: string;\r\n\r\n  @Output()\r\n  takePhoto = new EventEmitter<string>();\r\n  \r\n  isMobileApp = isMobileApp();\r\n\r\n  @Input()\r\n  options: ImageOptions = {\r\n    resultType: CameraResultType.Base64\r\n  };\r\n\r\n  async take() {\r\n    const photo = await Camera.getPhoto(this.options);\r\n    \r\n    this.takePhoto.emit(photo.base64String);\r\n  }\r\n\r\n  upload(files: DataUrlFile[]) {\r\n    if (files[0] != null)\r\n      this.takePhoto.emit(files[0].dataUrl);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CascadeSelectComponent",
            "id": "component-CascadeSelectComponent-437bba34513c5d61a4991d4420f33b30a710e5580a90ed29613bbab1d93c8a17fda7f58c25d65c6f24440204b07f43e00cf32ba8444d0d0810a8637650577460",
            "file": "src/app/core/pages/document-builder/components/question-types/13-cascade-select/cascade-select.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cascade-select-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n    <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\n    <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\n  </ion-item>\n  <selectable\n    placeholder=\"Select\"\n    [title]=\"question.QuestionText\"\n    [items]=\"question.Options\"\n    itemValue=\"Val\"\n    itemText=\"Text\"\n    [canClear]=\"!question.Required\" />\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.CascadeOptionsText }}</question-text>\n  </ion-item>\n  <selectable\n    placeholder=\"Select\"\n    [title]=\"question.CascadeOptionsText\"\n    [items]=\"question.CascadeOptions\"\n    itemValue=\"Val\"\n    itemText=\"Text\"\n    [canClear]=\"!question.Required\" />\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\nimport { SelectableComponent } from \"src/app/shared/components\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\n\r\n@Component({\r\n  selector: \"cascade-select-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n        <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\r\n        <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\r\n      </ion-item>\r\n      <selectable \r\n        placeholder=\"Select\"\r\n        [title]=\"question.QuestionText\"\r\n        [items]=\"question.Options\"\r\n        itemValue=\"Val\"\r\n        itemText=\"Text\"\r\n        [canClear]=\"!question.Required\" />\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.CascadeOptionsText }}</question-text>\r\n      </ion-item>\r\n      <selectable\r\n        placeholder=\"Select\"\r\n        [title]=\"question.CascadeOptionsText\"\r\n        [items]=\"question.CascadeOptions\"\r\n        itemValue=\"Val\"\r\n        itemText=\"Text\"\r\n        [canClear]=\"!question.Required\" />\r\n    </ion-list>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  standalone: true,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    QuestionTextComponent,\r\n    SelectableComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent\r\n  ]\r\n})\r\nexport class CascadeSelectComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CascadeSelectTextComponent",
            "id": "component-CascadeSelectTextComponent-7525163140fc9971275d972ae23b9eae9dd4ae4f0b4a9ab9c1cadf8a1307de6ff3d9729d8f1e32c007084ebdb44c35dedcb8e18e757c5b600cc12bcee757f2c9",
            "file": "src/app/core/pages/document-builder/components/question-types/30-cascade-select-text/cascade-select-text.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cascade-select-text-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n    <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\n    <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\n  </ion-item>\n  <selectable\n    placeholder=\"Select\"\n    [title]=\"question.QuestionText\"\n    [items]=\"question.Options\"\n    itemValue=\"Val\"\n    itemText=\"Text\"\n    [canClear]=\"!question.Required\" />\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.CascadeOptionsText }}</question-text>\n  </ion-item>\n  <selectable\n    placeholder=\"Select\"\n    [title]=\"question.CascadeOptionsText\"\n    [items]=\"question.CascadeOptions\"\n    itemValue=\"Val\"\n    itemText=\"Text\"\n    [canClear]=\"!question.Required\" />\n  <ion-item>\n    <ion-input\n      [label]=\"question.CommentsText || 'Comments'\"\n      labelPlacement=\"floating\"\n      type=\"text\" />\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\nimport { SelectableComponent } from \"src/app/shared/components\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\n\r\n@Component({\r\n  selector: \"cascade-select-text-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n        <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\r\n        <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\r\n      </ion-item>\r\n      <selectable \r\n        placeholder=\"Select\"\r\n        [title]=\"question.QuestionText\"\r\n        [items]=\"question.Options\"\r\n        itemValue=\"Val\"\r\n        itemText=\"Text\"\r\n        [canClear]=\"!question.Required\" />\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.CascadeOptionsText }}</question-text>\r\n      </ion-item>\r\n      <selectable\r\n        placeholder=\"Select\"\r\n        [title]=\"question.CascadeOptionsText\"\r\n        [items]=\"question.CascadeOptions\"\r\n        itemValue=\"Val\"\r\n        itemText=\"Text\"\r\n        [canClear]=\"!question.Required\" />\r\n      <ion-item>\r\n        <ion-input \r\n          [label]=\"question.CommentsText || 'Comments'\" \r\n          labelPlacement=\"floating\" \r\n          type=\"text\" />\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  standalone: true,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    QuestionTextComponent,\r\n    SelectableComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent\r\n  ]\r\n})\r\nexport class CascadeSelectTextComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CategoryActionerSelectComponent",
            "id": "component-CategoryActionerSelectComponent-eb1d8b6331acacda29b6edc2e5779da65f2b29488cf3e49cea3c179f97b81b111a016b62f62052bded0f9277c253db6d1c56973d2eed62abccb5664505c9bf0b",
            "file": "src/app/core/pages/document-builder/components/input-types/category-actioner-select/category-actioner-select.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "category-actioner-select",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-card *rxIf=\"categoryActioners != null\">\n  <ion-card-header>\n    <ion-card-title class=\"text-center\">{{ title || \"Category Actioner\" }}</ion-card-title>\n  </ion-card-header>\n  <ion-card-content>\n    <ion-list>\n      <selectable\n        [title]=\"title || 'Category Actioner'\"\n        placeholder=\"Actioner\"\n        [items]=\"categoryActioners!.data() | push\"\n        [value]=\"actionerId\"\n        itemValue=\"CategoryId\"\n        itemText=\"Name\" />\n    </ion-list>\n  </ion-card-content>\n</ion-card>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "hideMyself",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "string",
                    "decorators": []
                },
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "number",
                    "decorators": []
                },
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "actionerIdChange",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 57,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "categoryActioners",
                    "defaultValue": "this.siteId != null \r\n    ? useCategoryActioners(this.siteId)\r\n    : null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "siteId",
                    "defaultValue": "param(\"siteId\")?.toNumber()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { useCategoryActioners } from \"src/app/core/stores/category-actioners/category-actioners.store\";\r\nimport { SelectableComponent } from \"src/app/shared/components\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { AngularComponent, withAfterViewInit, withOnChanges } from \"src/app/shared/lifecycles\";\r\nimport { param } from \"src/app/shared/route\";\r\n\r\n@Component({\r\n  selector: \"category-actioner-select\",\r\n  template: `\r\n    <ion-card *rxIf=\"categoryActioners != null\">\r\n      <ion-card-header>\r\n        <ion-card-title class=\"text-center\">{{ title || \"Category Actioner\" }}</ion-card-title>\r\n      </ion-card-header>\r\n      <ion-card-content>\r\n        <ion-list>\r\n          <selectable \r\n            [title]=\"title || 'Category Actioner'\"\r\n            placeholder=\"Actioner\"\r\n            [items]=\"categoryActioners!.data() | push\"\r\n            [value]=\"actionerId\"\r\n            itemValue=\"CategoryId\"\r\n            itemText=\"Name\" />\r\n        </ion-list>\r\n      </ion-card-content>\r\n    </ion-card>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    SelectableComponent\r\n  ]\r\n})\r\nexport class CategoryActionerSelectComponent extends AngularComponent(withAfterViewInit, withOnChanges) {\r\n  siteId = param(\"siteId\")?.toNumber();\r\n\r\n  categoryActioners = this.siteId != null \r\n    ? useCategoryActioners(this.siteId)\r\n    : null;\r\n\r\n  @Input()\r\n  title?: string;\r\n\r\n  @Input()\r\n  hideMyself: boolean = false;\r\n\r\n  @Input({ required: true })\r\n  categoryId!: number;\r\n\r\n  @Input({ required: true })\r\n  actionerId?: number;\r\n\r\n  @Output()\r\n  actionerIdChange = new EventEmitter<number>();\r\n\r\n  // categoryActioners$: Observable<CategoryActioner[]> = merge(this.afterViewInit(), this.input(\"categoryId\")).pipe(\r\n  //   switchMap(() => this.categoryActionersStore.categoryActionersById$(this.categoryId))\r\n  // );\r\n\r\n  // visibleCatActioners$: Observable<CategoryActioner[]> = merge(this.afterViewInit(), this.input(\"hideMyself\")).pipe(\r\n  //   switchMap(() => combineLatest({\r\n  //     user: this.userStore.user$,\r\n  //     catActioners: this.categoryActioners$\r\n  //   })),\r\n  //   map(({ user, catActioners }) => this.hideMyself \r\n  //     ? catActioners.filter(ca => ca.Id === user!.Id)\r\n  //     : catActioners\r\n  //   )\r\n  // );\r\n\r\n  // selectedActioner$: Observable<CategoryActioner | null> = merge(this.afterViewInit(), this.input(\"actionerId\")).pipe(\r\n  //   switchMap(() => this.categoryActioners$),\r\n  //   map(catActioners => catActioners.find(ca => ca.Id === this.actionerId) || null)\r\n  // );\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CheckboxComponent",
            "id": "component-CheckboxComponent-681b08dd2d6c84492f17ed4f2e4cfbad76cfde84db122c1db2f62ed629ad6da996de5324d7e6a1f743a057f0aa204e737c94fdc78ef977f9ad0239393fbe0eff",
            "file": "src/app/core/pages/document-builder/components/question-types/01-checkbox/checkbox.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "checkbox-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-item lines=\"none\">\n  <ion-checkbox [(ngModel)]=\"question.YesNoNA\" aria-label=\"\" slot=\"start\" />\n  <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n  <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\n  <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\n</ion-item>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\nimport { FormsModule } from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: 'checkbox-question',\r\n  template: `\r\n    <ion-item lines=\"none\">\r\n      <ion-checkbox [(ngModel)]=\"question.YesNoNA\" aria-label=\"\" slot=\"start\" />\r\n      <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n      <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\r\n      <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\r\n    </ion-item>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    FormsModule,\r\n    ...importRxTemplate(),\r\n    QuestionTextComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent\r\n  ]\r\n})\r\nexport class CheckboxComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CheckboxTextboxComponent",
            "id": "component-CheckboxTextboxComponent-df280acb245ae18795d093d576844aeaddab2c1c201b567876ca5931630ec097a67c3e67cd59de231bd1a576c34917373a641597b8db627b995f24a043a7d305",
            "file": "src/app/core/pages/document-builder/components/question-types/06-checkbox-textbox/checkbox-textbox.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "checkbox-question-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <ion-checkbox [(ngModel)]=\"question.YesNoNA\" aria-label=\"\" slot=\"start\"></ion-checkbox>\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n    <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\n    <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\n  </ion-item>\n\n  <ion-textarea [(ngModel)]=\"question.AnswerText\" label=\"text:\" labelPlacement=\"stacked\" rows=\"3\" fill=\"outline\" />\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\nimport { FormsModule } from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: \"checkbox-question-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <ion-checkbox [(ngModel)]=\"question.YesNoNA\" aria-label=\"\" slot=\"start\"></ion-checkbox>\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n        <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\r\n        <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\r\n      </ion-item>\r\n\r\n      <ion-textarea [(ngModel)]=\"question.AnswerText\" label=\"text:\" labelPlacement=\"stacked\" rows=\"3\" fill=\"outline\" />\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    FormsModule,\r\n    QuestionTextComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent,\r\n  ]\r\n})\r\nexport class CheckboxTextboxComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ChildDocumentCardComponent",
            "id": "component-ChildDocumentCardComponent-aab23fd00ec0aa75dfb7bb2c48659d33597ee4344914fef2da02c39e0dd71c84420c27cbdf7125433929124c9b88ab3f279b656307370650163cc944991e9610",
            "file": "src/app/core/pages/document-builder/components/child-document-card/child-document-card.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "child-document-card[document]",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-list-header>Action Document</ion-list-header>\n  <ion-item lines=\"none\">\n    <ion-label class=\"ion-text-wrap\">\n      {{ childTemplate.DocumentTitle }}\n    </ion-label>\n    <ion-button (click)=\"open()\">\n      <ion-icon name=\"pencil-outline\" slot=\"icon-only\" />\n    </ion-button>\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "SiteDocument",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "open",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { SiteDocument } from \"src/app/core/stores/site-document/models\";\r\n\r\n@Component({\r\n  selector: \"child-document-card[document]\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-list-header>Action Document</ion-list-header>\r\n      <ion-item lines=\"none\">\r\n        <ion-label class=\"ion-text-wrap\">\r\n          {{ childTemplate.DocumentTitle }}\r\n        </ion-label>\r\n        <ion-button (click)=\"open()\">\r\n          <ion-icon name=\"pencil-outline\" slot=\"icon-only\" />\r\n        </ion-button>\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [IonicModule]\r\n})\r\nexport class ChildDocumentCardComponent {\r\n  @Input({ required: true })\r\n  childTemplate!: SiteDocument;\r\n\r\n  open() {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CompanyActionerSelectComponent",
            "id": "component-CompanyActionerSelectComponent-20c32c85d24088ebb7f77556e583f7d5710b17fd2a947e4d2708ec7de78f857bd2c719f5f55ca6cb72d5fe1e0198de369167f8398eb4c5485427be76f0711438",
            "file": "src/app/core/pages/document-builder/components/input-types/company-actioner-select/company-actioner-select.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "company-actioner-select",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-card>\n  <ion-card-header>\n    <ion-card-title class=\"text-center\">{{ title || \"Company Actioners\" }}</ion-card-title>\n  </ion-card-header>\n  <ion-card-content>\n    <ion-list>\n      <selectable\n        [title]=\"title || 'Company Actioners'\"\n        placeholder=\"Actioners\"\n        [items]=\"companies.data() | push\"\n        [value]=\"companyId\"\n        (valueChange)=\"companyChange($event)\"\n        itemValue=\"Id\"\n        itemText=\"Name\"\n        [canClear]=\"false\" />\n    </ion-list>\n  </ion-card-content>\n</ion-card>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "companyId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "companyIdChange",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "companies",
                    "defaultValue": "useCompanies()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 48
                }
            ],
            "methodsClass": [
                {
                    "name": "companyChange",
                    "args": [
                        {
                            "name": "companyId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "companyId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { useCompanies } from \"src/app/core/http/login.api\";\r\nimport { SelectableComponent } from \"src/app/shared/components/selectable/selectable.component\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { AngularComponent, withAfterViewInit, withOnChanges } from \"src/app/shared/lifecycles\";\r\n\r\n@Component({\r\n  selector: \"company-actioner-select\",\r\n  template: `\r\n    <ion-card>\r\n      <ion-card-header>\r\n        <ion-card-title class=\"text-center\">{{ title || \"Company Actioners\" }}</ion-card-title>\r\n      </ion-card-header>\r\n      <ion-card-content>\r\n        <ion-list>\r\n          <selectable \r\n            [title]=\"title || 'Company Actioners'\" \r\n            placeholder=\"Actioners\" \r\n            [items]=\"companies.data() | push\"\r\n            [value]=\"companyId\"\r\n            (valueChange)=\"companyChange($event)\"\r\n            itemValue=\"Id\"\r\n            itemText=\"Name\"\r\n            [canClear]=\"false\" />\r\n        </ion-list>\r\n      </ion-card-content>\r\n    </ion-card>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule, \r\n    ...importRxTemplate(),\r\n    SelectableComponent\r\n  ]\r\n})\r\nexport class CompanyActionerSelectComponent extends AngularComponent(withAfterViewInit, withOnChanges) {\r\n  @Input()\r\n  title?: string;\r\n\r\n  @Input()\r\n  companyId?: number;\r\n\r\n  @Output()\r\n  companyIdChange = new EventEmitter<number>();\r\n\r\n  companies = useCompanies();\r\n\r\n  companyChange(companyId: number) {\r\n    this.companyId = companyId;\r\n    this.companyIdChange.emit(this.companyId);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CompanySelectComponent",
            "id": "component-CompanySelectComponent-d45a3f3455d3bb1ba65faeee223951715a2798116b23e1bb04dbb3d81aa7a1e1c0a76662574725f6494947ab88c9e10a37e161126d98065195741bce20c9bc65",
            "file": "src/app/core/pages/document-builder/components/question-types/21-company-select/company-select.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "company-select-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n    <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\n    <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\n  </ion-item>\n\n  <selectable\n    placeholder=\"Select\"\n    [title]=\"question.QuestionText\"\n    [items]=\"companies.data()\n      | push\n      | toStringValues\"\n    [(value)]=\"question.OptionVal\"\n    itemValue=\"Id\"\n    itemText=\"Name\"\n    [canClear]=\"!question.Required\" />\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "companies",
                    "defaultValue": "useCompanies()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 45
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\nimport { SelectableComponent } from \"src/app/shared/components\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { ToStringValuesPipe } from \"src/app/shared/pipes\";\r\nimport { useCompanies } from \"src/app/core/http/login.api\";\r\n\r\n@Component({\r\n  selector: \"company-select-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n        <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\r\n        <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\r\n      </ion-item>\r\n\r\n      <selectable\r\n        placeholder=\"Select\"\r\n        [title]=\"question.QuestionText\"\r\n        [items]=\"companies.data() \r\n          | push \r\n          | toStringValues\"\r\n        [(value)]=\"question.OptionVal\"\r\n        itemValue=\"Id\"\r\n        itemText=\"Name\"\r\n        [canClear]=\"!question.Required\" />\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    QuestionTextComponent,\r\n    SelectableComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent,\r\n    ToStringValuesPipe\r\n  ]\r\n})\r\nexport class CompanySelectComponent {\r\n  companies = useCompanies();\r\n\r\n  @Input({ required: true })\r\n  question!: Question;\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "DateComponent",
            "id": "component-DateComponent-4376b066994fcea4c0256c46398e1ad61e9cb9fd12810a11edc3688771b6566881862a642f6cc3ccc5c8a8df61a8f3119978fceb6e766219bbe0a34a467588b4",
            "file": "src/app/core/pages/document-builder/components/question-types/08-date/date.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "date-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n  </ion-item>\n  <datetime-picker\n    [(datetime)]=\"question.DateAndTime\"\n    presentation=\"date\"\n    [min]=\"minDate() | push\"\n    [max]=\"maxDate() | push\" />\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "maxDate",
                    "defaultValue": "this.maxRule(max => max != null\r\n    ? new Date().addHours(+max.Value)\r\n    : null\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "maxRule",
                    "defaultValue": "using(this.afterViewInit(), this.input(\"question\"))\r\n    .calculate(() => this.question.ValidationData.find(rule => rule.Key === \"Max\"))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "minDate",
                    "defaultValue": "this.minRule(min => min != null \r\n    ? new Date().subtrackHours(+min.Value)\r\n    : null\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "minRule",
                    "defaultValue": "using(this.afterViewInit(), this.input(\"question\"))\r\n    .calculate(() => this.question.ValidationData.find(rule => rule.Key === \"Min\"))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { DatetimePickerComponent } from \"src/app/shared/components/datetime-picker/datetime-picker.component\";\r\nimport { QuestionTextComponent } from \"../extras\";\r\nimport { AngularComponent, withAfterViewInit, withOnChanges } from \"src/app/shared/lifecycles\";\r\nimport { using } from \"src/app/shared/rxjs\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\n\r\n@Component({\r\n  selector: \"date-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n      </ion-item>\r\n      <datetime-picker \r\n        [(datetime)]=\"question.DateAndTime\" \r\n        presentation=\"date\"\r\n        [min]=\"minDate() | push\"\r\n        [max]=\"maxDate() | push\" />\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    QuestionTextComponent,\r\n    DatetimePickerComponent\r\n  ]\r\n})\r\nexport class DateComponent extends AngularComponent(withAfterViewInit, withOnChanges) {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n\r\n  minRule = using(this.afterViewInit(), this.input(\"question\"))\r\n    .calculate(() => this.question.ValidationData.find(rule => rule.Key === \"Min\"));\r\n\r\n  maxRule = using(this.afterViewInit(), this.input(\"question\"))\r\n    .calculate(() => this.question.ValidationData.find(rule => rule.Key === \"Max\"));\r\n\r\n  minDate = this.minRule(min => min != null \r\n    ? new Date().subtrackHours(+min.Value)\r\n    : null\r\n  );\r\n\r\n  maxDate = this.maxRule(max => max != null\r\n    ? new Date().addHours(+max.Value)\r\n    : null\r\n  );\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "DatetimeComponent",
            "id": "component-DatetimeComponent-2922a1b9dbeb211fd7b3175ceeeb5bdd9f047dc81bb5e7516cb1deeead11cce83a856a1be06449a0f0ed4c9f3c2e88f8ce949ffd576f0161ecbae8b0b8fe1533",
            "file": "src/app/core/pages/document-builder/components/question-types/09-datetime/datetime.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "datetime-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n  </ion-item>\n  <datetime-picker [(datetime)]=\"question.DateAndTime\" />\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { DatetimePickerComponent } from \"src/app/shared/components/datetime-picker/datetime-picker.component\";\r\nimport { QuestionTextComponent } from \"../extras\";\r\n\r\n@Component({\r\n  selector: \"datetime-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n      </ion-item>\r\n      <datetime-picker [(datetime)]=\"question.DateAndTime\" />\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    QuestionTextComponent,\r\n    DatetimePickerComponent\r\n  ]\r\n})\r\nexport class DatetimeComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "DatetimePickerComponent",
            "id": "component-DatetimePickerComponent-46939a308af73ceda08b6a3f5d72fb1a84678a12cd493cf038dceb177ffd73023dce8a7099e8ab3afbaeaaadc87f288eff4f1871cedeeca9658f2b7fdf697eaf",
            "file": "src/app/shared/components/datetime-picker/datetime-picker.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "datetime-picker",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-item [id]=\"id\" button>\n  <ion-label *rxIf=\"presentation === 'date'\">{{ datetime | utcDate }}</ion-label>\n  <ion-label *rxIf=\"presentation !== 'date'\">{{ datetime | utcDateTime }}</ion-label>\n</ion-item>\n\n<ion-popover [trigger]=\"id\" triggerAction=\"click\" size=\"auto\">\n  <ng-template>\n    <ion-content>\n      <ion-datetime\n        [isDateEnabled]=\"isDateEnabled.bind(this)\"\n        [(date)]=\"datetime\"\n        (ionChange)=\"datetimeChange.emit(datetime)\"\n        [presentation]=\"presentation\" />\n    </ion-content>\n  </ng-template>\n</ion-popover>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "datetime",
                    "defaultValue": "new Date()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "max",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "Date | null | undefined",
                    "decorators": []
                },
                {
                    "name": "min",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "Date | null | undefined",
                    "decorators": []
                },
                {
                    "name": "presentation",
                    "defaultValue": "\"date-time\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "\"date\" | \"date-time\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "datetimeChange",
                    "defaultValue": "new EventEmitter<Date>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "id",
                    "defaultValue": "crypto.randomUUID()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                }
            ],
            "methodsClass": [
                {
                    "name": "isDateEnabled",
                    "args": [
                        {
                            "name": "dateStr",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "dateStr",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { DateDirective } from \"../../directives/date/date.directive\";\r\nimport { UtcDatePipe, UtcDateTimePipe } from \"../../pipes\";\r\nimport { RxIf } from \"@rx-angular/template/if\";\r\n\r\n@Component({\r\n  selector: \"datetime-picker\",\r\n  template: `\r\n    <ion-item [id]=\"id\" button>\r\n      <ion-label *rxIf=\"presentation === 'date'\">{{ datetime | utcDate }}</ion-label>\r\n      <ion-label *rxIf=\"presentation !== 'date'\">{{ datetime | utcDateTime }}</ion-label>\r\n    </ion-item>\r\n\r\n    <ion-popover [trigger]=\"id\" triggerAction=\"click\" size=\"auto\">\r\n      <ng-template>\r\n        <ion-content>\r\n          <ion-datetime\r\n            [isDateEnabled]=\"isDateEnabled.bind(this)\"\r\n            [(date)]=\"datetime\" \r\n            (ionChange)=\"datetimeChange.emit(datetime)\" \r\n            [presentation]=\"presentation\" />\r\n        </ion-content>\r\n      </ng-template>\r\n    </ion-popover>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    RxIf,\r\n    UtcDatePipe,\r\n    UtcDateTimePipe,\r\n    DateDirective\r\n  ]\r\n})\r\nexport class DatetimePickerComponent {\r\n  id = crypto.randomUUID();\r\n\r\n  @Input()\r\n  datetime = new Date();\r\n\r\n  @Output()\r\n  datetimeChange = new EventEmitter<Date>();\r\n\r\n  @Input()\r\n  presentation: \"date\" | \"date-time\" = \"date-time\";\r\n\r\n  @Input()\r\n  min: Date | null | undefined;\r\n\r\n  @Input()\r\n  max: Date | null | undefined;\r\n\r\n  isDateEnabled(dateStr: string) {\r\n    const date = new Date(dateStr);\r\n\r\n    if (this.min != null && this.max != null)\r\n      return date.isEqualOrAfter(this.min) && date.isEqualOrBefore(this.max);\r\n\r\n    if (this.min != null)\r\n      return date.isEqualOrAfter(this.min);\r\n\r\n    if (this.max != null)\r\n      return date.isEqualOrBefore(this.max);\r\n\r\n    return true;\r\n  }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "DocumentBuilderPage",
            "id": "component-DocumentBuilderPage-99eeef4f4a46c1901621052169d204ddfdf8744bcc32587c83bdaeb3c75618d44943b9c150400a901bd5f52352788560f92fbd73725de49a40a01431a87cb5eb",
            "file": "src/app/core/pages/document-builder/document-builder.page.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-document-builder",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-header>\n  <ion-toolbar *rxIf=\"document$; let document\">\n    <ion-buttons>\n      <ion-button>\n        <ion-icon name=\"arrow-back-outline\" />\n      </ion-button>\n    </ion-buttons>\n    <ion-title class=\"ion-text-center ion-text-wrap\">\n      {{ document.DocumentTitle }}\n    </ion-title>\n    <ion-buttons *rxIf=\"isMobileApp\" slot=\"end\">\n      <if [condition]=\"document.Pinned\">\n        <ion-button [unpatch] show color=\"primary\">\n          <ion-icon name=\"bookmark\" />\n        </ion-button>\n\n        <ion-button [unpatch] else>\n          <ion-icon name=\"bookmark-outline\" />\n        </ion-button>\n      </if>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content *rxIf=\"document$; let document\" class=\"ion-padding\">\n  <ion-list>\n    <ion-item>\n      <ion-label>\n        Show document as single page\n      </ion-label>\n      <ion-toggle></ion-toggle>\n    </ion-item>\n  </ion-list>\n\n  <actioner-select\n     *rxIf=\"document.CanAddActionerFromApp\"\n     [(actionerId)]=\"document.CurrentActionerOperativeID\"\n     [title]=\"document.MetaData.ActionerText\"\n     [hideMyself]=\"document.MetaData.CannotAddSelfAsActioner || false\" />\n\n  <category-actioner-select\n    *rxIf=\"document.CanAddCategoryActioner && document.DocumentCategory != null\"\n    [title]=\"document.MetaData.ActionerText\"\n    [(actionerId)]=\"document.CurrentActionerOperativeID\"\n    [categoryId]=\"document.DocumentCategory\"\n    [hideMyself]=\"document.MetaData.CannotAddSelfAsActioner || false\" />\n\n  <company-actioner-select\n    *rxIf=\"document.CanHaveCompanyActioner\"\n    [title]=\"document.MetaData.ActionerText\"\n    [(companyId)]=\"document.CompanyActionerId\" />\n\n  <queue-select\n    *rxIf=\"document.Queues && document.Queues.length > 0\"\n    [queueId]=\"document.AutoQueueID\" />\n\n  <site-select\n    *rxIf=\"document.MetaData?.HasSiteList\"\n    [title]=\"document.MetaData.SiteListTitle\"\n    [(siteId)]=\"document.SiteId\" />\n\n  <queue-duration *rxIf=\"document.CanHaveQueueDuration\" />\n\n  <document-page *rxFor=\"let page of document.Pages; index as idx\" [page]=\"page\" [hidden]=\"pageIndex.isNotNumber$(idx) | push\">\n    <document-section *rxFor=\"let section of page.Sections\" [section]=\"section\">\n      <ng-template [ngSwitch]=\"section.SectionQuestiontype\" [questions]=\"section.Questions\" let-question>\n        <label-question *ngSwitchCase=\"QuestionType.Label\" [question]=\"question\" />\n        <checkbox-question *ngSwitchCase=\"QuestionType.Checkbox\" [question]=\"question\" />\n        <radio-group-question *ngSwitchCase=\"QuestionType.RadioGroup\" [section]=\"section\" [question]=\"question\" />\n        <radio-table-question\n          *rxIf=\"section.SectionQuestiontype === QuestionType.RadioGroup && document.MetaData.UsesRadioGroupTable\"\n          [question]=\"question\" />\n        <textarea-question *ngSwitchCase=\"QuestionType.TextArea\" [question]=\"question\" />\n        <select-question *ngSwitchCase=\"QuestionType.Select\" [question]=\"question\" />\n        <checkbox-question *ngSwitchCase=\"QuestionType.CheckboxTextbox\" [question]=\"question\" />\n        <radio-group-textbox-question *ngSwitchCase=\"QuestionType.RadioGroupTextbox\" [question]=\"question\" [section]=\"section\" />\n        <radio-table-textbox-question\n          *rxIf=\"section.SectionQuestiontype === QuestionType.RadioGroupTextbox && document.MetaData.UsesRadioGroupTable\"\n          [question]=\"question\" />\n        <date-question *ngSwitchCase=\"QuestionType.Date\" [question]=\"question\" />\n        <datetime-question *ngSwitchCase=\"QuestionType.DateTime\" [question]=\"question\" />\n        <operative-list-question *ngSwitchCase=\"QuestionType.OperativeList\" [question]=\"question\" />\n        <number-question *ngSwitchCase=\"QuestionType.Number\" [question]=\"question\" />\n        <asset-list-question *ngSwitchCase=\"QuestionType.AssetList\" [question]=\"question\" />\n        <linked-dates-question *ngSwitchCase=\"QuestionType.LinkedDates\" [question]=\"question\" />\n        <signature-question *ngSwitchCase=\"QuestionType.Signature\" [question]=\"question\" />\n        <company-select-question *ngSwitchCase=\"QuestionType.CompanySelect\" [question]=\"question\" />\n        <area-select-question *ngSwitchCase=\"QuestionType.AreaSelect\" [question]=\"question\" />\n        <asset-groups-and-types-question *ngSwitchCase=\"QuestionType.AssetGroupsAndTypes\" [question]=\"question\" />\n        <select-text-question *ngSwitchCase=\"QuestionType.SelectText\" [question]=\"question\" />\n        <time-question *ngSwitchCase=\"QuestionType.Time\" [question]=\"question\" />\n        <linked-times-question *ngSwitchCase=\"QuestionType.LinkedTimes\" [question]=\"question\" />\n        <hra-select-question *ngSwitchCase=\"QuestionType.HraSelect\" [question]=\"question\" />\n        <linked-datetime-question *ngSwitchCase=\"QuestionType.LinkedDateAndTime\" [question]=\"question\" />\n      </ng-template>\n    </document-section>\n  </document-page>\n\n  <remain-anonymous *rxIf=\"document.AllowAnon\" [(isTicked)]=\"document.RemainAnon\" />\n\n  <ion-button\n    (click)=\"submit(document)\"\n    [unpatch]\n    class=\"ion-margin-vertical\"\n    expand=\"full\">\n    Submit\n  </ion-button>\n</ion-content>\n\n<ng-container *rxIf=\"document$; let document\">\n  <ion-footer *rxLet=\"pageIndex.value$; let idx\">\n    <ion-button\n      *rxIf=\"idx > 0\"\n      (click)=\"pageIndex.decrement()\"\n      class=\"float-left\">\n      Back\n    </ion-button>\n    <ion-button\n      *rxIf=\"idx < document.Pages.length - 1\"\n      (click)=\"pageIndex.increment()\"\n      class=\"float-right\">\n      Next\n    </ion-button>\n  </ion-footer>\n</ng-container>\n\n<template-menu-modal [isOpen]=\"route.noParams$ | push\" (select)=\"navigateDocument($event)\" />\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_route",
                    "defaultValue": "inject(ActivatedRoute)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 165
                },
                {
                    "name": "document$",
                    "defaultValue": "merge(\r\n    this.formFillerStore.getTemplateRequest$(this.route.lastDocumentId$),\r\n  ).pipe(\r\n    switchMap(() => this.formFillerStore.writingDocument$),\r\n    shareReplay()\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 172
                },
                {
                    "name": "formFillerStore",
                    "defaultValue": "inject(FormFillerStore)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 167,
                    "modifierKind": [
                        122,
                        144
                    ]
                },
                {
                    "name": "isMobileApp",
                    "defaultValue": "isMobileApp()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 170
                },
                {
                    "name": "pageIndex",
                    "defaultValue": "numberState({\r\n    name: \"PageIndex\",\r\n    initialValue: 0,\r\n    props: state => ({\r\n      isNotNumber$: (page: number) => state.is$(idx => idx !== page),\r\n      isGreaterThan0$: () => state.is$(idx => idx > 0),\r\n      isLessThanDocumentLength$: () => this.document$.pipe(\r\n        filter(doc => doc != null),\r\n        switchMap(doc => state.is$(idx => idx < doc!.Pages.length))\r\n      )\r\n    })\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 195
                },
                {
                    "name": "QuestionType",
                    "defaultValue": "QuestionType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 169
                },
                {
                    "name": "route",
                    "defaultValue": "inject(DocumentBuilderRoute)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 166,
                    "modifierKind": [
                        122,
                        144
                    ]
                },
                {
                    "name": "router",
                    "defaultValue": "inject(Router)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 164,
                    "modifierKind": [
                        122,
                        144
                    ]
                },
                {
                    "name": "submit",
                    "defaultValue": "reaction<SiteDocument>(doc$ => this.formFillerStore.submitDocument$(doc$()).pipe(\r\n    takeUntilDestroyed(),\r\n    clickReaction()\r\n  ))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 190
                }
            ],
            "methodsClass": [
                {
                    "name": "navigateDocument",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 179,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, inject } from \"@angular/core\";\r\nimport { takeUntilDestroyed } from \"@angular/core/rxjs-interop\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { filter, merge, shareReplay, switchMap } from \"rxjs\";\r\nimport { IfComponent } from \"src/app/shared/components\";\r\nimport { importNgSwitch, importRxTemplate } from \"src/app/shared/imports\";\r\nimport { FormFillerStore } from \"../../stores/site-document/form-filler/form-filler.store\";\r\nimport { DocumentPageComponent, DocumentSectionComponent, QuestionsTemplateDirective, importInputTypes, importQuestionTypes } from \"./components\";\r\nimport { clickReaction, reaction } from \"src/app/shared/reactions\";\r\nimport { QuestionType, SiteDocument } from \"../../stores/site-document/models\";\r\nimport { isMobileApp } from \"src/app/shared/plugins/platform.plugin\";\r\nimport { numberState } from \"src/app/shared/states/number.state\";\r\nimport { DocumentBuilderRoute } from \"./document-builder.route\";\r\nimport { importDocumentBuilderModals } from \"./modals\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\n\r\n@Component({\r\n  selector: 'app-document-builder',\r\n  template: `\r\n    <ion-header>\r\n      <ion-toolbar *rxIf=\"document$; let document\">\r\n        <ion-buttons>\r\n          <ion-button>\r\n            <ion-icon name=\"arrow-back-outline\" />\r\n          </ion-button>\r\n        </ion-buttons>\r\n        <ion-title class=\"ion-text-center ion-text-wrap\">\r\n          {{ document.DocumentTitle }}\r\n        </ion-title>\r\n        <ion-buttons *rxIf=\"isMobileApp\" slot=\"end\">\r\n          <if [condition]=\"document.Pinned\">\r\n            <ion-button [unpatch] show color=\"primary\">\r\n              <ion-icon name=\"bookmark\" />\r\n            </ion-button>\r\n\r\n            <ion-button [unpatch] else>\r\n              <ion-icon name=\"bookmark-outline\" />\r\n            </ion-button>\r\n          </if>\r\n        </ion-buttons>\r\n      </ion-toolbar>\r\n    </ion-header>\r\n\r\n    <ion-content *rxIf=\"document$; let document\" class=\"ion-padding\">\r\n      <ion-list>\r\n        <ion-item>\r\n          <ion-label>\r\n            Show document as single page\r\n          </ion-label>\r\n          <ion-toggle></ion-toggle>\r\n        </ion-item>\r\n      </ion-list>\r\n\r\n      <actioner-select\r\n         *rxIf=\"document.CanAddActionerFromApp\"\r\n         [(actionerId)]=\"document.CurrentActionerOperativeID\"\r\n         [title]=\"document.MetaData.ActionerText\"\r\n         [hideMyself]=\"document.MetaData.CannotAddSelfAsActioner || false\" />\r\n      \r\n      <category-actioner-select \r\n        *rxIf=\"document.CanAddCategoryActioner && document.DocumentCategory != null\" \r\n        [title]=\"document.MetaData.ActionerText\"\r\n        [(actionerId)]=\"document.CurrentActionerOperativeID\"\r\n        [categoryId]=\"document.DocumentCategory\"\r\n        [hideMyself]=\"document.MetaData.CannotAddSelfAsActioner || false\" />\r\n      \r\n      <company-actioner-select \r\n        *rxIf=\"document.CanHaveCompanyActioner\"\r\n        [title]=\"document.MetaData.ActionerText\"\r\n        [(companyId)]=\"document.CompanyActionerId\" />\r\n      \r\n      <queue-select \r\n        *rxIf=\"document.Queues && document.Queues.length > 0\"\r\n        [queueId]=\"document.AutoQueueID\" />\r\n      \r\n      <site-select \r\n        *rxIf=\"document.MetaData?.HasSiteList\"\r\n        [title]=\"document.MetaData.SiteListTitle\"\r\n        [(siteId)]=\"document.SiteId\" />\r\n      \r\n      <queue-duration *rxIf=\"document.CanHaveQueueDuration\" />\r\n\r\n      <document-page *rxFor=\"let page of document.Pages; index as idx\" [page]=\"page\" [hidden]=\"pageIndex.isNotNumber$(idx) | push\">\r\n        <document-section *rxFor=\"let section of page.Sections\" [section]=\"section\">\r\n          <ng-template [ngSwitch]=\"section.SectionQuestiontype\" [questions]=\"section.Questions\" let-question>\r\n            <label-question *ngSwitchCase=\"QuestionType.Label\" [question]=\"question\" />\r\n            <checkbox-question *ngSwitchCase=\"QuestionType.Checkbox\" [question]=\"question\" />\r\n            <radio-group-question *ngSwitchCase=\"QuestionType.RadioGroup\" [section]=\"section\" [question]=\"question\" />\r\n            <radio-table-question \r\n              *rxIf=\"section.SectionQuestiontype === QuestionType.RadioGroup && document.MetaData.UsesRadioGroupTable\" \r\n              [question]=\"question\" />\r\n            <textarea-question *ngSwitchCase=\"QuestionType.TextArea\" [question]=\"question\" />\r\n            <select-question *ngSwitchCase=\"QuestionType.Select\" [question]=\"question\" />\r\n            <checkbox-question *ngSwitchCase=\"QuestionType.CheckboxTextbox\" [question]=\"question\" />\r\n            <radio-group-textbox-question *ngSwitchCase=\"QuestionType.RadioGroupTextbox\" [question]=\"question\" [section]=\"section\" />\r\n            <radio-table-textbox-question \r\n              *rxIf=\"section.SectionQuestiontype === QuestionType.RadioGroupTextbox && document.MetaData.UsesRadioGroupTable\" \r\n              [question]=\"question\" />\r\n            <date-question *ngSwitchCase=\"QuestionType.Date\" [question]=\"question\" />\r\n            <datetime-question *ngSwitchCase=\"QuestionType.DateTime\" [question]=\"question\" />\r\n            <operative-list-question *ngSwitchCase=\"QuestionType.OperativeList\" [question]=\"question\" />\r\n            <number-question *ngSwitchCase=\"QuestionType.Number\" [question]=\"question\" />\r\n            <asset-list-question *ngSwitchCase=\"QuestionType.AssetList\" [question]=\"question\" />\r\n            <linked-dates-question *ngSwitchCase=\"QuestionType.LinkedDates\" [question]=\"question\" />\r\n            <signature-question *ngSwitchCase=\"QuestionType.Signature\" [question]=\"question\" />\r\n            <company-select-question *ngSwitchCase=\"QuestionType.CompanySelect\" [question]=\"question\" />\r\n            <area-select-question *ngSwitchCase=\"QuestionType.AreaSelect\" [question]=\"question\" />\r\n            <asset-groups-and-types-question *ngSwitchCase=\"QuestionType.AssetGroupsAndTypes\" [question]=\"question\" />\r\n            <select-text-question *ngSwitchCase=\"QuestionType.SelectText\" [question]=\"question\" />\r\n            <time-question *ngSwitchCase=\"QuestionType.Time\" [question]=\"question\" />\r\n            <linked-times-question *ngSwitchCase=\"QuestionType.LinkedTimes\" [question]=\"question\" />\r\n            <hra-select-question *ngSwitchCase=\"QuestionType.HraSelect\" [question]=\"question\" />\r\n            <linked-datetime-question *ngSwitchCase=\"QuestionType.LinkedDateAndTime\" [question]=\"question\" />\r\n          </ng-template>\r\n        </document-section>\r\n      </document-page>\r\n\r\n      <remain-anonymous *rxIf=\"document.AllowAnon\" [(isTicked)]=\"document.RemainAnon\" />\r\n\r\n      <ion-button\r\n        (click)=\"submit(document)\"\r\n        [unpatch] \r\n        class=\"ion-margin-vertical\" \r\n        expand=\"full\">\r\n        Submit\r\n      </ion-button>\r\n    </ion-content>\r\n\r\n    <ng-container *rxIf=\"document$; let document\">\r\n      <ion-footer *rxLet=\"pageIndex.value$; let idx\">\r\n        <ion-button \r\n          *rxIf=\"idx > 0\" \r\n          (click)=\"pageIndex.decrement()\"\r\n          class=\"float-left\">\r\n          Back\r\n        </ion-button>\r\n        <ion-button \r\n          *rxIf=\"idx < document.Pages.length - 1\" \r\n          (click)=\"pageIndex.increment()\"\r\n          class=\"float-right\">\r\n          Next\r\n        </ion-button>\r\n      </ion-footer>\r\n    </ng-container>\r\n\r\n    <template-menu-modal [isOpen]=\"route.noParams$ | push\" (select)=\"navigateDocument($event)\" />\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    ...importNgSwitch(),\r\n    IfComponent,\r\n    DocumentPageComponent,\r\n    DocumentSectionComponent,\r\n    QuestionsTemplateDirective,\r\n    ...importInputTypes(),\r\n    ...importQuestionTypes(),\r\n    ...importDocumentBuilderModals()\r\n  ]\r\n})\r\nexport class DocumentBuilderPage {\r\n  protected readonly router = inject(Router);\r\n  _route = inject(ActivatedRoute);\r\n  protected readonly route = inject(DocumentBuilderRoute);\r\n  protected readonly formFillerStore = inject(FormFillerStore);\r\n\r\n  QuestionType = QuestionType;\r\n  isMobileApp = isMobileApp();\r\n\r\n  document$ = merge(\r\n    this.formFillerStore.getTemplateRequest$(this.route.lastDocumentId$),\r\n  ).pipe(\r\n    switchMap(() => this.formFillerStore.writingDocument$),\r\n    shareReplay()\r\n  );\r\n\r\n  navigateDocument(id: number) {\r\n    this.router.navigate([], {\r\n      relativeTo: this._route,\r\n      queryParams: {\r\n        ids: [id]\r\n      },\r\n      queryParamsHandling: \"merge\",\r\n      skipLocationChange: true\r\n    });\r\n  }\r\n\r\n  submit = reaction<SiteDocument>(doc$ => this.formFillerStore.submitDocument$(doc$()).pipe(\r\n    takeUntilDestroyed(),\r\n    clickReaction()\r\n  ));\r\n\r\n  pageIndex = numberState({\r\n    name: \"PageIndex\",\r\n    initialValue: 0,\r\n    props: state => ({\r\n      isNotNumber$: (page: number) => state.is$(idx => idx !== page),\r\n      isGreaterThan0$: () => state.is$(idx => idx > 0),\r\n      isLessThanDocumentLength$: () => this.document$.pipe(\r\n        filter(doc => doc != null),\r\n        switchMap(doc => state.is$(idx => idx < doc!.Pages.length))\r\n      )\r\n    })\r\n  })\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "DocumentImageUploadComponent",
            "id": "component-DocumentImageUploadComponent-d175bfbe72c83a9770ebfe5a71eee750077aea289859c82b8fd067bbcb459c5c0cb51d8c952f53fb422280975be0ab58837a7f74709a91316600d58f2a4ba8fd",
            "file": "src/app/core/pages/document-builder/components/input-types/document-image-upload/document-image-upload.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "document-image-upload",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-button [id]=\"id\" expand=\"block\" fill=\"outline\">\n  Document Images\n  <if [condition]=\"images.length > 0\">\n    <span show>({{ images.length }})</span>\n    <ion-icon else name=\"images-outline\" slot=\"end\" />\n  </if>\n</ion-button>\n\n<ion-modal #modal [trigger]=\"id\">\n  <ng-template>\n    <ion-header>\n      <ion-toolbar>\n        <ion-title class=\"text-center\">Images</ion-title>\n        <ion-buttons slot=\"end\">\n          <ion-button (click)=\"modal.dismiss()\">\n            <ion-icon name=\"close-outline\" slot=\"icon-only\" />\n          </ion-button>\n        </ion-buttons>\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content class=\"ion-padding\">\n      <if [condition]=\"images.length === 0\">\n        <p show class=\"text-center\">\n          Use camera and gallery buttons to add images\n        </p>\n\n        <ion-grid else>\n          <ion-row>\n            <ion-col *rxFor=\"let img of images\" size=\"6\" sizeMd=\"4\" sizeLg=\"3\">\n              <ion-fab vertical=\"top\" horizontal=\"end\">\n                <ion-fab-button (click)=\"remove(img)\" size=\"small\" color=\"danger\">\n                  <ion-icon name=\"close-outline\" />\n                </ion-fab-button>\n              </ion-fab>\n\n              <ion-img [src]=\"img\" />\n            </ion-col>\n          </ion-row>\n        </ion-grid>\n      </if>\n\n      <ion-fab vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\">\n        <if [condition]=\"isMobileApp\">\n          <ng-container show>\n            <ion-fab-button (takePhoto)=\"addPhoto($event)\" class=\"ion-margin-vertical\">\n              <ion-icon name=\"camera-outline\" />\n            </ion-fab-button>\n\n            <ion-fab-button (uploadPhoto)=\"addPhoto($event)\" class=\"ion-margin-vertical\">\n              <ion-icon name=\"image-outline\" />\n            </ion-fab-button>\n          </ng-container>\n\n          <ion-fab-button else>\n            <upload (uploadFiles)=\"uploads($event)\" accept=\"image/*\" />\n            <ion-icon name=\"camera-outline\" />\n          </ion-fab-button>\n        </if>\n      </ion-fab>\n    </ion-content>\n  </ng-template>\n</ion-modal>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "document",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 102,
                    "type": "SiteDocument",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cameraOptions",
                    "defaultValue": "{\r\n    resultType: CameraResultType.Base64\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ImageOptions",
                    "optional": false,
                    "description": "",
                    "line": 104
                },
                {
                    "name": "docImages$",
                    "defaultValue": "this.input(\"document\").pipe(\r\n    map(() => this.document.DocumentGroup)\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string>",
                    "optional": false,
                    "description": "",
                    "line": 113
                },
                {
                    "name": "galleryOptions",
                    "defaultValue": "{\r\n    resultType: CameraResultType.Base64,\r\n    source: CameraSource.Photos\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ImageOptions",
                    "optional": false,
                    "description": "",
                    "line": 108
                },
                {
                    "name": "id",
                    "defaultValue": "crypto.randomUUID()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 96
                },
                {
                    "name": "images",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 99
                },
                {
                    "name": "isMobileApp",
                    "defaultValue": "isMobileApp()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 97
                },
                {
                    "name": "siteDocumentImageStore",
                    "defaultValue": "inject(SiteDocumentImageStore)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 94
                }
            ],
            "methodsClass": [
                {
                    "name": "addPhoto",
                    "args": [
                        {
                            "name": "photo",
                            "type": "Photo",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 117,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "photo",
                            "type": "Photo",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "remove",
                    "args": [
                        {
                            "name": "img",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 131,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "img",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "uploads",
                    "args": [
                        {
                            "name": "files",
                            "type": "DataUrlFile[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 124,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "files",
                            "type": "DataUrlFile[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input, inject } from \"@angular/core\";\r\nimport { CameraResultType, CameraSource, ImageOptions, Photo } from \"@capacitor/camera\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Observable, map } from \"rxjs\";\r\nimport { SiteDocumentImageStore } from \"src/app/core/stores/site-document-image/site-document-image.store\";\r\nimport { SiteDocument } from \"src/app/core/stores/site-document/models\";\r\nimport { IfComponent, UploadComponent } from \"src/app/shared/components\";\r\nimport { PhotoViewerDirective, TakePhotoDirective, UploadPhotoDirective } from \"src/app/shared/directives\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { AngularComponent, withOnChanges } from \"src/app/shared/lifecycles\";\r\nimport { DataUrlFile } from \"src/app/shared/models/files/data-url-file.model\";\r\nimport { isMobileApp } from \"src/app/shared/plugins/platform.plugin\";\r\n\r\n@Component({\r\n  selector: \"document-image-upload\",\r\n  template: `\r\n    <ion-button [id]=\"id\" expand=\"block\" fill=\"outline\">\r\n      Document Images\r\n      <if [condition]=\"images.length > 0\">\r\n        <span show>({{ images.length }})</span>\r\n        <ion-icon else name=\"images-outline\" slot=\"end\" />\r\n      </if>\r\n    </ion-button>\r\n\r\n    <ion-modal #modal [trigger]=\"id\">\r\n      <ng-template>\r\n        <ion-header>\r\n          <ion-toolbar>\r\n            <ion-title class=\"text-center\">Images</ion-title>\r\n            <ion-buttons slot=\"end\">\r\n              <ion-button (click)=\"modal.dismiss()\">\r\n                <ion-icon name=\"close-outline\" slot=\"icon-only\" />\r\n              </ion-button>\r\n            </ion-buttons>\r\n          </ion-toolbar>\r\n        </ion-header>\r\n\r\n        <ion-content class=\"ion-padding\">\r\n          <if [condition]=\"images.length === 0\">\r\n            <p show class=\"text-center\">\r\n              Use camera and gallery buttons to add images\r\n            </p>\r\n\r\n            <ion-grid else>\r\n              <ion-row>\r\n                <ion-col *rxFor=\"let img of images\" size=\"6\" sizeMd=\"4\" sizeLg=\"3\">\r\n                  <ion-fab vertical=\"top\" horizontal=\"end\">\r\n                    <ion-fab-button (click)=\"remove(img)\" size=\"small\" color=\"danger\">\r\n                      <ion-icon name=\"close-outline\" />\r\n                    </ion-fab-button>\r\n                  </ion-fab>\r\n\r\n                  <ion-img [src]=\"img\" />\r\n                </ion-col>\r\n              </ion-row>\r\n            </ion-grid>\r\n          </if>\r\n\r\n          <ion-fab vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\">\r\n            <if [condition]=\"isMobileApp\">\r\n              <ng-container show>\r\n                <ion-fab-button (takePhoto)=\"addPhoto($event)\" class=\"ion-margin-vertical\">\r\n                  <ion-icon name=\"camera-outline\" />\r\n                </ion-fab-button>\r\n\r\n                <ion-fab-button (uploadPhoto)=\"addPhoto($event)\" class=\"ion-margin-vertical\">\r\n                  <ion-icon name=\"image-outline\" />\r\n                </ion-fab-button>\r\n              </ng-container>\r\n\r\n              <ion-fab-button else>\r\n                <upload (uploadFiles)=\"uploads($event)\" accept=\"image/*\" />\r\n                <ion-icon name=\"camera-outline\" />\r\n              </ion-fab-button>\r\n            </if>\r\n          </ion-fab>\r\n        </ion-content>\r\n      </ng-template>\r\n    </ion-modal>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  standalone: true,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    IfComponent,\r\n    UploadComponent,\r\n    TakePhotoDirective,\r\n    UploadPhotoDirective,\r\n    PhotoViewerDirective\r\n  ]\r\n})\r\nexport class DocumentImageUploadComponent extends AngularComponent(withOnChanges) {\r\n  siteDocumentImageStore = inject(SiteDocumentImageStore);\r\n\r\n  id = crypto.randomUUID();\r\n  isMobileApp = isMobileApp();\r\n\r\n  images: string[] = [];\r\n\r\n  @Input()\r\n  document!: SiteDocument;\r\n\r\n  cameraOptions: ImageOptions = {\r\n    resultType: CameraResultType.Base64\r\n  }\r\n\r\n  galleryOptions: ImageOptions = {\r\n    resultType: CameraResultType.Base64,\r\n    source: CameraSource.Photos\r\n  }\r\n\r\n  docImages$: Observable<string> = this.input(\"document\").pipe(\r\n    map(() => this.document.DocumentGroup)\r\n  );\r\n\r\n  addPhoto(photo: Photo) {\r\n    this.images = [\r\n      ...this.images,\r\n      photo.base64String as string\r\n    ]\r\n  }\r\n\r\n  uploads(files: DataUrlFile[]) {\r\n    this.images = [\r\n      ...this.images,\r\n      ...files.map(f => f.dataUrl)\r\n    ];\r\n  }\r\n\r\n  remove(img: string) {\r\n    this.images = this.images.filter(i => i !== img);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "DocumentPageComponent",
            "id": "component-DocumentPageComponent-cf6c3498d6824a4897791e44dc28e02e847141672bb3fbe2f5a1ae80dad1c3b4bf508e5f24f3b201a16141afed55b51e82bae30b7548eed25bf5c096023c73ba",
            "file": "src/app/core/pages/document-builder/components/document-page/document-page.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "document-page[page]",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-item lines=\"none\">\n  <ion-label>{{ page.PageTitle }}</ion-label>\n</ion-item>\n<ng-content></ng-content>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "page",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "Page",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Page } from \"src/app/core/stores/site-document/models\";\r\n\r\n@Component({\r\n  selector: \"document-page[page]\",\r\n  template: `\r\n    <ion-item lines=\"none\">\r\n      <ion-label>{{ page.PageTitle }}</ion-label>\r\n    </ion-item>\r\n    <ng-content></ng-content>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [IonicModule]\r\n})\r\nexport class DocumentPageComponent {\r\n  @Input()\r\n  page!: Page;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "DocumentSectionComponent",
            "id": "component-DocumentSectionComponent-b4fe87217bb51f2bf53ab1cbc302f3e9253bdc5f4bc5cca4f17342f204cccf41c06f6c6411682347e6d6e8005befe2e94a340e32f5a7dff3bb333adada5f42bc",
            "file": "src/app/core/pages/document-builder/components/document-section/document-section.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "document-section[section]",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-label>{{ section.SectionTitle }}</ion-label>\n<ng-container *rxIf=\"section.IsRepeatable\">\n  <ion-button color=\"secondary\" fill=\"clear\">\n    <ion-icon name=\"duplicate-outline\" />\n  </ion-button>\n  <ion-button color=\"secondary\" fill=\"clear\">\n    <ion-icon name=\"remove-circle-outline\" />\n  </ion-button>\n</ng-container>\n\n<if [condition]=\"section.SectionQuestiontype === QuestionType.MultiCheckbox\">\n  <multi-checkbox-section show [section]=\"section\" />\n\n  <ng-container else *rxFor=\"let question of section.Questions\">\n    <ng-container *ngTemplateOutlet=\"questionsTpl; context: { $implicit: question }\" />\n  </ng-container>\n</if>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "section",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55,
                    "type": "Section",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "questionsTpl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 58,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "QuestionsTemplateDirective, {read: TemplateRef}"
                        }
                    ]
                },
                {
                    "name": "QuestionType",
                    "defaultValue": "QuestionType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 52
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { NgTemplateOutlet } from \"@angular/common\";\r\nimport { ChangeDetectionStrategy, Component, ContentChild, Directive, Input, TemplateRef } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question, QuestionType, Section } from \"src/app/core/stores/site-document/models\";\r\nimport { IfComponent } from \"src/app/shared/components\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { MultiCheckboxSectionComponent } from \"./multi-checkbox-section/multi-checkbox-section.component\";\r\nimport { AngularDirective, withTemplateContextGuard } from \"src/app/shared/lifecycles\";\r\n\r\n@Directive({\r\n  selector: \"ng-template[questions]\",\r\n  standalone: true\r\n})\r\nexport class QuestionsTemplateDirective extends AngularDirective(withTemplateContextGuard<Question>) {\r\n  @Input()\r\n  questions!: Question[];\r\n}\r\n\r\n@Component({\r\n  selector: \"document-section[section]\",\r\n  template: `\r\n    <ion-label>{{ section.SectionTitle }}</ion-label>\r\n    <ng-container *rxIf=\"section.IsRepeatable\">\r\n      <ion-button color=\"secondary\" fill=\"clear\">\r\n        <ion-icon name=\"duplicate-outline\" />\r\n      </ion-button>\r\n      <ion-button color=\"secondary\" fill=\"clear\">\r\n        <ion-icon name=\"remove-circle-outline\" />\r\n      </ion-button>\r\n    </ng-container>\r\n\r\n    <if [condition]=\"section.SectionQuestiontype === QuestionType.MultiCheckbox\">\r\n      <multi-checkbox-section show [section]=\"section\" />\r\n\r\n      <ng-container else *rxFor=\"let question of section.Questions\">\r\n        <ng-container *ngTemplateOutlet=\"questionsTpl; context: { $implicit: question }\" />\r\n      </ng-container>\r\n    </if>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    NgTemplateOutlet,\r\n    IfComponent,\r\n    MultiCheckboxSectionComponent,\r\n    QuestionsTemplateDirective\r\n  ]\r\n})\r\nexport class DocumentSectionComponent {\r\n  QuestionType = QuestionType;\r\n\r\n  @Input()\r\n  section!: Section;\r\n\r\n  @ContentChild(QuestionsTemplateDirective, { read: TemplateRef }) \r\n  questionsTpl!: TemplateRef<unknown>;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "DocumentSummaryModal",
            "id": "component-DocumentSummaryModal-cc08669693bda1db3155b1f5d79fd7d866714bb26dfb62625166502aa7b116c6dfd83f13513f3cbec31116fc3ac52b451bf692e17589866a8aed68c25f9133c7",
            "file": "src/app/core/pages/document-builder/modals/document-summary/document-summary.modal.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "document-summary-modal",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-modal #modal [trigger]=\"trigger\" [isOpen]=\"isOpen\">\n  <ng-template>\n    <ion-header>\n      <ion-toolbar>\n        <ion-title class=\"text-center\">Summary</ion-title>\n        <ion-buttons slot=\"end\">\n          <ion-button (click)=\"modal.dismiss()\" [unpatch]>\n            <ion-icon name=\"close-outline\" slot=\"icon-only\" />\n          </ion-button>\n        </ion-buttons>\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content class=\"ion-padding\">\n      <ion-item *rxIf=\"document.CurrentActionerOperativeID != null\" lines=\"none\">\n        <ion-label>\n          <h3>{{ document.MetaData.ActionerText || \"Actioner\" }}</h3>\n          <p>{{ document.CurrentActionerOperativeID }}</p>\n        </ion-label>\n      </ion-item>\n\n      <ion-item *rxIf=\"document.CompanyActionerId != null\" lines=\"none\">\n        <ion-label>\n          <h3>{{ document.MetaData.ActionerText || \"Company Actioner\" }}</h3>\n          <p>{{ document.CompanyActionerId }}</p>\n        </ion-label>\n      </ion-item>\n\n      <ion-item *rxIf=\"document.AutoQueueID != null\" lines=\"none\">\n        <ion-label>\n          <h3>Queue</h3>\n          <p>{{ document.CompanyActionerId }}</p>\n        </ion-label>\n      </ion-item>\n\n      <ion-item *rxIf=\"document.SiteId != null\" lines=\"none\">\n        <ion-label>\n          <h3>{{ document.MetaData.SiteListTitle || \"Site\" }}</h3>\n          <p>{{ document.SiteId }}</p>\n        </ion-label>\n      </ion-item>\n\n      <ion-item *rxIf=\"document.QueueDuration != null\" lines=\"none\">\n        <ion-label>\n          <h3>Queue Duration</h3>\n          <p>{{ document.QueueDuration.Value }} ({{ document.QueueDuration.Type }})</p>\n        </ion-label>\n      </ion-item>\n\n      <ion-item *rxIf=\"document.RemainAnon\" lines=\"none\">\n        <ion-checkbox checked disabled=\"true\">Remain Anonymous?</ion-checkbox>\n      </ion-item>\n    </ion-content>\n\n    <ion-footer>\n      <ion-grid>\n        <ion-row>\n          <ion-col>\n            <ion-button (click)=\"modal.dismiss()\" color=\"danger\" expand=\"full\">Cancel</ion-button>\n          </ion-col>\n          <ion-col>\n            <ion-button (click)=\"submit.emit()\" expand=\"full\">Submit</ion-button>\n          </ion-col>\n        </ion-row>\n      </ion-grid>\n    </ion-footer>\n  </ng-template>\n</ion-modal>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 90,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 87,
                    "type": "string",
                    "decorators": []
                },
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 93,
                    "type": "SiteDocument",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "submit",
                    "defaultValue": "new EventEmitter<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 96,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { SiteDocument } from \"src/app/core/stores/site-document/models\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\n\r\n@Component({\r\n  selector: \"document-summary-modal\",\r\n  template: `\r\n    <ion-modal #modal [trigger]=\"trigger\" [isOpen]=\"isOpen\">\r\n      <ng-template>\r\n        <ion-header>\r\n          <ion-toolbar>\r\n            <ion-title class=\"text-center\">Summary</ion-title>\r\n            <ion-buttons slot=\"end\">\r\n              <ion-button (click)=\"modal.dismiss()\" [unpatch]>\r\n                <ion-icon name=\"close-outline\" slot=\"icon-only\" />\r\n              </ion-button>\r\n            </ion-buttons>\r\n          </ion-toolbar>\r\n        </ion-header>\r\n\r\n        <ion-content class=\"ion-padding\">\r\n          <ion-item *rxIf=\"document.CurrentActionerOperativeID != null\" lines=\"none\">\r\n            <ion-label>\r\n              <h3>{{ document.MetaData.ActionerText || \"Actioner\" }}</h3>\r\n              <p>{{ document.CurrentActionerOperativeID }}</p>\r\n            </ion-label>\r\n          </ion-item>\r\n        \r\n          <ion-item *rxIf=\"document.CompanyActionerId != null\" lines=\"none\">\r\n            <ion-label>\r\n              <h3>{{ document.MetaData.ActionerText || \"Company Actioner\" }}</h3>\r\n              <p>{{ document.CompanyActionerId }}</p>\r\n            </ion-label>\r\n          </ion-item>\r\n\r\n          <ion-item *rxIf=\"document.AutoQueueID != null\" lines=\"none\">\r\n            <ion-label>\r\n              <h3>Queue</h3>\r\n              <p>{{ document.CompanyActionerId }}</p>\r\n            </ion-label>\r\n          </ion-item>\r\n\r\n          <ion-item *rxIf=\"document.SiteId != null\" lines=\"none\">\r\n            <ion-label>\r\n              <h3>{{ document.MetaData.SiteListTitle || \"Site\" }}</h3>\r\n              <p>{{ document.SiteId }}</p>\r\n            </ion-label>\r\n          </ion-item>\r\n\r\n          <ion-item *rxIf=\"document.QueueDuration != null\" lines=\"none\">\r\n            <ion-label>\r\n              <h3>Queue Duration</h3>\r\n              <p>{{ document.QueueDuration.Value }} ({{ document.QueueDuration.Type }})</p>\r\n            </ion-label>\r\n          </ion-item>\r\n\r\n          <ion-item *rxIf=\"document.RemainAnon\" lines=\"none\">\r\n            <ion-checkbox checked disabled=\"true\">Remain Anonymous?</ion-checkbox>\r\n          </ion-item>\r\n        </ion-content>\r\n\r\n        <ion-footer>\r\n          <ion-grid>\r\n            <ion-row>\r\n              <ion-col>\r\n                <ion-button (click)=\"modal.dismiss()\" color=\"danger\" expand=\"full\">Cancel</ion-button>\r\n              </ion-col>\r\n              <ion-col>\r\n                <ion-button (click)=\"submit.emit()\" expand=\"full\">Submit</ion-button>\r\n              </ion-col>\r\n            </ion-row>\r\n          </ion-grid>\r\n        </ion-footer>\r\n      </ng-template>\r\n    </ion-modal>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n  ]\r\n})\r\nexport class DocumentSummaryModal {\r\n  @Input({ required: true })\r\n  trigger!: string;\r\n\r\n  @Input()\r\n  isOpen: boolean = false;\r\n\r\n  @Input({ required: true })\r\n  document!: SiteDocument;\r\n\r\n  @Output()\r\n  submit = new EventEmitter<void>();\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "FileUploadComponent",
            "id": "component-FileUploadComponent-d28a3239cabdddcef5eb1e1d49591978374b5620072fa2e9bf2c77fffa2d28c0c5cbe1a7e0bcf1a8db74225e9a4e81da0b09e51fec3634c1161035a7a54b0798",
            "file": "src/app/core/pages/document-builder/components/question-types/extras/file-upload/file-upload.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "file-upload",
            "styleUrls": [],
            "styles": [],
            "template": "<if [condition]=\"filename == null\">\n  <ion-button show fill=\"clear\">\n    <upload (uploadFiles)=\"upload($event)\" />\n    <ion-icon name=\"cloud-upload-outline\" />\n  </ion-button>\n\n  <ion-button else (click)=\"clear()\" fill=\"clear\" color=\"danger\">\n    <ion-icon name=\"trash-bin-outline\" />\n  </ion-button>\n</if>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataUrl",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "filename",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 30
                }
            ],
            "methodsClass": [
                {
                    "name": "clear",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "upload",
                    "args": [
                        {
                            "name": "files",
                            "type": "DataUrlFile[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "files",
                            "type": "DataUrlFile[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { IfComponent } from \"src/app/shared/components/if/if.component\";\r\nimport { UploadComponent } from \"src/app/shared/components/upload/upload.component\";\r\nimport { DataUrlFile } from \"src/app/shared/models/files/data-url-file.model\";\r\n\r\n@Component({\r\n  selector: \"file-upload\",\r\n  template: `\r\n    <if [condition]=\"filename == null\">\r\n      <ion-button show fill=\"clear\">\r\n        <upload (uploadFiles)=\"upload($event)\" />\r\n        <ion-icon name=\"cloud-upload-outline\" />\r\n      </ion-button>\r\n\r\n      <ion-button else (click)=\"clear()\" fill=\"clear\" color=\"danger\">\r\n        <ion-icon name=\"trash-bin-outline\" />\r\n      </ion-button>\r\n    </if>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    IfComponent,\r\n    UploadComponent\r\n  ]\r\n})\r\nexport class FileUploadComponent {\r\n  filename: string | null = null;\r\n  dataUrl: string | null = null;\r\n\r\n  upload(files: DataUrlFile[]) {\r\n    if (files[0] != null) {\r\n      this.filename = files[0].name;\r\n      this.dataUrl = files[0].dataUrl;\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    this.filename = null;\r\n    this.dataUrl = null;\r\n  }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "HraSelectComponent",
            "id": "component-HraSelectComponent-5c4d116b6b1a100800a351f83b4bd33fbc701a9e822cbe2a72c53a3cbb630e3263682d21ac751dfcac1a94493e49798b9a356dfcef234a7922f88f90b98887b0",
            "file": "src/app/core/pages/document-builder/components/question-types/34-hra-select/hra-select.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "hra-select-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n    <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\n    <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\n  </ion-item>\n  <selectable\n    placeholder=\"Select\"\n    [title]=\"question.QuestionText\"\n    [items]=\"hras\"\n    itemValue=\"Id\"\n    itemText=\"Activity\"\n    [canClear]=\"!question.Required\" />\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "hras",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "HighRiskActivity[]",
                    "optional": false,
                    "description": "",
                    "line": 46
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\nimport { IonicModule } from \"@ionic/angular\";\nimport { importRxTemplate } from \"src/app/shared/imports\";\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\nimport { SelectableComponent } from \"src/app/shared/components\";\nimport { Question } from \"src/app/core/stores/site-document/models\";\n\ninterface HighRiskActivity {\n  Id: number,\n  Activity: string\n}\n\n@Component({\n  selector: \"hra-select-question\",\n  template: `\n    <ion-list>\n      <ion-item lines=\"none\">\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n        <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\n        <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\n      </ion-item>\n      <selectable \n        placeholder=\"Select\"\n        [title]=\"question.QuestionText\"\n        [items]=\"hras\"\n        itemValue=\"Id\"\n        itemText=\"Activity\"\n        [canClear]=\"!question.Required\" />\n    </ion-list>\n  `,\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    IonicModule,\n    ...importRxTemplate(),\n    QuestionTextComponent,\n    SelectableComponent,\n    CameraCaptureComponent,\n    FileUploadComponent\n  ]\n})\nexport class HraSelectComponent {\n  @Input({ required: true })\n  question!: Question;\n\n  hras: HighRiskActivity[] = [];\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "IfComponent",
            "id": "component-IfComponent-b683e63b18b01e06dc0cabdfb584d283a9cc475a261b25ebeb93980a78e2f4ab71bce64ccbd749c10463391350323a7ec3f03c6a688b1cddb8dec2b5b589c91a",
            "file": "src/app/shared/components/if/if.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "if",
            "styleUrls": [],
            "styles": [
                "\n    :host { display: contents }\n  "
            ],
            "template": "<ng-content *rxIf=\"condition\" select=\"[show]\"></ng-content>\n<ng-content *rxIf=\"!condition\" select=\"[else]\"></ng-content>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { RxIf } from \"@rx-angular/template/if\";\r\n\r\n@Component({\r\n  selector: 'if',\r\n  styles: [`\r\n    :host { display: contents }\r\n  `],\r\n  template:`\r\n    <ng-content *rxIf=\"condition\" select=\"[show]\"></ng-content>\r\n    <ng-content *rxIf=\"!condition\" select=\"[else]\"></ng-content>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [RxIf]\r\n})\r\nexport class IfComponent {\r\n  @Input({ required: true }) condition!: boolean;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n    :host { display: contents }\n  \n"
        },
        {
            "name": "LabelComponent",
            "id": "component-LabelComponent-760195a4dcb49ceb49001ba02f11ccfd4472848a8515131d0a8337466656d03b779b41b70692d15d1d36ddfee30c6ebb382e2cc5796202052896b67f58d0271c",
            "file": "src/app/core/pages/document-builder/components/question-types/00-label/label.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "label-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-item lines=\"none\">\n  <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n  <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\n  <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\n</ion-item>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\n\r\n@Component({\r\n  selector: 'label-question',\r\n  template: `\r\n    <ion-item lines=\"none\">\r\n      <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n      <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\r\n      <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\r\n    </ion-item>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    QuestionTextComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent\r\n  ]\r\n})\r\nexport class LabelComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "LinkedBoolComponent",
            "id": "component-LinkedBoolComponent-35c394d1f7d8162420250fcdf452917d1cbcea4322a16af91fd8af3fdb9f2d9180af86da479b95319ae7c1ba11bdeff169b73abf5305e75e4c8949f113bd1d09",
            "file": "src/app/core/pages/document-builder/components/question-types/16-linked-bool/linked-bool.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "linked-bool-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n    <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\n    <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\n  </ion-item>\n\n  <ion-item lines=\"none\">\n    <ion-label>{{ section.TableTitles[1] }}</ion-label>\n    <ion-checkbox [(ngModel)]=\"question.YesNoNA\" slot=\"end\" />\n  </ion-item>\n\n  <ion-item>\n    <ion-label>{{ section.TableTitles[2] }}</ion-label>\n    <ion-checkbox [disabled]=\"!question.YesNoNA\" slot=\"end\" />\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "Question",
                    "decorators": []
                },
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "Section",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question, Section } from \"src/app/core/stores/site-document/models\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\n\r\n@Component({\r\n  selector: \"linked-bool-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n        <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\r\n        <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\r\n      </ion-item>\r\n\r\n      <ion-item lines=\"none\">\r\n        <ion-label>{{ section.TableTitles[1] }}</ion-label>\r\n        <ion-checkbox [(ngModel)]=\"question.YesNoNA\" slot=\"end\" />\r\n      </ion-item>\r\n\r\n      <ion-item>\r\n        <ion-label>{{ section.TableTitles[2] }}</ion-label>\r\n        <ion-checkbox [disabled]=\"!question.YesNoNA\" slot=\"end\" />\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  standalone: true,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    FormsModule,\r\n    QuestionTextComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent\r\n  ]\r\n})\r\nexport class LinkedBoolComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n\r\n  @Input({ required: true })\r\n  section!: Section;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "LinkedDatesComponent",
            "id": "component-LinkedDatesComponent-ab717f0ec08cef6380abe629277444e244fd6f1973e0295fb6dc09544f40b4e4f0d3cda5b3e7225ca8825c26afea69d88930eaae996ff02fb4b50664f315ff53",
            "file": "src/app/core/pages/document-builder/components/question-types/18-linked-dates/linked-dates.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "linked-dates-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n  </ion-item>\n  <datetime-picker [(datetime)]=\"question.DateAndTime\" presentation=\"date\" />\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.CascadeOptionsText }}</question-text>\n  </ion-item>\n  <datetime-picker [(datetime)]=\"question.DateAndTime2\" presentation=\"date\" />\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { DatetimePickerComponent } from \"src/app/shared/components/datetime-picker/datetime-picker.component\";\r\nimport { QuestionTextComponent } from \"../extras\";\r\n\r\n@Component({\r\n  selector: \"linked-dates-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n      </ion-item>\r\n      <datetime-picker [(datetime)]=\"question.DateAndTime\" presentation=\"date\" />\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.CascadeOptionsText }}</question-text>\r\n      </ion-item>\r\n      <datetime-picker [(datetime)]=\"question.DateAndTime2\" presentation=\"date\" />\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    QuestionTextComponent,\r\n    DatetimePickerComponent\r\n  ]\r\n})\r\nexport class LinkedDatesComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "LinkedDatetimeComponent",
            "id": "component-LinkedDatetimeComponent-4d0ab40d7e0bcf6f7f2e0f7f1e8b8646b38c7b3d4d121c755cbabc4185824ddc5f429cd9ceacb1dea556f4ed8d3e70a593c243489c50955c4bc588177d4069d9",
            "file": "src/app/core/pages/document-builder/components/question-types/36-linked-date-time/linked-datetime.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "linked-datetime-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n  </ion-item>\n  <datetime-picker [(datetime)]=\"question.DateAndTime\" />\n\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.CascadeOptionsText }}</question-text>\n  </ion-item>\n  <datetime-picker [(datetime)]=\"question.DateAndTime2\" />\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\nimport { IonicModule } from \"@ionic/angular\";\nimport { Question } from \"src/app/core/stores/site-document/models\";\nimport { QuestionTextComponent } from \"../extras\";\nimport { DatetimePickerComponent } from \"src/app/shared/components\";\n\n@Component({\n  selector: \"linked-datetime-question\",\n  template: `\n    <ion-list>\n      <ion-item lines=\"none\">\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n      </ion-item>\n      <datetime-picker [(datetime)]=\"question.DateAndTime\" />\n\n      <ion-item lines=\"none\">\n        <question-text [required]=\"question.Required\">{{ question.CascadeOptionsText }}</question-text>\n      </ion-item>\n      <datetime-picker [(datetime)]=\"question.DateAndTime2\" />\n    </ion-list>\n  `,\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    IonicModule,\n    QuestionTextComponent,\n    DatetimePickerComponent\n  ]\n})\nexport class LinkedDatetimeComponent {\n  @Input({ required: true })\n  question!: Question;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "LinkedTimesComponent",
            "id": "component-LinkedTimesComponent-82fad3722dfa102ecf2a00c9d1afed22dddedde4c5584ec8d615714d5853e52486d2eacafcd333449a33496129d92fdf18ed048fd916883a9dfa601f56e58ae9",
            "file": "src/app/core/pages/document-builder/components/question-types/33-linked-times/linked-times.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "linked-times-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n  </ion-item>\n  <ion-item>\n    <time-picker [(time)]=\"question.DateAndTime\" class=\"w-full\" />\n  </ion-item>\n\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.CascadeOptionsText }}</question-text>\n  </ion-item>\n  <ion-item>\n    <time-picker [(time)]=\"question.DateAndTime2\" class=\"w-full\"></time-picker>\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { QuestionTextComponent } from \"../extras\";\r\nimport { TimePickerComponent } from \"src/app/shared/components\";\r\n\r\n@Component({\r\n  selector: \"linked-times-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n      </ion-item>\r\n      <ion-item>\r\n        <time-picker [(time)]=\"question.DateAndTime\" class=\"w-full\" />\r\n      </ion-item>\r\n\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.CascadeOptionsText }}</question-text>\r\n      </ion-item>\r\n      <ion-item>\r\n        <time-picker [(time)]=\"question.DateAndTime2\" class=\"w-full\"></time-picker>\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule, \r\n    QuestionTextComponent,\r\n    TimePickerComponent\r\n  ]\r\n})\r\nexport class LinkedTimesComponent {\r\n  @Input({ required: true })\r\n  question!: Question;  \r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "LocalAssetSearchComponent",
            "id": "component-LocalAssetSearchComponent-619202e64659694fb59401972d0b08a7a599bc66c523322d6032d422567d24ef892e7205ee7b42398254569970f9ebd9d35cf03662068b8bec93c11d90a7da34",
            "file": "src/app/shared/modals/asset-list/components/local-asset-search/local-asset-search.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "local-asset-search",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-searchbar class=\"animate__animated animate__fadeIn\" />\n\n<ion-list>\n  <ion-item-sliding *rxFor=\"let asset of assets()\n    | fuse: {\n      search: searchRegistration,\n      keys: ['Registration']\n    }\">\n    <ion-item (click)=\"select.emit(asset)\" button>\n      {{ asset.Id }} - {{ asset.Registration }}\n    </ion-item>\n    <ion-item-options side=\"end\">\n      <ion-item-options color=\"danger\">\n        <ion-icon name=\"trash-bin-outline\" />\n      </ion-item-options>\n    </ion-item-options>\n  </ion-item-sliding>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "select",
                    "defaultValue": "new EventEmitter<Asset>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "assets",
                    "defaultValue": "useAssetStore()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "searchRegistration",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 39
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Output } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Asset, useAssetStore } from \"src/app/core/stores/asset/asset.store\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { FusePipe } from \"src/app/shared/pipes\";\r\n\r\n@Component({\r\n  selector: \"local-asset-search\",\r\n  template: `\r\n    <ion-searchbar class=\"animate__animated animate__fadeIn\" />\r\n\r\n    <ion-list>\r\n      <ion-item-sliding *rxFor=\"let asset of assets()\r\n        | fuse: {\r\n          search: searchRegistration,\r\n          keys: ['Registration']\r\n        }\">\r\n        <ion-item (click)=\"select.emit(asset)\" button>\r\n          {{ asset.Id }} - {{ asset.Registration }}\r\n        </ion-item>\r\n        <ion-item-options side=\"end\">\r\n          <ion-item-options color=\"danger\">\r\n            <ion-icon name=\"trash-bin-outline\" />\r\n          </ion-item-options>\r\n        </ion-item-options>\r\n      </ion-item-sliding>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    FusePipe\r\n  ]\r\n})\r\nexport class LocalAssetSearchComponent {\r\n  assets = useAssetStore();\r\n  searchRegistration: string = \"\";\r\n\r\n  @Output()\r\n  select = new EventEmitter<Asset>();\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "LocalOperativeSearchComponent",
            "id": "component-LocalOperativeSearchComponent-b2d87bb94fa93fece3c1dd9e6daaea2047d8f74125d637a4469679184a81000b175b289240dea6bf5e601ad8963df111a23b0ff9a78a5f66a806ed48dab9944d",
            "file": "src/app/shared/modals/operative-list/components/local-operative-search/local-operative-search.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "local-operative-search",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-searchbar class=\"animate__animated animate__fadeIn\" />\n\n<ion-list *rxLet=\"user$; let user\">\n  <ion-item\n    *rxIf=\"!hideMyself && user != null\"\n    (click)=\"select.emit({ ID: user.Id, Name: user.FirstName + ' ' + user.LastName })\"\n    button>\n      {{ user.Id }} - {{ user.FirstName }} {{ user.LastName }}\n  </ion-item>\n  <ion-item-sliding *rxFor=\"let op of operatives$; last as isLast\">\n    <ion-item (click)=\"select.emit(op)\" button>\n      {{ op.ID }} - {{ op.Name }}\n    </ion-item>\n    <ion-item-options side=\"end\">\n      <ion-item-option color=\"danger\">\n        <ion-icon name=\"trash-bin-outline\" />\n      </ion-item-option>\n    </ion-item-options>\n  </ion-item-sliding>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "hideMyself",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "select",
                    "defaultValue": "new EventEmitter<Operative>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "operatives$",
                    "defaultValue": "this.operativesStore.operatives$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "operativesStore",
                    "defaultValue": "inject(OperativesStore)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "user$",
                    "defaultValue": "this.userStore.user$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "userStore",
                    "defaultValue": "inject(UserStore)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, inject, Input, Output } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Operative, OperativesStore } from \"src/app/core/stores/operative/operatives.store\";\r\nimport { UserStore } from \"src/app/core/stores/user/user.store\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { AngularComponent } from \"src/app/shared/lifecycles\";\r\n\r\n@Component({\r\n  selector: \"local-operative-search\",\r\n  template: `\r\n    <ion-searchbar class=\"animate__animated animate__fadeIn\" />\r\n\r\n    <ion-list *rxLet=\"user$; let user\">\r\n      <ion-item \r\n        *rxIf=\"!hideMyself && user != null\"\r\n        (click)=\"select.emit({ ID: user.Id, Name: user.FirstName + ' ' + user.LastName })\"\r\n        button>\r\n          {{ user.Id }} - {{ user.FirstName }} {{ user.LastName }}\r\n      </ion-item>\r\n      <ion-item-sliding *rxFor=\"let op of operatives$; last as isLast\">\r\n        <ion-item (click)=\"select.emit(op)\" button>\r\n          {{ op.ID }} - {{ op.Name }}\r\n        </ion-item>\r\n        <ion-item-options side=\"end\">\r\n          <ion-item-option color=\"danger\">\r\n            <ion-icon name=\"trash-bin-outline\" />\r\n          </ion-item-option>\r\n        </ion-item-options>\r\n      </ion-item-sliding>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n  ]\r\n})\r\nexport class LocalOperativeSearchComponent extends AngularComponent() {\r\n  userStore = inject(UserStore);\r\n  operativesStore = inject(OperativesStore);\r\n\r\n  @Output()\r\n  select = new EventEmitter<Operative>();\r\n\r\n  @Input()\r\n  hideMyself: boolean = false;\r\n\r\n  user$ = this.userStore.user$;\r\n  operatives$ = this.operativesStore.operatives$;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "MultiCheckboxSectionComponent",
            "id": "component-MultiCheckboxSectionComponent-45f1713d92302738edfd03adb60a6841b4f4406c1f8684a0d0aaaf1fb3b4ada885ac5715aaf13f853e878ceb64b3192d02fb9b228099219b99ba9fbc552fd6a1",
            "file": "src/app/core/pages/document-builder/components/document-section/multi-checkbox-section/multi-checkbox-section.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "multi-checkbox-section",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item [id]=\"id\" detail=\"false\" button>\n    <ion-label>{{ section.TableTitles[0] }}</ion-label>\n    <ion-icon name=\"create-outline\" slot=\"end\"></ion-icon>\n  </ion-item>\n</ion-list>\n\n<ion-list class=\"max-h-96\" [style.height]=\"listHeight() | push\">\n  <rx-virtual-scroll-viewport [itemSize]=\"50\">\n    <ion-item *rxVirtualFor=\"let question of selectedQuestions()\" class=\"w-full\">\n      {{ question.QuestionText }}\n    </ion-item>\n  </rx-virtual-scroll-viewport>\n</ion-list>\n\n<ion-modal #modal [trigger]=\"id\">\n  <ng-template>\n    <ion-header>\n      <ion-toolbar>\n        <ion-title class=\"text-center\">Select Responses</ion-title>\n        <ion-buttons slot=\"end\">\n          <ion-button (click)=\"modal.dismiss(); saved.next()\">\n            <ion-icon name=\"close-outline\" slot=\"icon-only\" />\n          </ion-button>\n        </ion-buttons>\n      </ion-toolbar>\n      <ion-toolbar>\n        <ion-searchbar\n          [(ngModel)]=\"searchValue\"\n          debounce=\"300\"\n          placeholder=\"Search\" />\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content>\n      <ion-list class=\"h-full\">\n        <rx-virtual-scroll-viewport [itemSize]=\"50\">\n          <checkbox-question\n            *rxVirtualFor=\"let question of section.Questions\n              | fuse: {\n                search: searchValue,\n                keys: ['QuestionText']\n              }\"\n            class=\"w-full\"\n            [question]=\"question\" />\n        </rx-virtual-scroll-viewport>\n      </ion-list>\n    </ion-content>\n  </ng-template>\n</ion-modal>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 81,
                    "type": "Section",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "id",
                    "defaultValue": "crypto.randomUUID()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 78
                },
                {
                    "name": "listHeight",
                    "defaultValue": "this.selectedQuestions(questions => (questions.length * 50) + \"px\")",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 89
                },
                {
                    "name": "questions",
                    "defaultValue": "using(this.afterViewInit(), this.saved())\r\n    .calculate(() => this.section.Questions)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 83
                },
                {
                    "name": "saved",
                    "defaultValue": "use()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 82
                },
                {
                    "name": "searchValue",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 86
                },
                {
                    "name": "selectedQuestions",
                    "defaultValue": "this.questions(questions => questions.filter(q => q.YesNoNA))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 88
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { importRxTemplate, importRxVirtualScroll } from \"src/app/shared/imports\";\r\nimport { CheckboxComponent } from \"../../question-types/01-checkbox/checkbox.component\";\r\nimport { FusePipe } from \"src/app/shared/pipes\";\r\nimport { Section } from \"src/app/core/stores/site-document/models\";\r\nimport { FixedSizeVirtualScrollStrategy } from \"@rx-angular/template/experimental/virtual-scrolling\";\r\nimport { use, using } from \"src/app/shared/rxjs\";\r\nimport { AngularComponent, withAfterViewInit } from \"src/app/shared/lifecycles\";\r\n\r\n@Component({\r\n  selector: \"multi-checkbox-section\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item [id]=\"id\" detail=\"false\" button>\r\n        <ion-label>{{ section.TableTitles[0] }}</ion-label>\r\n        <ion-icon name=\"create-outline\" slot=\"end\"></ion-icon>\r\n      </ion-item>\r\n    </ion-list>\r\n\r\n    <ion-list class=\"max-h-96\" [style.height]=\"listHeight() | push\">\r\n      <rx-virtual-scroll-viewport [itemSize]=\"50\">\r\n        <ion-item *rxVirtualFor=\"let question of selectedQuestions()\" class=\"w-full\">\r\n          {{ question.QuestionText }}\r\n        </ion-item>\r\n      </rx-virtual-scroll-viewport>\r\n    </ion-list>\r\n\r\n    <ion-modal #modal [trigger]=\"id\">\r\n      <ng-template>\r\n        <ion-header>\r\n          <ion-toolbar>\r\n            <ion-title class=\"text-center\">Select Responses</ion-title>\r\n            <ion-buttons slot=\"end\">\r\n              <ion-button (click)=\"modal.dismiss(); saved.next()\">\r\n                <ion-icon name=\"close-outline\" slot=\"icon-only\" />\r\n              </ion-button>\r\n            </ion-buttons>\r\n          </ion-toolbar>\r\n          <ion-toolbar>\r\n            <ion-searchbar \r\n              [(ngModel)]=\"searchValue\"\r\n              debounce=\"300\" \r\n              placeholder=\"Search\" />\r\n          </ion-toolbar>\r\n        </ion-header>\r\n\r\n        <ion-content>\r\n          <ion-list class=\"h-full\">\r\n            <rx-virtual-scroll-viewport [itemSize]=\"50\">\r\n              <checkbox-question \r\n                *rxVirtualFor=\"let question of section.Questions\r\n                  | fuse: {\r\n                    search: searchValue,\r\n                    keys: ['QuestionText']\r\n                  }\" \r\n                class=\"w-full\"\r\n                [question]=\"question\" />\r\n            </rx-virtual-scroll-viewport>\r\n          </ion-list>\r\n        </ion-content>\r\n      </ng-template>\r\n    </ion-modal>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    ...importRxVirtualScroll(FixedSizeVirtualScrollStrategy),\r\n    FormsModule,\r\n    CheckboxComponent,\r\n    FusePipe\r\n  ]\r\n})\r\nexport class MultiCheckboxSectionComponent extends AngularComponent(withAfterViewInit) {\r\n  id = crypto.randomUUID();\r\n\r\n  @Input({ required: true })\r\n  section!: Section;\r\n  saved = use();\r\n  questions = using(this.afterViewInit(), this.saved())\r\n    .calculate(() => this.section.Questions);\r\n\r\n  searchValue: string = \"\";\r\n\r\n  selectedQuestions = this.questions(questions => questions.filter(q => q.YesNoNA));\r\n  listHeight = this.selectedQuestions(questions => (questions.length * 50) + \"px\");\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "MultiSelectableComponent",
            "id": "component-MultiSelectableComponent-b59bc2641d1c1929799484baf4548b2875e2225c7a2b3b2b30b35e973318830de7f72b3fab96a74ab73dfb906e5560f8d034793b9fe305eb2a7d1213972ec176",
            "file": "src/app/shared/components/multi-selectable/multi-selectable.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "multi-selectable",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-item [id]=\"id\" detail=\"false\" button>\n  <ion-label [color]=\"values.length > 0 ? 'medium' : ''\" class=\"ion-text-wrap\">\n    <if [condition]=\"values.length === 0\">\n      <ion-label show color=\"medium\" class=\"ion-text-wrap\">{{ placeholder }}</ion-label>\n      <ion-label else>\n        <p *rxFor=\"let text of selectedTexts\">{{ text }}</p>\n      </ion-label>\n    </if>\n  </ion-label>\n  <ion-button *rxIf=\"canClear && values.length > 0\" (click)=\"$event.stopPropagation(); values = []; valuesChange.emit([])\" fill=\"clear\">\n    <ion-icon name=\"close-outline\" color=\"danger\" slot=\"icon-only\" />\n  </ion-button>\n  <ion-icon name=\"caret-down-outline\" slot=\"end\" />\n</ion-item>\n\n<ion-modal #modal [trigger]=\"id\">\n  <ng-template>\n    <ion-header>\n      <ion-toolbar>\n        <ion-buttons slot=\"start\">\n          <ion-button (click)=\"modal.dismiss()\" [unpatch] fill=\"clear\">\n            <ion-icon name=\"arrow-back-outline\" slot=\"icon-only\" />\n          </ion-button>\n        </ion-buttons>\n        <ion-title class=\"ion-text-center\">{{ title }}</ion-title>\n      </ion-toolbar>\n      <ion-toolbar>\n        <ion-searchbar [(ngModel)]=\"searchValue\" placeholder=\"Search\" />\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content>\n      <ion-list class=\"h-full\">\n        <rx-virtual-scroll-viewport [itemSize]=\"50\">\n          <ion-item\n            *rxVirtualFor=\"let item of items | fuse: {\n              search: searchValue,\n              keys: itemText != null\n                ? [itemText]\n                : []\n            };\n            last as isLast\"\n            (click)=\"select(item)\"\n            [lines]=\"isLast ? 'none' : 'inset'\"\n            button>\n            <ion-label class=\"ion-text-wrap\">{{ itemText != null ? item[itemText] : item }}</ion-label>\n            <ion-icon\n              *rxIf=\"selectedValues.includes(itemVal != null ? item[itemVal].toString() : item.toString())\"\n              name=\"checkmark-outline\"\n              slot=\"end\" />\n          </ion-item>\n        </rx-virtual-scroll-viewport>\n      </ion-list>\n    </ion-content>\n  </ng-template>\n</ion-modal>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "canClear",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 115,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 88,
                    "type": "T[]",
                    "decorators": []
                },
                {
                    "name": "itemText",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 91,
                    "type": " | null",
                    "decorators": []
                },
                {
                    "name": "itemVal",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 94,
                    "type": " | null",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 82,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "searchValue",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 118,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 85,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "values",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 97,
                    "type": "T[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "valuesChange",
                    "defaultValue": "new EventEmitter<T[]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 112,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "id",
                    "defaultValue": "crypto.randomUUID()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 79
                }
            ],
            "methodsClass": [
                {
                    "name": "select",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 120,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { importRxFixedVirtualScroll, importRxTemplate } from \"../../imports\";\r\nimport { FusePipe } from \"../../pipes\";\r\nimport { IfComponent } from \"../if/if.component\";\r\n\r\n@Component({\r\n  selector: \"multi-selectable\",\r\n  template: `\r\n    <ion-item [id]=\"id\" detail=\"false\" button>\r\n      <ion-label [color]=\"values.length > 0 ? 'medium' : ''\" class=\"ion-text-wrap\">\r\n        <if [condition]=\"values.length === 0\">\r\n          <ion-label show color=\"medium\" class=\"ion-text-wrap\">{{ placeholder }}</ion-label>\r\n          <ion-label else>\r\n            <p *rxFor=\"let text of selectedTexts\">{{ text }}</p>\r\n          </ion-label>\r\n        </if>\r\n      </ion-label>\r\n      <ion-button *rxIf=\"canClear && values.length > 0\" (click)=\"$event.stopPropagation(); values = []; valuesChange.emit([])\" fill=\"clear\">\r\n        <ion-icon name=\"close-outline\" color=\"danger\" slot=\"icon-only\" />\r\n      </ion-button>\r\n      <ion-icon name=\"caret-down-outline\" slot=\"end\" />\r\n    </ion-item>\r\n\r\n    <ion-modal #modal [trigger]=\"id\">\r\n      <ng-template>\r\n        <ion-header>\r\n          <ion-toolbar>\r\n            <ion-buttons slot=\"start\">\r\n              <ion-button (click)=\"modal.dismiss()\" [unpatch] fill=\"clear\">\r\n                <ion-icon name=\"arrow-back-outline\" slot=\"icon-only\" />\r\n              </ion-button>\r\n            </ion-buttons>\r\n            <ion-title class=\"ion-text-center\">{{ title }}</ion-title>\r\n          </ion-toolbar>\r\n          <ion-toolbar>\r\n            <ion-searchbar [(ngModel)]=\"searchValue\" placeholder=\"Search\" />\r\n          </ion-toolbar>\r\n        </ion-header>\r\n\r\n        <ion-content>\r\n          <ion-list class=\"h-full\">\r\n            <rx-virtual-scroll-viewport [itemSize]=\"50\">\r\n              <ion-item \r\n                *rxVirtualFor=\"let item of items | fuse: { \r\n                  search: searchValue,\r\n                  keys: itemText != null \r\n                    ? [itemText]\r\n                    : []\r\n                }; \r\n                last as isLast\" \r\n                (click)=\"select(item)\"\r\n                [lines]=\"isLast ? 'none' : 'inset'\" \r\n                button>\r\n                <ion-label class=\"ion-text-wrap\">{{ itemText != null ? item[itemText] : item }}</ion-label>\r\n                <ion-icon \r\n                  *rxIf=\"selectedValues.includes(itemVal != null ? item[itemVal].toString() : item.toString())\" \r\n                  name=\"checkmark-outline\" \r\n                  slot=\"end\" />\r\n              </ion-item>\r\n            </rx-virtual-scroll-viewport>\r\n          </ion-list>\r\n        </ion-content>\r\n      </ng-template>\r\n    </ion-modal>\r\n  `,\r\n  standalone: true,\r\n  imports: [\r\n    IonicModule,\r\n    IfComponent,\r\n    ...importRxTemplate(),\r\n    ...importRxFixedVirtualScroll(),\r\n    FormsModule,\r\n    FusePipe\r\n  ]\r\n})\r\nexport class MultiSelectableComponent<T extends { [key: string]: object } = {}> {\r\n  id = crypto.randomUUID();\r\n\r\n  @Input()\r\n  placeholder: string = \"\";\r\n\r\n  @Input()\r\n  title: string = \"\";\r\n\r\n  @Input()\r\n  items: T[] = [];\r\n  \r\n  @Input()\r\n  itemText: keyof T | null = null;\r\n\r\n  @Input()\r\n  itemVal: keyof T | null = null;\r\n\r\n  @Input()\r\n  values: T[] = [];\r\n\r\n  get selectedValues() {\r\n    return this.itemVal != null\r\n      ? this.values.map(val => val[this.itemVal as keyof T] + \"\")\r\n      : this.values.map(val => val + \"\");\r\n  }\r\n\r\n  get selectedTexts() {\r\n    return this.itemText != null\r\n      ? this.values.map(val => val[this.itemText as keyof T] + \"\")\r\n      : this.values.map(val => val + \"\");\r\n  }\r\n\r\n  @Output()\r\n  valuesChange = new EventEmitter<T[]>();\r\n\r\n  @Input()\r\n  canClear: boolean = true;\r\n\r\n  @Input()\r\n  searchValue: string = \"\";\r\n\r\n  select(item: T) {\r\n    const val = this.itemVal != null\r\n      ? item[this.itemVal as keyof T] + \"\"\r\n      : item + \"\";\r\n\r\n    this.values = this.selectedValues.includes(val)\r\n      ? this.values.filter(itemVal => this.itemVal != null \r\n        ? (itemVal[this.itemVal] + \"\") !== val\r\n        : (itemVal + \"\") !== val\r\n      )\r\n    : [...this.values, item];\r\n\r\n    this.valuesChange.emit(this.values);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "accessors": {
                "selectedValues": {
                    "name": "selectedValues",
                    "getSignature": {
                        "name": "selectedValues",
                        "type": "",
                        "returnType": "",
                        "line": 99
                    }
                },
                "selectedTexts": {
                    "name": "selectedTexts",
                    "getSignature": {
                        "name": "selectedTexts",
                        "type": "",
                        "returnType": "",
                        "line": 105
                    }
                }
            }
        },
        {
            "name": "NumberComponent",
            "id": "component-NumberComponent-3fd7ce1071cba04200e0441a915355cd5cf48981dc75fdd7933b95b5f370662674938d8b1e8a58f0cb9e95efc1b418c508fe1a003e36e0a6c9e1dd43c236a641",
            "file": "src/app/core/pages/document-builder/components/question-types/12-number/number.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "number-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n    <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\n    <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\n  </ion-item>\n\n  <ion-item>\n    <ion-input label=\"\" type=\"number\" [(ngModel)]=\"question.NumberVal\" />\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\nimport { FormsModule } from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: \"number-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n        <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\r\n        <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\r\n      </ion-item>\r\n\r\n      <ion-item>\r\n        <ion-input label=\"\" type=\"number\" [(ngModel)]=\"question.NumberVal\" />\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  standalone: true,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    FormsModule,\r\n    QuestionTextComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent\r\n  ]\r\n})\r\nexport class NumberComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "OnlineAssetSearchComponent",
            "id": "component-OnlineAssetSearchComponent-182939ff92751cd54eadf6d1cc6b95145f9c062c649bda4498a3b394df318dfeb421b280e08a04b4082403051c04c0dc1ed59eb65731d9b2342c4323f7469391",
            "file": "src/app/shared/modals/asset-list/components/online-asset-search/online-asset-search.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "online-asset-search",
            "styleUrls": [],
            "styles": [
                "\n    ion-list { height: calc(100% - 58px) }\n  "
            ],
            "template": "<ion-searchbar [(ngModel)]=\"searchRegistration\" (keyup.enter)=\"findAssets.fetch()\" />\n\n<if [condition]=\"findAssets.isLoading() | push\">\n  <ion-list show>\n    <ion-item lines=\"none\">\n      <ion-skeleton-text [animated]=\"true\" />\n    </ion-item>\n    <ion-item lines=\"none\">\n      <ion-skeleton-text [animated]=\"true\" />\n    </ion-item>\n    <ion-item lines=\"none\">\n      <ion-skeleton-text [animated]=\"true\" />\n    </ion-item>\n    <ion-item lines=\"none\">\n      <ion-skeleton-text [animated]=\"true\" />\n    </ion-item>\n  </ion-list>\n\n  <ion-list else>\n    <rx-virtual-scroll-viewport [itemSize]=\"50\">\n      <ion-item\n        *rxVirtualFor=\"let asset of findAssets.data()\"\n        (click)=\"addAsset(asset); select.emit(asset);\"\n        class=\"w-full\"\n        button>\n        {{ asset.Id }} - {{ asset.Registration }}\n      </ion-item>\n    </rx-virtual-scroll-viewport>\n  </ion-list>\n</if>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "select",
                    "defaultValue": "new EventEmitter<Asset>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "assets",
                    "defaultValue": "useAssetStore()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "findAssets",
                    "defaultValue": "useFetchAssetsByRegistration(() => ({\r\n    searchString: this.searchRegistration,\r\n    siteId: this.siteId\r\n  }))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 63
                },
                {
                    "name": "searchRegistration",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "siteId",
                    "defaultValue": "param(\"siteId\")?.toNumber()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 60
                }
            ],
            "methodsClass": [
                {
                    "name": "addAsset",
                    "args": [
                        {
                            "name": "asset",
                            "type": "Asset",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 71,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "asset",
                            "type": "Asset",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Output } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { useFetchAssetsByRegistration } from \"src/app/core/http/asset.api\";\r\nimport { Asset, useAssetStore } from \"src/app/core/stores/asset/asset.store\";\r\nimport { IfComponent } from \"src/app/shared/components\";\r\nimport { importRxFixedVirtualScroll, importRxTemplate } from \"src/app/shared/imports\";\r\nimport { param } from \"src/app/shared/route\";\r\n\r\n@Component({\r\n  selector: \"online-asset-search\",\r\n  styles: [`\r\n    ion-list { height: calc(100% - 58px) }\r\n  `],\r\n  template: `\r\n    <ion-searchbar [(ngModel)]=\"searchRegistration\" (keyup.enter)=\"findAssets.fetch()\" />\r\n    \r\n    <if [condition]=\"findAssets.isLoading() | push\">\r\n      <ion-list show>\r\n        <ion-item lines=\"none\">\r\n          <ion-skeleton-text [animated]=\"true\" />\r\n        </ion-item>\r\n        <ion-item lines=\"none\">\r\n          <ion-skeleton-text [animated]=\"true\" />\r\n        </ion-item>\r\n        <ion-item lines=\"none\">\r\n          <ion-skeleton-text [animated]=\"true\" />\r\n        </ion-item>\r\n        <ion-item lines=\"none\">\r\n          <ion-skeleton-text [animated]=\"true\" />\r\n        </ion-item>\r\n      </ion-list>\r\n\r\n      <ion-list else>\r\n        <rx-virtual-scroll-viewport [itemSize]=\"50\">\r\n          <ion-item \r\n            *rxVirtualFor=\"let asset of findAssets.data()\"\r\n            (click)=\"addAsset(asset); select.emit(asset);\"\r\n            class=\"w-full\" \r\n            button>\r\n            {{ asset.Id }} - {{ asset.Registration }}\r\n          </ion-item>\r\n        </rx-virtual-scroll-viewport>\r\n      </ion-list>\r\n    </if>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    ...importRxFixedVirtualScroll(),\r\n    FormsModule,\r\n    IfComponent\r\n  ]\r\n})\r\nexport class OnlineAssetSearchComponent {\r\n  assets = useAssetStore();\r\n\r\n  siteId = param(\"siteId\")?.toNumber();\r\n  searchRegistration: string = \"\";\r\n\r\n  findAssets = useFetchAssetsByRegistration(() => ({\r\n    searchString: this.searchRegistration,\r\n    siteId: this.siteId\r\n  }));\r\n\r\n  @Output()\r\n  select = new EventEmitter<Asset>();\r\n\r\n  addAsset(asset: Asset) {\r\n    this.assets.mutate(assets => [...assets, asset]);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n    ion-list { height: calc(100% - 58px) }\n  \n"
        },
        {
            "name": "OnlineOperativeSearchComponent",
            "id": "component-OnlineOperativeSearchComponent-723678da140570660f0725a762da552820d197491b41938e39da57b877b9d242eaba6fc7f446afe72b345c419fdc4dd7b3d3cab80e0607a47e4e364264f1be53",
            "file": "src/app/shared/modals/operative-list/components/online-operative-search/online-operative-search.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "online-operative-search",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-searchbar [(ngModel)]=\"searchName\" (keyup.enter)=\"operativeSearch.fetch()\" />\n\n<if [condition]=\"operativeSearch.isLoading() | push\">\n  <ion-list show>\n    <ion-item lines=\"none\">\n      <ion-skeleton-text [animated]=\"true\" />\n    </ion-item>\n    <ion-item lines=\"none\">\n      <ion-skeleton-text [animated]=\"true\" />\n    </ion-item>\n    <ion-item lines=\"none\">\n      <ion-skeleton-text [animated]=\"true\" />\n    </ion-item>\n    <ion-item lines=\"none\">\n      <ion-skeleton-text [animated]=\"true\" />\n    </ion-item>\n  </ion-list>\n\n  <ion-list else class=\"h-full\">\n    <rx-virtual-scroll-viewport [itemSize]=\"50\">\n      <ion-item\n        *rxVirtualFor=\"let op of operativeSearch.data(); last as isLast\"\n        class=\"w-full\"\n        [lines]=\"isLast ? 'none' : 'inset'\"\n        button>\n        {{ op.ID }} - {{ op.Name }}\n      </ion-item>\n    </rx-virtual-scroll-viewport>\n  </ion-list>\n</if>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "noAppLimit",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 58,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "operativeApi",
                    "defaultValue": "useOperativeApi()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "operativeSearch",
                    "defaultValue": "useFetchOperativesByName(() => ({\r\n    search: this.searchName,\r\n    noAppLimit: this.noAppLimit,\r\n    siteId: this.siteId\r\n  }))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 63
                },
                {
                    "name": "searchName",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "siteId",
                    "defaultValue": "param(\"siteId\")?.toNumber()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 60
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { importRxTemplate, importRxFixedVirtualScroll } from \"src/app/shared/imports\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { IfComponent } from \"src/app/shared/components\";\r\nimport { useOperativeApi } from \"src/app/core/http\";\r\nimport { param } from \"src/app/shared/route\";\r\nimport { useFetchOperativesByName } from \"src/app/core/http/operative.api\";\r\n\r\n@Component({\r\n  selector: \"online-operative-search\",\r\n  template: `\r\n    <ion-searchbar [(ngModel)]=\"searchName\" (keyup.enter)=\"operativeSearch.fetch()\" />\r\n\r\n    <if [condition]=\"operativeSearch.isLoading() | push\">\r\n      <ion-list show>\r\n        <ion-item lines=\"none\">\r\n          <ion-skeleton-text [animated]=\"true\" />\r\n        </ion-item>\r\n        <ion-item lines=\"none\">\r\n          <ion-skeleton-text [animated]=\"true\" />\r\n        </ion-item>\r\n        <ion-item lines=\"none\">\r\n          <ion-skeleton-text [animated]=\"true\" />\r\n        </ion-item>\r\n        <ion-item lines=\"none\">\r\n          <ion-skeleton-text [animated]=\"true\" />\r\n        </ion-item>\r\n      </ion-list>\r\n\r\n      <ion-list else class=\"h-full\">\r\n        <rx-virtual-scroll-viewport [itemSize]=\"50\">\r\n          <ion-item \r\n            *rxVirtualFor=\"let op of operativeSearch.data(); last as isLast\"\r\n            class=\"w-full\"\r\n            [lines]=\"isLast ? 'none' : 'inset'\"\r\n            button>\r\n            {{ op.ID }} - {{ op.Name }}\r\n          </ion-item>\r\n        </rx-virtual-scroll-viewport>\r\n      </ion-list>\r\n    </if>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    ...importRxFixedVirtualScroll(),\r\n    FormsModule,\r\n    IfComponent\r\n  ]\r\n})\r\nexport class OnlineOperativeSearchComponent {\r\n  operativeApi = useOperativeApi();\r\n\r\n  @Input()\r\n  noAppLimit: boolean = true;\r\n\r\n  siteId = param(\"siteId\")?.toNumber();\r\n  searchName: string = \"\";\r\n  \r\n  operativeSearch = useFetchOperativesByName(() => ({\r\n    search: this.searchName,\r\n    noAppLimit: this.noAppLimit,\r\n    siteId: this.siteId\r\n  }));\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "OperativeListComponent",
            "id": "component-OperativeListComponent-c3cc108173bbdebde0be7f8682d7d687b2f4732a98940866da9226cec8af4100fda8a90e41b8e6cf346d1d71d21c5b515a4315500cce02fa805ea10206075aeb",
            "file": "src/app/core/pages/document-builder/components/question-types/10-operative-list/operative-list.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "operative-list-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text>{{ question.QuestionText }}</question-text>\n    <ion-button *rxIf=\"isMobileApp\" fill=\"clear\" slot=\"end\">\n      <ion-icon name=\"scan-outline\" slot=\"icon-only\" />\n    </ion-button>\n    <ion-button [id]=\"id\" fill=\"clear\" color=\"secondary\" slot=\"end\">\n      <operative-list-modal [trigger]=\"id\" />\n      <ion-icon name=\"search-outline\" slot=\"icon-only\" />\n    </ion-button>\n  </ion-item>\n</ion-list>\n\n<ion-list>\n  <ion-item-sliding *rxFor=\"let operative of question.Operatives; last as isLast\">\n    <ion-item [lines]=\"isLast ? 'none' : 'inset'\">\n      {{ operative.AttendeeID }}: {{ operative.Name }}\n    </ion-item>\n\n    <ion-item-options side=\"end\">\n      <ion-item-option color=\"danger\" (click)=\"remove(operative.AttendeeID)\">\n        <ion-icon name=\"trash-outline\" slot=\"icon-only\" />\n      </ion-item-option>\n    </ion-item-options>\n  </ion-item-sliding>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "id",
                    "defaultValue": "crypto.randomUUID()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "isMobileApp",
                    "defaultValue": "isMobileApp()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 53
                }
            ],
            "methodsClass": [
                {
                    "name": "remove",
                    "args": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 67,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "id",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "select",
                    "args": [
                        {
                            "name": "operative",
                            "type": "Operative",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 58,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "operative",
                            "type": "Operative",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { BarcodeScannerDirective } from \"src/app/shared/directives\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { isMobileApp } from \"src/app/shared/plugins/platform.plugin\";\r\nimport { QuestionTextComponent } from \"../extras\";\r\nimport { OperativeListModal } from \"src/app/shared/modals/operative-list/operative-list.modal\";\r\nimport { Operative } from \"src/app/core/stores/operative/operatives.store\";\r\n\r\n@Component({\r\n  selector: \"operative-list-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text>{{ question.QuestionText }}</question-text>\r\n        <ion-button *rxIf=\"isMobileApp\" fill=\"clear\" slot=\"end\">\r\n          <ion-icon name=\"scan-outline\" slot=\"icon-only\" />\r\n        </ion-button>\r\n        <ion-button [id]=\"id\" fill=\"clear\" color=\"secondary\" slot=\"end\">\r\n          <operative-list-modal [trigger]=\"id\" />\r\n          <ion-icon name=\"search-outline\" slot=\"icon-only\" />\r\n        </ion-button>\r\n      </ion-item>\r\n    </ion-list>\r\n\r\n    <ion-list>\r\n      <ion-item-sliding *rxFor=\"let operative of question.Operatives; last as isLast\">\r\n        <ion-item [lines]=\"isLast ? 'none' : 'inset'\">\r\n          {{ operative.AttendeeID }}: {{ operative.Name }}\r\n        </ion-item>\r\n\r\n        <ion-item-options side=\"end\">\r\n          <ion-item-option color=\"danger\" (click)=\"remove(operative.AttendeeID)\">\r\n            <ion-icon name=\"trash-outline\" slot=\"icon-only\" />\r\n          </ion-item-option>\r\n        </ion-item-options>\r\n      </ion-item-sliding>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule, \r\n    ...importRxTemplate(),\r\n    OperativeListModal,\r\n    BarcodeScannerDirective,\r\n    QuestionTextComponent\r\n  ]\r\n})\r\nexport class OperativeListComponent {\r\n  id = crypto.randomUUID();\r\n  isMobileApp = isMobileApp();\r\n\r\n  @Input({ required: true })\r\n  question!: Question;  \r\n\r\n  select(operative: Operative) {\r\n    if (this.question.Operatives.find(o => o.AttendeeID === operative.ID) == null)\r\n      this.question.Operatives.push({\r\n        AttendeeID: operative.ID,\r\n        DateAttended: new Date(),\r\n        Name: operative.Name\r\n      });\r\n  }\r\n\r\n  remove(id: number) {\r\n    this.question.Operatives = this.question.Operatives.filter(o => o.AttendeeID !== id);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "OperativeListModal",
            "id": "component-OperativeListModal-59a197f35f44149fc0a1f142295e499896ca240332ace528a8a9eaf4643aff0888f731e60ad2c3db58918cecd576745c33499ceb1dc4e31fcd077ee2a098de6f",
            "file": "src/app/shared/modals/operative-list/operative-list.modal.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "operative-list-modal",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-modal #modal [trigger]=\"trigger\" [isOpen]=\"isOpen\">\n  <ng-template>\n    <ion-header>\n      <ion-toolbar>\n        <ion-title class=\"ion-text-center\">Select an Operative</ion-title>\n        <ion-buttons slot=\"end\">\n          <ion-button (click)=\"modal.dismiss()\">\n            <ion-icon name=\"close-outline\" slot=\"icon-only\" />\n          </ion-button>\n        </ion-buttons>\n      </ion-toolbar>\n\n      <ion-toolbar>\n        <ion-segment [(ngModel)]=\"segment\" class=\"w-full\">\n          <ion-segment-button value=\"local\">\n            <ion-icon name=\"phone-portrait-outline\" />\n          </ion-segment-button>\n          <ion-segment-button value=\"online\">\n            <ion-icon name=\"wifi-outline\" />\n          </ion-segment-button>\n        </ion-segment>\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content [ngSwitch]=\"segment\" class=\"ion-padding\">\n      <local-operative-search\n        *ngSwitchCase=\"'local'\"\n        [hideMyself]=\"hideMyself\"\n        (select)=\"select.emit($event); modal.dismiss();\" />\n      <online-operative-search *ngSwitchCase=\"'online'\" />\n    </ion-content>\n  </ng-template>\n</ion-modal>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "hideMyself",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 64,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "isOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 61,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 58,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "select",
                    "defaultValue": "new EventEmitter<Operative>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "segment",
                    "defaultValue": "\"local\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"local\" | \"online\"",
                    "optional": false,
                    "description": "",
                    "line": 66
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { importNgSwitch, importRxTemplate } from \"../../imports\";\r\nimport { LocalOperativeSearchComponent, OnlineOperativeSearchComponent } from \"./components\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { Operative } from \"src/app/core/stores/operative/operatives.store\";\r\n\r\n@Component({\r\n  selector: \"operative-list-modal\",\r\n  template: `\r\n    <ion-modal #modal [trigger]=\"trigger\" [isOpen]=\"isOpen\">\r\n      <ng-template>\r\n        <ion-header>\r\n          <ion-toolbar>\r\n            <ion-title class=\"ion-text-center\">Select an Operative</ion-title>\r\n            <ion-buttons slot=\"end\">\r\n              <ion-button (click)=\"modal.dismiss()\">\r\n                <ion-icon name=\"close-outline\" slot=\"icon-only\" />\r\n              </ion-button>\r\n            </ion-buttons>\r\n          </ion-toolbar>\r\n\r\n          <ion-toolbar>\r\n            <ion-segment [(ngModel)]=\"segment\" class=\"w-full\">\r\n              <ion-segment-button value=\"local\">\r\n                <ion-icon name=\"phone-portrait-outline\" />\r\n              </ion-segment-button>\r\n              <ion-segment-button value=\"online\">\r\n                <ion-icon name=\"wifi-outline\" />\r\n              </ion-segment-button>\r\n            </ion-segment>\r\n          </ion-toolbar>\r\n        </ion-header>\r\n      \r\n        <ion-content [ngSwitch]=\"segment\" class=\"ion-padding\">\r\n          <local-operative-search \r\n            *ngSwitchCase=\"'local'\" \r\n            [hideMyself]=\"hideMyself\" \r\n            (select)=\"select.emit($event); modal.dismiss();\" />\r\n          <online-operative-search *ngSwitchCase=\"'online'\" />\r\n        </ion-content>\r\n      </ng-template>\r\n    </ion-modal>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    FormsModule,\r\n    ...importRxTemplate(),\r\n    ...importNgSwitch(),\r\n    LocalOperativeSearchComponent,\r\n    OnlineOperativeSearchComponent\r\n  ]\r\n})\r\nexport class OperativeListModal {\r\n  @Input({ required: true })\r\n  trigger!: string;\r\n  \r\n  @Input()\r\n  isOpen: boolean = false;\r\n\r\n  @Input()\r\n  hideMyself: boolean = false;\r\n\r\n  segment: \"local\" | \"online\" = \"local\"\r\n\r\n  @Output()\r\n  select = new EventEmitter<Operative>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "PhotoViewerComponent",
            "id": "component-PhotoViewerComponent-30494dccfe64ae3a3d25877bbc341320a63f1760aef31783aeef01903d6ef0cab40c96a4f6bdf4f536e99fbc2f7534b6b60f4c7ad851bac0f173828227d2e185",
            "file": "src/app/shared/directives/photo-viewer/photo-viewer.directive.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "photo-viewer",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-header>\n  <ion-toolbar>\n    <ion-buttons slot=\"primary\">\n      <ion-button (click)=\"close()\">\n        <ion-icon slot=\"icon-only\" name=\"close\" />\n      </ion-button>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content class=\"ion-padding\">\n  <swiper-container>\n    <swiper-slide>\n      <img class=\"\n        max-w-full\n        max-h-full\n        absolute\n        top-1/2\n        left-1/2\n        -translate-x-1/2\n        -translate-y-1/2\n        p-4\"\n        [src]=\"src\" />\n    </swiper-slide>\n  </swiper-container>\n</ion-content>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "modalCtrl",
                    "defaultValue": "inject(ModalController)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                }
            ],
            "methodsClass": [
                {
                    "name": "close",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CUSTOM_ELEMENTS_SCHEMA, ChangeDetectionStrategy, Component, Directive, HostListener, Input, inject } from \"@angular/core\";\r\nimport { IonicModule, ModalController } from \"@ionic/angular\";\r\n\r\n@Component({\r\n  selector: \"photo-viewer\",\r\n  template: `\r\n    <ion-header>\r\n      <ion-toolbar>\r\n        <ion-buttons slot=\"primary\">\r\n          <ion-button (click)=\"close()\">\r\n            <ion-icon slot=\"icon-only\" name=\"close\" />\r\n          </ion-button>\r\n        </ion-buttons>\r\n      </ion-toolbar>\r\n    </ion-header>\r\n\r\n    <ion-content class=\"ion-padding\">\r\n      <swiper-container>\r\n        <swiper-slide>\r\n          <img class=\"\r\n            max-w-full \r\n            max-h-full \r\n            absolute \r\n            top-1/2 \r\n            left-1/2 \r\n            -translate-x-1/2 \r\n            -translate-y-1/2\r\n            p-4\" \r\n            [src]=\"src\" />\r\n        </swiper-slide>\r\n      </swiper-container>\r\n    </ion-content>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\r\n  imports: [IonicModule]\r\n})\r\nclass PhotoViewerComponent {\r\n  modalCtrl = inject(ModalController);\r\n\r\n  @Input({ required: true })\r\n  src!: string;\r\n\r\n  close() {\r\n    this.modalCtrl.dismiss();\r\n  }\r\n}\r\n\r\n@Directive({\r\n  selector: \"[src]\",\r\n  standalone: true\r\n})\r\nexport class PhotoViewerDirective {\r\n  modalCtrl = inject(ModalController);\r\n\r\n  @Input()\r\n  src!: string;\r\n\r\n  @HostListener(\"click\")\r\n  async view() {\r\n    const modal = await this.modalCtrl.create({\r\n      component: PhotoViewerComponent,\r\n      componentProps: {\r\n        src: this.src\r\n      }\r\n    });\r\n\r\n    modal.present();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ProjectSelectComponent",
            "id": "component-ProjectSelectComponent-197713d2508c3f8d5c13a282c4ba96bbc49b27ba1a671a422d753cc81f2cd9ef1ce1fc105a1d1923b9a5998c67923cc21bf68c131739eeb2f3c2c551c70cf8a7",
            "file": "src/app/core/pages/document-builder/components/question-types/27-project-select/project-select.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "project-select[question]",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n    <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\n    <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\n  </ion-item>\n\n  <selectable\n    placeholder=\"Select\"\n    [title]=\"question.QuestionText\"\n    [canClear]=\"!question.Required\" />\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\nimport { SelectableComponent } from \"src/app/shared/components\";\r\n\r\n@Component({\r\n  selector: \"project-select[question]\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n        <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\r\n        <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\r\n      </ion-item>\r\n\r\n      <selectable\r\n        placeholder=\"Select\"\r\n        [title]=\"question.QuestionText\"\r\n        [canClear]=\"!question.Required\" />\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    QuestionTextComponent,\r\n    SelectableComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent\r\n  ]\r\n})\r\nexport class ProjectSelectComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "QuestionTextComponent",
            "id": "component-QuestionTextComponent-efba3a76ed75b15a5f1a29d14085f495ba7c23b0d69572524ed799486cb10a6a9c8213a644994acae4cf84059b086a2211c9fbc6be4607a1f7122915094e5164",
            "file": "src/app/core/pages/document-builder/components/question-types/extras/question-text/question-text.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "question-text",
            "styleUrls": [],
            "styles": [],
            "template": "<p class=\"ion-text-wrap\">\n  <ng-content></ng-content>\n  <span *rxIf=\"required\" class=\"text-red-500\">*</span>\n</p>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\n\r\n@Component({\r\n  selector: \"question-text\",\r\n  template: `\r\n    <p class=\"ion-text-wrap\">\r\n      <ng-content></ng-content>\r\n      <span *rxIf=\"required\" class=\"text-red-500\">*</span>\r\n    </p>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [...importRxTemplate()]\r\n})\r\nexport class QuestionTextComponent {\r\n  @Input()\r\n  required: boolean = false;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "QueueDurationComponent",
            "id": "component-QueueDurationComponent-07c5474b6f03bbc8431ae6da27501efeef90da7a479d0575d00a27358f59d54d5cd65d2aec34ce3936cfb6e2a14734b2a2b0068a65be0ca29cee8bd776a7b358",
            "file": "src/app/core/pages/document-builder/components/input-types/queue-duration/queue-duration.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "queue-duration",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-card>\n  <ion-card-header>\n    <ion-card-title class=\"text-center\">Queue Duration</ion-card-title>\n  </ion-card-header>\n  <ion-card-content>\n    <ion-grid>\n      <ion-row>\n        <ion-col>\n          <ion-input [(ngModel)]=\"duration\" (ionChange)=\"durationChange.emit(duration)\" label=\"Duration\" labelPlacement=\"floating\" type=\"number\" min=\"0\" />\n        </ion-col>\n        <ion-col>\n          <ion-select [(ngModel)]=\"type\" (ionChange)=\"typeChange.emit(type)\" interface=\"popover\" label=\"Type\" labelPlacement=\"floating\">\n            <ion-select-option value=\"Mins\">Minutes</ion-select-option>\n            <ion-select-option value=\"Hours\">Hours</ion-select-option>\n            <ion-select-option value=\"Days\">Days</ion-select-option>\n          </ion-select>\n        </ion-col>\n      </ion-row>\n    </ion-grid>\n  </ion-card-content>\n</ion-card>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "duration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "\"Mins\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "\"Mins\" | \"Hours\" | \"Days\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "durationChange",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "EventEmitter"
                },
                {
                    "name": "typeChange",
                    "defaultValue": "new EventEmitter<\"Mins\" | \"Hours\" | \"Days\">()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\n\r\n@Component({\r\n  selector: \"queue-duration\",\r\n  template: `\r\n    <ion-card>\r\n      <ion-card-header>\r\n        <ion-card-title class=\"text-center\">Queue Duration</ion-card-title>\r\n      </ion-card-header>\r\n      <ion-card-content>\r\n        <ion-grid>\r\n          <ion-row>\r\n            <ion-col>\r\n              <ion-input [(ngModel)]=\"duration\" (ionChange)=\"durationChange.emit(duration)\" label=\"Duration\" labelPlacement=\"floating\" type=\"number\" min=\"0\" />\r\n            </ion-col>\r\n            <ion-col>\r\n              <ion-select [(ngModel)]=\"type\" (ionChange)=\"typeChange.emit(type)\" interface=\"popover\" label=\"Type\" labelPlacement=\"floating\">\r\n                <ion-select-option value=\"Mins\">Minutes</ion-select-option>\r\n                <ion-select-option value=\"Hours\">Hours</ion-select-option>\r\n                <ion-select-option value=\"Days\">Days</ion-select-option>\r\n              </ion-select>\r\n            </ion-col>\r\n          </ion-row>\r\n        </ion-grid>\r\n      </ion-card-content>\r\n    </ion-card>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    FormsModule\r\n  ]\r\n})\r\nexport class QueueDurationComponent {\r\n  @Input()\r\n  duration?: number;\r\n\r\n  @Output()\r\n  durationChange = new EventEmitter<number>();\r\n\r\n  @Input()\r\n  type: \"Mins\" | \"Hours\" | \"Days\" = \"Mins\";\r\n\r\n  @Output()\r\n  typeChange = new EventEmitter<\"Mins\" | \"Hours\" | \"Days\">();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "QueueSelectComponent",
            "id": "component-QueueSelectComponent-e751dffce810360bd83efcdbc64816b8ebb153e5f0d048cb953ff5f8e9db82b65415d11d655975562b137355df0031f2215e2a3dab51780ee1ac293894263dd1",
            "file": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "queue-select",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-card>\n  <ion-card-header>\n    <ion-card-title class=\"text-center\">{{ title }}</ion-card-title>\n  </ion-card-header>\n\n  <ion-card-content>\n    <ion-list>\n      <selectable\n        [title]=\"title\"\n        placeholder=\"Queues\"\n        (valueChange)=\"queueIdChange.emit($event!.id)\"\n        [items]=\"queues\"\n        [value]=\"queueId\"\n        itemText=\"name\"\n        itemValue=\"id\"\n        [canClear]=\"false\" />\n    </ion-list>\n  </ion-card-content>\n</ion-card>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "queueId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "queues",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "Array<literal type>",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "\"Select Queue\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "queueIdChange",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "queue$",
                    "defaultValue": "merge(\r\n    this.afterViewInit(),\r\n    this.input(\"queueId\")\r\n  ).pipe(\r\n    map(() => this.queues.find(q => q.id === this.queueId) || null)\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<literal type | null>",
                    "optional": false,
                    "description": "",
                    "line": 52
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { map, merge, Observable } from \"rxjs\";\r\nimport { SelectableComponent } from \"src/app/shared/components/selectable/selectable.component\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { AngularComponent, withAfterViewInit, withOnChanges } from \"src/app/shared/lifecycles\";\r\n\r\n@Component({\r\n  selector: \"queue-select\",\r\n  template: `\r\n    <ion-card>\r\n      <ion-card-header>\r\n        <ion-card-title class=\"text-center\">{{ title }}</ion-card-title>\r\n      </ion-card-header>\r\n\r\n      <ion-card-content>\r\n        <ion-list>\r\n          <selectable \r\n            [title]=\"title\"\r\n            placeholder=\"Queues\"\r\n            (valueChange)=\"queueIdChange.emit($event!.id)\"\r\n            [items]=\"queues\" \r\n            [value]=\"queueId\"\r\n            itemText=\"name\"\r\n            itemValue=\"id\"\r\n            [canClear]=\"false\" />\r\n        </ion-list>\r\n      </ion-card-content>\r\n    </ion-card>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    SelectableComponent\r\n  ]\r\n})\r\nexport class QueueSelectComponent extends AngularComponent(withAfterViewInit, withOnChanges) {\r\n  @Input()\r\n  title: string = \"Select Queue\";\r\n\r\n  @Input()\r\n  queues: Array<{ id: number, name: string }> = [];\r\n\r\n  @Input()\r\n  queueId?: number;\r\n\r\n  @Output()\r\n  queueIdChange = new EventEmitter<number>();\r\n\r\n  queue$: Observable<{ id: number, name: string } | null> = merge(\r\n    this.afterViewInit(),\r\n    this.input(\"queueId\")\r\n  ).pipe(\r\n    map(() => this.queues.find(q => q.id === this.queueId) || null)\r\n  );\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "RadioGroupComponent",
            "id": "component-RadioGroupComponent-e33dceba8aac81c3e47c84d9ef6e26153de0f2d2b6ae7c886f331f75e8826be45de0bc03cffaac8c272d44889360e73f5516b277abf92e47466ebbb3defdccfb",
            "file": "src/app/core/pages/document-builder/components/question-types/02-radio-group/radio-group.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "radio-group-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-item class=\"ion-no-padding\" lines=\"none\">\n  <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n  <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\n  <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\n</ion-item>\n\n<ion-list>\n  <ion-radio-group [(ngModel)]=\"question.YesNoNA\">\n    <ion-item>\n      <ion-radio color=\"success\" [value]=\"true\">{{ section.TableTitles[0] || \"\" }}</ion-radio>\n    </ion-item>\n\n    <ion-item>\n      <ion-radio color=\"danger\" [value]=\"false\">{{ section.TableTitles[1] || \"\" }}</ion-radio>\n    </ion-item>\n\n    <ion-item>\n      <ion-radio [value]=\"null\">{{ section.TableTitles[2] || \"\" }}</ion-radio>\n    </ion-item>\n  </ion-radio-group>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "Section",
                    "decorators": []
                },
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\nimport { Question, Section } from \"src/app/core/stores/site-document/models\";\r\nimport { FormsModule } from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: \"radio-group-question\",\r\n  template: `\r\n    <ion-item class=\"ion-no-padding\" lines=\"none\">\r\n      <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n      <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\r\n      <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\r\n    </ion-item>\r\n\r\n    <ion-list>\r\n      <ion-radio-group [(ngModel)]=\"question.YesNoNA\">\r\n        <ion-item>\r\n          <ion-radio color=\"success\" [value]=\"true\">{{ section.TableTitles[0] || \"\" }}</ion-radio>\r\n        </ion-item>\r\n\r\n        <ion-item>\r\n          <ion-radio color=\"danger\" [value]=\"false\">{{ section.TableTitles[1] || \"\" }}</ion-radio>\r\n        </ion-item>\r\n\r\n        <ion-item>\r\n          <ion-radio [value]=\"null\">{{ section.TableTitles[2] || \"\" }}</ion-radio>\r\n        </ion-item>\r\n      </ion-radio-group>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    FormsModule,\r\n    QuestionTextComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent\r\n  ]\r\n})\r\nexport class RadioGroupComponent {\r\n  @Input({ required: true })\r\n  section!: Section;\r\n  \r\n  @Input({ required: true })\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "RadioGroupTextboxComponent",
            "id": "component-RadioGroupTextboxComponent-8cdbb4a2003fad7fc83652d045a469c07724769ff3e0995a31823c77bdc692e875749286b7587d091c4fa18fea8419591237c23a062640e3fb42f015687a6570",
            "file": "src/app/core/pages/document-builder/components/question-types/07-radio-group-textbox/radio-group-textbox.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "radio-group-textbox-question",
            "styleUrls": [],
            "styles": [],
            "template": "<radio-group-question [section]=\"section\" [question]=\"question\"></radio-group-question>\n<ion-textarea label=\"\" rows=\"4\" fill=\"outline\" />\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "Section",
                    "decorators": []
                },
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { RadioGroupComponent } from \"../02-radio-group/radio-group.component\";\r\nimport { Question, Section } from \"src/app/core/stores/site-document/models\";\r\n\r\n@Component({\r\n  selector: \"radio-group-textbox-question\",\r\n  template: `\r\n    <radio-group-question [section]=\"section\" [question]=\"question\"></radio-group-question>\r\n    <ion-textarea label=\"\" rows=\"4\" fill=\"outline\" />\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    RadioGroupComponent\r\n  ]\r\n})\r\nexport class RadioGroupTextboxComponent {\r\n  @Input({ required: true })\r\n  section!: Section;\r\n\r\n  @Input({ required: true })\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "RadioTableComponent",
            "id": "component-RadioTableComponent-8567cf1964e78feb740791dae9c00a4f80b1ae79a018277987e39cff31b3d6f21236bf0017b1136adc835e8150d0e7e288681aff679de05c0c9e1d97993c8bc5",
            "file": "src/app/core/pages/document-builder/components/question-types/02-radio-table/radio-table.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "radio-table-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-row>\n  <ion-col class=\"flex items-center\" size=\"2\">\n    <ion-label>\n      <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n    </ion-label>\n  </ion-col>\n  <ion-radio-group class=\"contents\">\n    <ion-col class=\"flex justify-center items-center\" size=\"1\">\n      <ion-radio aria-label=\"\" color=\"success\" [value]=\"true\"></ion-radio>\n    </ion-col>\n    <ion-col class=\"flex justify-center items-center\" size=\"1\">\n      <ion-radio aria-label=\"\" color=\"danger\" [value]=\"false\"></ion-radio>\n    </ion-col>\n    <ion-col class=\"flex justify-center items-center\" size=\"1\">\n      <ion-radio aria-label=\"\" [value]=\"null\"></ion-radio>\n    </ion-col>\n  </ion-radio-group>\n  <ion-col size=\"1\">\n    <camera-capture *rxIf=\"question.CanHaveImg\" />\n    <file-upload *rxIf=\"question.CanHaveFiles\" />\n  </ion-col>\n</ion-row>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\n\r\n@Component({\r\n  selector: \"radio-table-question\",\r\n  template: `\r\n    <ion-row>\r\n      <ion-col class=\"flex items-center\" size=\"2\">\r\n        <ion-label>\r\n          <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n        </ion-label>\r\n      </ion-col>\r\n      <ion-radio-group class=\"contents\">\r\n        <ion-col class=\"flex justify-center items-center\" size=\"1\">\r\n          <ion-radio aria-label=\"\" color=\"success\" [value]=\"true\"></ion-radio>\r\n        </ion-col>\r\n        <ion-col class=\"flex justify-center items-center\" size=\"1\">\r\n          <ion-radio aria-label=\"\" color=\"danger\" [value]=\"false\"></ion-radio>\r\n        </ion-col>\r\n        <ion-col class=\"flex justify-center items-center\" size=\"1\">\r\n          <ion-radio aria-label=\"\" [value]=\"null\"></ion-radio>\r\n        </ion-col>\r\n      </ion-radio-group>\r\n      <ion-col size=\"1\">\r\n        <camera-capture *rxIf=\"question.CanHaveImg\" />\r\n        <file-upload *rxIf=\"question.CanHaveFiles\" />\r\n      </ion-col>\r\n    </ion-row>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    QuestionTextComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent\r\n  ]\r\n})\r\nexport class RadioTableComponent {  \r\n  @Input({ required: true })\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "RadioTableTextboxComponent",
            "id": "component-RadioTableTextboxComponent-9a7521447a673e40f648ec070e2b0878cb1ad319723042cbe21e3165cd45889a211da4d2ac7cea57d04f1a1fa5c8ceddfbc16c69471675ab5c48af9ed04152d4",
            "file": "src/app/core/pages/document-builder/components/question-types/07-radio-table-textbox/radio-table-textbox.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "radio-table-textbox-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-row>\n  <ion-col class=\"flex items-center\" size=\"2\">\n    <ion-label>\n      <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n    </ion-label>\n  </ion-col>\n  <ion-radio-group class=\"contents\">\n    <ion-col class=\"flex justify-center items-center\" size=\"1\">\n      <ion-radio aria-label=\"\" color=\"success\" [value]=\"true\"></ion-radio>\n    </ion-col>\n    <ion-col class=\"flex justify-center items-center\" size=\"1\">\n      <ion-radio aria-label=\"\" color=\"danger\" [value]=\"false\"></ion-radio>\n    </ion-col>\n    <ion-col class=\"flex justify-center items-center\" size=\"1\">\n      <ion-radio aria-label=\"\" [value]=\"null\"></ion-radio>\n    </ion-col>\n  </ion-radio-group>\n  <ion-col size=\"2\">\n    <ion-textarea label=\"\" rows=\"4\" fill=\"outline\" />\n  </ion-col>\n</ion-row>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { QuestionTextComponent } from \"../extras\";\r\n\r\n@Component({\r\n  selector: \"radio-table-textbox-question\",\r\n  template: `\r\n    <ion-row>\r\n      <ion-col class=\"flex items-center\" size=\"2\">\r\n        <ion-label>\r\n          <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n        </ion-label>\r\n      </ion-col>\r\n      <ion-radio-group class=\"contents\">\r\n        <ion-col class=\"flex justify-center items-center\" size=\"1\">\r\n          <ion-radio aria-label=\"\" color=\"success\" [value]=\"true\"></ion-radio>\r\n        </ion-col>\r\n        <ion-col class=\"flex justify-center items-center\" size=\"1\">\r\n          <ion-radio aria-label=\"\" color=\"danger\" [value]=\"false\"></ion-radio>\r\n        </ion-col>\r\n        <ion-col class=\"flex justify-center items-center\" size=\"1\">\r\n          <ion-radio aria-label=\"\" [value]=\"null\"></ion-radio>\r\n        </ion-col>\r\n      </ion-radio-group>\r\n      <ion-col size=\"2\">\r\n        <ion-textarea label=\"\" rows=\"4\" fill=\"outline\" />\r\n      </ion-col>\r\n    </ion-row>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule, \r\n    QuestionTextComponent\r\n  ]\r\n})\r\nexport class RadioTableTextboxComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "RamsSelectComponent",
            "id": "component-RamsSelectComponent-373a3a6d16ce8081a048da4504b495c7db54a1a6c0cda198b2946870c541ca172687af213b9f757f488aeae63186394c0f8169868d5d05b1a127b32daf298322",
            "file": "src/app/core/pages/document-builder/components/question-types/28-rams-select/rams-select.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "rams-select-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n    <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\n    <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\n  </ion-item>\n  <selectable\n    placeholder=\"Select\"\n    [title]=\"question.QuestionText\"\n    [items]=\"rams.thatArentExpiredToday() | push\"\n    itemValue=\"Reference\"\n    itemText=\"Reference\"\n    [canClear]=\"!question.Required\" />\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "rams",
                    "defaultValue": "useRams()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 42
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\nimport { SelectableComponent } from \"src/app/shared/components\";\r\nimport { useRams } from \"src/app/core/http/login.api\";\r\n\r\n@Component({\r\n  selector: \"rams-select-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n        <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\r\n        <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\r\n      </ion-item>\r\n      <selectable \r\n        placeholder=\"Select\"\r\n        [title]=\"question.QuestionText\"\r\n        [items]=\"rams.thatArentExpiredToday() | push\"\r\n        itemValue=\"Reference\"\r\n        itemText=\"Reference\"\r\n        [canClear]=\"!question.Required\" />\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    QuestionTextComponent,\r\n    SelectableComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent\r\n  ]\r\n})\r\nexport class RamsSelectComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n\r\n  rams = useRams();\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ReactiveComponent",
            "id": "component-ReactiveComponent-684ea1e391f9f8a2e5ce700e1a2c1f3277fd6d82646e9eb9113bfe004f1aede79448c013d03867b089a5a27ff5fb830ce76a5d041d71113da234d796076c1e14",
            "file": "src/app/shared/lifecycles/lifecycle-component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from \"@angular/core\";\r\nimport { flow } from \"lodash-es\";\r\nimport { AnyFunction } from \"./types\";\r\nimport { withNoop } from \"./with-noop\";\r\n\r\n@Component({ template: \"\" })\r\nclass ReactiveComponent {};\r\n\r\nexport function AngularComponent<T1 extends AnyFunction>(h1: T1): ReturnType<T1>\r\nexport function AngularComponent<T1 extends AnyFunction, T2 extends AnyFunction>(h1: T1, h2: T2): ReturnType<T1> & ReturnType<T2>\r\nexport function AngularComponent<T1 extends AnyFunction, T2 extends AnyFunction, T3 extends AnyFunction>(h1: T1, h2: T2, h3: T3): ReturnType<T1> & ReturnType<T2> & ReturnType<T3>\r\nexport function AngularComponent<T1 extends AnyFunction, T2 extends AnyFunction, T3 extends AnyFunction, T4 extends AnyFunction>(h1: T1, h2: T2, h3: T3, h4: T4): ReturnType<T1> & ReturnType<T2> & ReturnType<T3> & ReturnType<T4>\r\nexport function AngularComponent<T1 extends AnyFunction, T2 extends AnyFunction, T3 extends AnyFunction, T4 extends AnyFunction, T5 extends AnyFunction>(h1: T1, h2: T2, h3: T3, h4: T4, h5: T5): ReturnType<T1> & ReturnType<T2> & ReturnType<T3> & ReturnType<T4> & ReturnType<T5>\r\nexport function AngularComponent<T1 extends AnyFunction, T2 extends AnyFunction, T3 extends AnyFunction, T4 extends AnyFunction, T5 extends AnyFunction, T6 extends AnyFunction>(h1: T1, h2: T2, h3: T3, h4: T4, h5: T5, h6: T6): ReturnType<T1> & ReturnType<T2> & ReturnType<T3> & ReturnType<T4> & ReturnType<T5> & ReturnType<T6>\r\nexport function AngularComponent(): ReturnType<typeof withNoop> & ReactiveComponent;\r\nexport function AngularComponent(...args: AnyFunction[]): any {\r\n  if (args == null || args.length === 0) return ReactiveComponent;\r\n\r\n  const withHooks = flow(args);\r\n  return withHooks(ReactiveComponent); \r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "RegistrationPage",
            "id": "component-RegistrationPage-50ead7449c91ac73941bbbd4304b9e5fc0a9ed1578ac79c7fd8b940b060641450d5db2067902fa3665cccaab559d6b197ad55e469b777e8b09f29e7889d974dc",
            "file": "src/app/core/pages/registration/registration.page.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-registration",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-header>\n  <ion-toolbar>\n    <ion-title class=\"ion-text-center ion-text-wrap animate__animated animate__fadeInLeft animate__faster\">Site Documents Registration</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content [formGroup]=\"form\" class=\"ion-padding animate__animated animate__fadeInLeft animate__faster\">\n  <ion-list>\n    <ion-item>\n      <ion-input\n        label=\"Registration Code\"\n        labelPlacement=\"floating\"\n        formControlName=\"token\"\n        type=\"text\"\n        clearInput />\n    </ion-item>\n    <ion-item>\n      <ion-input\n        label=\"Pin\"\n        labelPlacement=\"floating\"\n        formControlName=\"pin\"\n        type=\"tel\"\n        clearInput />\n    </ion-item>\n  </ion-list>\n\n  <ion-button\n    *rxLet=\"form.invalid$; let isInvalid\"\n    [disabled]=\"isInvalid\"\n    (click)=\"submit()\"\n    [unpatch]\n    expand=\"full\">\n    Submit\n  </ion-button>\n</ion-content>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "form",
                    "defaultValue": "new FormGroup({\r\n    token: new FormControl(\"\", [\r\n      Validators.required\r\n    ]),\r\n    pin: new FormControl(\"\", [\r\n      Validators.required,\r\n      Validators.minLength(4)\r\n    ])\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "submit",
                    "defaultValue": "reaction(click$ => click$(\r\n    takeUntilDestroyed(),\r\n    clickReaction(),\r\n    switchMap(() => this.userStore.getUserRequest$(this.form.value$))\r\n  ))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 72
                },
                {
                    "name": "userStore",
                    "defaultValue": "inject(UserStore)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 60
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, inject } from \"@angular/core\";\r\nimport { takeUntilDestroyed } from \"@angular/core/rxjs-interop\";\r\nimport { ReactiveFormsModule, Validators } from \"@angular/forms\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { FormGroup, FormControl } from \"@ngneat/reactive-forms\";\r\nimport { AngularComponent } from \"src/app/shared/lifecycles\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { UserStore } from \"../../stores/user/user.store\";\r\nimport { switchMap } from \"rxjs\";\r\nimport { clickReaction, reaction } from \"src/app/shared/reactions\";\r\n\r\n@Component({\r\n  selector: \"app-registration\",\r\n  template: `\r\n    <ion-header>\r\n      <ion-toolbar>\r\n        <ion-title class=\"ion-text-center ion-text-wrap animate__animated animate__fadeInLeft animate__faster\">Site Documents Registration</ion-title>\r\n      </ion-toolbar>\r\n    </ion-header>\r\n\r\n    <ion-content [formGroup]=\"form\" class=\"ion-padding animate__animated animate__fadeInLeft animate__faster\">\r\n      <ion-list>\r\n        <ion-item>\r\n          <ion-input \r\n            label=\"Registration Code\" \r\n            labelPlacement=\"floating\"\r\n            formControlName=\"token\"\r\n            type=\"text\" \r\n            clearInput />\r\n        </ion-item>\r\n        <ion-item>\r\n          <ion-input \r\n            label=\"Pin\"\r\n            labelPlacement=\"floating\"\r\n            formControlName=\"pin\" \r\n            type=\"tel\" \r\n            clearInput />\r\n        </ion-item>\r\n      </ion-list>\r\n\r\n      <ion-button \r\n        *rxLet=\"form.invalid$; let isInvalid\" \r\n        [disabled]=\"isInvalid\"\r\n        (click)=\"submit()\"\r\n        [unpatch]\r\n        expand=\"full\">\r\n        Submit\r\n      </ion-button>\r\n    </ion-content>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class RegistrationPage extends AngularComponent() {\r\n  userStore = inject(UserStore);\r\n\r\n  form = new FormGroup({\r\n    token: new FormControl(\"\", [\r\n      Validators.required\r\n    ]),\r\n    pin: new FormControl(\"\", [\r\n      Validators.required,\r\n      Validators.minLength(4)\r\n    ])\r\n  });\r\n\r\n  submit = reaction(click$ => click$(\r\n    takeUntilDestroyed(),\r\n    clickReaction(),\r\n    switchMap(() => this.userStore.getUserRequest$(this.form.value$))\r\n  ));\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "RemainAnonymousComponent",
            "id": "component-RemainAnonymousComponent-deec727657d3bd327b4c7dff596e01c111ec7bc5b03faaddc4611c82cc9e3a8f2aeff97b4791b5e0ea06e77c3558d48ac01b81a005eeb1d69e7065660468437d",
            "file": "src/app/core/pages/document-builder/components/input-types/remain-anonymous/remain-anonymous.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "remain-anonymous",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item>\n    <ion-checkbox [(ngModel)]=\"isTicked\" (ionChange)=\"isTickedChange.emit(isTicked)\">\n      Remain Anonymous?\n    </ion-checkbox>\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isTicked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "isTickedChange",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\n\r\n@Component({\r\n  selector: \"remain-anonymous\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item>\r\n        <ion-checkbox [(ngModel)]=\"isTicked\" (ionChange)=\"isTickedChange.emit(isTicked)\">\r\n          Remain Anonymous?\r\n        </ion-checkbox>\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    FormsModule\r\n  ]\r\n})\r\nexport class RemainAnonymousComponent {\r\n  @Input()\r\n  isTicked: boolean = false;\r\n\r\n  @Output()\r\n  isTickedChange = new EventEmitter<boolean>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ResponsibilityAreaSelectComponent",
            "id": "component-ResponsibilityAreaSelectComponent-fe1cfd99b3ce254198161f429a1d0325eeeb9a8ebc19baf1ad7eec51a986674b7cebb4e81c79e81974ffdbae65f5acbfc803dec769a5b585250b4923d81f8447",
            "file": "src/app/core/pages/document-builder/components/input-types/responsibility-area-select/responsibility-area-select.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "responsibility-area-select",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-card *rxLet=\"resAreasTypes.data() | find: { 'Id': responsibilityAreaTypeId }; let rat\">\n  <ion-card-header *rxIf=\"rat != null\">\n    <ion-card-title class=\"text-center\">\n      {{ rat.AppQuestionText }}\n    </ion-card-title>\n  </ion-card-header>\n  <ion-card-content>\n    <if [condition]=\"rat != null && rat.Areas.length > 0\">\n      <selectable\n        show\n        title=\"Responsibility Types\"\n        placeholder=\"Select\"\n        [items]=\"resAreasTypes.areas() | push\"\n        [(value)]=\"responsibilityAreaTypeId\"\n        itemValue=\"DocResAreaTypeId\"\n        itemText=\"Name\"\n        (valueChange)=\"responsibilityAreaIdChange.emit(responsibilityAreaTypeId)\"\n        [canClear]=\"false\" />\n\n      <span else>\n        No areas found For Document Responsibility Area Type.\n        Document will not be able to be submitted. Please update lists and try again.\n      </span>\n    </if>\n  </ion-card-content>\n</ion-card>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "responsibilityAreaId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55,
                    "type": "number",
                    "decorators": []
                },
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "responsibilityAreaIdChange",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 58,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "resAreasTypes",
                    "defaultValue": "useResAreaTypes()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 49
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { useResAreaTypes } from \"src/app/core/http/login.api\";\r\nimport { IfComponent, SelectableComponent } from \"src/app/shared/components\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { FindPipe } from \"src/app/shared/pipes\";\r\n\r\n@Component({\r\n  selector: \"responsibility-area-select\",\r\n  template: `\r\n    <ion-card *rxLet=\"resAreasTypes.data() | find: { 'Id': responsibilityAreaTypeId }; let rat\">\r\n      <ion-card-header *rxIf=\"rat != null\">\r\n        <ion-card-title class=\"text-center\">\r\n          {{ rat.AppQuestionText }}\r\n        </ion-card-title>\r\n      </ion-card-header>\r\n      <ion-card-content>\r\n        <if [condition]=\"rat != null && rat.Areas.length > 0\">\r\n          <selectable \r\n            show \r\n            title=\"Responsibility Types\"\r\n            placeholder=\"Select\"\r\n            [items]=\"resAreasTypes.areas() | push\"\r\n            [(value)]=\"responsibilityAreaTypeId\"\r\n            itemValue=\"DocResAreaTypeId\"\r\n            itemText=\"Name\"\r\n            (valueChange)=\"responsibilityAreaIdChange.emit(responsibilityAreaTypeId)\"\r\n            [canClear]=\"false\" />\r\n            \r\n          <span else>\r\n            No areas found For Document Responsibility Area Type. \r\n            Document will not be able to be submitted. Please update lists and try again.\r\n          </span>\r\n        </if>\r\n      </ion-card-content>\r\n    </ion-card>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    SelectableComponent,\r\n    IfComponent,\r\n    FindPipe\r\n  ]\r\n})\r\nexport class ResponsibilityAreaSelectComponent {\r\n  resAreasTypes = useResAreaTypes();\r\n  \r\n  @Input({ required: true })\r\n  responsibilityAreaTypeId!: number;\r\n\r\n  @Input()\r\n  responsibilityAreaId?: number;\r\n\r\n  @Output()\r\n  responsibilityAreaIdChange = new EventEmitter<number>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SelectableComponent",
            "id": "component-SelectableComponent-8f8bfe16d66b0d7044553566dbc1c4fc55c26cad6d40bf8c8d4e996e31446a079525f40fe82bd6892b5458f8456ab95b9a42de2fe64de37c8b7c784cb72f122b",
            "file": "src/app/shared/components/selectable/selectable.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "selectable",
            "styleUrls": [],
            "styles": [],
            "template": "<!-- <ng-template #itemTpl let-item>\n  <ion-label class=\"ion-text-wrap\">{{ itemText != null ? item[itemText] : item }}</ion-label>\n</ng-template> -->\n\n<ion-item [id]=\"id\" detail=\"false\" button>\n  <ion-label *rxLet=\"item(); let item\" [color]=\"value == null ? 'medium' : ''\" class=\"ion-text-wrap\">\n  {{\n    item != null\n      ? itemText != null\n      ? item[itemText]\n      : item\n      : placeholder\n  }}\n  </ion-label>\n  <ion-button *rxIf=\"canClear && value != null\" (click)=\"$event.stopPropagation(); clear();\" fill=\"clear\">\n    <ion-icon name=\"close-outline\" color=\"danger\" slot=\"icon-only\" />\n  </ion-button>\n  <ion-icon name=\"caret-down-outline\" slot=\"end\" />\n</ion-item>\n\n<ion-modal #modal [trigger]=\"id\">\n  <ng-template>\n    <ion-header>\n      <ion-toolbar>\n        <ion-buttons slot=\"start\">\n          <ion-button (click)=\"modal.dismiss()\" [unpatch] fill=\"clear\">\n            <ion-icon name=\"arrow-back-outline\" slot=\"icon-only\" />\n          </ion-button>\n        </ion-buttons>\n        <ion-title class=\"ion-text-center\">{{ title }}</ion-title>\n      </ion-toolbar>\n      <ion-toolbar>\n        <ion-searchbar\n          [(ngModel)]=\"searchValue\"\n          debounce=\"300\"\n          placeholder=\"Search\" />\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content>\n      <ion-list class=\"h-full\">\n        <rx-virtual-scroll-viewport [itemSize]=\"50\">\n          <ion-item\n            *rxVirtualFor=\"let item of items\n              | fuse: {\n                search: searchValue,\n                keys: itemText != null\n                  ? [itemText]\n                  : []\n              };\n              last as isLast\"\n            class=\"w-full\"\n            (click)=\"select(item); modal.dismiss();\"\n            [lines]=\"isLast\n              ? 'none'\n              : 'inset'\"\n            [unpatch]\n            button>\n            <ion-label class=\"ion-text-wrap\">{{ itemText != null ? item[itemText] : item }}</ion-label>\n          </ion-item>\n        </rx-virtual-scroll-viewport>\n      </ion-list>\n    </ion-content>\n  </ng-template>\n</ion-modal>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "canClear",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 131,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 107,
                    "type": "T[]",
                    "decorators": []
                },
                {
                    "name": "itemText",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 110,
                    "type": "Nullable<T>",
                    "decorators": []
                },
                {
                    "name": "itemValue",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 113,
                    "type": "Nullable<T>",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 101,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 104,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 116,
                    "type": "Nullable<T | >",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "itemChange",
                    "defaultValue": "new EventEmitter<T | null>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 119,
                    "type": "EventEmitter"
                },
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter<any>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 122,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "id",
                    "defaultValue": "crypto.randomUUID()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 98
                },
                {
                    "name": "item",
                    "defaultValue": "using(this.afterViewInit(), this.input(\"items\"), this.input(\"value\"), this.itemChange)\r\n    .calculate(() => this.itemValue != null \r\n      ? this.items.find(item => item[this.itemValue as keyof T] === this.value)\r\n      : this.value as T\r\n    )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 124
                },
                {
                    "name": "itemsTpl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 136,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "ItemsTemplateDirective, {read: ItemsTemplateDirective}"
                        }
                    ]
                },
                {
                    "name": "searchValue",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 133
                }
            ],
            "methodsClass": [
                {
                    "name": "clear",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 149,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "select",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 138,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, ContentChild, Directive, EventEmitter, Input, Output, TemplateRef } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { importRxFixedVirtualScroll, importRxTemplate } from \"../../imports\";\r\nimport { FusePipe } from \"../../pipes\";\r\nimport { AngularComponent, AngularDirective, withAfterViewInit, withGenericTemplateContextGuard, withOnChanges } from \"../../lifecycles\";\r\nimport { using } from \"../../rxjs\";\r\nimport { Nullable } from \"../../types\";\r\n\r\n@Directive({\r\n  selector: \"ng-template[items]\",\r\n  standalone: true\r\n})\r\nexport class ItemsTemplateDirective<T> extends AngularDirective(withGenericTemplateContextGuard) {\r\n  @Input()\r\n  items!: T[];\r\n}\r\n\r\n@Component({\r\n  selector: \"selectable\",\r\n  template: `\r\n    <!-- <ng-template #itemTpl let-item>\r\n      <ion-label class=\"ion-text-wrap\">{{ itemText != null ? item[itemText] : item }}</ion-label>\r\n    </ng-template> -->\r\n\r\n    <ion-item [id]=\"id\" detail=\"false\" button>\r\n      <ion-label *rxLet=\"item(); let item\" [color]=\"value == null ? 'medium' : ''\" class=\"ion-text-wrap\">\r\n      {{ \r\n        item != null \r\n          ? itemText != null \r\n          ? item[itemText] \r\n          : item \r\n          : placeholder\r\n      }}\r\n      </ion-label>\r\n      <ion-button *rxIf=\"canClear && value != null\" (click)=\"$event.stopPropagation(); clear();\" fill=\"clear\">\r\n        <ion-icon name=\"close-outline\" color=\"danger\" slot=\"icon-only\" />\r\n      </ion-button>\r\n      <ion-icon name=\"caret-down-outline\" slot=\"end\" />\r\n    </ion-item>\r\n\r\n    <ion-modal #modal [trigger]=\"id\">\r\n      <ng-template>\r\n        <ion-header>\r\n          <ion-toolbar>\r\n            <ion-buttons slot=\"start\">\r\n              <ion-button (click)=\"modal.dismiss()\" [unpatch] fill=\"clear\">\r\n                <ion-icon name=\"arrow-back-outline\" slot=\"icon-only\" />\r\n              </ion-button>\r\n            </ion-buttons>\r\n            <ion-title class=\"ion-text-center\">{{ title }}</ion-title>\r\n          </ion-toolbar>\r\n          <ion-toolbar>\r\n            <ion-searchbar \r\n              [(ngModel)]=\"searchValue\"\r\n              debounce=\"300\" \r\n              placeholder=\"Search\" />\r\n          </ion-toolbar>\r\n        </ion-header>\r\n\r\n        <ion-content>\r\n          <ion-list class=\"h-full\">\r\n            <rx-virtual-scroll-viewport [itemSize]=\"50\">\r\n              <ion-item \r\n                *rxVirtualFor=\"let item of items \r\n                  | fuse: {\r\n                    search: searchValue,\r\n                    keys: itemText != null \r\n                      ? [itemText]\r\n                      : []\r\n                  }; \r\n                  last as isLast\" \r\n                class=\"w-full\"\r\n                (click)=\"select(item); modal.dismiss();\"\r\n                [lines]=\"isLast \r\n                  ? 'none' \r\n                  : 'inset'\" \r\n                [unpatch] \r\n                button>\r\n                <ion-label class=\"ion-text-wrap\">{{ itemText != null ? item[itemText] : item }}</ion-label>\r\n              </ion-item>\r\n            </rx-virtual-scroll-viewport>\r\n          </ion-list>\r\n        </ion-content>\r\n      </ng-template>\r\n    </ion-modal>\r\n  `,\r\n  standalone: true,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    ...importRxFixedVirtualScroll(),\r\n    FormsModule,\r\n    FusePipe\r\n  ]\r\n})\r\nexport class SelectableComponent<T = unknown> extends AngularComponent(withAfterViewInit, withOnChanges) {\r\n  id = crypto.randomUUID();\r\n\r\n  @Input()\r\n  placeholder: string = \"\";\r\n\r\n  @Input()\r\n  title: string = \"\";\r\n\r\n  @Input()\r\n  items: T[] = [];\r\n\r\n  @Input()\r\n  itemText: Nullable<keyof T> = null;\r\n\r\n  @Input()\r\n  itemValue: Nullable<keyof T> = null;\r\n\r\n  @Input()\r\n  value: Nullable<T | T[keyof T]> = null;\r\n\r\n  @Output()\r\n  itemChange = new EventEmitter<T | null>();\r\n\r\n  @Output()\r\n  valueChange = new EventEmitter<any>();\r\n\r\n  item = using(this.afterViewInit(), this.input(\"items\"), this.input(\"value\"), this.itemChange)\r\n    .calculate(() => this.itemValue != null \r\n      ? this.items.find(item => item[this.itemValue as keyof T] === this.value)\r\n      : this.value as T\r\n    );\r\n\r\n  @Input()\r\n  canClear: boolean = true;\r\n\r\n  searchValue: string = \"\";\r\n\r\n  @ContentChild(ItemsTemplateDirective, { read: ItemsTemplateDirective })\r\n  itemsTpl!: TemplateRef<unknown>;\r\n\r\n  select(item: T) {\r\n    if (this.itemValue != null) {\r\n      this.value = item[this.itemValue];\r\n      this.valueChange.emit(item[this.itemValue]);\r\n    } else {\r\n      this.value = item;\r\n    }\r\n\r\n    this.itemChange.emit(item);\r\n  }\r\n\r\n  clear() {\r\n    this.value = null;\r\n    this.itemChange.emit(null);\r\n    this.valueChange.emit(null);\r\n  }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SelectComponent",
            "id": "component-SelectComponent-cb6c9c8d232c7935621a064bd3e77b61e74782573da398c6c360fb45ea987ba896db7a6ab9bceeaf4799e46c28e6f4444c404ece29a4dcaeaddf68e546a6734e",
            "file": "src/app/core/pages/document-builder/components/question-types/05-select/select.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "select-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n    <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\n    <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\n  </ion-item>\n  <selectable\n    placeholder=\"Select\"\n    [title]=\"question.QuestionText\"\n    [items]=\"question.Options\"\n    itemValue=\"Val\"\n    itemText=\"Text\"\n    [canClear]=\"!question.Required\" />\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { SelectableComponent } from \"src/app/shared/components/selectable/selectable.component\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\n\r\n@Component({\r\n  selector: \"select-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n        <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\r\n        <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\r\n      </ion-item>\r\n      <selectable \r\n        placeholder=\"Select\"\r\n        [title]=\"question.QuestionText\"\r\n        [items]=\"question.Options\"\r\n        itemValue=\"Val\"\r\n        itemText=\"Text\"\r\n        [canClear]=\"!question.Required\" />\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    QuestionTextComponent,\r\n    SelectableComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent\r\n  ]\r\n})\r\nexport class SelectComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SelectTextComponent",
            "id": "component-SelectTextComponent-82e2c9500eea2e2f25c6ccc303fc2fdcc36c8b04bb13d5bea0d1489538f497529f51bc81c369f0ec74be799d6fbe701a63c8e122e668fa14997ccf07fda1833f",
            "file": "src/app/core/pages/document-builder/components/question-types/29-select-text/select-text.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "select-text-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n    <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\n    <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\n  </ion-item>\n  <selectable\n    placeholder=\"Select\"\n    [title]=\"question.QuestionText\"\n    [items]=\"question.Options\"\n    itemValue=\"Val\"\n    itemText=\"Text\"\n    [canClear]=\"!question.Required\" />\n  <ion-textarea class=\"ion-margin-top\" label=\"Comments\" labelPlacement=\"floating\" rows=\"4\" type=\"text\" fill=\"outline\" />\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { SelectableComponent } from \"src/app/shared/components/selectable/selectable.component\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\n\r\n@Component({\r\n  selector: \"select-text-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n        <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\r\n        <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\r\n      </ion-item>\r\n      <selectable \r\n        placeholder=\"Select\"\r\n        [title]=\"question.QuestionText\"\r\n        [items]=\"question.Options\"\r\n        itemValue=\"Val\"\r\n        itemText=\"Text\"\r\n        [canClear]=\"!question.Required\" />\r\n      <ion-textarea class=\"ion-margin-top\" label=\"Comments\" labelPlacement=\"floating\" rows=\"4\" type=\"text\" fill=\"outline\" />\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    QuestionTextComponent,\r\n    SelectableComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent\r\n  ]\r\n})\r\nexport class SelectTextComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SignatureComponent",
            "id": "component-SignatureComponent-24b7057e20f976f5eb97e5532b9c6db4ff674d2f3cd2043c284c2fb08611e5fc5367a180b49caa8009407e436353583c49bbe5f1c8536c48150d531a00c4db06",
            "file": "src/app/core/pages/document-builder/components/question-types/19-signature/signature.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "signature-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n  </ion-item>\n\n  <ion-item>\n    <ion-input label=\"Print\" labelPlacement=\"floating\" [(ngModel)]=\"question.AnswerText\" type=\"text\" />\n    <ion-button [id]=\"id\" fill=\"clear\" slot=\"end\">\n      <ion-icon name=\"create-outline\" slot=\"icon-only\" />\n    </ion-button>\n  </ion-item>\n</ion-list>\n\n<ion-modal #modal [trigger]=\"id\">\n  <ng-template>\n    <ion-header>\n      <ion-toolbar>\n        <ion-title class=\"text-center\">Signature</ion-title>\n\n        <ion-buttons slot=\"end\">\n          <ion-button (click)=\"modal.dismiss()\" [unpatch] fill=\"clear\">\n            <ion-icon name=\"close-outline\" slot=\"icon-only\" />\n          </ion-button>\n        </ion-buttons>\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content>\n      <signature-pad [points]=\"question.SignaturePoints\" />\n    </ion-content>\n\n    <ion-footer>\n      <ion-grid>\n        <ion-row>\n          <ion-col>\n            <ion-button (click)=\"cancel()\" color=\"danger\" expand=\"full\">\n              Clear\n            </ion-button>\n          </ion-col>\n          <ion-col>\n            <ion-button (click)=\"modal.dismiss()\" color=\"secondary\" expand=\"full\">\n              Save\n            </ion-button>\n          </ion-col>\n        </ion-row>\n      </ion-grid>\n    </ion-footer>\n  </ng-template>\n</ion-modal>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 76,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "id",
                    "defaultValue": "crypto.randomUUID()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 73
                },
                {
                    "name": "signaturePad",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SignaturePadComponent",
                    "optional": false,
                    "description": "",
                    "line": 79,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "SignaturePadComponent"
                        }
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "cancel",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "save",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input, ViewChild } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { QuestionTextComponent } from \"../extras\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { SignaturePadComponent } from \"src/app/shared/components\";\r\n\r\n@Component({\r\n  selector: \"signature-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n      </ion-item>\r\n\r\n      <ion-item>\r\n        <ion-input label=\"Print\" labelPlacement=\"floating\" [(ngModel)]=\"question.AnswerText\" type=\"text\" />\r\n        <ion-button [id]=\"id\" fill=\"clear\" slot=\"end\">\r\n          <ion-icon name=\"create-outline\" slot=\"icon-only\" />\r\n        </ion-button>\r\n      </ion-item>\r\n    </ion-list>\r\n\r\n    <ion-modal #modal [trigger]=\"id\">\r\n      <ng-template>\r\n        <ion-header>\r\n          <ion-toolbar>\r\n            <ion-title class=\"text-center\">Signature</ion-title>\r\n\r\n            <ion-buttons slot=\"end\">\r\n              <ion-button (click)=\"modal.dismiss()\" [unpatch] fill=\"clear\">\r\n                <ion-icon name=\"close-outline\" slot=\"icon-only\" />\r\n              </ion-button>\r\n            </ion-buttons>\r\n          </ion-toolbar>\r\n        </ion-header>\r\n\r\n        <ion-content>\r\n          <signature-pad [points]=\"question.SignaturePoints\" />\r\n        </ion-content>\r\n        \r\n        <ion-footer>\r\n          <ion-grid>\r\n            <ion-row>\r\n              <ion-col>\r\n                <ion-button (click)=\"cancel()\" color=\"danger\" expand=\"full\">\r\n                  Clear\r\n                </ion-button>\r\n              </ion-col>\r\n              <ion-col>\r\n                <ion-button (click)=\"modal.dismiss()\" color=\"secondary\" expand=\"full\">\r\n                  Save\r\n                </ion-button>\r\n              </ion-col>\r\n            </ion-row>\r\n          </ion-grid>\r\n        </ion-footer>\r\n      </ng-template>\r\n    </ion-modal>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    FormsModule,\r\n    QuestionTextComponent,\r\n    SignaturePadComponent\r\n  ]\r\n})\r\nexport class SignatureComponent {\r\n  id = crypto.randomUUID();\r\n  \r\n  @Input({ required: true })\r\n  question!: Question;\r\n\r\n  @ViewChild(SignaturePadComponent)\r\n  signaturePad!: SignaturePadComponent;\r\n  \r\n  cancel() {\r\n    this.signaturePad.clear();\r\n  }\r\n\r\n  save() {\r\n    this.question.SignaturePoints = this.signaturePad.dataPoints();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SignaturePadComponent",
            "id": "component-SignaturePadComponent-1da0267139a8aa2e6121517ac4050fbb3a947ade01fd2538e5c752dc83f0647dacd50385143417137c7e3155718ac3ccd132a2ee4b846438880c892cb47f9f01",
            "file": "src/app/shared/components/signature-pad/signature-pad.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "signature-pad",
            "styleUrls": [],
            "styles": [],
            "template": "<canvas\n  signature-pad\n  [points]=\"points\"\n  class=\"border border-black bg-white\"\n  (window:resize)=\"resize.next()\"\n  [width]=\"width$ | push\"\n  [height]=\"height$ | push\">\n</canvas>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "points",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 66,
                    "type": "PointGroup[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "height$",
                    "defaultValue": "merge(this.afterViewInit(), this.resize()).pipe(\r\n    debounceTime(300),\r\n    map(() => this.parentElement.offsetHeight - 2)\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 76
                },
                {
                    "name": "parentElement",
                    "defaultValue": "useParentElement()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 68
                },
                {
                    "name": "resize",
                    "defaultValue": "use()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 69
                },
                {
                    "name": "signatureDirective",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SignaturePadDirective",
                    "optional": true,
                    "description": "",
                    "line": 63,
                    "decorators": [
                        {
                            "name": "ViewChild",
                            "stringifiedArguments": "SignaturePadDirective"
                        }
                    ]
                },
                {
                    "name": "width$",
                    "defaultValue": "merge(this.afterViewInit(), this.resize()).pipe(\r\n    debounceTime(300),\r\n    map(() => this.parentElement.offsetWidth - 2)\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 71
                }
            ],
            "methodsClass": [
                {
                    "name": "clear",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 89,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "dataPoints",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 81,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "toDataUrl",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 85,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Directive, EventEmitter, Input, Output, ViewChild } from \"@angular/core\";\r\nimport { debounceTime, map, merge } from \"rxjs\";\r\nimport SignaturePad, { PointGroup } from \"signature_pad\";\r\nimport { AngularComponent, withAfterViewInit } from \"../../lifecycles\";\r\nimport { PushPipe } from \"@rx-angular/template/push\";\r\nimport { use } from \"../../rxjs/use\";\r\nimport { useElement, useParentElement } from \"../../angular/element\";\r\n\r\n@Directive({\r\n  selector: \"canvas[signature-pad]\",\r\n  standalone: true\r\n})\r\nexport class SignaturePadDirective {\r\n  element = useElement<HTMLCanvasElement>();\r\n\r\n  signaturePad = new SignaturePad(this.element, {\r\n    minWidth: 2,\r\n    maxWidth: 5,\r\n    backgroundColor: \"rgb(255,255,255)\"\r\n  });\r\n\r\n  @Input()\r\n  points?: PointGroup[] = [];\r\n\r\n  @Output()\r\n  pointsChange = new EventEmitter<PointGroup[]>();\r\n\r\n  ngOnInit() {\r\n    this.signaturePad.fromData(this.points || []);\r\n  }\r\n\r\n  dataPoints() {\r\n    return this.signaturePad.toData();\r\n  }\r\n\r\n  toDataUrl() {\r\n    return this.signaturePad.toDataURL();\r\n  }\r\n\r\n  clear() {\r\n    this.signaturePad.clear();\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: \"signature-pad\",\r\n  template: `\r\n    <canvas \r\n      signature-pad \r\n      [points]=\"points\"\r\n      class=\"border border-black bg-white\" \r\n      (window:resize)=\"resize.next()\"\r\n      [width]=\"width$ | push\"\r\n      [height]=\"height$ | push\">\r\n    </canvas>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [PushPipe, SignaturePadDirective]\r\n})\r\nexport class SignaturePadComponent extends AngularComponent(withAfterViewInit) {\r\n  @ViewChild(SignaturePadDirective)\r\n  signatureDirective?: SignaturePadDirective;\r\n\r\n  @Input()\r\n  points?: PointGroup[] = [];\r\n\r\n  parentElement = useParentElement();\r\n  resize = use();\r\n\r\n  width$ = merge(this.afterViewInit(), this.resize()).pipe(\r\n    debounceTime(300),\r\n    map(() => this.parentElement.offsetWidth - 2)\r\n  );\r\n\r\n  height$ = merge(this.afterViewInit(), this.resize()).pipe(\r\n    debounceTime(300),\r\n    map(() => this.parentElement.offsetHeight - 2)\r\n  );\r\n\r\n  dataPoints() {\r\n    return this.signatureDirective?.dataPoints();\r\n  }\r\n\r\n  toDataUrl() {\r\n    return this.signatureDirective?.toDataUrl();\r\n  }\r\n\r\n  clear() {\r\n    this.signatureDirective?.clear();\r\n  }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SiteSelectComponent",
            "id": "component-SiteSelectComponent-b115fb1e9ce2f92a8a59d41ff9dfb8d0f24db365170e401d16460a7c5f22697519a48b50ea627848fe138c968e81cc4df0c70b7469c434ab3622e4878a55f0e4",
            "file": "src/app/core/pages/document-builder/components/input-types/site-select/site-select.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "site-select",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-card>\n  <ion-card-header>\n    <ion-card-title class=\"text-center\">{{ title || \"Select a site\" }}</ion-card-title>\n    <p *rxIf=\"isMobileApp\" class=\"text-center\">\n      <b>Setting site only attaches site on to this document and does not change site in settings</b>\n    </p>\n  </ion-card-header>\n  <ion-card-content>\n    <selectable\n      [title]=\"title || 'Select a site'\"\n      placeholder=\"Select Site\"\n      [items]=\"sites.data() | push\"\n      itemValue=\"Id\"\n      itemText=\"Name\"\n      [value]=\"siteId\"\n      (valueChange)=\"siteChange($event)\"\n      [canClear]=\"false\" />\n  </ion-card-content>\n</ion-card>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "siteId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "siteIdChange",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "isMobileApp",
                    "defaultValue": "isMobileApp()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "sites",
                    "defaultValue": "useSites()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 44
                }
            ],
            "methodsClass": [
                {
                    "name": "siteChange",
                    "args": [
                        {
                            "name": "siteId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "siteId",
                            "type": "number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { memoize } from \"lodash-es\";\r\nimport { useLoginApi } from \"src/app/core/http/login.api\";\r\nimport { SelectableComponent } from \"src/app/shared/components\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { AngularComponent, withAfterViewInit, withOnChanges } from \"src/app/shared/lifecycles\";\r\nimport { isMobileApp } from \"src/app/shared/plugins/platform.plugin\";\r\nimport { track } from \"src/app/shared/rxjs\";\r\n\r\n@Component({\r\n  selector: \"site-select\",\r\n  template: `\r\n    <ion-card>\r\n      <ion-card-header>\r\n        <ion-card-title class=\"text-center\">{{ title || \"Select a site\" }}</ion-card-title>\r\n        <p *rxIf=\"isMobileApp\" class=\"text-center\">\r\n          <b>Setting site only attaches site on to this document and does not change site in settings</b>\r\n        </p>\r\n      </ion-card-header>\r\n      <ion-card-content>\r\n        <selectable \r\n          [title]=\"title || 'Select a site'\" \r\n          placeholder=\"Select Site\"\r\n          [items]=\"sites.data() | push\"\r\n          itemValue=\"Id\"\r\n          itemText=\"Name\"\r\n          [value]=\"siteId\"\r\n          (valueChange)=\"siteChange($event)\"\r\n          [canClear]=\"false\" />\r\n      </ion-card-content>\r\n    </ion-card>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    SelectableComponent\r\n  ]\r\n})\r\nexport class SiteSelectComponent extends AngularComponent(withAfterViewInit, withOnChanges) {\r\n  isMobileApp = isMobileApp();\r\n  sites = useSites();\r\n\r\n  @Input()\r\n  title?: string;\r\n\r\n  @Input()\r\n  siteId?: number;\r\n\r\n  @Output()\r\n  siteIdChange = new EventEmitter<number>();\r\n\r\n  siteChange(siteId: number) {\r\n    this.siteId = siteId;\r\n    this.siteIdChange.emit(this.siteId);\r\n  }\r\n}\r\n\r\nconst useSites = memoize(() => {\r\n  const loginApi = useLoginApi();\r\n\r\n  return track(() => loginApi.getSites());\r\n});",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "TemplateMenuModal",
            "id": "component-TemplateMenuModal-ea19741563b0220d009e60c1a96250d8d5296f55d943647cad1701acc75a0de05d5730bd3421d5b1d2968de415e56881da300fdb03433502db45b4e72ced45e1",
            "file": "src/app/core/pages/document-builder/modals/template-menu/template-menu.modal.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "template-menu-modal",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-modal #modal [isOpen]=\"isOpen\">\n  <ng-template>\n    <ion-header>\n      <ion-toolbar>\n        <ion-title class=\"text-center\">\n          Templates\n          <ion-spinner *rxIf=\"templates.isLoading()\" class=\"float-right\" />\n        </ion-title>\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content class=\"ion-padding\">\n      <ion-list class=\"h-full\">\n        <rx-virtual-scroll-viewport [itemSize]=\"50\">\n          <ion-item *rxVirtualFor=\"let template of templates.data()\" class=\"w-full\" (click)=\"select.emit(template.Id); modal.dismiss()\" button>\n            {{ template.Title }}\n          </ion-item>\n        </rx-virtual-scroll-viewport>\n      </ion-list>\n    </ion-content>\n  </ng-template>\n</ion-modal>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 56,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "select",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 59,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "httpClient",
                    "defaultValue": "inject(HttpClient)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "templates",
                    "defaultValue": "useAllTemplates()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 53
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\r\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, inject } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { useAllTemplates } from \"src/app/core/http/template.api\";\r\nimport { importRxTemplate, importRxFixedVirtualScroll } from \"src/app/shared/imports\";\r\n\r\nexport interface PaginatedList<T> {\r\n  Items: T[],\r\n  PageNumber: number,\r\n  TotalPage: number,\r\n  TotalCount: number,\r\n  HasPreviousPage: boolean,\r\n  HasNextPage: boolean\r\n}\r\n\r\n@Component({\r\n  selector: \"template-menu-modal\",\r\n  template: `\r\n    <ion-modal #modal [isOpen]=\"isOpen\">\r\n      <ng-template>\r\n        <ion-header>\r\n          <ion-toolbar>\r\n            <ion-title class=\"text-center\">\r\n              Templates\r\n              <ion-spinner *rxIf=\"templates.isLoading()\" class=\"float-right\" />\r\n            </ion-title>\r\n          </ion-toolbar>\r\n        </ion-header>\r\n\r\n        <ion-content class=\"ion-padding\">\r\n          <ion-list class=\"h-full\">\r\n            <rx-virtual-scroll-viewport [itemSize]=\"50\">\r\n              <ion-item *rxVirtualFor=\"let template of templates.data()\" class=\"w-full\" (click)=\"select.emit(template.Id); modal.dismiss()\" button>\r\n                {{ template.Title }}\r\n              </ion-item>\r\n            </rx-virtual-scroll-viewport>\r\n          </ion-list>\r\n        </ion-content>\r\n      </ng-template>\r\n    </ion-modal>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    ...importRxFixedVirtualScroll()\r\n  ]\r\n})\r\nexport class TemplateMenuModal {\r\n  httpClient = inject(HttpClient);\r\n\r\n  templates = useAllTemplates();\r\n\r\n  @Input()\r\n  isOpen: boolean = false;\r\n\r\n  @Output()\r\n  select = new EventEmitter<number>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "TextareaComponent",
            "id": "component-TextareaComponent-f7bf373922d7b4ed2483ff48f54cc3b8b83687b04957e243ea032ae26eef05077536c18ec9ff3296110bf04c278f2cf525827ba9daf2b9aec6069aa3b2afaeca",
            "file": "src/app/core/pages/document-builder/components/question-types/04-textarea/textarea.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "textarea-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">\n      {{ question.QuestionText }}\n    </question-text>\n    <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\n    <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\n  </ion-item>\n  <ion-item>\n    <ion-textarea label=\"\" rows=\"6\" fill=\"outline\" />\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\n\r\n@Component({\r\n  selector: \"textarea-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">\r\n          {{ question.QuestionText }}\r\n        </question-text>\r\n        <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\r\n        <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\r\n      </ion-item>\r\n      <ion-item>\r\n        <ion-textarea label=\"\" rows=\"6\" fill=\"outline\" />\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    QuestionTextComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent\r\n  ]\r\n})\r\nexport class TextareaComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "TextboxComponent",
            "id": "component-TextboxComponent-57a25038eeba19611006bf857b9638da926b0f9d4bb4587e4fd56be5d19b482cab51c43e83b402901c1b1a86e15088444826e9d6573de20d6dc96490f176837d",
            "file": "src/app/core/pages/document-builder/components/question-types/03-textbox/textbox.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "textbox-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n    <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\n    <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\n  </ion-item>\n  <ion-item>\n    <ion-input label=\"\" type=\"text\" [(ngModel)]=\"question.AnswerText\" />\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\nimport { FormsModule } from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: \"textbox-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n        <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\r\n        <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\r\n      </ion-item>\r\n      <ion-item>\r\n        <ion-input label=\"\" type=\"text\" [(ngModel)]=\"question.AnswerText\" />\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    FormsModule,\r\n    QuestionTextComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent\r\n  ]\r\n})\r\nexport class TextboxComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "TimeComponent",
            "id": "component-TimeComponent-e69618cd4bcb04c4c410b77faeb5df9a8ea9cd10e5665f1efafb04e0f7becd22a288306da78aa162a87dc89d93835182b2c48c2b633cc33cf02043a47c9de37b",
            "file": "src/app/core/pages/document-builder/components/question-types/32-time/time.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "time-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n  </ion-item>\n\n  <ion-item>\n    <time-picker [(time)]=\"question.DateAndTime\" class=\"w-full\" />\n    <ion-icon name=\"time-outline\" slot=\"end\"></ion-icon>\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { QuestionTextComponent } from \"../extras\";\r\nimport { TimePickerComponent } from \"src/app/shared/components\";\r\n\r\n@Component({\r\n  selector: \"time-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n      </ion-item>\r\n\r\n      <ion-item>\r\n        <time-picker [(time)]=\"question.DateAndTime\" class=\"w-full\" />\r\n        <ion-icon name=\"time-outline\" slot=\"end\"></ion-icon>\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    QuestionTextComponent,\r\n    TimePickerComponent\r\n  ]\r\n})\r\nexport class TimeComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "TimePickerComponent",
            "id": "component-TimePickerComponent-7260632c8aef423b3f6644fbe3be9693327a24c483ab37c35dcdd1cd517ca19c7249de57fc81cdf9cda2bee338c5b7065c865ac16487770edfd7624ea123f65e",
            "file": "src/app/shared/components/time-picker/time-picker.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "time-picker",
            "styleUrls": [],
            "styles": [
                "\n    :host { display: contents }\n\n    input[type=\"time\"] {\n      width: 100%;\n      padding: 0 6px;\n      border: 0px;\n      background-color:rgba(0, 0, 0, 0);\n      -webkit-appearance: none;\n    }\n  "
            ],
            "template": "<input\n  #timeInput\n  type=\"time\"\n  [class]=\"className\"\n  [value]=\"timeValue$ | push\"\n  (change)=\"change(timeInput.value)\" />\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "class",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "time",
                    "defaultValue": "new Date()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "Date",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "timeChange",
                    "defaultValue": "new EventEmitter<Date>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "timeValue$",
                    "defaultValue": "merge(this.afterViewInit(), this.input(\"time\")).pipe(\r\n    map(() => this.time.toFormat(\"HH:mm\"))\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string>",
                    "optional": false,
                    "description": "",
                    "line": 38
                }
            ],
            "methodsClass": [
                {
                    "name": "change",
                    "args": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 45,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { PushPipe } from \"@rx-angular/template/push\";\r\nimport { AngularComponent, withAfterViewInit, withOnChanges } from \"../../lifecycles\";\r\nimport { Observable, map, merge } from \"rxjs\";\r\n\r\n@Component({\r\n  selector: \"time-picker\",\r\n  styles: [`\r\n    :host { display: contents }\r\n\r\n    input[type=\"time\"] {\r\n      width: 100%;\r\n      padding: 0 6px;\r\n      border: 0px;\r\n      background-color:rgba(0, 0, 0, 0);\r\n      -webkit-appearance: none;\r\n    }\r\n  `],\r\n  template: `\r\n    <input \r\n      #timeInput \r\n      type=\"time\" \r\n      [class]=\"className\"\r\n      [value]=\"timeValue$ | push\" \r\n      (change)=\"change(timeInput.value)\" />\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [PushPipe]\r\n})\r\nexport class TimePickerComponent extends AngularComponent(withAfterViewInit, withOnChanges) {\r\n  @Input(\"class\")\r\n  className: string = \"\";\r\n  \r\n  @Input()\r\n  time: Date = new Date();\r\n  \r\n  timeValue$: Observable<string> = merge(this.afterViewInit(), this.input(\"time\")).pipe(\r\n    map(() => this.time.toFormat(\"HH:mm\"))\r\n  );\r\n\r\n  @Output()\r\n  timeChange = new EventEmitter<Date>();\r\n  \r\n  change(value: string) {\r\n    this.time = Date.parseFormat(value, \"HH:mm\");\r\n    this.timeChange.emit(this.time);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n    :host { display: contents }\n\n    input[type=\"time\"] {\n      width: 100%;\n      padding: 0 6px;\n      border: 0px;\n      background-color:rgba(0, 0, 0, 0);\n      -webkit-appearance: none;\n    }\n  \n"
        },
        {
            "name": "UploadComponent",
            "id": "component-UploadComponent-8f12f4d9717c1bfa75a5f93edb6835aafa7cd4f60f8c510a1d32777faa1cb1be426a1a647b3e3f85f403545d9cc1e448c915f954ab33a13fce1fbfb64a6cac2d",
            "file": "src/app/shared/components/upload/upload.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "upload",
            "styleUrls": [],
            "styles": [
                "\n    :host { display: contents }\n  "
            ],
            "template": "<label [for]=\"id\" class=\"w-full h-full fixed cursor-pointer z-50\"></label>\n<input [id]=\"id\" type=\"file\" [accept]=\"accept\" (change)=\"take($event)\" class=\"hidden\" />\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "accept",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "uploadFiles",
                    "defaultValue": "new EventEmitter<DataUrlFile[]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "id",
                    "defaultValue": "crypto.randomUUID()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                }
            ],
            "methodsClass": [
                {
                    "name": "take",
                    "args": [
                        {
                            "name": "ev",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "ev",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { TargetEvent } from \"../../models/events/target-event.model\";\r\nimport { DataUrlFile } from \"../../models/files/data-url-file.model\";\r\n\r\nfunction fileReader(): FileReader {\r\n  const fileReader = new FileReader();\r\n  const zoneOriginalInstance = (fileReader as any)[\"__zone_symbol__originalInstance\"];\r\n  return zoneOriginalInstance || fileReader;\r\n}\r\n\r\nfunction fileToDataUrlFile(file: File): Promise<DataUrlFile> {\r\n  const reader = fileReader();\r\n  return new Promise(resolve => {\r\n    reader.onload = (event) => resolve({ \r\n      name: file.name, \r\n      lastModified: file.lastModified, \r\n      size: file.size, \r\n      type: file.type, \r\n      dataUrl: event.target!.result as string \r\n    })//resolve(event.target!.result as string);\r\n    reader.readAsDataURL(file);\r\n  });\r\n}\r\n\r\n@Component({\r\n  selector: \"upload\",\r\n  styles: [`\r\n    :host { display: contents }\r\n  `],\r\n  template: `\r\n    <label [for]=\"id\" class=\"w-full h-full fixed cursor-pointer z-50\"></label>\r\n    <input [id]=\"id\" type=\"file\" [accept]=\"accept\" (change)=\"take($event)\" class=\"hidden\" />\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class UploadComponent {\r\n  id = crypto.randomUUID();\r\n\r\n  @Input()\r\n  accept?: string;\r\n\r\n  @Output()\r\n  uploadFiles = new EventEmitter<DataUrlFile[]>();\r\n\r\n  async take(ev: unknown) {\r\n    const event = ev as TargetEvent<{ files: File[], value: null }>;\r\n    const files: File[] = [...event.target.files];\r\n\r\n    const dataUrlFiles = await Promise.all(files.map(fileToDataUrlFile));\r\n    this.uploadFiles.emit(dataUrlFiles);\r\n    event.target.value = null;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n    :host { display: contents }\n  \n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "DateOnly",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/datetime-picker/datetime-picker.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/registration/registration.page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/camera/camera.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/datetime-picker/datetime-picker.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/selectable/selectable.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/multi-selectable/multi-selectable.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/signature-pad/signature-pad.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/time-picker/time-picker.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modals/asset-list/asset-list.modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modals/operative-list/operative-list.modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/modals/template-menu/template-menu.modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/modals/document-summary/document-summary.modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modals/operative-list/components/local-operative-search/local-operative-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modals/operative-list/components/online-operative-search/online-operative-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/company-actioner-select/company-actioner-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/category-actioner-select/category-actioner-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/actioner-select/actioner-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/document-image-upload/document-image-upload.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/remain-anonymous/remain-anonymous.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/queue-duration/queue-duration.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/responsibility-area-select/responsibility-area-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/site-select/site-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/01-checkbox/checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/document-section/multi-checkbox-section/multi-checkbox-section.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/00-label/label.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/02-radio-group/radio-group.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/03-textbox/textbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/02-radio-table/radio-table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/04-textarea/textarea.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/05-select/select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/07-radio-group-textbox/radio-group-textbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/06-checkbox-textbox/checkbox-textbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/07-radio-table-textbox/radio-table-textbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/08-date/date.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/09-datetime/datetime.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/10-operative-list/operative-list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/12-number/number.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/13-cascade-select/cascade-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/17-asset-list/asset-list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/16-linked-bool/linked-bool.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/19-signature/signature.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/18-linked-dates/linked-dates.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/21-company-select/company-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/30-cascade-select-text/cascade-select-text.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/29-select-text/select-text.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/32-time/time.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/33-linked-times/linked-times.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/extras/file-upload/file-upload.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/extras/camera-capture/camera-capture.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "defaultDoc",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "SiteDocument",
                "defaultValue": "{\r\n  ...defaultSiteDocument,\r\n  DocumentTitle: faker.lorem.word(),\r\n  Pages: [\r\n    {\r\n      PageID: 1,\r\n      PageTitle: faker.lorem.word(),\r\n      Sections: Object\r\n        .values(QuestionType)\r\n        .filter(qt => typeof qt === \"number\")\r\n        .map((qt, idx) => \r\n          ({\r\n            ...defaultSection,\r\n            SectionID: idx,\r\n            SectionNo: idx,\r\n            SectionTitle: \"\",\r\n            SectionQuestiontype: qt as QuestionType,\r\n            Questions: [\r\n              {\r\n                ...defaultQuestion,\r\n                QuestionText: QuestionType[qt as number].toString()\r\n              }\r\n            ]\r\n          })\r\n        )\r\n    }\r\n  ]\r\n}"
            },
            {
                "name": "defaultDoc",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/modals/document-summary/document-summary.modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "SiteDocument",
                "defaultValue": "{\r\n  ...defaultSiteDocument,\r\n  DocumentTitle: faker.lorem.word(),\r\n  RemainAnon: true,\r\n  CurrentActionerOperativeID: 1,\r\n  CompanyActionerId: 1,\r\n  SiteId: 1,\r\n  AutoQueueID: 1,\r\n  QueueDuration: {\r\n    Value: 6,\r\n    Type: \"Hours\"\r\n  },\r\n  MetaData: {\r\n    ActionerText: \"Pick your actioner\",\r\n    SiteListTitle: \"Pick your site\"\r\n  },\r\n  Pages: [\r\n    {\r\n      PageID: 1,\r\n      PageTitle: faker.lorem.word(),\r\n      Sections: Object\r\n        .values(QuestionType)\r\n        .filter(qt => typeof qt === \"number\")\r\n        .map((qt, idx) => \r\n          ({\r\n            ...defaultSection,\r\n            SectionID: idx,\r\n            SectionNo: idx,\r\n            SectionTitle: \"\",\r\n            SectionQuestiontype: qt as QuestionType,\r\n            Questions: [\r\n              {\r\n                ...defaultQuestion,\r\n                QuestionText: QuestionType[qt as number].toString()\r\n              }\r\n            ]\r\n          })\r\n        )\r\n    }\r\n  ]\r\n}"
            },
            {
                "name": "DocumentWithAllPermissionsTurnedOn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DocumentWithMultiplePages",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "docWithAllPermissionsOn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "SiteDocument",
                "defaultValue": "{\r\n  ...defaultSiteDocument,\r\n  DocumentTitle: faker.lorem.word(),\r\n  Pages: [\r\n    {\r\n      PageID: 1,\r\n      PageTitle: faker.lorem.word(),\r\n      Sections: Object\r\n        .values(QuestionType)\r\n        .filter(qt => typeof qt === \"number\")\r\n        .map((qt, idx) => \r\n          ({\r\n            ...defaultSection,\r\n            SectionID: idx,\r\n            SectionNo: idx,\r\n            SectionTitle: \"\",\r\n            SectionQuestiontype: qt as QuestionType,\r\n            Questions: [\r\n              {\r\n                ...defaultQuestion,\r\n                QuestionText: QuestionType[qt as number].toString()\r\n              }\r\n            ]\r\n          })\r\n        )\r\n    }\r\n  ],\r\n  Queues: Array\r\n    .from({ length: 5 })\r\n    .map((val, idx) => \r\n      ({\r\n        Key: idx.toString(),\r\n        Value: faker.lorem.word()\r\n      })\r\n  ),\r\n  CanAddAsset: true,\r\n  CanAddOperative: true,\r\n  CanCreateHotspot: true,\r\n  CanAddActionerFromApp: true,\r\n  CanAddCategoryActioner: true,\r\n  CanCreateAssetsFromDocument: true,\r\n  CanHaveCompanyActioner: true,\r\n  CanHaveDocLevelPhotoRoll: true,\r\n  CanHaveDocumentLevelImages: true,\r\n  CanHaveQueueDuration: true,\r\n  ShowDocLevelPhotoButtonAtStartOfDoc: true,\r\n  CanBeAddedToHotspot: true,\r\n  CanBeSavedAsDraft: true,\r\n  AllowAnon: true,\r\n  RemainAnon: false,\r\n  MetaData: {\r\n    ActionerText: faker.lorem.word(),\r\n    CanBeEditableDocument: true,\r\n    CannotAddSelfAsActioner: true,\r\n    HasSiteList: true,\r\n    ColourHex: faker.color.rgb({ prefix: \"\", casing: \"upper\" }),\r\n    QueueSelectorTitle: faker.lorem.word()\r\n  }\r\n}"
            },
            {
                "name": "docWithMultiplePages",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "SiteDocument",
                "defaultValue": "{\r\n  ...defaultSiteDocument,\r\n  DocumentTitle: faker.lorem.word(),\r\n  Pages: Object\r\n    .values(QuestionType)\r\n    .filter(qt => typeof qt === \"number\")\r\n    .map((qt, idx) => \r\n      ({\r\n        PageID: idx,\r\n        PageTitle: \"\",\r\n        Sections: [\r\n          {\r\n            ...defaultSection,\r\n            SectionID: idx,\r\n            SectionNo: idx,\r\n            SectionTitle: \"\",\r\n            SectionQuestiontype: qt as QuestionType,\r\n            Questions: [\r\n              {\r\n                ...defaultQuestion,\r\n                QuestionText: QuestionType[qt as number].toString()\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      })\r\n  )\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true,\n  siteDocsApi: \"http://localhost:3002/api\",\n  apiTimeout: 60000\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false,\n  siteDocsApi: \"http://localhost:3002/api\",\n  apiTimeout: 60000\n}"
            },
            {
                "name": "formFillerRouteMock",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<DocumentBuilderRoute>",
                "defaultValue": "{\r\n  documentIds$: of([29]),\r\n  lastDocumentId$: of(29)\r\n}"
            },
            {
                "name": "formFillerStoreMock",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<FormFillerStore>",
                "defaultValue": "{\r\n  writingDocument$: new Subject<SiteDocument>(),\r\n  submitDocument$: (action$: Observable<SiteDocument>) => of(),\r\n  getTemplateRequest$: (action$: Observable<number>) => of()\r\n}"
            },
            {
                "name": "getDeviceString",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/plugins/device.plugin.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize(async () => {\r\n  const info = await Device.getInfo();\r\n  return `${info.model}@${info.platform}@${info.osVersion}`;\r\n})"
            },
            {
                "name": "getDeviceUuid",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/plugins/device.plugin.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize(async () => {\r\n  const { uuid } = await Device.getId();\r\n  return uuid;\r\n})"
            },
            {
                "name": "isMobileApp",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/plugins/platform.plugin.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize(() => {\r\n  const platform = inject(Platform);\r\n\r\n  return platform.is(\"cordova\");\r\n})"
            },
            {
                "name": "ObjectSelectable",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/selectable/selectable.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({}) as StoryFn<SelectableComponent<{ name: string }>>"
            },
            {
                "name": "operatives",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modals/operative-list/operative-list.modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Operative[]",
                "defaultValue": "Array\r\n  .from({ length: 3 })\r\n  .map((val, idx) => \r\n    ({\r\n      ID: idx + 2,\r\n      Name: faker.name.fullName()\r\n    })\r\n  )"
            },
            {
                "name": "operatives",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modals/operative-list/components/local-operative-search/local-operative-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Operative[]",
                "defaultValue": "Array\r\n  .from({ length: 3 })\r\n  .map((val, idx) => \r\n    ({\r\n      ID: idx + 2,\r\n      Name: faker.name.fullName()\r\n    })\r\n  )"
            },
            {
                "name": "operatives",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/actioner-select/actioner-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Operative[]",
                "defaultValue": "Array\r\n  .from({ length: 3 })\r\n  .map((val, idx) => \r\n    ({\r\n      ID: idx + 2,\r\n      Name: faker.name.fullName()\r\n    })\r\n  )"
            },
            {
                "name": "operativesStore",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modals/operative-list/operative-list.modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Pick<OperativesStore, \"operatives$\" | \"searchResults$\" | \"searchResultsIsPending$\" | \"getSearchResults\">",
                "defaultValue": "{\r\n  operatives$: of(operatives),\r\n  searchResults$: of<OperativeSearchResult[]>(searchResults),\r\n  searchResultsIsPending$: of(false),\r\n  getSearchResults: () => of(searchResults)\r\n}"
            },
            {
                "name": "operativesStore",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/actioner-select/actioner-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Pick<OperativesStore, \"operatives$\" | \"searchResults$\" | \"searchResultsIsPending$\" | \"getSearchResults\">",
                "defaultValue": "{\r\n  operatives$: of(operatives),\r\n  searchResults$: of<OperativeSearchResult[]>(searchResults),\r\n  searchResultsIsPending$: of(false),\r\n  getSearchResults: () => of(searchResults)\r\n}"
            },
            {
                "name": "Prepopulated",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "PrepopulatedCompany",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/company-actioner-select/company-actioner-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "PrepopulatedSelectable",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/selectable/selectable.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "PrepopulatedSite",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/site-select/site-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": ".storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\r\n  globalTypes: {\r\n    iosMode: {\r\n      name: \"IOS Mode\",\r\n      defaultValue: false\r\n    }\r\n  },\r\n  parameters: {\r\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\r\n    controls: {\r\n      matchers: {\r\n        color: /(background|color)$/i,\r\n        date: /Date$/,\r\n      },\r\n    },\r\n  },\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        importProvidersFrom(IonicModule.forRoot({})),\r\n        provideHttpClient(),\r\n        //provideHttpClientTesting()\r\n      ]\r\n    }),\r\n    componentWrapperDecorator(story => `<ion-app>${story}</ion-app>`)\r\n  ]\r\n}"
            },
            {
                "name": "queues",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Array\r\n  .from({ length: 10 })\r\n  .map((val, idx) => \r\n    ({\r\n      id: idx,\r\n      name: faker.lorem.word()\r\n    })\r\n  )"
            },
            {
                "name": "resAreaType",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/responsibility-area-select/responsibility-area-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ResponsibilityAreaType",
                "defaultValue": "{\r\n  Id: 1,\r\n  AppQuestionText: faker.lorem.words(),\r\n  TypeName: faker.lorem.word(),\r\n  Areas: Array\r\n    .from({ length: 10 })\r\n    .map((val, idx) => \r\n      ({\r\n        Id: idx,\r\n        Name: faker.commerce.department(),\r\n        DocResAreaTypeId: +faker.random.numeric()\r\n      })\r\n    )\r\n}"
            },
            {
                "name": "responsibilityAreaTypesStore",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/responsibility-area-select/responsibility-area-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<ResponsibilityAreaTypesStore>",
                "defaultValue": "{\r\n  responsibilityAreaTypeById$: () => of(resAreaType)\r\n}"
            },
            {
                "name": "searchResults",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modals/operative-list/operative-list.modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "OperativeSearchResult[]",
                "defaultValue": "Array\r\n  .from({ length: 10 })\r\n  .map((val, idx) => \r\n    ({\r\n      ID: idx + 1,\r\n      Name: faker.name.fullName(),\r\n      CompanyName: faker.company.name(),\r\n      HasAppAccess: true,\r\n      HasQRCode: true\r\n    })\r\n  )"
            },
            {
                "name": "searchResults",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/actioner-select/actioner-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "OperativeSearchResult[]",
                "defaultValue": "Array\r\n  .from({ length: 10 })\r\n  .map((val, idx) => \r\n    ({\r\n      ID: idx + 1,\r\n      Name: faker.name.fullName(),\r\n      CompanyName: faker.company.name(),\r\n      HasAppAccess: true,\r\n      HasQRCode: true\r\n    })\r\n  )"
            },
            {
                "name": "setAppUserUpdate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/user/user.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "pipeTap<User>(user => store.update(setAppUser(user)))"
            },
            {
                "name": "sites$",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/user/user.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "userSelector(user => user?.UserSites || [])"
            },
            {
                "name": "store",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/category-actioners/category-actioners.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createStore(\r\n  { name: \"site-documents\" },\r\n  withEntities<CategoryActioner, \"Id\">({ idKey: \"Id\" })\r\n)"
            },
            {
                "name": "store",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/operative/operatives.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createStore(\r\n  { name: \"operatives\" },\r\n  withEntities<Operative, \"ID\">({ idKey: \"ID\" }),\r\n  withSearchResultEntities<OperativeSearchResult, \"ID\">({ idKey: \"ID\" }),\r\n  withRequestsStatus<\"operativesSearch\">()\r\n)"
            },
            {
                "name": "store",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/site-document/site-document.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createStore(\r\n  { name: \"site-documents\" },\r\n  withEntities<SiteDocument, \"DocumentID\">({ idKey: \"DocumentID\" })\r\n)"
            },
            {
                "name": "store",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/responsibility-area-types/responsibility-area-types.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createStore(\n  { name: \"responsibility-area-types\" },\n  withEntities<ResponsibilityAreaType, \"Id\">({ idKey: \"Id\" })\n)"
            },
            {
                "name": "store",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/site-document-image/site-document-image.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createStore(\r\n  { name: \"site-document-image\" }, \r\n  withEntities<SiteDocumentImage, \"DocumentId\">({ idKey: \"DocumentId\" })\r\n)"
            },
            {
                "name": "store",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/user/user.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createStore(\r\n  { name: \"user\" },\r\n  withAppUser()\r\n)"
            },
            {
                "name": "store",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/site-document/form-filler/form-filler.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createStore(\r\n  { name: \"form-filler\" },\r\n  withWritingDocument(null as SiteDocument | null),\r\n  withTemplateMenuEntities<TemplateMenuItem, \"Id\">({ idKey: \"Id\", initialValue: [] })\r\n)"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/registration/registration.page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<RegistrationPage>",
                "defaultValue": "(args: RegistrationPage) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<DocumentBuilderPage>",
                "defaultValue": "(args: DocumentBuilderPage) => ({\r\n  props: args,\r\n  styles: [`\r\n    app-document-builder { display: contents; }\r\n  `]\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/camera/camera.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<CameraComponent>",
                "defaultValue": "(args: CameraComponent) => ({\r\n  props: args,\r\n  template: `\r\n    <camera [fill]=\"fill\" [expand]=\"expand\" [color]=\"color\">\r\n      Add Image\r\n    </camera>\r\n  `\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/datetime-picker/datetime-picker.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<DatetimePickerComponent>",
                "defaultValue": "(args: DatetimePickerComponent) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/selectable/selectable.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<SelectableComponent>",
                "defaultValue": "(args: SelectableComponent) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/multi-selectable/multi-selectable.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<MultiSelectableComponent>",
                "defaultValue": "(args: MultiSelectableComponent) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/signature-pad/signature-pad.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<SignaturePadComponent>",
                "defaultValue": "args => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/time-picker/time-picker.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<TimePickerComponent>",
                "defaultValue": "args => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modals/asset-list/asset-list.modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<AssetListModal>",
                "defaultValue": "(args: AssetListModal) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modals/operative-list/operative-list.modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<OperativeListModal>",
                "defaultValue": "(args: OperativeListModal) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/modals/template-menu/template-menu.modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<TemplateMenuModal>",
                "defaultValue": "args => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/modals/document-summary/document-summary.modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<DocumentSummaryModal>",
                "defaultValue": "args => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modals/operative-list/components/local-operative-search/local-operative-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<LocalOperativeSearchComponent>",
                "defaultValue": "(args: LocalOperativeSearchComponent) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modals/operative-list/components/online-operative-search/online-operative-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<OnlineOperativeSearchComponent>",
                "defaultValue": "args => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/company-actioner-select/company-actioner-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<CompanyActionerSelectComponent>",
                "defaultValue": "args => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/category-actioner-select/category-actioner-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<CategoryActionerSelectComponent>",
                "defaultValue": "args => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/actioner-select/actioner-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<ActionerSelectComponent>",
                "defaultValue": "(args: ActionerSelectComponent) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/document-image-upload/document-image-upload.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<DocumentImageUploadComponent>",
                "defaultValue": "args => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<QueueSelectComponent>",
                "defaultValue": "(args: QueueSelectComponent) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/remain-anonymous/remain-anonymous.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<RemainAnonymousComponent>",
                "defaultValue": "(args: RemainAnonymousComponent) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/queue-duration/queue-duration.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<QueueDurationComponent>",
                "defaultValue": "(args: QueueDurationComponent) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/responsibility-area-select/responsibility-area-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<ResponsibilityAreaSelectComponent>",
                "defaultValue": "args => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/site-select/site-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<SiteSelectComponent>",
                "defaultValue": "args => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/01-checkbox/checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      YesNoNA: args[\"question.YesNoNA\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/document-section/multi-checkbox-section/multi-checkbox-section.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<MultiCheckboxSectionComponent>",
                "defaultValue": "args => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/00-label/label.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/02-radio-group/radio-group.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      YesNoNA: args[\"question.YesNoNA\"] === \"Yes\" ? true \r\n        : args[\"question.YesNoNA\"] === \"No\" ? false\r\n        : args[\"question.YesNoNA\"] === \"NA\" ? null\r\n        : args[\"question.YesNoNA\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    },\r\n    section: {\r\n      ...defaultSection,\r\n      TableTitles: args[\"section.TableTitles\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/03-textbox/textbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      AnswerText: args[\"question.AnswerText\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/02-radio-table/radio-table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      YesNoNA: args[\"question.YesNoNA\"] === \"Yes\" ? true \r\n        : args[\"question.YesNoNA\"] === \"No\" ? false\r\n        : args[\"question.YesNoNA\"] === \"NA\" ? null\r\n        : args[\"question.YesNoNA\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/04-textarea/textarea.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      AnswerText: args[\"question.AnswerText\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/05-select/select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      Options: args[\"question.Options\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/07-radio-group-textbox/radio-group-textbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      YesNoNA: args[\"question.YesNoNA\"] === \"Yes\" ? true \r\n        : args[\"question.YesNoNA\"] === \"No\" ? false\r\n        : args[\"question.YesNoNA\"] === \"NA\" ? null\r\n        : args[\"question.YesNoNA\"],\r\n      AnswerText: args[\"question.AnswerText\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    },\r\n    section: {\r\n      ...defaultSection,\r\n      TableTitles: args[\"section.TableTitles\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/06-checkbox-textbox/checkbox-textbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      YesNoNA: args[\"question.YesNoNA\"],\r\n      AnswerText: args[\"question.AnswerText\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/07-radio-table-textbox/radio-table-textbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      YesNoNA: args[\"question.YesNoNA\"] === \"Yes\" ? true \r\n        : args[\"question.YesNoNA\"] === \"No\" ? false\r\n        : args[\"question.YesNoNA\"] === \"NA\" ? null\r\n        : args[\"question.YesNoNA\"],\r\n      AnswerText: args[\"question.AnswerText\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/08-date/date.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      DateAndTime: args[\"question.DateAndTime\"],\r\n      ValidationData: args[\"question.ValidationData\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/09-datetime/datetime.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      DateAndTime: args[\"question.DateAndTime\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/10-operative-list/operative-list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Operatives: args[\"question.Operatives\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/12-number/number.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      NumberVal: args[\"question.NumberVal\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/13-cascade-select/cascade-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      Options: args[\"question.Options\"],\r\n      CascadeOptions: args[\"question.CascadeOptions\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/17-asset-list/asset-list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Assets: args[\"question.Assets\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/16-linked-bool/linked-bool.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      YesNoNA: args[\"question.YesNoNA\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    },\r\n    section: {\r\n      ...defaultSection,\r\n      TableTitles: args[\"section.TableTitles\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/19-signature/signature.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      AnswerText: args[\"question.AnswerText\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/18-linked-dates/linked-dates.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      CascadeOptionsText: args[\"question.CascadeOptionsText\"],\r\n      Required: args[\"question.Required\"],\r\n      DateAndTime: args[\"question.DateAndTime\"],\r\n      DateAndTime2: args[\"question.DateAndTime2\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/21-company-select/company-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: defaultQuestion\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/30-cascade-select-text/cascade-select-text.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      CommentsText: args[\"question.CommentsText\"],\r\n      Required: args[\"question.Required\"],\r\n      Options: args[\"question.Options\"],\r\n      CascadeOptions: args[\"question.CascadeOptions\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/29-select-text/select-text.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      AnswerText: args[\"question.AnswerText\"],\r\n      Options: args[\"question.Options\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/32-time/time.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      DateAndTime: args[\"question.DateAndTime\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/33-linked-times/linked-times.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      CascadeOptionsText: args[\"question.CascadeOptionsText\"],\r\n      Required: args[\"question.Required\"],\r\n      DateAndTime: args[\"question.DateAndTime\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/extras/file-upload/file-upload.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<FileUploadComponent>",
                "defaultValue": "(args: FileUploadComponent) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/extras/camera-capture/camera-capture.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<CameraCaptureComponent>",
                "defaultValue": "(args: CameraCaptureComponent) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "trackRequestStatus",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/operative/operatives.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createRequestsStatusOperator(store)"
            },
            {
                "name": "useAllTemplates",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/http/template.api.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize(() => {\r\n  const { getAllTemplates } = useTemplateApi();\r\n\r\n  return track(() => getAllTemplates());\r\n})"
            },
            {
                "name": "useAreas",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/http/login.api.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize(() => {\r\n  const { getAreas } = useLoginApi();\r\n\r\n  return track(() => getAreas());\r\n})"
            },
            {
                "name": "useAreas",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/asset/asset.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize(() => {\r\n  const loginApi = useLoginApi();\r\n  return loginApi.getAreas();\r\n})"
            },
            {
                "name": "useAssetApi",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/http/asset.api.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createApi({\r\n  baseUrl: `${environment.siteDocsApi}/AssetApi`,\r\n  endpoints: ({ get }) => ({\r\n    getAssetsByRegistration: get<Asset[], GetAssetsByRegistrationParams>(\"GetAssetsByReg\"),\r\n    getAssetsByType: get<Asset[], { typeId: number, siteId?: number }>(\"getAssetsByType\"),\r\n    getAssetGroups: get<AssetGroup[]>(\"GetAssetGroups\"),\r\n    getAssetTypes: get<AssetType[]>(\"GetAssetTypes\")\r\n  })\r\n})"
            },
            {
                "name": "useAssetGroups",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/http/asset.api.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize(() => {\r\n  const { getAssetGroups } = useAssetApi();\r\n\r\n  return track(() => getAssetGroups());\r\n})"
            },
            {
                "name": "useAssetStore",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/asset/asset.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize(() => use<Asset[]>([]))"
            },
            {
                "name": "useAssetTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/http/asset.api.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize(() => {\r\n  const { getAssetTypes } = useAssetApi();\r\n\r\n  return track(() => getAssetTypes());\r\n})"
            },
            {
                "name": "useCategoryActioners",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/category-actioners/category-actioners.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize((siteId: number) => {\r\n  const loginApi = useLoginApi();\r\n\r\n  return track(() => loginApi.getCategoryActioners({ siteId }))\r\n})"
            },
            {
                "name": "useCompanies",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/http/login.api.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize(() => {\r\n  const { getCompanies } = useLoginApi();\r\n\r\n  return track(() => getCompanies());\r\n})"
            },
            {
                "name": "useFetchAssetsByRegistration",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/http/asset.api.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize((binding: () => GetAssetsByRegistrationParams) => {\r\n  const { getAssetsByRegistration } = useAssetApi();\r\n  const params$ = new Subject<GetAssetsByRegistrationParams>();\r\n\r\n  const assets = track({\r\n    deps: [params$],\r\n    fn: params => getAssetsByRegistration(params)\r\n  });\r\n\r\n  return {\r\n    ...assets,\r\n    fetch: () => {\r\n      const params = binding();\r\n      params$.next(params);\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "useFetchOperativesByName",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/http/operative.api.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize((binding: () => OperativeSearchParams) => {\r\n  const { getOperativesByName } = useOperativeApi();\r\n  const params$ = new Subject<OperativeSearchParams>();\r\n  \r\n  const searchRes = track({\r\n    deps: [params$],\r\n    fn: params => getOperativesByName(params)\r\n  });\r\n\r\n  return {\r\n    ...searchRes,\r\n    fetch: () => {\r\n      const params = binding();\r\n      params$.next(params);\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "useLoginApi",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/http/login.api.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createApi({\r\n  baseUrl: `${environment.siteDocsApi}/LoginApi`,\r\n  endpoints: ({ get }) => ({\r\n    getCompanies: get<Company[]>(\"GetCompanies\"),\r\n    getSites: get<Site[]>(\"GetSites\"),\r\n    getAreas: get<Area[]>(\"GetAreas\"),\r\n    getRams: get<RamsItem[]>(\"GetRams\"),\r\n    getCategoryActioners: get<CategoryActioner[], { siteId: number }>(\"GetCategoryActioners\"),\r\n    getResAreaTypes: get<ResponsibilityAreaType[]>(\"GetResAreas\")\r\n  })\r\n})"
            },
            {
                "name": "useOperativeApi",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/http/operative.api.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createApi({\r\n  baseUrl: `${environment.siteDocsApi}/OperativeApi`,\r\n  endpoints: ({ get }) => ({\r\n    getOperativesByName: get<OperativeSearchResult[], OperativeSearchParams>(\"GetOperativesByName\")\r\n  })\r\n})"
            },
            {
                "name": "useRams",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/http/login.api.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize(() => {\r\n  const { getRams } = useLoginApi();\r\n\r\n  const rams = track(() => getRams());\r\n\r\n  return {\r\n    ...rams,\r\n    thatArentExpiredToday: rams.data(items => items.filter(item => item.ExpiryDate == null || item.ExpiryDate.isEqualOrAfterToday()))\r\n  }\r\n})"
            },
            {
                "name": "useResAreaTypes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/http/login.api.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize(() => {\r\n  const { getResAreaTypes } = useLoginApi();\r\n\r\n  const resAreaTypes = track(() => getResAreaTypes());\r\n\r\n  return {\r\n    ...resAreaTypes,\r\n    areas: resAreaTypes.data(types => flatMap(types, t => t.Areas))\r\n  }\r\n})"
            },
            {
                "name": "useSites",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/http/login.api.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize(() => {\r\n  const { getSites } = useLoginApi();\r\n\r\n  return track(() => getSites());\r\n})"
            },
            {
                "name": "useTemplateApi",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/http/template.api.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createApi({\r\n  baseUrl: `${environment.siteDocsApi}/TemplateApi`,\r\n  endpoints: ({ get }) => ({\r\n    getAllTemplates: get<TemplateItem[]>(\"GetAllTemplates\"),\r\n    getTemplate: get<SiteDocument, { id: number }>(\"GetDocumentTemplate\"),\r\n  })\r\n})"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/states/search-results.adapter.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "entitiesPropsFactory(\"SearchResult\")"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/operative/operatives.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "searchResultsAdapter()"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/operative/operatives.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  ...operativesAdapter(store),\r\n  ...searchResultsAdapt(store)\r\n}"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/user/user.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "propsFactory(\"appUser\", { initialValue: null as User | null })"
            },
            {
                "name": "userSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/user/user.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "selector(store.pipe(selectAppUser()))"
            },
            {
                "name": "userStore",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modals/operative-list/operative-list.modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Pick<UserStore, user$>",
                "defaultValue": "{\r\n  user$: of(defaultUser)\r\n}"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/site-document/adapters/writing-document.adapter.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "propsFactory(\"writingDocument\", { initialValue: null as SiteDocument | null })"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/site-document/props/writing-document.props.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "propsFactory(\"writingDocument\", { initialValue: null as SiteDocument | null })"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/site-document/form-filler/form-filler.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "entitiesPropsFactory(\"templateMenu\")"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/site-document/form-filler/form-filler.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "writingDocumentAdapter(store)"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/site-document/form-filler/adapters/template-menu.adapter.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "entitiesPropsFactory(\"templateMenu\")"
            },
            {
                "name": "userStore",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/actioner-select/actioner-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Pick<UserStore, user$>",
                "defaultValue": "{\r\n  user$: of(defaultUser)\r\n}"
            },
            {
                "name": "userStoreMock",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/company-actioner-select/company-actioner-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<UserStore>",
                "defaultValue": "{\r\n  companies$: of<Company[]>(Array\r\n    .from({ length: 10 })\r\n    .map((val, idx) => \r\n      ({\r\n        Id: idx,\r\n        Name: faker.company.name()\r\n      })\r\n  ))\r\n}"
            },
            {
                "name": "userStoreMock",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/site-select/site-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<UserStore>",
                "defaultValue": "{\r\n  sites$: of(Array\r\n    .from({ length: 10 })\r\n    .map((val, idx) => \r\n      ({\r\n        Id: idx,\r\n        Name: faker.company.name()\r\n      })\r\n  ))\r\n}"
            },
            {
                "name": "useSites",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/site-select/site-select.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize(() => {\r\n  const loginApi = useLoginApi();\r\n\r\n  return track(() => loginApi.getSites());\r\n})"
            }
        ],
        "functions": [
            {
                "name": "AngularComponent",
                "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "ReturnType<T1>",
                "jsdoctags": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "AngularComponent",
                "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "AngularComponent",
                "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h3",
                        "type": "T3",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h3",
                        "type": "T3",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "AngularComponent",
                "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h3",
                        "type": "T3",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h4",
                        "type": "T4",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h3",
                        "type": "T3",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h4",
                        "type": "T4",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "AngularComponent",
                "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h3",
                        "type": "T3",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h4",
                        "type": "T4",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h5",
                        "type": "T5",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h3",
                        "type": "T3",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h4",
                        "type": "T4",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h5",
                        "type": "T5",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "AngularComponent",
                "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h3",
                        "type": "T3",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h4",
                        "type": "T4",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h5",
                        "type": "T5",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h6",
                        "type": "T6",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h3",
                        "type": "T3",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h4",
                        "type": "T4",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h5",
                        "type": "T5",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h6",
                        "type": "T6",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "AngularComponent",
                "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "AngularComponent",
                "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "args",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "dotDotDotToken": true
                    }
                ],
                "returnType": "any",
                "jsdoctags": [
                    {
                        "name": "args",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "dotDotDotToken": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "AngularDirective",
                "file": "src/app/shared/lifecycles/lifecycle-directive.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "ReturnType<T1>",
                "jsdoctags": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "AngularDirective",
                "file": "src/app/shared/lifecycles/lifecycle-directive.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "AngularDirective",
                "file": "src/app/shared/lifecycles/lifecycle-directive.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h3",
                        "type": "T3",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h3",
                        "type": "T3",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "AngularDirective",
                "file": "src/app/shared/lifecycles/lifecycle-directive.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h3",
                        "type": "T3",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h4",
                        "type": "T4",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h3",
                        "type": "T3",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h4",
                        "type": "T4",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "AngularDirective",
                "file": "src/app/shared/lifecycles/lifecycle-directive.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h3",
                        "type": "T3",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h4",
                        "type": "T4",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h5",
                        "type": "T5",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h3",
                        "type": "T3",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h4",
                        "type": "T4",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h5",
                        "type": "T5",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "AngularDirective",
                "file": "src/app/shared/lifecycles/lifecycle-directive.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h3",
                        "type": "T3",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h4",
                        "type": "T4",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h5",
                        "type": "T5",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h6",
                        "type": "T6",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h3",
                        "type": "T3",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h4",
                        "type": "T4",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h5",
                        "type": "T5",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h6",
                        "type": "T6",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "AngularDirective",
                "file": "src/app/shared/lifecycles/lifecycle-directive.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "AngularDirective",
                "file": "src/app/shared/lifecycles/lifecycle-directive.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "args",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "dotDotDotToken": true
                    }
                ],
                "returnType": "any",
                "jsdoctags": [
                    {
                        "name": "args",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "dotDotDotToken": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "booleanState",
                "file": "src/app/shared/states/boolean.state.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "name",
                        "type": "AdapterConfig<boolean, BooleanState, TProps>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "db07728e-bc9f-4adc-98cb-3dbb7f773b19",
                        "destructuredParameter": true
                    },
                    {
                        "name": "initialValue",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "db07728e-bc9f-4adc-98cb-3dbb7f773b19",
                        "destructuredParameter": true
                    },
                    {
                        "name": "props",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "db07728e-bc9f-4adc-98cb-3dbb7f773b19",
                        "destructuredParameter": true
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "name",
                        "type": "AdapterConfig<boolean, BooleanState, TProps>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "db07728e-bc9f-4adc-98cb-3dbb7f773b19",
                        "destructuredParameter": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "initialValue",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "db07728e-bc9f-4adc-98cb-3dbb7f773b19",
                        "destructuredParameter": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "props",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "db07728e-bc9f-4adc-98cb-3dbb7f773b19",
                        "destructuredParameter": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "calculate",
                "file": "src/app/shared/rxjs/using-calculate.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "deps",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "fn",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "UsePipe<R>",
                "jsdoctags": [
                    {
                        "name": "deps",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "fn",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "calculate",
                "file": "src/app/shared/rxjs/using-calculate.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "deps",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "op1",
                        "type": "OperatorFunction",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "UsePipe<A>",
                "jsdoctags": [
                    {
                        "name": "deps",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "op1",
                        "type": "OperatorFunction",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "calculate",
                "file": "src/app/shared/rxjs/using-calculate.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "deps",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "op1",
                        "type": "OperatorFunction",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "op2",
                        "type": "OperatorFunction",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "UsePipe<B>",
                "jsdoctags": [
                    {
                        "name": "deps",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "op1",
                        "type": "OperatorFunction",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "op2",
                        "type": "OperatorFunction",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "calculate",
                "file": "src/app/shared/rxjs/using-calculate.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "deps",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "op1",
                        "type": "OperatorFunction",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "op2",
                        "type": "OperatorFunction",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "op3",
                        "type": "OperatorFunction",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "UsePipe<C>",
                "jsdoctags": [
                    {
                        "name": "deps",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "op1",
                        "type": "OperatorFunction",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "op2",
                        "type": "OperatorFunction",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "op3",
                        "type": "OperatorFunction",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "calculate",
                "file": "src/app/shared/rxjs/using-calculate.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "deps",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "op1",
                        "type": "OperatorFunction",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "op2",
                        "type": "OperatorFunction",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "op3",
                        "type": "OperatorFunction",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "op4",
                        "type": "OperatorFunction",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "UsePipe<D>",
                "jsdoctags": [
                    {
                        "name": "deps",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "op1",
                        "type": "OperatorFunction",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "op2",
                        "type": "OperatorFunction",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "op3",
                        "type": "OperatorFunction",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "op4",
                        "type": "OperatorFunction",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "calculate",
                "file": "src/app/shared/rxjs/using-calculate.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "deps",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "args",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "dotDotDotToken": true
                    }
                ],
                "returnType": "UsePipe<any>",
                "jsdoctags": [
                    {
                        "name": "deps",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "args",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "dotDotDotToken": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "clickReaction",
                "file": "src/app/shared/reactions/click.reaction.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "createApi",
                "file": "src/app/core/http/create-api.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "options",
                        "type": "CreateApiOptions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "options",
                        "type": "CreateApiOptions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "createBuildApi",
                "file": "src/app/core/http/create-api.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "options",
                        "type": "CreateApiOptions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "BuildApi",
                "jsdoctags": [
                    {
                        "name": "options",
                        "type": "CreateApiOptions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "createPipe",
                "file": "src/app/shared/rxjs/use.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "s",
                        "type": "Observable",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "s",
                        "type": "Observable",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "createWaitForSelector",
                "file": "src/app/shared/testing/wait-for.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "spectator",
                        "type": "Spectator",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "WaitForSelector",
                "jsdoctags": [
                    {
                        "name": "spectator",
                        "type": "Spectator",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "fileReader",
                "file": "src/app/shared/components/upload/upload.component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "FileReader"
            },
            {
                "name": "fileToDataUrlFile",
                "file": "src/app/shared/components/upload/upload.component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "file",
                        "type": "File",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Promise<DataUrlFile>",
                "jsdoctags": [
                    {
                        "name": "file",
                        "type": "File",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "ifBiometricsIsAvailable",
                "file": "src/app/shared/plugins/biometric.plugin.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "importDocumentBuilderModals",
                "file": "src/app/core/pages/document-builder/modals/document-builder-modals.import.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "importInputTypes",
                "file": "src/app/core/pages/document-builder/components/input-types/input-types.import.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "importNgSwitch",
                "file": "src/app/shared/imports/ng-switch.import.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "importQuestionTypes",
                "file": "src/app/core/pages/document-builder/components/question-types/question-types.import.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "importRxAutoVirtualScroll",
                "file": "src/app/shared/imports/rx-template.import.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Visit for more information: <a href=\"https://www.rx-angular.io/docs/template/api/virtual-scrolling#autosizevirtualscrollstrategy\">https://www.rx-angular.io/docs/template/api/virtual-scrolling#autosizevirtualscrollstrategy</a></p>\n",
                "args": []
            },
            {
                "name": "importRxDynamicVirtualScroll",
                "file": "src/app/shared/imports/rx-template.import.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Visit for more information: <a href=\"https://www.rx-angular.io/docs/template/api/virtual-scrolling#dynamicsizevirtualscrollstrategy\">https://www.rx-angular.io/docs/template/api/virtual-scrolling#dynamicsizevirtualscrollstrategy</a></p>\n",
                "args": []
            },
            {
                "name": "importRxFixedVirtualScroll",
                "file": "src/app/shared/imports/rx-template.import.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Visit for more information: <a href=\"https://www.rx-angular.io/docs/template/api/virtual-scrolling#fixedsizevirtualscrollstrategy\">https://www.rx-angular.io/docs/template/api/virtual-scrolling#fixedsizevirtualscrollstrategy</a></p>\n",
                "args": []
            },
            {
                "name": "importRxTemplate",
                "file": "src/app/shared/imports/rx-template.import.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Documentation can be found here: <a href=\"https://www.rx-angular.io/docs/template\">https://www.rx-angular.io/docs/template</a></p>\n",
                "args": []
            },
            {
                "name": "importRxVirtualScroll",
                "file": "src/app/shared/imports/rx-template.import.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "providers",
                        "type": "Array",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "dotDotDotToken": true
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "providers",
                        "type": "Array",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "dotDotDotToken": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "isBiometricAvailable",
                "file": "src/app/shared/plugins/biometric.plugin.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "isNull",
                "file": "src/app/shared/operators/rxjs/is-null.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "numberState",
                "file": "src/app/shared/states/number.state.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "name",
                        "type": "AdapterConfig<number, NumberState, TProps>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "74a5b71c-be24-40a0-9360-c05159e799a0",
                        "destructuredParameter": true
                    },
                    {
                        "name": "initialValue",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "74a5b71c-be24-40a0-9360-c05159e799a0",
                        "destructuredParameter": true
                    },
                    {
                        "name": "props",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "74a5b71c-be24-40a0-9360-c05159e799a0",
                        "destructuredParameter": true
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "name",
                        "type": "AdapterConfig<number, NumberState, TProps>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "74a5b71c-be24-40a0-9360-c05159e799a0",
                        "destructuredParameter": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "initialValue",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "74a5b71c-be24-40a0-9360-c05159e799a0",
                        "destructuredParameter": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "props",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "74a5b71c-be24-40a0-9360-c05159e799a0",
                        "destructuredParameter": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "operativesAdapter",
                "file": "src/app/core/stores/operative/adapters/operatives.adapter.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "operativeSearchAdapter",
                "file": "src/app/core/stores/operative/adapters/operatives.adapter.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "store",
                        "type": "AdapterTarget<TState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "1810d1bc-db96-49b5-8d1b-cb82e08fe777",
                        "destructuredParameter": true
                    },
                    {
                        "name": "ref",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "1810d1bc-db96-49b5-8d1b-cb82e08fe777",
                        "destructuredParameter": true
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "AdapterTarget<TState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "1810d1bc-db96-49b5-8d1b-cb82e08fe777",
                        "destructuredParameter": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "ref",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "1810d1bc-db96-49b5-8d1b-cb82e08fe777",
                        "destructuredParameter": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "param",
                "file": "src/app/shared/route/param.route.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "queryParam",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "queryParam",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "pipeTap",
                "file": "src/app/shared/rxjs/pipes/pipe-tap.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "action",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "action",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "reaction",
                "file": "src/app/shared/reactions/reaction.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "fn",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "fn",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "searchResultsAdapt",
                "file": "src/app/shared/states/search-results.adapter.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "searchResultsAdapter",
                "file": "src/app/shared/states/search-results.adapter.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "selector",
                "file": "src/app/shared/rxjs/selector.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "observable",
                        "type": "Observable",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "observable",
                        "type": "Observable",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "templateMenuAdapter",
                "file": "src/app/core/stores/site-document/form-filler/adapters/template-menu.adapter.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "track",
                "file": "src/app/shared/rxjs/track.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "fn",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Tracking<TResult>",
                "jsdoctags": [
                    {
                        "name": "fn",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "track",
                "file": "src/app/shared/rxjs/track.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "options",
                        "type": "TrackingOptions",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Tracking<TResult>",
                "jsdoctags": [
                    {
                        "name": "options",
                        "type": "TrackingOptions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "track",
                "file": "src/app/shared/rxjs/track.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "param",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Tracking<TResult>",
                "jsdoctags": [
                    {
                        "name": "param",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "use",
                "file": "src/app/shared/rxjs/use.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "initialState",
                        "type": "T",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "initialState",
                        "type": "T",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "useElement",
                "file": "src/app/shared/angular/element/element.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "useParentElement",
                "file": "src/app/shared/angular/element/parent-element.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "useTemplate",
                "file": "src/app/core/http/template.api.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "using",
                "file": "src/app/shared/rxjs/using-calculate.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "sources",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "dotDotDotToken": true
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "sources",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "dotDotDotToken": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "verifyIdentity",
                "file": "src/app/shared/plugins/biometric.plugin.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "options",
                        "type": "BiometricOptions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "options",
                        "type": "BiometricOptions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "withAfterViewInit",
                "file": "src/app/shared/lifecycles/angular/with-after-view-init.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "withGenericTemplateContextGuard",
                "file": "src/app/shared/lifecycles/angular/with-template-context-guard.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "withIonViewDidEnter",
                "file": "src/app/shared/lifecycles/ionic/with-ion-view-did-enter.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "withIonViewDidLeave",
                "file": "src/app/shared/lifecycles/ionic/with-ion-view-did-leave.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "withIonViewWillEnter",
                "file": "src/app/shared/lifecycles/ionic/with-ion-view-will-enter.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "withIonViewWillLeave",
                "file": "src/app/shared/lifecycles/ionic/with-ion-view-will-leave.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "withNoop",
                "file": "src/app/shared/lifecycles/with-noop.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "withOnChanges",
                "file": "src/app/shared/lifecycles/angular/with-on-changes.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "withOnInit",
                "file": "src/app/shared/lifecycles/angular/with-on-init.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "withTemplateContextGuard",
                "file": "src/app/shared/lifecycles/angular/with-template-context-guard.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "writingDocumentActions",
                "file": "src/app/core/stores/site-document/props/writing-document.props.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "writingDocumentAdapter",
                "file": "src/app/core/stores/site-document/adapters/writing-document.adapter.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "AnyFunction",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "function",
                "file": "src/app/shared/lifecycles/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 178
            },
            {
                "name": "AspNetData",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/http/create-api.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 194
            },
            {
                "name": "Nullable",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "T | null | undefined",
                "file": "src/app/shared/types/nullable.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "ObservableTuple",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/shared/rxjs/using-calculate.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 194
            },
            {
                "name": "Params",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/core/http/create-api.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 181
            },
            {
                "name": "Prefix",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/shared/types/prefix.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 194
            },
            {
                "name": "ReactiveConstructor",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/shared/lifecycles/types.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 179
            },
            {
                "name": "SearchEntitiesRef",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "EntitiesRef<SearchResultEntities | SearchResultIds | idKeySearchResult>",
                "file": "src/app/core/stores/operative/adapters/operatives.adapter.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/01-checkbox/checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/00-label/label.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/02-radio-group/radio-group.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/03-textbox/textbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/02-radio-table/radio-table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/04-textarea/textarea.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/05-select/select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/07-radio-group-textbox/radio-group-textbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/06-checkbox-textbox/checkbox-textbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/07-radio-table-textbox/radio-table-textbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/08-date/date.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/09-datetime/datetime.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/10-operative-list/operative-list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/12-number/number.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/13-cascade-select/cascade-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/17-asset-list/asset-list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/16-linked-bool/linked-bool.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/19-signature/signature.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/18-linked-dates/linked-dates.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/21-company-select/company-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/30-cascade-select-text/cascade-select-text.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/29-select-text/select-text.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/32-time/time.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/33-linked-times/linked-times.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "TrackingStatus",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"Idle\" | \"Success\" | \"Error\" | \"Loading\"",
                "file": "src/app/shared/rxjs/track.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "UseOf",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "ReturnType<>",
                "file": "src/app/shared/rxjs/use.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "UsePipe",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "ReturnType<>",
                "file": "src/app/shared/rxjs/use.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "WaitForSelector",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "function",
                "file": "src/app/shared/testing/wait-for.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 178
            }
        ],
        "enumerations": [
            {
                "name": "QuestionType",
                "childs": [
                    {
                        "name": "Label",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 0
                    },
                    {
                        "name": "Checkbox",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 1
                    },
                    {
                        "name": "RadioGroup",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 2
                    },
                    {
                        "name": "Textbox",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 3
                    },
                    {
                        "name": "TextArea",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 4
                    },
                    {
                        "name": "Select",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 5
                    },
                    {
                        "name": "CheckboxTextbox",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 6
                    },
                    {
                        "name": "RadioGroupTextbox",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 7
                    },
                    {
                        "name": "Date",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 8
                    },
                    {
                        "name": "DateTime",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 9
                    },
                    {
                        "name": "OperativeList",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 10
                    },
                    {
                        "name": "WallOfText",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 11
                    },
                    {
                        "name": "Number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 12
                    },
                    {
                        "name": "CascadeDropdown",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 13
                    },
                    {
                        "name": "LinkedBool",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 16
                    },
                    {
                        "name": "AssetList",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 17
                    },
                    {
                        "name": "LinkedDates",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 18
                    },
                    {
                        "name": "Signature",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 19
                    },
                    {
                        "name": "CompanySelect",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 21
                    },
                    {
                        "name": "AreaSelect",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 22
                    },
                    {
                        "name": "AssetGroupsAndTypes",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 25
                    },
                    {
                        "name": "AssetInspectionSchedule",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 26
                    },
                    {
                        "name": "ProjectSelect",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 27
                    },
                    {
                        "name": "RamsSelect",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 28
                    },
                    {
                        "name": "SelectText",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 29
                    },
                    {
                        "name": "CascadeDropdownText",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 30
                    },
                    {
                        "name": "MultiCascade",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 31
                    },
                    {
                        "name": "Time",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 32
                    },
                    {
                        "name": "LinkedTimes",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 33
                    },
                    {
                        "name": "HraSelect",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 34
                    },
                    {
                        "name": "MultiCheckbox",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 35
                    },
                    {
                        "name": "LinkedDateAndTime",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 36
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/core/stores/site-document/models/site-document.model.ts"
            }
        ],
        "groupedVariables": {
            "src/app/shared/components/datetime-picker/datetime-picker.component.stories.ts": [
                {
                    "name": "DateOnly",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/datetime-picker/datetime-picker.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/datetime-picker/datetime-picker.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/datetime-picker/datetime-picker.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<DatetimePickerComponent>",
                    "defaultValue": "(args: DatetimePickerComponent) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/registration/registration.page.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/registration/registration.page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/registration/registration.page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<RegistrationPage>",
                    "defaultValue": "(args: RegistrationPage) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/document-builder.page.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "defaultDoc",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SiteDocument",
                    "defaultValue": "{\r\n  ...defaultSiteDocument,\r\n  DocumentTitle: faker.lorem.word(),\r\n  Pages: [\r\n    {\r\n      PageID: 1,\r\n      PageTitle: faker.lorem.word(),\r\n      Sections: Object\r\n        .values(QuestionType)\r\n        .filter(qt => typeof qt === \"number\")\r\n        .map((qt, idx) => \r\n          ({\r\n            ...defaultSection,\r\n            SectionID: idx,\r\n            SectionNo: idx,\r\n            SectionTitle: \"\",\r\n            SectionQuestiontype: qt as QuestionType,\r\n            Questions: [\r\n              {\r\n                ...defaultQuestion,\r\n                QuestionText: QuestionType[qt as number].toString()\r\n              }\r\n            ]\r\n          })\r\n        )\r\n    }\r\n  ]\r\n}"
                },
                {
                    "name": "DocumentWithAllPermissionsTurnedOn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DocumentWithMultiplePages",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "docWithAllPermissionsOn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SiteDocument",
                    "defaultValue": "{\r\n  ...defaultSiteDocument,\r\n  DocumentTitle: faker.lorem.word(),\r\n  Pages: [\r\n    {\r\n      PageID: 1,\r\n      PageTitle: faker.lorem.word(),\r\n      Sections: Object\r\n        .values(QuestionType)\r\n        .filter(qt => typeof qt === \"number\")\r\n        .map((qt, idx) => \r\n          ({\r\n            ...defaultSection,\r\n            SectionID: idx,\r\n            SectionNo: idx,\r\n            SectionTitle: \"\",\r\n            SectionQuestiontype: qt as QuestionType,\r\n            Questions: [\r\n              {\r\n                ...defaultQuestion,\r\n                QuestionText: QuestionType[qt as number].toString()\r\n              }\r\n            ]\r\n          })\r\n        )\r\n    }\r\n  ],\r\n  Queues: Array\r\n    .from({ length: 5 })\r\n    .map((val, idx) => \r\n      ({\r\n        Key: idx.toString(),\r\n        Value: faker.lorem.word()\r\n      })\r\n  ),\r\n  CanAddAsset: true,\r\n  CanAddOperative: true,\r\n  CanCreateHotspot: true,\r\n  CanAddActionerFromApp: true,\r\n  CanAddCategoryActioner: true,\r\n  CanCreateAssetsFromDocument: true,\r\n  CanHaveCompanyActioner: true,\r\n  CanHaveDocLevelPhotoRoll: true,\r\n  CanHaveDocumentLevelImages: true,\r\n  CanHaveQueueDuration: true,\r\n  ShowDocLevelPhotoButtonAtStartOfDoc: true,\r\n  CanBeAddedToHotspot: true,\r\n  CanBeSavedAsDraft: true,\r\n  AllowAnon: true,\r\n  RemainAnon: false,\r\n  MetaData: {\r\n    ActionerText: faker.lorem.word(),\r\n    CanBeEditableDocument: true,\r\n    CannotAddSelfAsActioner: true,\r\n    HasSiteList: true,\r\n    ColourHex: faker.color.rgb({ prefix: \"\", casing: \"upper\" }),\r\n    QueueSelectorTitle: faker.lorem.word()\r\n  }\r\n}"
                },
                {
                    "name": "docWithMultiplePages",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SiteDocument",
                    "defaultValue": "{\r\n  ...defaultSiteDocument,\r\n  DocumentTitle: faker.lorem.word(),\r\n  Pages: Object\r\n    .values(QuestionType)\r\n    .filter(qt => typeof qt === \"number\")\r\n    .map((qt, idx) => \r\n      ({\r\n        PageID: idx,\r\n        PageTitle: \"\",\r\n        Sections: [\r\n          {\r\n            ...defaultSection,\r\n            SectionID: idx,\r\n            SectionNo: idx,\r\n            SectionTitle: \"\",\r\n            SectionQuestiontype: qt as QuestionType,\r\n            Questions: [\r\n              {\r\n                ...defaultQuestion,\r\n                QuestionText: QuestionType[qt as number].toString()\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      })\r\n  )\r\n}"
                },
                {
                    "name": "formFillerRouteMock",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<DocumentBuilderRoute>",
                    "defaultValue": "{\r\n  documentIds$: of([29]),\r\n  lastDocumentId$: of(29)\r\n}"
                },
                {
                    "name": "formFillerStoreMock",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<FormFillerStore>",
                    "defaultValue": "{\r\n  writingDocument$: new Subject<SiteDocument>(),\r\n  submitDocument$: (action$: Observable<SiteDocument>) => of(),\r\n  getTemplateRequest$: (action$: Observable<number>) => of()\r\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<DocumentBuilderPage>",
                    "defaultValue": "(args: DocumentBuilderPage) => ({\r\n  props: args,\r\n  styles: [`\r\n    app-document-builder { display: contents; }\r\n  `]\r\n})"
                }
            ],
            "src/app/shared/components/camera/camera.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/camera/camera.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/camera/camera.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<CameraComponent>",
                    "defaultValue": "(args: CameraComponent) => ({\r\n  props: args,\r\n  template: `\r\n    <camera [fill]=\"fill\" [expand]=\"expand\" [color]=\"color\">\r\n      Add Image\r\n    </camera>\r\n  `\r\n})"
                }
            ],
            "src/app/shared/components/selectable/selectable.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/selectable/selectable.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "ObjectSelectable",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/selectable/selectable.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({}) as StoryFn<SelectableComponent<{ name: string }>>"
                },
                {
                    "name": "PrepopulatedSelectable",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/selectable/selectable.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/selectable/selectable.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<SelectableComponent>",
                    "defaultValue": "(args: SelectableComponent) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/shared/components/multi-selectable/multi-selectable.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/multi-selectable/multi-selectable.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/multi-selectable/multi-selectable.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<MultiSelectableComponent>",
                    "defaultValue": "(args: MultiSelectableComponent) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/shared/components/signature-pad/signature-pad.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/signature-pad/signature-pad.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/signature-pad/signature-pad.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<SignaturePadComponent>",
                    "defaultValue": "args => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/shared/components/time-picker/time-picker.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/time-picker/time-picker.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/time-picker/time-picker.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<TimePickerComponent>",
                    "defaultValue": "args => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/shared/modals/asset-list/asset-list.modal.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modals/asset-list/asset-list.modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modals/asset-list/asset-list.modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<AssetListModal>",
                    "defaultValue": "(args: AssetListModal) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/shared/modals/operative-list/operative-list.modal.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modals/operative-list/operative-list.modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "operatives",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modals/operative-list/operative-list.modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Operative[]",
                    "defaultValue": "Array\r\n  .from({ length: 3 })\r\n  .map((val, idx) => \r\n    ({\r\n      ID: idx + 2,\r\n      Name: faker.name.fullName()\r\n    })\r\n  )"
                },
                {
                    "name": "operativesStore",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modals/operative-list/operative-list.modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Pick<OperativesStore, \"operatives$\" | \"searchResults$\" | \"searchResultsIsPending$\" | \"getSearchResults\">",
                    "defaultValue": "{\r\n  operatives$: of(operatives),\r\n  searchResults$: of<OperativeSearchResult[]>(searchResults),\r\n  searchResultsIsPending$: of(false),\r\n  getSearchResults: () => of(searchResults)\r\n}"
                },
                {
                    "name": "searchResults",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modals/operative-list/operative-list.modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OperativeSearchResult[]",
                    "defaultValue": "Array\r\n  .from({ length: 10 })\r\n  .map((val, idx) => \r\n    ({\r\n      ID: idx + 1,\r\n      Name: faker.name.fullName(),\r\n      CompanyName: faker.company.name(),\r\n      HasAppAccess: true,\r\n      HasQRCode: true\r\n    })\r\n  )"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modals/operative-list/operative-list.modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<OperativeListModal>",
                    "defaultValue": "(args: OperativeListModal) => ({\r\n  props: args\r\n})"
                },
                {
                    "name": "userStore",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modals/operative-list/operative-list.modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Pick<UserStore, user$>",
                    "defaultValue": "{\r\n  user$: of(defaultUser)\r\n}"
                }
            ],
            "src/app/core/pages/document-builder/modals/template-menu/template-menu.modal.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/modals/template-menu/template-menu.modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/modals/template-menu/template-menu.modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<TemplateMenuModal>",
                    "defaultValue": "args => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/modals/document-summary/document-summary.modal.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/modals/document-summary/document-summary.modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "defaultDoc",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/modals/document-summary/document-summary.modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SiteDocument",
                    "defaultValue": "{\r\n  ...defaultSiteDocument,\r\n  DocumentTitle: faker.lorem.word(),\r\n  RemainAnon: true,\r\n  CurrentActionerOperativeID: 1,\r\n  CompanyActionerId: 1,\r\n  SiteId: 1,\r\n  AutoQueueID: 1,\r\n  QueueDuration: {\r\n    Value: 6,\r\n    Type: \"Hours\"\r\n  },\r\n  MetaData: {\r\n    ActionerText: \"Pick your actioner\",\r\n    SiteListTitle: \"Pick your site\"\r\n  },\r\n  Pages: [\r\n    {\r\n      PageID: 1,\r\n      PageTitle: faker.lorem.word(),\r\n      Sections: Object\r\n        .values(QuestionType)\r\n        .filter(qt => typeof qt === \"number\")\r\n        .map((qt, idx) => \r\n          ({\r\n            ...defaultSection,\r\n            SectionID: idx,\r\n            SectionNo: idx,\r\n            SectionTitle: \"\",\r\n            SectionQuestiontype: qt as QuestionType,\r\n            Questions: [\r\n              {\r\n                ...defaultQuestion,\r\n                QuestionText: QuestionType[qt as number].toString()\r\n              }\r\n            ]\r\n          })\r\n        )\r\n    }\r\n  ]\r\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/modals/document-summary/document-summary.modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<DocumentSummaryModal>",
                    "defaultValue": "args => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/shared/modals/operative-list/components/local-operative-search/local-operative-search.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modals/operative-list/components/local-operative-search/local-operative-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "operatives",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modals/operative-list/components/local-operative-search/local-operative-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Operative[]",
                    "defaultValue": "Array\r\n  .from({ length: 3 })\r\n  .map((val, idx) => \r\n    ({\r\n      ID: idx + 2,\r\n      Name: faker.name.fullName()\r\n    })\r\n  )"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modals/operative-list/components/local-operative-search/local-operative-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<LocalOperativeSearchComponent>",
                    "defaultValue": "(args: LocalOperativeSearchComponent) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/shared/modals/operative-list/components/online-operative-search/online-operative-search.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modals/operative-list/components/online-operative-search/online-operative-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modals/operative-list/components/online-operative-search/online-operative-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<OnlineOperativeSearchComponent>",
                    "defaultValue": "args => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/input-types/company-actioner-select/company-actioner-select.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/company-actioner-select/company-actioner-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "PrepopulatedCompany",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/company-actioner-select/company-actioner-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/company-actioner-select/company-actioner-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<CompanyActionerSelectComponent>",
                    "defaultValue": "args => ({\r\n  props: args\r\n})"
                },
                {
                    "name": "userStoreMock",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/company-actioner-select/company-actioner-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<UserStore>",
                    "defaultValue": "{\r\n  companies$: of<Company[]>(Array\r\n    .from({ length: 10 })\r\n    .map((val, idx) => \r\n      ({\r\n        Id: idx,\r\n        Name: faker.company.name()\r\n      })\r\n  ))\r\n}"
                }
            ],
            "src/app/core/pages/document-builder/components/input-types/category-actioner-select/category-actioner-select.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/category-actioner-select/category-actioner-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/category-actioner-select/category-actioner-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<CategoryActionerSelectComponent>",
                    "defaultValue": "args => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/input-types/actioner-select/actioner-select.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/actioner-select/actioner-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "operatives",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/actioner-select/actioner-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Operative[]",
                    "defaultValue": "Array\r\n  .from({ length: 3 })\r\n  .map((val, idx) => \r\n    ({\r\n      ID: idx + 2,\r\n      Name: faker.name.fullName()\r\n    })\r\n  )"
                },
                {
                    "name": "operativesStore",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/actioner-select/actioner-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Pick<OperativesStore, \"operatives$\" | \"searchResults$\" | \"searchResultsIsPending$\" | \"getSearchResults\">",
                    "defaultValue": "{\r\n  operatives$: of(operatives),\r\n  searchResults$: of<OperativeSearchResult[]>(searchResults),\r\n  searchResultsIsPending$: of(false),\r\n  getSearchResults: () => of(searchResults)\r\n}"
                },
                {
                    "name": "searchResults",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/actioner-select/actioner-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OperativeSearchResult[]",
                    "defaultValue": "Array\r\n  .from({ length: 10 })\r\n  .map((val, idx) => \r\n    ({\r\n      ID: idx + 1,\r\n      Name: faker.name.fullName(),\r\n      CompanyName: faker.company.name(),\r\n      HasAppAccess: true,\r\n      HasQRCode: true\r\n    })\r\n  )"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/actioner-select/actioner-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<ActionerSelectComponent>",
                    "defaultValue": "(args: ActionerSelectComponent) => ({\r\n  props: args\r\n})"
                },
                {
                    "name": "userStore",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/actioner-select/actioner-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Pick<UserStore, user$>",
                    "defaultValue": "{\r\n  user$: of(defaultUser)\r\n}"
                }
            ],
            "src/app/core/pages/document-builder/components/input-types/document-image-upload/document-image-upload.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/document-image-upload/document-image-upload.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/document-image-upload/document-image-upload.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<DocumentImageUploadComponent>",
                    "defaultValue": "args => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Prepopulated",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "queues",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Array\r\n  .from({ length: 10 })\r\n  .map((val, idx) => \r\n    ({\r\n      id: idx,\r\n      name: faker.lorem.word()\r\n    })\r\n  )"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<QueueSelectComponent>",
                    "defaultValue": "(args: QueueSelectComponent) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/input-types/remain-anonymous/remain-anonymous.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/remain-anonymous/remain-anonymous.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/remain-anonymous/remain-anonymous.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<RemainAnonymousComponent>",
                    "defaultValue": "(args: RemainAnonymousComponent) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/input-types/queue-duration/queue-duration.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/queue-duration/queue-duration.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/queue-duration/queue-duration.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<QueueDurationComponent>",
                    "defaultValue": "(args: QueueDurationComponent) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/input-types/responsibility-area-select/responsibility-area-select.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/responsibility-area-select/responsibility-area-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "resAreaType",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/responsibility-area-select/responsibility-area-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ResponsibilityAreaType",
                    "defaultValue": "{\r\n  Id: 1,\r\n  AppQuestionText: faker.lorem.words(),\r\n  TypeName: faker.lorem.word(),\r\n  Areas: Array\r\n    .from({ length: 10 })\r\n    .map((val, idx) => \r\n      ({\r\n        Id: idx,\r\n        Name: faker.commerce.department(),\r\n        DocResAreaTypeId: +faker.random.numeric()\r\n      })\r\n    )\r\n}"
                },
                {
                    "name": "responsibilityAreaTypesStore",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/responsibility-area-select/responsibility-area-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<ResponsibilityAreaTypesStore>",
                    "defaultValue": "{\r\n  responsibilityAreaTypeById$: () => of(resAreaType)\r\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/responsibility-area-select/responsibility-area-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<ResponsibilityAreaSelectComponent>",
                    "defaultValue": "args => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/input-types/site-select/site-select.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/site-select/site-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "PrepopulatedSite",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/site-select/site-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/site-select/site-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<SiteSelectComponent>",
                    "defaultValue": "args => ({\r\n  props: args\r\n})"
                },
                {
                    "name": "userStoreMock",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/site-select/site-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<UserStore>",
                    "defaultValue": "{\r\n  sites$: of(Array\r\n    .from({ length: 10 })\r\n    .map((val, idx) => \r\n      ({\r\n        Id: idx,\r\n        Name: faker.company.name()\r\n      })\r\n  ))\r\n}"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/01-checkbox/checkbox.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/01-checkbox/checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/01-checkbox/checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      YesNoNA: args[\"question.YesNoNA\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/document-section/multi-checkbox-section/multi-checkbox-section.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/document-section/multi-checkbox-section/multi-checkbox-section.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/document-section/multi-checkbox-section/multi-checkbox-section.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<MultiCheckboxSectionComponent>",
                    "defaultValue": "args => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/00-label/label.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/00-label/label.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/00-label/label.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/02-radio-group/radio-group.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/02-radio-group/radio-group.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/02-radio-group/radio-group.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      YesNoNA: args[\"question.YesNoNA\"] === \"Yes\" ? true \r\n        : args[\"question.YesNoNA\"] === \"No\" ? false\r\n        : args[\"question.YesNoNA\"] === \"NA\" ? null\r\n        : args[\"question.YesNoNA\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    },\r\n    section: {\r\n      ...defaultSection,\r\n      TableTitles: args[\"section.TableTitles\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/03-textbox/textbox.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/03-textbox/textbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/03-textbox/textbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      AnswerText: args[\"question.AnswerText\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/02-radio-table/radio-table.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/02-radio-table/radio-table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/02-radio-table/radio-table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      YesNoNA: args[\"question.YesNoNA\"] === \"Yes\" ? true \r\n        : args[\"question.YesNoNA\"] === \"No\" ? false\r\n        : args[\"question.YesNoNA\"] === \"NA\" ? null\r\n        : args[\"question.YesNoNA\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/04-textarea/textarea.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/04-textarea/textarea.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/04-textarea/textarea.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      AnswerText: args[\"question.AnswerText\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/05-select/select.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/05-select/select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/05-select/select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      Options: args[\"question.Options\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/07-radio-group-textbox/radio-group-textbox.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/07-radio-group-textbox/radio-group-textbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/07-radio-group-textbox/radio-group-textbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      YesNoNA: args[\"question.YesNoNA\"] === \"Yes\" ? true \r\n        : args[\"question.YesNoNA\"] === \"No\" ? false\r\n        : args[\"question.YesNoNA\"] === \"NA\" ? null\r\n        : args[\"question.YesNoNA\"],\r\n      AnswerText: args[\"question.AnswerText\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    },\r\n    section: {\r\n      ...defaultSection,\r\n      TableTitles: args[\"section.TableTitles\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/06-checkbox-textbox/checkbox-textbox.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/06-checkbox-textbox/checkbox-textbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/06-checkbox-textbox/checkbox-textbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      YesNoNA: args[\"question.YesNoNA\"],\r\n      AnswerText: args[\"question.AnswerText\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/07-radio-table-textbox/radio-table-textbox.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/07-radio-table-textbox/radio-table-textbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/07-radio-table-textbox/radio-table-textbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      YesNoNA: args[\"question.YesNoNA\"] === \"Yes\" ? true \r\n        : args[\"question.YesNoNA\"] === \"No\" ? false\r\n        : args[\"question.YesNoNA\"] === \"NA\" ? null\r\n        : args[\"question.YesNoNA\"],\r\n      AnswerText: args[\"question.AnswerText\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/08-date/date.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/08-date/date.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/08-date/date.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      DateAndTime: args[\"question.DateAndTime\"],\r\n      ValidationData: args[\"question.ValidationData\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/09-datetime/datetime.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/09-datetime/datetime.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/09-datetime/datetime.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      DateAndTime: args[\"question.DateAndTime\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/10-operative-list/operative-list.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/10-operative-list/operative-list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/10-operative-list/operative-list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Operatives: args[\"question.Operatives\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/12-number/number.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/12-number/number.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/12-number/number.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      NumberVal: args[\"question.NumberVal\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/13-cascade-select/cascade-select.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/13-cascade-select/cascade-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/13-cascade-select/cascade-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      Options: args[\"question.Options\"],\r\n      CascadeOptions: args[\"question.CascadeOptions\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/17-asset-list/asset-list.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/17-asset-list/asset-list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/17-asset-list/asset-list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Assets: args[\"question.Assets\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/16-linked-bool/linked-bool.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/16-linked-bool/linked-bool.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/16-linked-bool/linked-bool.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      YesNoNA: args[\"question.YesNoNA\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    },\r\n    section: {\r\n      ...defaultSection,\r\n      TableTitles: args[\"section.TableTitles\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/19-signature/signature.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/19-signature/signature.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/19-signature/signature.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      AnswerText: args[\"question.AnswerText\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/18-linked-dates/linked-dates.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/18-linked-dates/linked-dates.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/18-linked-dates/linked-dates.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      CascadeOptionsText: args[\"question.CascadeOptionsText\"],\r\n      Required: args[\"question.Required\"],\r\n      DateAndTime: args[\"question.DateAndTime\"],\r\n      DateAndTime2: args[\"question.DateAndTime2\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/21-company-select/company-select.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/21-company-select/company-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/21-company-select/company-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: defaultQuestion\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/30-cascade-select-text/cascade-select-text.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/30-cascade-select-text/cascade-select-text.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/30-cascade-select-text/cascade-select-text.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      CommentsText: args[\"question.CommentsText\"],\r\n      Required: args[\"question.Required\"],\r\n      Options: args[\"question.Options\"],\r\n      CascadeOptions: args[\"question.CascadeOptions\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/29-select-text/select-text.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/29-select-text/select-text.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/29-select-text/select-text.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      AnswerText: args[\"question.AnswerText\"],\r\n      Options: args[\"question.Options\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/32-time/time.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/32-time/time.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/32-time/time.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      DateAndTime: args[\"question.DateAndTime\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/33-linked-times/linked-times.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/33-linked-times/linked-times.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/33-linked-times/linked-times.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      CascadeOptionsText: args[\"question.CascadeOptionsText\"],\r\n      Required: args[\"question.Required\"],\r\n      DateAndTime: args[\"question.DateAndTime\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/extras/file-upload/file-upload.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/extras/file-upload/file-upload.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/extras/file-upload/file-upload.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<FileUploadComponent>",
                    "defaultValue": "(args: FileUploadComponent) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/extras/camera-capture/camera-capture.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/extras/camera-capture/camera-capture.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/extras/camera-capture/camera-capture.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<CameraCaptureComponent>",
                    "defaultValue": "(args: CameraCaptureComponent) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true,\n  siteDocsApi: \"http://localhost:3002/api\",\n  apiTimeout: 60000\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n  siteDocsApi: \"http://localhost:3002/api\",\n  apiTimeout: 60000\n}"
                }
            ],
            "src/app/shared/plugins/device.plugin.ts": [
                {
                    "name": "getDeviceString",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/plugins/device.plugin.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize(async () => {\r\n  const info = await Device.getInfo();\r\n  return `${info.model}@${info.platform}@${info.osVersion}`;\r\n})"
                },
                {
                    "name": "getDeviceUuid",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/plugins/device.plugin.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize(async () => {\r\n  const { uuid } = await Device.getId();\r\n  return uuid;\r\n})"
                }
            ],
            "src/app/shared/plugins/platform.plugin.ts": [
                {
                    "name": "isMobileApp",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/plugins/platform.plugin.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize(() => {\r\n  const platform = inject(Platform);\r\n\r\n  return platform.is(\"cordova\");\r\n})"
                }
            ],
            ".storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": ".storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\r\n  globalTypes: {\r\n    iosMode: {\r\n      name: \"IOS Mode\",\r\n      defaultValue: false\r\n    }\r\n  },\r\n  parameters: {\r\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\r\n    controls: {\r\n      matchers: {\r\n        color: /(background|color)$/i,\r\n        date: /Date$/,\r\n      },\r\n    },\r\n  },\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        importProvidersFrom(IonicModule.forRoot({})),\r\n        provideHttpClient(),\r\n        //provideHttpClientTesting()\r\n      ]\r\n    }),\r\n    componentWrapperDecorator(story => `<ion-app>${story}</ion-app>`)\r\n  ]\r\n}"
                }
            ],
            "src/app/core/stores/user/user.store.ts": [
                {
                    "name": "setAppUserUpdate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/user/user.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "pipeTap<User>(user => store.update(setAppUser(user)))"
                },
                {
                    "name": "sites$",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/user/user.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "userSelector(user => user?.UserSites || [])"
                },
                {
                    "name": "store",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/user/user.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createStore(\r\n  { name: \"user\" },\r\n  withAppUser()\r\n)"
                },
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/user/user.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "propsFactory(\"appUser\", { initialValue: null as User | null })"
                },
                {
                    "name": "userSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/user/user.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "selector(store.pipe(selectAppUser()))"
                }
            ],
            "src/app/core/stores/category-actioners/category-actioners.store.ts": [
                {
                    "name": "store",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/category-actioners/category-actioners.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createStore(\r\n  { name: \"site-documents\" },\r\n  withEntities<CategoryActioner, \"Id\">({ idKey: \"Id\" })\r\n)"
                },
                {
                    "name": "useCategoryActioners",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/category-actioners/category-actioners.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize((siteId: number) => {\r\n  const loginApi = useLoginApi();\r\n\r\n  return track(() => loginApi.getCategoryActioners({ siteId }))\r\n})"
                }
            ],
            "src/app/core/stores/operative/operatives.store.ts": [
                {
                    "name": "store",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/operative/operatives.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createStore(\r\n  { name: \"operatives\" },\r\n  withEntities<Operative, \"ID\">({ idKey: \"ID\" }),\r\n  withSearchResultEntities<OperativeSearchResult, \"ID\">({ idKey: \"ID\" }),\r\n  withRequestsStatus<\"operativesSearch\">()\r\n)"
                },
                {
                    "name": "trackRequestStatus",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/operative/operatives.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createRequestsStatusOperator(store)"
                },
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/operative/operatives.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "searchResultsAdapter()"
                },
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/operative/operatives.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  ...operativesAdapter(store),\r\n  ...searchResultsAdapt(store)\r\n}"
                }
            ],
            "src/app/core/stores/site-document/site-document.store.ts": [
                {
                    "name": "store",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/site-document/site-document.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createStore(\r\n  { name: \"site-documents\" },\r\n  withEntities<SiteDocument, \"DocumentID\">({ idKey: \"DocumentID\" })\r\n)"
                }
            ],
            "src/app/core/stores/responsibility-area-types/responsibility-area-types.store.ts": [
                {
                    "name": "store",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/responsibility-area-types/responsibility-area-types.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createStore(\n  { name: \"responsibility-area-types\" },\n  withEntities<ResponsibilityAreaType, \"Id\">({ idKey: \"Id\" })\n)"
                }
            ],
            "src/app/core/stores/site-document-image/site-document-image.store.ts": [
                {
                    "name": "store",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/site-document-image/site-document-image.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createStore(\r\n  { name: \"site-document-image\" }, \r\n  withEntities<SiteDocumentImage, \"DocumentId\">({ idKey: \"DocumentId\" })\r\n)"
                }
            ],
            "src/app/core/stores/site-document/form-filler/form-filler.store.ts": [
                {
                    "name": "store",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/site-document/form-filler/form-filler.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createStore(\r\n  { name: \"form-filler\" },\r\n  withWritingDocument(null as SiteDocument | null),\r\n  withTemplateMenuEntities<TemplateMenuItem, \"Id\">({ idKey: \"Id\", initialValue: [] })\r\n)"
                },
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/site-document/form-filler/form-filler.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "entitiesPropsFactory(\"templateMenu\")"
                },
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/site-document/form-filler/form-filler.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "writingDocumentAdapter(store)"
                }
            ],
            "src/app/core/http/template.api.ts": [
                {
                    "name": "useAllTemplates",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/http/template.api.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize(() => {\r\n  const { getAllTemplates } = useTemplateApi();\r\n\r\n  return track(() => getAllTemplates());\r\n})"
                },
                {
                    "name": "useTemplateApi",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/http/template.api.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createApi({\r\n  baseUrl: `${environment.siteDocsApi}/TemplateApi`,\r\n  endpoints: ({ get }) => ({\r\n    getAllTemplates: get<TemplateItem[]>(\"GetAllTemplates\"),\r\n    getTemplate: get<SiteDocument, { id: number }>(\"GetDocumentTemplate\"),\r\n  })\r\n})"
                }
            ],
            "src/app/core/http/login.api.ts": [
                {
                    "name": "useAreas",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/http/login.api.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize(() => {\r\n  const { getAreas } = useLoginApi();\r\n\r\n  return track(() => getAreas());\r\n})"
                },
                {
                    "name": "useCompanies",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/http/login.api.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize(() => {\r\n  const { getCompanies } = useLoginApi();\r\n\r\n  return track(() => getCompanies());\r\n})"
                },
                {
                    "name": "useLoginApi",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/http/login.api.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createApi({\r\n  baseUrl: `${environment.siteDocsApi}/LoginApi`,\r\n  endpoints: ({ get }) => ({\r\n    getCompanies: get<Company[]>(\"GetCompanies\"),\r\n    getSites: get<Site[]>(\"GetSites\"),\r\n    getAreas: get<Area[]>(\"GetAreas\"),\r\n    getRams: get<RamsItem[]>(\"GetRams\"),\r\n    getCategoryActioners: get<CategoryActioner[], { siteId: number }>(\"GetCategoryActioners\"),\r\n    getResAreaTypes: get<ResponsibilityAreaType[]>(\"GetResAreas\")\r\n  })\r\n})"
                },
                {
                    "name": "useRams",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/http/login.api.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize(() => {\r\n  const { getRams } = useLoginApi();\r\n\r\n  const rams = track(() => getRams());\r\n\r\n  return {\r\n    ...rams,\r\n    thatArentExpiredToday: rams.data(items => items.filter(item => item.ExpiryDate == null || item.ExpiryDate.isEqualOrAfterToday()))\r\n  }\r\n})"
                },
                {
                    "name": "useResAreaTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/http/login.api.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize(() => {\r\n  const { getResAreaTypes } = useLoginApi();\r\n\r\n  const resAreaTypes = track(() => getResAreaTypes());\r\n\r\n  return {\r\n    ...resAreaTypes,\r\n    areas: resAreaTypes.data(types => flatMap(types, t => t.Areas))\r\n  }\r\n})"
                },
                {
                    "name": "useSites",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/http/login.api.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize(() => {\r\n  const { getSites } = useLoginApi();\r\n\r\n  return track(() => getSites());\r\n})"
                }
            ],
            "src/app/core/stores/asset/asset.store.ts": [
                {
                    "name": "useAreas",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/asset/asset.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize(() => {\r\n  const loginApi = useLoginApi();\r\n  return loginApi.getAreas();\r\n})"
                },
                {
                    "name": "useAssetStore",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/asset/asset.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize(() => use<Asset[]>([]))"
                }
            ],
            "src/app/core/http/asset.api.ts": [
                {
                    "name": "useAssetApi",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/http/asset.api.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createApi({\r\n  baseUrl: `${environment.siteDocsApi}/AssetApi`,\r\n  endpoints: ({ get }) => ({\r\n    getAssetsByRegistration: get<Asset[], GetAssetsByRegistrationParams>(\"GetAssetsByReg\"),\r\n    getAssetsByType: get<Asset[], { typeId: number, siteId?: number }>(\"getAssetsByType\"),\r\n    getAssetGroups: get<AssetGroup[]>(\"GetAssetGroups\"),\r\n    getAssetTypes: get<AssetType[]>(\"GetAssetTypes\")\r\n  })\r\n})"
                },
                {
                    "name": "useAssetGroups",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/http/asset.api.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize(() => {\r\n  const { getAssetGroups } = useAssetApi();\r\n\r\n  return track(() => getAssetGroups());\r\n})"
                },
                {
                    "name": "useAssetTypes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/http/asset.api.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize(() => {\r\n  const { getAssetTypes } = useAssetApi();\r\n\r\n  return track(() => getAssetTypes());\r\n})"
                },
                {
                    "name": "useFetchAssetsByRegistration",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/http/asset.api.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize((binding: () => GetAssetsByRegistrationParams) => {\r\n  const { getAssetsByRegistration } = useAssetApi();\r\n  const params$ = new Subject<GetAssetsByRegistrationParams>();\r\n\r\n  const assets = track({\r\n    deps: [params$],\r\n    fn: params => getAssetsByRegistration(params)\r\n  });\r\n\r\n  return {\r\n    ...assets,\r\n    fetch: () => {\r\n      const params = binding();\r\n      params$.next(params);\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/http/operative.api.ts": [
                {
                    "name": "useFetchOperativesByName",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/http/operative.api.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize((binding: () => OperativeSearchParams) => {\r\n  const { getOperativesByName } = useOperativeApi();\r\n  const params$ = new Subject<OperativeSearchParams>();\r\n  \r\n  const searchRes = track({\r\n    deps: [params$],\r\n    fn: params => getOperativesByName(params)\r\n  });\r\n\r\n  return {\r\n    ...searchRes,\r\n    fetch: () => {\r\n      const params = binding();\r\n      params$.next(params);\r\n    }\r\n  }\r\n})"
                },
                {
                    "name": "useOperativeApi",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/http/operative.api.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createApi({\r\n  baseUrl: `${environment.siteDocsApi}/OperativeApi`,\r\n  endpoints: ({ get }) => ({\r\n    getOperativesByName: get<OperativeSearchResult[], OperativeSearchParams>(\"GetOperativesByName\")\r\n  })\r\n})"
                }
            ],
            "src/app/shared/states/search-results.adapter.ts": [
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/states/search-results.adapter.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "entitiesPropsFactory(\"SearchResult\")"
                }
            ],
            "src/app/core/stores/site-document/adapters/writing-document.adapter.ts": [
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/site-document/adapters/writing-document.adapter.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "propsFactory(\"writingDocument\", { initialValue: null as SiteDocument | null })"
                }
            ],
            "src/app/core/stores/site-document/props/writing-document.props.ts": [
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/site-document/props/writing-document.props.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "propsFactory(\"writingDocument\", { initialValue: null as SiteDocument | null })"
                }
            ],
            "src/app/core/stores/site-document/form-filler/adapters/template-menu.adapter.ts": [
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/site-document/form-filler/adapters/template-menu.adapter.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "entitiesPropsFactory(\"templateMenu\")"
                }
            ],
            "src/app/core/pages/document-builder/components/input-types/site-select/site-select.component.ts": [
                {
                    "name": "useSites",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/site-select/site-select.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize(() => {\r\n  const loginApi = useLoginApi();\r\n\r\n  return track(() => loginApi.getSites());\r\n})"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/shared/lifecycles/lifecycle-component.ts": [
                {
                    "name": "AngularComponent",
                    "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "ReturnType<T1>",
                    "jsdoctags": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "AngularComponent",
                    "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "AngularComponent",
                    "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h3",
                            "type": "T3",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h3",
                            "type": "T3",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "AngularComponent",
                    "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h3",
                            "type": "T3",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h4",
                            "type": "T4",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h3",
                            "type": "T3",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h4",
                            "type": "T4",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "AngularComponent",
                    "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h3",
                            "type": "T3",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h4",
                            "type": "T4",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h5",
                            "type": "T5",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h3",
                            "type": "T3",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h4",
                            "type": "T4",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h5",
                            "type": "T5",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "AngularComponent",
                    "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h3",
                            "type": "T3",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h4",
                            "type": "T4",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h5",
                            "type": "T5",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h6",
                            "type": "T6",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h3",
                            "type": "T3",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h4",
                            "type": "T4",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h5",
                            "type": "T5",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h6",
                            "type": "T6",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "AngularComponent",
                    "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                },
                {
                    "name": "AngularComponent",
                    "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "args",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true
                        }
                    ],
                    "returnType": "any",
                    "jsdoctags": [
                        {
                            "name": "args",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/lifecycles/lifecycle-directive.ts": [
                {
                    "name": "AngularDirective",
                    "file": "src/app/shared/lifecycles/lifecycle-directive.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "ReturnType<T1>",
                    "jsdoctags": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "AngularDirective",
                    "file": "src/app/shared/lifecycles/lifecycle-directive.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "AngularDirective",
                    "file": "src/app/shared/lifecycles/lifecycle-directive.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h3",
                            "type": "T3",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h3",
                            "type": "T3",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "AngularDirective",
                    "file": "src/app/shared/lifecycles/lifecycle-directive.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h3",
                            "type": "T3",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h4",
                            "type": "T4",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h3",
                            "type": "T3",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h4",
                            "type": "T4",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "AngularDirective",
                    "file": "src/app/shared/lifecycles/lifecycle-directive.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h3",
                            "type": "T3",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h4",
                            "type": "T4",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h5",
                            "type": "T5",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h3",
                            "type": "T3",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h4",
                            "type": "T4",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h5",
                            "type": "T5",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "AngularDirective",
                    "file": "src/app/shared/lifecycles/lifecycle-directive.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h3",
                            "type": "T3",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h4",
                            "type": "T4",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h5",
                            "type": "T5",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h6",
                            "type": "T6",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h3",
                            "type": "T3",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h4",
                            "type": "T4",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h5",
                            "type": "T5",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h6",
                            "type": "T6",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "AngularDirective",
                    "file": "src/app/shared/lifecycles/lifecycle-directive.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                },
                {
                    "name": "AngularDirective",
                    "file": "src/app/shared/lifecycles/lifecycle-directive.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "args",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true
                        }
                    ],
                    "returnType": "any",
                    "jsdoctags": [
                        {
                            "name": "args",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/states/boolean.state.ts": [
                {
                    "name": "booleanState",
                    "file": "src/app/shared/states/boolean.state.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "name",
                            "type": "AdapterConfig<boolean, BooleanState, TProps>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "db07728e-bc9f-4adc-98cb-3dbb7f773b19",
                            "destructuredParameter": true
                        },
                        {
                            "name": "initialValue",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "db07728e-bc9f-4adc-98cb-3dbb7f773b19",
                            "destructuredParameter": true
                        },
                        {
                            "name": "props",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "db07728e-bc9f-4adc-98cb-3dbb7f773b19",
                            "destructuredParameter": true
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "AdapterConfig<boolean, BooleanState, TProps>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "db07728e-bc9f-4adc-98cb-3dbb7f773b19",
                            "destructuredParameter": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "initialValue",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "db07728e-bc9f-4adc-98cb-3dbb7f773b19",
                            "destructuredParameter": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "props",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "db07728e-bc9f-4adc-98cb-3dbb7f773b19",
                            "destructuredParameter": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/rxjs/using-calculate.ts": [
                {
                    "name": "calculate",
                    "file": "src/app/shared/rxjs/using-calculate.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "deps",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "fn",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "UsePipe<R>",
                    "jsdoctags": [
                        {
                            "name": "deps",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "fn",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "calculate",
                    "file": "src/app/shared/rxjs/using-calculate.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "deps",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "op1",
                            "type": "OperatorFunction",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "UsePipe<A>",
                    "jsdoctags": [
                        {
                            "name": "deps",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "op1",
                            "type": "OperatorFunction",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "calculate",
                    "file": "src/app/shared/rxjs/using-calculate.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "deps",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "op1",
                            "type": "OperatorFunction",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "op2",
                            "type": "OperatorFunction",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "UsePipe<B>",
                    "jsdoctags": [
                        {
                            "name": "deps",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "op1",
                            "type": "OperatorFunction",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "op2",
                            "type": "OperatorFunction",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "calculate",
                    "file": "src/app/shared/rxjs/using-calculate.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "deps",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "op1",
                            "type": "OperatorFunction",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "op2",
                            "type": "OperatorFunction",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "op3",
                            "type": "OperatorFunction",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "UsePipe<C>",
                    "jsdoctags": [
                        {
                            "name": "deps",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "op1",
                            "type": "OperatorFunction",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "op2",
                            "type": "OperatorFunction",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "op3",
                            "type": "OperatorFunction",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "calculate",
                    "file": "src/app/shared/rxjs/using-calculate.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "deps",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "op1",
                            "type": "OperatorFunction",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "op2",
                            "type": "OperatorFunction",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "op3",
                            "type": "OperatorFunction",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "op4",
                            "type": "OperatorFunction",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "UsePipe<D>",
                    "jsdoctags": [
                        {
                            "name": "deps",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "op1",
                            "type": "OperatorFunction",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "op2",
                            "type": "OperatorFunction",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "op3",
                            "type": "OperatorFunction",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "op4",
                            "type": "OperatorFunction",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "calculate",
                    "file": "src/app/shared/rxjs/using-calculate.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "deps",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "args",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true
                        }
                    ],
                    "returnType": "UsePipe<any>",
                    "jsdoctags": [
                        {
                            "name": "deps",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "args",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "using",
                    "file": "src/app/shared/rxjs/using-calculate.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "sources",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "sources",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/reactions/click.reaction.ts": [
                {
                    "name": "clickReaction",
                    "file": "src/app/shared/reactions/click.reaction.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ],
            "src/app/core/http/create-api.ts": [
                {
                    "name": "createApi",
                    "file": "src/app/core/http/create-api.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "options",
                            "type": "CreateApiOptions",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "options",
                            "type": "CreateApiOptions",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "createBuildApi",
                    "file": "src/app/core/http/create-api.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "options",
                            "type": "CreateApiOptions",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "BuildApi",
                    "jsdoctags": [
                        {
                            "name": "options",
                            "type": "CreateApiOptions",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/rxjs/use.ts": [
                {
                    "name": "createPipe",
                    "file": "src/app/shared/rxjs/use.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "s",
                            "type": "Observable",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "s",
                            "type": "Observable",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "use",
                    "file": "src/app/shared/rxjs/use.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "initialState",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "initialState",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/testing/wait-for.ts": [
                {
                    "name": "createWaitForSelector",
                    "file": "src/app/shared/testing/wait-for.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "spectator",
                            "type": "Spectator",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "WaitForSelector",
                    "jsdoctags": [
                        {
                            "name": "spectator",
                            "type": "Spectator",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/components/upload/upload.component.ts": [
                {
                    "name": "fileReader",
                    "file": "src/app/shared/components/upload/upload.component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "FileReader"
                },
                {
                    "name": "fileToDataUrlFile",
                    "file": "src/app/shared/components/upload/upload.component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "file",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Promise<DataUrlFile>",
                    "jsdoctags": [
                        {
                            "name": "file",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/plugins/biometric.plugin.ts": [
                {
                    "name": "ifBiometricsIsAvailable",
                    "file": "src/app/shared/plugins/biometric.plugin.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                },
                {
                    "name": "isBiometricAvailable",
                    "file": "src/app/shared/plugins/biometric.plugin.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                },
                {
                    "name": "verifyIdentity",
                    "file": "src/app/shared/plugins/biometric.plugin.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "options",
                            "type": "BiometricOptions",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "options",
                            "type": "BiometricOptions",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/core/pages/document-builder/modals/document-builder-modals.import.ts": [
                {
                    "name": "importDocumentBuilderModals",
                    "file": "src/app/core/pages/document-builder/modals/document-builder-modals.import.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ],
            "src/app/core/pages/document-builder/components/input-types/input-types.import.ts": [
                {
                    "name": "importInputTypes",
                    "file": "src/app/core/pages/document-builder/components/input-types/input-types.import.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ],
            "src/app/shared/imports/ng-switch.import.ts": [
                {
                    "name": "importNgSwitch",
                    "file": "src/app/shared/imports/ng-switch.import.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/question-types.import.ts": [
                {
                    "name": "importQuestionTypes",
                    "file": "src/app/core/pages/document-builder/components/question-types/question-types.import.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ],
            "src/app/shared/imports/rx-template.import.ts": [
                {
                    "name": "importRxAutoVirtualScroll",
                    "file": "src/app/shared/imports/rx-template.import.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Visit for more information: <a href=\"https://www.rx-angular.io/docs/template/api/virtual-scrolling#autosizevirtualscrollstrategy\">https://www.rx-angular.io/docs/template/api/virtual-scrolling#autosizevirtualscrollstrategy</a></p>\n",
                    "args": []
                },
                {
                    "name": "importRxDynamicVirtualScroll",
                    "file": "src/app/shared/imports/rx-template.import.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Visit for more information: <a href=\"https://www.rx-angular.io/docs/template/api/virtual-scrolling#dynamicsizevirtualscrollstrategy\">https://www.rx-angular.io/docs/template/api/virtual-scrolling#dynamicsizevirtualscrollstrategy</a></p>\n",
                    "args": []
                },
                {
                    "name": "importRxFixedVirtualScroll",
                    "file": "src/app/shared/imports/rx-template.import.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Visit for more information: <a href=\"https://www.rx-angular.io/docs/template/api/virtual-scrolling#fixedsizevirtualscrollstrategy\">https://www.rx-angular.io/docs/template/api/virtual-scrolling#fixedsizevirtualscrollstrategy</a></p>\n",
                    "args": []
                },
                {
                    "name": "importRxTemplate",
                    "file": "src/app/shared/imports/rx-template.import.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Documentation can be found here: <a href=\"https://www.rx-angular.io/docs/template\">https://www.rx-angular.io/docs/template</a></p>\n",
                    "args": []
                },
                {
                    "name": "importRxVirtualScroll",
                    "file": "src/app/shared/imports/rx-template.import.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "providers",
                            "type": "Array",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "providers",
                            "type": "Array",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/operators/rxjs/is-null.ts": [
                {
                    "name": "isNull",
                    "file": "src/app/shared/operators/rxjs/is-null.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ],
            "src/app/shared/states/number.state.ts": [
                {
                    "name": "numberState",
                    "file": "src/app/shared/states/number.state.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "name",
                            "type": "AdapterConfig<number, NumberState, TProps>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "74a5b71c-be24-40a0-9360-c05159e799a0",
                            "destructuredParameter": true
                        },
                        {
                            "name": "initialValue",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "74a5b71c-be24-40a0-9360-c05159e799a0",
                            "destructuredParameter": true
                        },
                        {
                            "name": "props",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "74a5b71c-be24-40a0-9360-c05159e799a0",
                            "destructuredParameter": true
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "AdapterConfig<number, NumberState, TProps>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "74a5b71c-be24-40a0-9360-c05159e799a0",
                            "destructuredParameter": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "initialValue",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "74a5b71c-be24-40a0-9360-c05159e799a0",
                            "destructuredParameter": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "props",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "74a5b71c-be24-40a0-9360-c05159e799a0",
                            "destructuredParameter": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/core/stores/operative/adapters/operatives.adapter.ts": [
                {
                    "name": "operativesAdapter",
                    "file": "src/app/core/stores/operative/adapters/operatives.adapter.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "store",
                            "type": "Store",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "store",
                            "type": "Store",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "operativeSearchAdapter",
                    "file": "src/app/core/stores/operative/adapters/operatives.adapter.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "store",
                            "type": "AdapterTarget<TState>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "1810d1bc-db96-49b5-8d1b-cb82e08fe777",
                            "destructuredParameter": true
                        },
                        {
                            "name": "ref",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "1810d1bc-db96-49b5-8d1b-cb82e08fe777",
                            "destructuredParameter": true
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "store",
                            "type": "AdapterTarget<TState>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "1810d1bc-db96-49b5-8d1b-cb82e08fe777",
                            "destructuredParameter": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "ref",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "1810d1bc-db96-49b5-8d1b-cb82e08fe777",
                            "destructuredParameter": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/route/param.route.ts": [
                {
                    "name": "param",
                    "file": "src/app/shared/route/param.route.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "queryParam",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "queryParam",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/rxjs/pipes/pipe-tap.ts": [
                {
                    "name": "pipeTap",
                    "file": "src/app/shared/rxjs/pipes/pipe-tap.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "action",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "action",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/reactions/reaction.ts": [
                {
                    "name": "reaction",
                    "file": "src/app/shared/reactions/reaction.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "fn",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/states/search-results.adapter.ts": [
                {
                    "name": "searchResultsAdapt",
                    "file": "src/app/shared/states/search-results.adapter.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "store",
                            "type": "Store",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "store",
                            "type": "Store",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "searchResultsAdapter",
                    "file": "src/app/shared/states/search-results.adapter.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ],
            "src/app/shared/rxjs/selector.ts": [
                {
                    "name": "selector",
                    "file": "src/app/shared/rxjs/selector.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "observable",
                            "type": "Observable",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "observable",
                            "type": "Observable",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/core/stores/site-document/form-filler/adapters/template-menu.adapter.ts": [
                {
                    "name": "templateMenuAdapter",
                    "file": "src/app/core/stores/site-document/form-filler/adapters/template-menu.adapter.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "store",
                            "type": "Store",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "store",
                            "type": "Store",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/rxjs/track.ts": [
                {
                    "name": "track",
                    "file": "src/app/shared/rxjs/track.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "fn",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Tracking<TResult>",
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "track",
                    "file": "src/app/shared/rxjs/track.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "options",
                            "type": "TrackingOptions",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Tracking<TResult>",
                    "jsdoctags": [
                        {
                            "name": "options",
                            "type": "TrackingOptions",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "track",
                    "file": "src/app/shared/rxjs/track.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "param",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Tracking<TResult>",
                    "jsdoctags": [
                        {
                            "name": "param",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/angular/element/element.ts": [
                {
                    "name": "useElement",
                    "file": "src/app/shared/angular/element/element.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ],
            "src/app/shared/angular/element/parent-element.ts": [
                {
                    "name": "useParentElement",
                    "file": "src/app/shared/angular/element/parent-element.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ],
            "src/app/core/http/template.api.ts": [
                {
                    "name": "useTemplate",
                    "file": "src/app/core/http/template.api.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ],
            "src/app/shared/lifecycles/angular/with-after-view-init.ts": [
                {
                    "name": "withAfterViewInit",
                    "file": "src/app/shared/lifecycles/angular/with-after-view-init.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/lifecycles/angular/with-template-context-guard.ts": [
                {
                    "name": "withGenericTemplateContextGuard",
                    "file": "src/app/shared/lifecycles/angular/with-template-context-guard.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "withTemplateContextGuard",
                    "file": "src/app/shared/lifecycles/angular/with-template-context-guard.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/lifecycles/ionic/with-ion-view-did-enter.ts": [
                {
                    "name": "withIonViewDidEnter",
                    "file": "src/app/shared/lifecycles/ionic/with-ion-view-did-enter.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/lifecycles/ionic/with-ion-view-did-leave.ts": [
                {
                    "name": "withIonViewDidLeave",
                    "file": "src/app/shared/lifecycles/ionic/with-ion-view-did-leave.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/lifecycles/ionic/with-ion-view-will-enter.ts": [
                {
                    "name": "withIonViewWillEnter",
                    "file": "src/app/shared/lifecycles/ionic/with-ion-view-will-enter.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/lifecycles/ionic/with-ion-view-will-leave.ts": [
                {
                    "name": "withIonViewWillLeave",
                    "file": "src/app/shared/lifecycles/ionic/with-ion-view-will-leave.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/lifecycles/with-noop.ts": [
                {
                    "name": "withNoop",
                    "file": "src/app/shared/lifecycles/with-noop.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/lifecycles/angular/with-on-changes.ts": [
                {
                    "name": "withOnChanges",
                    "file": "src/app/shared/lifecycles/angular/with-on-changes.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/lifecycles/angular/with-on-init.ts": [
                {
                    "name": "withOnInit",
                    "file": "src/app/shared/lifecycles/angular/with-on-init.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/core/stores/site-document/props/writing-document.props.ts": [
                {
                    "name": "writingDocumentActions",
                    "file": "src/app/core/stores/site-document/props/writing-document.props.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "store",
                            "type": "Store",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "store",
                            "type": "Store",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/core/stores/site-document/adapters/writing-document.adapter.ts": [
                {
                    "name": "writingDocumentAdapter",
                    "file": "src/app/core/stores/site-document/adapters/writing-document.adapter.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "store",
                            "type": "Store",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "store",
                            "type": "Store",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {
            "src/app/core/stores/site-document/models/site-document.model.ts": [
                {
                    "name": "QuestionType",
                    "childs": [
                        {
                            "name": "Label",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 0
                        },
                        {
                            "name": "Checkbox",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 1
                        },
                        {
                            "name": "RadioGroup",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 2
                        },
                        {
                            "name": "Textbox",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 3
                        },
                        {
                            "name": "TextArea",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 4
                        },
                        {
                            "name": "Select",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 5
                        },
                        {
                            "name": "CheckboxTextbox",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 6
                        },
                        {
                            "name": "RadioGroupTextbox",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 7
                        },
                        {
                            "name": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 8
                        },
                        {
                            "name": "DateTime",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 9
                        },
                        {
                            "name": "OperativeList",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 10
                        },
                        {
                            "name": "WallOfText",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 11
                        },
                        {
                            "name": "Number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 12
                        },
                        {
                            "name": "CascadeDropdown",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 13
                        },
                        {
                            "name": "LinkedBool",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 16
                        },
                        {
                            "name": "AssetList",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 17
                        },
                        {
                            "name": "LinkedDates",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 18
                        },
                        {
                            "name": "Signature",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 19
                        },
                        {
                            "name": "CompanySelect",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 21
                        },
                        {
                            "name": "AreaSelect",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 22
                        },
                        {
                            "name": "AssetGroupsAndTypes",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 25
                        },
                        {
                            "name": "AssetInspectionSchedule",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 26
                        },
                        {
                            "name": "ProjectSelect",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 27
                        },
                        {
                            "name": "RamsSelect",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 28
                        },
                        {
                            "name": "SelectText",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 29
                        },
                        {
                            "name": "CascadeDropdownText",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 30
                        },
                        {
                            "name": "MultiCascade",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 31
                        },
                        {
                            "name": "Time",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 32
                        },
                        {
                            "name": "LinkedTimes",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 33
                        },
                        {
                            "name": "HraSelect",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 34
                        },
                        {
                            "name": "MultiCheckbox",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 35
                        },
                        {
                            "name": "LinkedDateAndTime",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 36
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/core/stores/site-document/models/site-document.model.ts"
                }
            ]
        },
        "groupedTypeAliases": {
            "src/app/shared/lifecycles/types.ts": [
                {
                    "name": "AnyFunction",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "function",
                    "file": "src/app/shared/lifecycles/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 178
                },
                {
                    "name": "ReactiveConstructor",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/shared/lifecycles/types.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 179
                }
            ],
            "src/app/core/http/create-api.ts": [
                {
                    "name": "AspNetData",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/http/create-api.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 194
                },
                {
                    "name": "Params",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/core/http/create-api.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 181
                }
            ],
            "src/app/shared/types/nullable.type.ts": [
                {
                    "name": "Nullable",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "T | null | undefined",
                    "file": "src/app/shared/types/nullable.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "src/app/shared/rxjs/using-calculate.ts": [
                {
                    "name": "ObservableTuple",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/shared/rxjs/using-calculate.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 194
                }
            ],
            "src/app/shared/types/prefix.type.ts": [
                {
                    "name": "Prefix",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/shared/types/prefix.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 194
                }
            ],
            "src/app/core/stores/operative/adapters/operatives.adapter.ts": [
                {
                    "name": "SearchEntitiesRef",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "EntitiesRef<SearchResultEntities | SearchResultIds | idKeySearchResult>",
                    "file": "src/app/core/stores/operative/adapters/operatives.adapter.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/01-checkbox/checkbox.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/01-checkbox/checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/00-label/label.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/00-label/label.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/02-radio-group/radio-group.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/02-radio-group/radio-group.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/03-textbox/textbox.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/03-textbox/textbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/02-radio-table/radio-table.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/02-radio-table/radio-table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/04-textarea/textarea.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/04-textarea/textarea.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/05-select/select.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/05-select/select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/07-radio-group-textbox/radio-group-textbox.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/07-radio-group-textbox/radio-group-textbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/06-checkbox-textbox/checkbox-textbox.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/06-checkbox-textbox/checkbox-textbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/07-radio-table-textbox/radio-table-textbox.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/07-radio-table-textbox/radio-table-textbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/08-date/date.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/08-date/date.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/09-datetime/datetime.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/09-datetime/datetime.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/10-operative-list/operative-list.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/10-operative-list/operative-list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/12-number/number.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/12-number/number.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/13-cascade-select/cascade-select.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/13-cascade-select/cascade-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/17-asset-list/asset-list.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/17-asset-list/asset-list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/16-linked-bool/linked-bool.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/16-linked-bool/linked-bool.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/19-signature/signature.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/19-signature/signature.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/18-linked-dates/linked-dates.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/18-linked-dates/linked-dates.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/21-company-select/company-select.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/21-company-select/company-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/30-cascade-select-text/cascade-select-text.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/30-cascade-select-text/cascade-select-text.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/29-select-text/select-text.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/29-select-text/select-text.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/32-time/time.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/32-time/time.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/33-linked-times/linked-times.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/33-linked-times/linked-times.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/shared/rxjs/track.ts": [
                {
                    "name": "TrackingStatus",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"Idle\" | \"Success\" | \"Error\" | \"Loading\"",
                    "file": "src/app/shared/rxjs/track.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "src/app/shared/rxjs/use.ts": [
                {
                    "name": "UseOf",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "ReturnType<>",
                    "file": "src/app/shared/rxjs/use.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                },
                {
                    "name": "UsePipe",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "ReturnType<>",
                    "file": "src/app/shared/rxjs/use.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/app/shared/testing/wait-for.ts": [
                {
                    "name": "WaitForSelector",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "function",
                    "file": "src/app/shared/testing/wait-for.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 178
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": ".storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/asset.api.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AssetGroup",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/asset.api.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AssetType",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/asset.api.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "GetAssetsByRegistrationParams",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/asset.api.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useAssetApi",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/asset.api.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useAssetGroups",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/asset.api.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useAssetTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/asset.api.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useFetchAssetsByRegistration",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/create-api.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BuildApi",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/create-api.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CreateApiOptions",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/create-api.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "GetRequestOptions",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/create-api.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PostRequestOptions",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/create-api.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "createApi",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/create-api.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "createBuildApi",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/login.api.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "RamsItem",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/login.api.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ResponsibilityArea",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/login.api.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ResponsibilityAreaType",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/login.api.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useAreas",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/login.api.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useCompanies",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/login.api.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useLoginApi",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/login.api.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useRams",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/login.api.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useResAreaTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/login.api.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useSites",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/operative.api.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "OperativeSearchParams",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/operative.api.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "OperativeSearchResult",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/operative.api.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useFetchOperativesByName",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/operative.api.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useOperativeApi",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/template.api.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TemplateApi",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/template.api.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PaginatedList",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/template.api.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TemplateItem",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/template.api.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "useTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/template.api.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useAllTemplates",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/http/template.api.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useTemplateApi",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/child-document-card/child-document-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChildDocumentCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/document-page/document-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DocumentPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/document-section/document-section.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DocumentSectionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/document-section/document-section.component.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "QuestionsTemplateDirective",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/document-section/multi-checkbox-section/multi-checkbox-section.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/document-section/multi-checkbox-section/multi-checkbox-section.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/document-section/multi-checkbox-section/multi-checkbox-section.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MultiCheckboxSectionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/actioner-select/actioner-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/actioner-select/actioner-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "operatives",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/actioner-select/actioner-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "operativesStore",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/actioner-select/actioner-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "searchResults",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/actioner-select/actioner-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/actioner-select/actioner-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "userStore",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/actioner-select/actioner-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ActionerSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/category-actioner-select/category-actioner-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/category-actioner-select/category-actioner-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/category-actioner-select/category-actioner-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CategoryActionerSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/company-actioner-select/company-actioner-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/company-actioner-select/company-actioner-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PrepopulatedCompany",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/company-actioner-select/company-actioner-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/company-actioner-select/company-actioner-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "userStoreMock",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/company-actioner-select/company-actioner-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CompanyActionerSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/document-image-upload/document-image-upload.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/document-image-upload/document-image-upload.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/document-image-upload/document-image-upload.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DocumentImageUploadComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/input-types.import.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "importInputTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/queue-duration/queue-duration.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/queue-duration/queue-duration.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/queue-duration/queue-duration.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "QueueDurationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Prepopulated",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "queues",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "QueueSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/remain-anonymous/remain-anonymous.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/remain-anonymous/remain-anonymous.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/remain-anonymous/remain-anonymous.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RemainAnonymousComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/responsibility-area-select/responsibility-area-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/responsibility-area-select/responsibility-area-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "resAreaType",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/responsibility-area-select/responsibility-area-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "responsibilityAreaTypesStore",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/responsibility-area-select/responsibility-area-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/responsibility-area-select/responsibility-area-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ResponsibilityAreaSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/site-select/site-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/site-select/site-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PrepopulatedSite",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/site-select/site-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/site-select/site-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "userStoreMock",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/site-select/site-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SiteSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/site-select/site-select.component.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useSites",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/00-label/label.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/00-label/label.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/00-label/label.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LabelComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/01-checkbox/checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/01-checkbox/checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/01-checkbox/checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/02-radio-group/radio-group.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/02-radio-group/radio-group.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/02-radio-group/radio-group.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RadioGroupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/02-radio-table/radio-table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/02-radio-table/radio-table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/02-radio-table/radio-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RadioTableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/03-textbox/textbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/03-textbox/textbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/03-textbox/textbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/04-textarea/textarea.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/04-textarea/textarea.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/04-textarea/textarea.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextareaComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/05-select/select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/05-select/select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/05-select/select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/06-checkbox-textbox/checkbox-textbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/06-checkbox-textbox/checkbox-textbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/06-checkbox-textbox/checkbox-textbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxTextboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/07-radio-group-textbox/radio-group-textbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/07-radio-group-textbox/radio-group-textbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/07-radio-group-textbox/radio-group-textbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RadioGroupTextboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/07-radio-table-textbox/radio-table-textbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/07-radio-table-textbox/radio-table-textbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/07-radio-table-textbox/radio-table-textbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RadioTableTextboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/08-date/date.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/08-date/date.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/08-date/date.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DateComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/09-datetime/datetime.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/09-datetime/datetime.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/09-datetime/datetime.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DatetimeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/10-operative-list/operative-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/10-operative-list/operative-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/10-operative-list/operative-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OperativeListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/12-number/number.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/12-number/number.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/12-number/number.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NumberComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/13-cascade-select/cascade-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/13-cascade-select/cascade-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/13-cascade-select/cascade-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CascadeSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/16-linked-bool/linked-bool.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/16-linked-bool/linked-bool.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/16-linked-bool/linked-bool.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LinkedBoolComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/17-asset-list/asset-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/17-asset-list/asset-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/17-asset-list/asset-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AssetListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/18-linked-dates/linked-dates.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/18-linked-dates/linked-dates.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/18-linked-dates/linked-dates.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LinkedDatesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/19-signature/signature.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/19-signature/signature.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/19-signature/signature.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignatureComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/21-company-select/company-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/21-company-select/company-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/21-company-select/company-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CompanySelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/22-area-select/area-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AreaSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/25-asset-groups-and-types/asset-groups-and-types.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AssetGroupsAndTypesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/26-asset-inspection-schedules/asset-inspection-schedules.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AssetInspectionSchedulesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/27-project-select/project-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ProjectSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/28-rams-select/rams-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RamsSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/29-select-text/select-text.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/29-select-text/select-text.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/29-select-text/select-text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectTextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/30-cascade-select-text/cascade-select-text.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/30-cascade-select-text/cascade-select-text.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/30-cascade-select-text/cascade-select-text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CascadeSelectTextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/32-time/time.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/32-time/time.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/32-time/time.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TimeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/33-linked-times/linked-times.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/33-linked-times/linked-times.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/33-linked-times/linked-times.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LinkedTimesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/34-hra-select/hra-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HraSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/34-hra-select/hra-select.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "HighRiskActivity",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/36-linked-date-time/linked-datetime.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LinkedDatetimeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/extras/camera-capture/camera-capture.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/extras/camera-capture/camera-capture.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/extras/camera-capture/camera-capture.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CameraCaptureComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/extras/file-upload/file-upload.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/extras/file-upload/file-upload.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/extras/file-upload/file-upload.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FileUploadComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/extras/question-text/question-text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "QuestionTextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/question-types.import.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "importQuestionTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultDoc",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DocumentWithAllPermissionsTurnedOn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DocumentWithMultiplePages",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "docWithAllPermissionsOn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "docWithMultiplePages",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "formFillerRouteMock",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "formFillerStoreMock",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/document-builder.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "DocumentBuilderPage",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/document-builder.route.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "DocumentBuilderRoute",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/modals/document-builder-modals.import.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "importDocumentBuilderModals",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/modals/document-summary/document-summary.modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/modals/document-summary/document-summary.modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultDoc",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/modals/document-summary/document-summary.modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/modals/document-summary/document-summary.modal.ts",
                "type": "component",
                "linktype": "component",
                "name": "DocumentSummaryModal",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/modals/template-menu/template-menu.modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/modals/template-menu/template-menu.modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/modals/template-menu/template-menu.modal.ts",
                "type": "component",
                "linktype": "component",
                "name": "TemplateMenuModal",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/modals/template-menu/template-menu.modal.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "PaginatedList",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/registration/registration.page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/registration/registration.page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/registration/registration.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "RegistrationPage",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/asset/asset.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Asset",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/asset/asset.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AssetGroup",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/asset/asset.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AssetInspectionSchedule",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/asset/asset.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AssetType",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/asset/asset.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useAreas",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/asset/asset.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useAssetStore",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/category-actioners/category-actioners.store.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CategoryActionersStore",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/category-actioners/category-actioners.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CategoryActioner",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/category-actioners/category-actioners.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "store",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/category-actioners/category-actioners.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "useCategoryActioners",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/live-queues/live-queues.store.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "LiveQueuesStore",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/operative/adapters/operatives.adapter.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AdapterTarget",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/operative/adapters/operatives.adapter.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "EntitiesType",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/operative/adapters/operatives.adapter.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SearchEntitiesType",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/operative/adapters/operatives.adapter.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "operativesAdapter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/operative/adapters/operatives.adapter.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "operativeSearchAdapter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/operative/operatives.store.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "OperativesStore",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/operative/operatives.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Operative",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/operative/operatives.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "OperativeSearchParams",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/operative/operatives.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "OperativeSearchResult",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/operative/operatives.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "store",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/operative/operatives.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "trackRequestStatus",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/operative/operatives.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/operative/operatives.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/responsibility-area-types/responsibility-area-types.store.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ResponsibilityAreaTypesStore",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/responsibility-area-types/responsibility-area-types.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ResponsibilityArea",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/responsibility-area-types/responsibility-area-types.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ResponsibilityAreaType",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/responsibility-area-types/responsibility-area-types.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "store",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document-image/site-document-image.store.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SiteDocumentImageStore",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document-image/site-document-image.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "store",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/adapters/writing-document.adapter.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "writingDocumentAdapter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/adapters/writing-document.adapter.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/form-filler/adapters/template-menu.adapter.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TemplateMenuItem",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/form-filler/adapters/template-menu.adapter.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "templateMenuAdapter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/form-filler/adapters/template-menu.adapter.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/form-filler/form-filler.store.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FormFillerStore",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/form-filler/form-filler.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TemplateMenuItem",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/form-filler/form-filler.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "store",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/form-filler/form-filler.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/form-filler/form-filler.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/models/site-document.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CascadeOption",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/models/site-document.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Page",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/models/site-document.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Question",
                "coveragePercent": 0,
                "coverageCount": "0/21",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/models/site-document.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Section",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/models/site-document.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SelectOption",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/models/site-document.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SelectOptionMetaData",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/models/site-document.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SiteDocument",
                "coveragePercent": 0,
                "coverageCount": "0/29",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/models/site-document.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SiteDocumentAsset",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/models/site-document.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SiteDocumentImage",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/models/site-document.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SiteDocumentMetaData",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/models/site-document.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SiteDocumentOperative",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/models/site-document.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ValidationData",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/props/writing-document.props.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "writingDocumentActions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/props/writing-document.props.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/site-document.store.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SiteDocumentStore",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/site-document.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "store",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/user/user.store.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UserStore",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/user/user.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Area",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/user/user.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Company",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/user/user.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Site",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/user/user.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/62",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/user/user.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "setAppUserUpdate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/user/user.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sites$",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/user/user.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "store",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/user/user.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/user/user.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "userSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/angular/element/element.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "useElement",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/angular/element/parent-element.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "useParentElement",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/camera/camera.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/camera/camera.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/camera/camera.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CameraComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/datetime-picker/datetime-picker.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DateOnly",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/datetime-picker/datetime-picker.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/datetime-picker/datetime-picker.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/datetime-picker/datetime-picker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DatetimePickerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/if/if.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IfComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/multi-selectable/multi-selectable.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/multi-selectable/multi-selectable.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/multi-selectable/multi-selectable.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MultiSelectableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/selectable/selectable.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/selectable/selectable.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ObjectSelectable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/selectable/selectable.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PrepopulatedSelectable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/selectable/selectable.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/selectable/selectable.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/16",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/selectable/selectable.component.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ItemsTemplateDirective",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/signature-pad/signature-pad.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/signature-pad/signature-pad.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/signature-pad/signature-pad.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignaturePadComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/signature-pad/signature-pad.component.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "SignaturePadDirective",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/time-picker/time-picker.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/time-picker/time-picker.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/time-picker/time-picker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TimePickerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/upload/upload.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UploadComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/upload/upload.component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "fileReader",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/upload/upload.component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "fileToDataUrlFile",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/directives/barcode-scanner/barcode-scanner.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "BarcodeScannerDirective",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/directives/camera/take-photo/take-photo.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "TakePhotoDirective",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/directives/camera/upload-photo/upload-photo.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "UploadPhotoDirective",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/directives/date/date.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "DateDirective",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/directives/photo-viewer/photo-viewer.directive.ts",
                "type": "component",
                "linktype": "component",
                "name": "PhotoViewerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/directives/photo-viewer/photo-viewer.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "PhotoViewerDirective",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/imports/ng-switch.import.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "importNgSwitch",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/imports/rx-template.import.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "importRxAutoVirtualScroll",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/imports/rx-template.import.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "importRxDynamicVirtualScroll",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/imports/rx-template.import.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "importRxFixedVirtualScroll",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/imports/rx-template.import.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "importRxTemplate",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/imports/rx-template.import.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "importRxVirtualScroll",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/angular/with-after-view-init.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "withAfterViewInit",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/angular/with-on-changes.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "withOnChanges",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/angular/with-on-init.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "withOnInit",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/angular/with-template-context-guard.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "withGenericTemplateContextGuard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/angular/with-template-context-guard.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "withTemplateContextGuard",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/ionic/with-ion-view-did-enter.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "withIonViewDidEnter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/ionic/with-ion-view-did-leave.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "withIonViewDidLeave",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/ionic/with-ion-view-will-enter.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "withIonViewWillEnter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/ionic/with-ion-view-will-leave.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "withIonViewWillLeave",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ReactiveComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "AngularComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "AngularComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "AngularComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "AngularComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "AngularComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "AngularComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "AngularComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "AngularComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "ReactiveDirective",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-directive.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "AngularDirective",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-directive.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "AngularDirective",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-directive.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "AngularDirective",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-directive.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "AngularDirective",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-directive.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "AngularDirective",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-directive.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "AngularDirective",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-directive.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "AngularDirective",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-directive.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "AngularDirective",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/with-noop.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "withNoop",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/asset-list/asset-list.modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/asset-list/asset-list.modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/asset-list/asset-list.modal.ts",
                "type": "component",
                "linktype": "component",
                "name": "AssetListModal",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/asset-list/components/local-asset-search/local-asset-search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LocalAssetSearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/asset-list/components/online-asset-search/online-asset-search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OnlineAssetSearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/operative-list/components/local-operative-search/local-operative-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/operative-list/components/local-operative-search/local-operative-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "operatives",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/operative-list/components/local-operative-search/local-operative-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/operative-list/components/local-operative-search/local-operative-search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LocalOperativeSearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/operative-list/components/online-operative-search/online-operative-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/operative-list/components/online-operative-search/online-operative-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/operative-list/components/online-operative-search/online-operative-search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OnlineOperativeSearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/operative-list/operative-list.modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/operative-list/operative-list.modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "operatives",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/operative-list/operative-list.modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "operativesStore",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/operative-list/operative-list.modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "searchResults",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/operative-list/operative-list.modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/operative-list/operative-list.modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "userStore",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/operative-list/operative-list.modal.ts",
                "type": "component",
                "linktype": "component",
                "name": "OperativeListModal",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/events/target-event.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TargetEvent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/files/data-url-file.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DataUrlFile",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/operators/rxjs/is-null.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "isNull",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/pipes/find/find.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "FindPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/pipes/fuse/fuse.pipe.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FuseOptions",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/pipes/fuse/fuse.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "FusePipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/pipes/to-string-values/to-string-values.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "ToStringValuesPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/pipes/utc-date/utc-date.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "UtcDatePipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/pipes/utc-datetime/utc-date-time.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "UtcDateTimePipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/plugins/biometric.plugin.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "ifBiometricsIsAvailable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/plugins/biometric.plugin.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "isBiometricAvailable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/plugins/biometric.plugin.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "verifyIdentity",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/plugins/device.plugin.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getDeviceString",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/plugins/device.plugin.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getDeviceUuid",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/plugins/platform.plugin.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "isMobileApp",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/reactions/click.reaction.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "clickReaction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/reactions/reaction.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "reaction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/route/param.route.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "param",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/rxjs/pipes/pipe-tap.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "pipeTap",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/rxjs/selector.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "selector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/rxjs/track.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Tracking",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/rxjs/track.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TrackingOptions",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/rxjs/track.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "track",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/rxjs/track.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "track",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/rxjs/track.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "track",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/rxjs/use.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "createPipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/rxjs/use.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "use",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/rxjs/using-calculate.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "calculate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/rxjs/using-calculate.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "calculate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/rxjs/using-calculate.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "calculate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/rxjs/using-calculate.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "calculate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/rxjs/using-calculate.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "calculate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/rxjs/using-calculate.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "calculate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/rxjs/using-calculate.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "using",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/onesignal/onesignal.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "OneSignalService",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/states/adapter-config.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AdapterConfig",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/states/boolean.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BooleanState",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/states/boolean.state.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "booleanState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/states/number.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "NumberState",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/states/number.state.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "numberState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/states/search-results.adapter.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SearchEntitiesType",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/states/search-results.adapter.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "searchResultsAdapt",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/states/search-results.adapter.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "searchResultsAdapter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/states/search-results.adapter.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/testing/wait-for.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "createWaitForSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}