{
    "pipes": [
        {
            "name": "FusePipe",
            "id": "pipe-FusePipe-72cd7cdb79b10358cd8faace511648d173e708959dc741bd6569b62c3918319fd99d6fe95cab3ccbad2d0fd642230dc23f903214f3e9f7929a0595e03574920c",
            "file": "src/app/shared/pipes/fuse/fuse.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "values",
                            "type": "T[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "options",
                            "type": "FuseOptions<T>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "values",
                            "type": "T[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "options",
                            "type": "FuseOptions<T>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "fuse",
            "sourceCode": "import { Pipe, PipeTransform } from \"@angular/core\";\r\nimport Fuse from 'fuse.js'\r\n\r\nexport interface FuseOptions<T> extends Omit<Fuse.IFuseOptions<T>, \"keys\"> {\r\n  search: string,\r\n  keys?: keyof T | Array<keyof T>\r\n}\r\n\r\n@Pipe({\r\n  name: \"fuse\",\r\n  standalone: true\r\n})\r\nexport class FusePipe implements PipeTransform {\r\n  transform<T>(values: T[], options: FuseOptions<T>) {\r\n    if (options.search == null || options.search.length === 0)\r\n      return values;\r\n\r\n    return new Fuse(values, { \r\n      threshold: .1,\r\n      ignoreLocation: true,\r\n      ...options as Fuse.IFuseOptions<T>\r\n    })\r\n    .search(options.search)\r\n    .map(val => val.item);\r\n  }\r\n}\r\n"
        },
        {
            "name": "UtcDatePipe",
            "id": "pipe-UtcDatePipe-e643435144cafa36a6ca19fa1657a44984fbc310b60dd5a564d77bc931fc2ffd8e56b2005cce529bc6622007b02e570033ff849e208e1beb0372cb1c260a166a",
            "file": "src/app/shared/pipes/utc-date/utc-date.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "utcDate",
            "sourceCode": "import { Pipe, PipeTransform } from \"@angular/core\";\r\nimport { format } from \"date-fns\";\r\n\r\n@Pipe({\r\n  name: 'utcDate',\r\n  standalone: true\r\n})\r\nexport class UtcDatePipe implements PipeTransform {\r\n  transform(value: Date) {\r\n    return format(value, \"yyyy-MM-dd\");\r\n  }\r\n}"
        },
        {
            "name": "UtcDateTimePipe",
            "id": "pipe-UtcDateTimePipe-2f07b1337163b150e5ff54cafd731868fe89901055cfef58c0cd7939bfe840424032dcda937124cdf07afbe60b2ef41110fe9b85fc2a94386e5ef6a95e4ea0ab",
            "file": "src/app/shared/pipes/utc-datetime/utc-date-time.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "utcDateTime",
            "sourceCode": "import { Pipe, PipeTransform } from \"@angular/core\";\r\nimport { format } from \"date-fns\";\r\n\r\n@Pipe({\r\n  name: 'utcDateTime',\r\n  standalone: true\r\n})\r\nexport class UtcDateTimePipe implements PipeTransform {\r\n  transform(value: Date) {\r\n    return format(value, \"yyyy-MM-dd HH:mm\");\r\n  }\r\n}"
        }
    ],
    "interfaces": [
        {
            "name": "AdapterTarget",
            "id": "interface-AdapterTarget-1bdbb626e75577b3a840a415e32b2694a95e70f778d041334621dea3933ebdc0b36d1794c1f6b3edb5b410d5a41920007f632d0f43d1e860b86f1cd3498e9a3b",
            "file": "src/app/core/stores/operative/adapters/operatives.adapter.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Store, StoreDef } from \"@ngneat/elf\";\r\nimport { addEntities, EntitiesRef, selectAllEntities, setEntities } from \"@ngneat/elf-entities\";\r\nimport { pipeTap } from \"src/app/shared/rxjs\";\r\nimport { Operative, OperativeSearchResult } from \"../operatives.store\";\r\n\r\ninterface EntitiesType {\r\n  entities: Record<number, Operative>,\r\n  ids: number[]\r\n}\r\n\r\nexport function operativesAdapter<TState extends EntitiesType>(store: Store<StoreDef<TState>>) {\r\n  return {\r\n    operatives$: () => store.pipe(selectAllEntities()),\r\n    addOperative: pipeTap<Operative>(operative => store.update(\r\n      addEntities(operative)\r\n    ))\r\n  }\r\n}\r\n\r\ninterface SearchEntitiesType {\r\n  SearchResultEntities: Record<number, OperativeSearchResult>,\r\n  SearchResultIds: number[]\r\n}\r\n\r\ntype SearchEntitiesRef = EntitiesRef<\"SearchResultEntities\", \"SearchResultIds\", \"idKeySearchResult\">;\r\n\r\ninterface AdapterTarget<TState extends SearchEntitiesType> {\r\n  store: Store<StoreDef<TState>>,\r\n  ref: SearchEntitiesRef\r\n}\r\n\r\nexport function operativeSearchAdapter<TState extends SearchEntitiesType>({ store, ref }: AdapterTarget<TState>) {\r\n  return {\r\n    searchResults$: () => store.pipe(selectAllEntities({ ref })),\r\n    setSearchResults: pipeTap<OperativeSearchResult[]>(results => store.update(\r\n      setEntities(results, { ref })\r\n    ))\r\n  }\r\n}",
            "properties": [
                {
                    "name": "ref",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SearchEntitiesRef",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "store",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Store<StoreDef<TState>>",
                    "optional": false,
                    "description": "",
                    "line": 28
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "DataUrlFile",
            "id": "interface-DataUrlFile-5f1e579b1408668df923a34083be2fbc14a6f619a918d2f09c49123fe50048806aac49bd9f6ae57d4aa66d6f4f2479a31c8045bf6bd1be1ae2f33c7862d7b13c",
            "file": "src/app/shared/models/files/data-url-file.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface DataUrlFile extends File {\r\n  dataUrl: string\r\n}",
            "properties": [
                {
                    "name": "dataUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "extends": "File"
        },
        {
            "name": "EntitiesType",
            "id": "interface-EntitiesType-1bdbb626e75577b3a840a415e32b2694a95e70f778d041334621dea3933ebdc0b36d1794c1f6b3edb5b410d5a41920007f632d0f43d1e860b86f1cd3498e9a3b",
            "file": "src/app/core/stores/operative/adapters/operatives.adapter.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Store, StoreDef } from \"@ngneat/elf\";\r\nimport { addEntities, EntitiesRef, selectAllEntities, setEntities } from \"@ngneat/elf-entities\";\r\nimport { pipeTap } from \"src/app/shared/rxjs\";\r\nimport { Operative, OperativeSearchResult } from \"../operatives.store\";\r\n\r\ninterface EntitiesType {\r\n  entities: Record<number, Operative>,\r\n  ids: number[]\r\n}\r\n\r\nexport function operativesAdapter<TState extends EntitiesType>(store: Store<StoreDef<TState>>) {\r\n  return {\r\n    operatives$: () => store.pipe(selectAllEntities()),\r\n    addOperative: pipeTap<Operative>(operative => store.update(\r\n      addEntities(operative)\r\n    ))\r\n  }\r\n}\r\n\r\ninterface SearchEntitiesType {\r\n  SearchResultEntities: Record<number, OperativeSearchResult>,\r\n  SearchResultIds: number[]\r\n}\r\n\r\ntype SearchEntitiesRef = EntitiesRef<\"SearchResultEntities\", \"SearchResultIds\", \"idKeySearchResult\">;\r\n\r\ninterface AdapterTarget<TState extends SearchEntitiesType> {\r\n  store: Store<StoreDef<TState>>,\r\n  ref: SearchEntitiesRef\r\n}\r\n\r\nexport function operativeSearchAdapter<TState extends SearchEntitiesType>({ store, ref }: AdapterTarget<TState>) {\r\n  return {\r\n    searchResults$: () => store.pipe(selectAllEntities({ ref })),\r\n    setSearchResults: pipeTap<OperativeSearchResult[]>(results => store.update(\r\n      setEntities(results, { ref })\r\n    ))\r\n  }\r\n}",
            "properties": [
                {
                    "name": "entities",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<number | Operative>",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "ids",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number[]",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "FuseOptions",
            "id": "interface-FuseOptions-72cd7cdb79b10358cd8faace511648d173e708959dc741bd6569b62c3918319fd99d6fe95cab3ccbad2d0fd642230dc23f903214f3e9f7929a0595e03574920c",
            "file": "src/app/shared/pipes/fuse/fuse.pipe.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Pipe, PipeTransform } from \"@angular/core\";\r\nimport Fuse from 'fuse.js'\r\n\r\nexport interface FuseOptions<T> extends Omit<Fuse.IFuseOptions<T>, \"keys\"> {\r\n  search: string,\r\n  keys?: keyof T | Array<keyof T>\r\n}\r\n\r\n@Pipe({\r\n  name: \"fuse\",\r\n  standalone: true\r\n})\r\nexport class FusePipe implements PipeTransform {\r\n  transform<T>(values: T[], options: FuseOptions<T>) {\r\n    if (options.search == null || options.search.length === 0)\r\n      return values;\r\n\r\n    return new Fuse(values, { \r\n      threshold: .1,\r\n      ignoreLocation: true,\r\n      ...options as Fuse.IFuseOptions<T>\r\n    })\r\n    .search(options.search)\r\n    .map(val => val.item);\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "keys",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | Array<T>",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "search",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "extends": "Omit"
        },
        {
            "name": "Operative",
            "id": "interface-Operative-da4fceccfee7980eb36691e526d77c112617dfbbdd268253f674835959cd36f813342286f451ec8e051b115b051d05badba5be0fd4008a1641af318deebb0382",
            "file": "src/app/core/stores/operative/operatives.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\"\r\nimport { createStore } from \"@ngneat/elf\";\r\nimport { entitiesPropsFactory, withEntities } from \"@ngneat/elf-entities\";\r\nimport { localStorageStrategy, persistState } from \"@ngneat/elf-persist-state\";\r\nimport { searchResultsAdapter } from \"src/app/shared/adapters/search-results.adapter\";\r\nimport { operativesAdapter, operativeSearchAdapter } from \"./adapters/operatives.adapter\";\r\n\r\nexport interface Operative {\r\n  ID: number,\r\n  Name: string\r\n}\r\n\r\nexport interface OperativeSearchResult {\r\n  ID: number,\r\n  Name: string,\r\n  CompanyName: string,\r\n  HasQRCode: boolean,\r\n  HasAppAccess: boolean\r\n}\r\n\r\nconst {\r\n  withSearchResultEntities,\r\n  searchResultsAdapt\r\n} = searchResultsAdapter();\r\n\r\nconst store = createStore(\r\n  { name: \"operatives\" },\r\n  withEntities<Operative, \"ID\">({ idKey: \"ID\" }),\r\n  withSearchResultEntities<OperativeSearchResult, \"ID\">({ idKey: \"ID\" })\r\n);\r\n\r\nconst { \r\n  operatives$, \r\n  addOperative,\r\n  searchResults$,\r\n  setSearchResults\r\n} = {\r\n  ...operativesAdapter(store),\r\n  ...searchResultsAdapt(store)\r\n}\r\n\r\npersistState(store, {\r\n  key: \"operatives\",\r\n  storage: localStorageStrategy\r\n});\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class OperativesStore {\r\n  operatives$ = operatives$();\r\n  searchResults$ = searchResults$();\r\n\r\n  addOperative = addOperative;\r\n  setSearchResults = setSearchResults;\r\n}",
            "properties": [
                {
                    "name": "ID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "Name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "OperativeSearchResult",
            "id": "interface-OperativeSearchResult-da4fceccfee7980eb36691e526d77c112617dfbbdd268253f674835959cd36f813342286f451ec8e051b115b051d05badba5be0fd4008a1641af318deebb0382",
            "file": "src/app/core/stores/operative/operatives.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\"\r\nimport { createStore } from \"@ngneat/elf\";\r\nimport { entitiesPropsFactory, withEntities } from \"@ngneat/elf-entities\";\r\nimport { localStorageStrategy, persistState } from \"@ngneat/elf-persist-state\";\r\nimport { searchResultsAdapter } from \"src/app/shared/adapters/search-results.adapter\";\r\nimport { operativesAdapter, operativeSearchAdapter } from \"./adapters/operatives.adapter\";\r\n\r\nexport interface Operative {\r\n  ID: number,\r\n  Name: string\r\n}\r\n\r\nexport interface OperativeSearchResult {\r\n  ID: number,\r\n  Name: string,\r\n  CompanyName: string,\r\n  HasQRCode: boolean,\r\n  HasAppAccess: boolean\r\n}\r\n\r\nconst {\r\n  withSearchResultEntities,\r\n  searchResultsAdapt\r\n} = searchResultsAdapter();\r\n\r\nconst store = createStore(\r\n  { name: \"operatives\" },\r\n  withEntities<Operative, \"ID\">({ idKey: \"ID\" }),\r\n  withSearchResultEntities<OperativeSearchResult, \"ID\">({ idKey: \"ID\" })\r\n);\r\n\r\nconst { \r\n  operatives$, \r\n  addOperative,\r\n  searchResults$,\r\n  setSearchResults\r\n} = {\r\n  ...operativesAdapter(store),\r\n  ...searchResultsAdapt(store)\r\n}\r\n\r\npersistState(store, {\r\n  key: \"operatives\",\r\n  storage: localStorageStrategy\r\n});\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class OperativesStore {\r\n  operatives$ = operatives$();\r\n  searchResults$ = searchResults$();\r\n\r\n  addOperative = addOperative;\r\n  setSearchResults = setSearchResults;\r\n}",
            "properties": [
                {
                    "name": "CompanyName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "HasAppAccess",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "HasQRCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "ID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "Name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Page",
            "id": "interface-Page-5e983d9f903fd8936b53d457225be33ea528da397258d50470c49d9d13c566aeabe7926fac689cd85bc59e2ab090706562ba55d6b17a0fed0eeb92615db6369d",
            "file": "src/app/core/stores/site-document/site-document.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\";\r\nimport { createStore } from \"@ngneat/elf\";\r\nimport { selectAllEntities, withEntities } from \"@ngneat/elf-entities\";\r\n\r\nexport interface SiteDocument {\r\n  DocumentID: number;\r\n  DocumentTitle: string;\r\n  Pinned: boolean;\r\n  Pages: Page[];\r\n  AllowAnon: boolean;\r\n  RemainAnon: boolean;\r\n  Queues: { Key: string, Value: string }[],\r\n  DocumentGroup: string;\r\n  CanCreateHotspot: boolean;\r\n  CanBeAddedToHotspot?: boolean;\r\n  CanBeSavedAsDraft?: boolean;\r\n  CanAddActionerFromApp: boolean;\r\n  CanAddCategoryActioner: boolean;\r\n  CanCreateAssetsFromDocument: boolean;\r\n  CanHaveQueueDuration: boolean;\r\n  CanHaveDocumentLevelImages: boolean;\r\n  CanHaveDocLevelPhotoRoll: boolean;\r\n  ShowDocLevelPhotoButtonAtStartOfDoc: boolean;\r\n  CanAddAsset?: boolean;\r\n  CanAddOperative?: boolean;\r\n  CanHaveCompanyActioner: boolean;\r\n  MetaData: Partial<SiteDocumentMetaData>;\r\n}\r\n\r\nexport interface SiteDocumentMetaData {\r\n  ActionerText: string;\r\n  CanBeEditableDocument: boolean;\r\n  CannotAddSelfAsActioner: boolean;\r\n  ColourHex: string;\r\n  QueueSelectorTitle: string;\r\n  HasSiteList: boolean;\r\n  UsesRadioGroupTable: boolean;\r\n}\r\n\r\nexport interface SiteDocumentAsset {\r\n  AssetID: number;\r\n  Tag: string;\r\n  Name: string;\r\n  QRCode?: string;\r\n  TemplateID?: number;\r\n}\r\n\r\nexport interface SiteDocumentOperative {\r\n  AttendeeID: number;\r\n  Name: string;\r\n  DateAttended: Date;\r\n}\r\n\r\nexport interface Page {\r\n  PageID: number;\r\n  PageTitle: string;\r\n  Sections: Section[]\r\n}\r\n\r\nexport interface Section {\r\n  SectionID: number;\r\n  SectionNo: number;\r\n  SectionTitle: string;\r\n  Questions: Question[];\r\n  SectionQuestiontype: QuestionType;\r\n  IsRepeatable: boolean;\r\n  TableTitles: string[];\r\n}\r\n\r\nexport enum QuestionType {\r\n  Label = 0,\r\n  Checkbox = 1,\r\n  RadioGroup = 2,\r\n  Textbox = 3,\r\n  TextArea = 4,\r\n  Select = 5,\r\n  CheckboxTextbox = 6,\r\n  RadioGroupTextbox = 7,\r\n  Date = 8,\r\n  DateTime = 9,\r\n  OperativeList = 10,\r\n  WallOfText = 11,\r\n  Number = 12,\r\n  CascadeDropdown = 13,\r\n  LinkedBool = 16,\r\n  AssetList = 17,\r\n  LinkedDates = 18,\r\n  Signature = 19,\r\n  CompanySelect = 21,\r\n  AreaSelect = 22,\r\n  AssetGroupsAndTypes = 25,\r\n  AssetInspectionSchedule = 26,\r\n  ProjectSelect = 27,\r\n  RamsSelect = 28,\r\n  SelectText = 29,\r\n  CascadeDropdownText = 30,\r\n  MultiCascade = 31,\r\n  Time = 32,\r\n  LinkedTimes = 33,\r\n  HRASelect = 34,\r\n  MultiCheckbox = 35,\r\n  LinkedDateAndTime = 36\r\n}\r\n\r\nexport interface Question {\r\n  QuestionID: number;\r\n  QuestionText: string;\r\n  CascadeOptionsText: string;\r\n  Assets: SiteDocumentAsset[];\r\n  Operatives: SiteDocumentOperative[];\r\n  Required: boolean;\r\n  AnswerText: string;\r\n  YesNoNA: boolean | null;\r\n  CanHaveImg: boolean;\r\n  CanHaveFiles: boolean;\r\n}\r\n\r\nconst store = createStore(\r\n  { name: \"site-documents\" },\r\n  withEntities<SiteDocument, \"DocumentID\">({ idKey: \"DocumentID\" })\r\n);\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class SiteDocumentStore {\r\n  templates$ = store.pipe(selectAllEntities());\r\n}",
            "properties": [
                {
                    "name": "PageID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "PageTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "Sections",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Section[]",
                    "optional": false,
                    "description": "",
                    "line": 57
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Question",
            "id": "interface-Question-5e983d9f903fd8936b53d457225be33ea528da397258d50470c49d9d13c566aeabe7926fac689cd85bc59e2ab090706562ba55d6b17a0fed0eeb92615db6369d",
            "file": "src/app/core/stores/site-document/site-document.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\";\r\nimport { createStore } from \"@ngneat/elf\";\r\nimport { selectAllEntities, withEntities } from \"@ngneat/elf-entities\";\r\n\r\nexport interface SiteDocument {\r\n  DocumentID: number;\r\n  DocumentTitle: string;\r\n  Pinned: boolean;\r\n  Pages: Page[];\r\n  AllowAnon: boolean;\r\n  RemainAnon: boolean;\r\n  Queues: { Key: string, Value: string }[],\r\n  DocumentGroup: string;\r\n  CanCreateHotspot: boolean;\r\n  CanBeAddedToHotspot?: boolean;\r\n  CanBeSavedAsDraft?: boolean;\r\n  CanAddActionerFromApp: boolean;\r\n  CanAddCategoryActioner: boolean;\r\n  CanCreateAssetsFromDocument: boolean;\r\n  CanHaveQueueDuration: boolean;\r\n  CanHaveDocumentLevelImages: boolean;\r\n  CanHaveDocLevelPhotoRoll: boolean;\r\n  ShowDocLevelPhotoButtonAtStartOfDoc: boolean;\r\n  CanAddAsset?: boolean;\r\n  CanAddOperative?: boolean;\r\n  CanHaveCompanyActioner: boolean;\r\n  MetaData: Partial<SiteDocumentMetaData>;\r\n}\r\n\r\nexport interface SiteDocumentMetaData {\r\n  ActionerText: string;\r\n  CanBeEditableDocument: boolean;\r\n  CannotAddSelfAsActioner: boolean;\r\n  ColourHex: string;\r\n  QueueSelectorTitle: string;\r\n  HasSiteList: boolean;\r\n  UsesRadioGroupTable: boolean;\r\n}\r\n\r\nexport interface SiteDocumentAsset {\r\n  AssetID: number;\r\n  Tag: string;\r\n  Name: string;\r\n  QRCode?: string;\r\n  TemplateID?: number;\r\n}\r\n\r\nexport interface SiteDocumentOperative {\r\n  AttendeeID: number;\r\n  Name: string;\r\n  DateAttended: Date;\r\n}\r\n\r\nexport interface Page {\r\n  PageID: number;\r\n  PageTitle: string;\r\n  Sections: Section[]\r\n}\r\n\r\nexport interface Section {\r\n  SectionID: number;\r\n  SectionNo: number;\r\n  SectionTitle: string;\r\n  Questions: Question[];\r\n  SectionQuestiontype: QuestionType;\r\n  IsRepeatable: boolean;\r\n  TableTitles: string[];\r\n}\r\n\r\nexport enum QuestionType {\r\n  Label = 0,\r\n  Checkbox = 1,\r\n  RadioGroup = 2,\r\n  Textbox = 3,\r\n  TextArea = 4,\r\n  Select = 5,\r\n  CheckboxTextbox = 6,\r\n  RadioGroupTextbox = 7,\r\n  Date = 8,\r\n  DateTime = 9,\r\n  OperativeList = 10,\r\n  WallOfText = 11,\r\n  Number = 12,\r\n  CascadeDropdown = 13,\r\n  LinkedBool = 16,\r\n  AssetList = 17,\r\n  LinkedDates = 18,\r\n  Signature = 19,\r\n  CompanySelect = 21,\r\n  AreaSelect = 22,\r\n  AssetGroupsAndTypes = 25,\r\n  AssetInspectionSchedule = 26,\r\n  ProjectSelect = 27,\r\n  RamsSelect = 28,\r\n  SelectText = 29,\r\n  CascadeDropdownText = 30,\r\n  MultiCascade = 31,\r\n  Time = 32,\r\n  LinkedTimes = 33,\r\n  HRASelect = 34,\r\n  MultiCheckbox = 35,\r\n  LinkedDateAndTime = 36\r\n}\r\n\r\nexport interface Question {\r\n  QuestionID: number;\r\n  QuestionText: string;\r\n  CascadeOptionsText: string;\r\n  Assets: SiteDocumentAsset[];\r\n  Operatives: SiteDocumentOperative[];\r\n  Required: boolean;\r\n  AnswerText: string;\r\n  YesNoNA: boolean | null;\r\n  CanHaveImg: boolean;\r\n  CanHaveFiles: boolean;\r\n}\r\n\r\nconst store = createStore(\r\n  { name: \"site-documents\" },\r\n  withEntities<SiteDocument, \"DocumentID\">({ idKey: \"DocumentID\" })\r\n);\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class SiteDocumentStore {\r\n  templates$ = store.pipe(selectAllEntities());\r\n}",
            "properties": [
                {
                    "name": "AnswerText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 112
                },
                {
                    "name": "Assets",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SiteDocumentAsset[]",
                    "optional": false,
                    "description": "",
                    "line": 109
                },
                {
                    "name": "CanHaveFiles",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 115
                },
                {
                    "name": "CanHaveImg",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 114
                },
                {
                    "name": "CascadeOptionsText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 108
                },
                {
                    "name": "Operatives",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SiteDocumentOperative[]",
                    "optional": false,
                    "description": "",
                    "line": 110
                },
                {
                    "name": "QuestionID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 106
                },
                {
                    "name": "QuestionText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 107
                },
                {
                    "name": "Required",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 111
                },
                {
                    "name": "YesNoNA",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean | null",
                    "optional": false,
                    "description": "",
                    "line": 113
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "SearchEntitiesType",
            "id": "interface-SearchEntitiesType-a2d13c43d88c2b7d616886573f3db687a233df494395ace315b726e2a325ed9626325aa1b7f70358c6fe90cc067bc06a0a87e9563c6a83f74a85a324737b7d26",
            "file": "src/app/shared/adapters/search-results.adapter.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Store, StoreDef } from \"@ngneat/elf\";\r\nimport { entitiesPropsFactory, selectAllEntities, setEntities } from \"@ngneat/elf-entities\";\r\nimport { pipeTap } from \"../rxjs\";\r\n\r\nconst { SearchResultEntitiesRef, withSearchResultEntities } = entitiesPropsFactory(\"SearchResult\")\r\n\r\nexport interface SearchEntitiesType<TResult> {\r\n  SearchResultEntities: Record<number, TResult>,\r\n  SearchResultIds: number[]\r\n}\r\n\r\nfunction searchResultsAdapt<TResult, TState extends SearchEntitiesType<TResult>>(store: Store<StoreDef<TState>>) {\r\n  return {\r\n    searchResults$: () => store.pipe(selectAllEntities({ ref: SearchResultEntitiesRef })),\r\n    setSearchResults: pipeTap<TResult[]>(results => store.update(\r\n      setEntities(results, { ref: SearchResultEntitiesRef })\r\n    ))\r\n  }\r\n}\r\n\r\nexport function searchResultsAdapter() {\r\n  return {\r\n    withSearchResultEntities,\r\n    searchResultsAdapt\r\n  }\r\n}",
            "properties": [
                {
                    "name": "SearchResultEntities",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<number | TResult>",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "SearchResultIds",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "SearchEntitiesType",
            "id": "interface-SearchEntitiesType-1bdbb626e75577b3a840a415e32b2694a95e70f778d041334621dea3933ebdc0b36d1794c1f6b3edb5b410d5a41920007f632d0f43d1e860b86f1cd3498e9a3b-1",
            "file": "src/app/core/stores/operative/adapters/operatives.adapter.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Store, StoreDef } from \"@ngneat/elf\";\r\nimport { addEntities, EntitiesRef, selectAllEntities, setEntities } from \"@ngneat/elf-entities\";\r\nimport { pipeTap } from \"src/app/shared/rxjs\";\r\nimport { Operative, OperativeSearchResult } from \"../operatives.store\";\r\n\r\ninterface EntitiesType {\r\n  entities: Record<number, Operative>,\r\n  ids: number[]\r\n}\r\n\r\nexport function operativesAdapter<TState extends EntitiesType>(store: Store<StoreDef<TState>>) {\r\n  return {\r\n    operatives$: () => store.pipe(selectAllEntities()),\r\n    addOperative: pipeTap<Operative>(operative => store.update(\r\n      addEntities(operative)\r\n    ))\r\n  }\r\n}\r\n\r\ninterface SearchEntitiesType {\r\n  SearchResultEntities: Record<number, OperativeSearchResult>,\r\n  SearchResultIds: number[]\r\n}\r\n\r\ntype SearchEntitiesRef = EntitiesRef<\"SearchResultEntities\", \"SearchResultIds\", \"idKeySearchResult\">;\r\n\r\ninterface AdapterTarget<TState extends SearchEntitiesType> {\r\n  store: Store<StoreDef<TState>>,\r\n  ref: SearchEntitiesRef\r\n}\r\n\r\nexport function operativeSearchAdapter<TState extends SearchEntitiesType>({ store, ref }: AdapterTarget<TState>) {\r\n  return {\r\n    searchResults$: () => store.pipe(selectAllEntities({ ref })),\r\n    setSearchResults: pipeTap<OperativeSearchResult[]>(results => store.update(\r\n      setEntities(results, { ref })\r\n    ))\r\n  }\r\n}",
            "properties": [
                {
                    "name": "SearchResultEntities",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<number | OperativeSearchResult>",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "SearchResultIds",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number[]",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "SearchEntitiesType-1"
        },
        {
            "name": "Section",
            "id": "interface-Section-5e983d9f903fd8936b53d457225be33ea528da397258d50470c49d9d13c566aeabe7926fac689cd85bc59e2ab090706562ba55d6b17a0fed0eeb92615db6369d",
            "file": "src/app/core/stores/site-document/site-document.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\";\r\nimport { createStore } from \"@ngneat/elf\";\r\nimport { selectAllEntities, withEntities } from \"@ngneat/elf-entities\";\r\n\r\nexport interface SiteDocument {\r\n  DocumentID: number;\r\n  DocumentTitle: string;\r\n  Pinned: boolean;\r\n  Pages: Page[];\r\n  AllowAnon: boolean;\r\n  RemainAnon: boolean;\r\n  Queues: { Key: string, Value: string }[],\r\n  DocumentGroup: string;\r\n  CanCreateHotspot: boolean;\r\n  CanBeAddedToHotspot?: boolean;\r\n  CanBeSavedAsDraft?: boolean;\r\n  CanAddActionerFromApp: boolean;\r\n  CanAddCategoryActioner: boolean;\r\n  CanCreateAssetsFromDocument: boolean;\r\n  CanHaveQueueDuration: boolean;\r\n  CanHaveDocumentLevelImages: boolean;\r\n  CanHaveDocLevelPhotoRoll: boolean;\r\n  ShowDocLevelPhotoButtonAtStartOfDoc: boolean;\r\n  CanAddAsset?: boolean;\r\n  CanAddOperative?: boolean;\r\n  CanHaveCompanyActioner: boolean;\r\n  MetaData: Partial<SiteDocumentMetaData>;\r\n}\r\n\r\nexport interface SiteDocumentMetaData {\r\n  ActionerText: string;\r\n  CanBeEditableDocument: boolean;\r\n  CannotAddSelfAsActioner: boolean;\r\n  ColourHex: string;\r\n  QueueSelectorTitle: string;\r\n  HasSiteList: boolean;\r\n  UsesRadioGroupTable: boolean;\r\n}\r\n\r\nexport interface SiteDocumentAsset {\r\n  AssetID: number;\r\n  Tag: string;\r\n  Name: string;\r\n  QRCode?: string;\r\n  TemplateID?: number;\r\n}\r\n\r\nexport interface SiteDocumentOperative {\r\n  AttendeeID: number;\r\n  Name: string;\r\n  DateAttended: Date;\r\n}\r\n\r\nexport interface Page {\r\n  PageID: number;\r\n  PageTitle: string;\r\n  Sections: Section[]\r\n}\r\n\r\nexport interface Section {\r\n  SectionID: number;\r\n  SectionNo: number;\r\n  SectionTitle: string;\r\n  Questions: Question[];\r\n  SectionQuestiontype: QuestionType;\r\n  IsRepeatable: boolean;\r\n  TableTitles: string[];\r\n}\r\n\r\nexport enum QuestionType {\r\n  Label = 0,\r\n  Checkbox = 1,\r\n  RadioGroup = 2,\r\n  Textbox = 3,\r\n  TextArea = 4,\r\n  Select = 5,\r\n  CheckboxTextbox = 6,\r\n  RadioGroupTextbox = 7,\r\n  Date = 8,\r\n  DateTime = 9,\r\n  OperativeList = 10,\r\n  WallOfText = 11,\r\n  Number = 12,\r\n  CascadeDropdown = 13,\r\n  LinkedBool = 16,\r\n  AssetList = 17,\r\n  LinkedDates = 18,\r\n  Signature = 19,\r\n  CompanySelect = 21,\r\n  AreaSelect = 22,\r\n  AssetGroupsAndTypes = 25,\r\n  AssetInspectionSchedule = 26,\r\n  ProjectSelect = 27,\r\n  RamsSelect = 28,\r\n  SelectText = 29,\r\n  CascadeDropdownText = 30,\r\n  MultiCascade = 31,\r\n  Time = 32,\r\n  LinkedTimes = 33,\r\n  HRASelect = 34,\r\n  MultiCheckbox = 35,\r\n  LinkedDateAndTime = 36\r\n}\r\n\r\nexport interface Question {\r\n  QuestionID: number;\r\n  QuestionText: string;\r\n  CascadeOptionsText: string;\r\n  Assets: SiteDocumentAsset[];\r\n  Operatives: SiteDocumentOperative[];\r\n  Required: boolean;\r\n  AnswerText: string;\r\n  YesNoNA: boolean | null;\r\n  CanHaveImg: boolean;\r\n  CanHaveFiles: boolean;\r\n}\r\n\r\nconst store = createStore(\r\n  { name: \"site-documents\" },\r\n  withEntities<SiteDocument, \"DocumentID\">({ idKey: \"DocumentID\" })\r\n);\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class SiteDocumentStore {\r\n  templates$ = store.pipe(selectAllEntities());\r\n}",
            "properties": [
                {
                    "name": "IsRepeatable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 66
                },
                {
                    "name": "Questions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Question[]",
                    "optional": false,
                    "description": "",
                    "line": 64
                },
                {
                    "name": "SectionID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "SectionNo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "SectionQuestiontype",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QuestionType",
                    "optional": false,
                    "description": "",
                    "line": 65
                },
                {
                    "name": "SectionTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 63
                },
                {
                    "name": "TableTitles",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 67
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Site",
            "id": "interface-Site-edc8f5205acb5e3ca74b2f3605d779ad0973ddb759afc8600f3defe8a24779e34bf395359f373b794165b252c9660eb4c94a5d95d82b319e12a5587d6b89099f",
            "file": "src/app/core/stores/user/user.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\r\nimport { inject, Injectable } from \"@angular/core\";\r\nimport { createStore, propsFactory } from \"@ngneat/elf\";\r\nimport { localStorageStrategy, persistState } from \"@ngneat/elf-persist-state\";\r\nimport { combineLatest, Observable, switchMap } from \"rxjs\";\r\nimport { getDeviceString, getDeviceUuid } from \"src/app/shared/plugins/device.plugin\";\r\nimport { pipeTap, selector } from \"src/app/shared/rxjs\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\nexport interface User {\r\n  Id: number,\r\n  LastName: string,\r\n  FirstName: string,\r\n  CompanyId: number,\r\n  CompanyName: string,\r\n  Colour: string,\r\n  FontColour: string,\r\n  Token: string,\r\n  Pin: string,\r\n  Site: Site,\r\n  DocumentListingTab: \"Recent\" | \"Pinned\" | \"Issued\",\r\n  IsInSupervisorRole: boolean,\r\n  HasRegisteredPlayerId: number,\r\n  HasAssets: boolean,\r\n  HasAssetCreation: boolean,\r\n  HasDocQrCodes: boolean,\r\n  HasHadWifiPreferenceChecked: boolean,\r\n  HasUpdateableDocs: boolean,\r\n  HasDocQueues: boolean,\r\n  HasCompanies: boolean,\r\n  HasDataTouchAreas: boolean,\r\n  HasQueueSupervisors: boolean,\r\n  HasCategoryActioners: boolean,\r\n  UserSites: Site[],\r\n  //UserCompanies: Company[],\r\n  HasDocQRCodes: boolean,\r\n  HasPlanningMeeting: boolean,\r\n  HasReviewMeeting: boolean,\r\n  HasCollabPlanning: boolean,\r\n  HasRandomOperativebarcodes: boolean,\r\n  HasDataWall: boolean,\r\n  HasLiveQueues: boolean,\r\n  HasResAreas:boolean,\r\n  HasHideOperativeScan: boolean,\r\n  HasSites: boolean,\r\n  HasDocDrop: boolean,\r\n  HasBasicOpInfo: boolean,\r\n  HasSimpleSwipes: boolean,\r\n  HasProjectsOnDocDrop: boolean,\r\n  HasCustomLookups: boolean,\r\n  HasTemplateSender: boolean,\r\n  HasMyOpInfo: boolean,\r\n  HasViewDocumentAsSinglePage: boolean,\r\n  HasShowParentAnswersOnChildDoc: boolean,\r\n  HasCompanySelectWithOtherOption:boolean,\r\n  HideSearchOnOperativeInfo: boolean,\r\n  HideSearchOnOperativeAccess: boolean,\r\n  CanAddOperativesToDocsByName: boolean,\r\n  HasRamsList: boolean,\r\n  CanAddAsssetsToDocsByName: boolean,\r\n  ShowWeightingsOnApp: boolean,\r\n  TemplatesLastUpdate: Date,\r\n  Url: string,\r\n  UseFingerReader: boolean,\r\n  SelectedSite: Site,\r\n  NavTab: \"Modules\" | \"Documents\",\r\n  NumberOfTemplates: number,\r\n  DownloadedTemplates: number,\r\n  //PermittedCategories: DocCategory[],\r\n  HasOperativeInfo: boolean,\r\n  CanOffHireAssets: boolean,\r\n  CanViewOtherOperativeInfo: boolean,\r\n  CanModifyOperativeQRs: boolean,\r\n  CanAddQRsToAssets: boolean\r\n}\r\n\r\nexport interface Site {\r\n  Id: number,\r\n  Name: string\r\n}\r\n\r\nconst {\r\n  withAppUser, \r\n  selectAppUser, \r\n  setAppUser\r\n} = propsFactory(\"appUser\", { initialValue: null as User | null });\r\n\r\nconst store = createStore(\r\n  { name: \"user\" },\r\n  withAppUser()\r\n);\r\n\r\nconst userSelector = selector(store.pipe(selectAppUser()));\r\nconst sites$ = userSelector(user => user?.UserSites || []);\r\n\r\nconst setAppUserUpdate = pipeTap<User>(user => store.update(setAppUser(user)));\r\n\r\npersistState(store, {\r\n  key: \"user\",\r\n  storage: localStorageStrategy\r\n});\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class UserStore {\r\n  httpClient = inject(HttpClient);\r\n\r\n  user$ = store.pipe(selectAppUser());\r\n  sites$ = sites$;\r\n\r\n  getUserRequest$ = (action$: Observable<{ token: string, pin: string }>) => combineLatest({\r\n    login: action$,\r\n    deviceId: getDeviceUuid(),\r\n    deviceString: getDeviceString() \r\n  }).pipe(\r\n    switchMap(({ login, deviceId, deviceString }) => this.httpClient.post<User>(`${environment.siteDocsApi}/LoginApi/LoginSiteDocumentsApp`, {\r\n      deviceId,\r\n      deviceString\r\n    }, {\r\n      headers: {\r\n        appToken: login.token,\r\n        appPin: login.pin\r\n      }\r\n    })),\r\n    setAppUserUpdate()\r\n  );\r\n}",
            "properties": [
                {
                    "name": "Id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 78
                },
                {
                    "name": "Name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 79
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "SiteDocument",
            "id": "interface-SiteDocument-5e983d9f903fd8936b53d457225be33ea528da397258d50470c49d9d13c566aeabe7926fac689cd85bc59e2ab090706562ba55d6b17a0fed0eeb92615db6369d",
            "file": "src/app/core/stores/site-document/site-document.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\";\r\nimport { createStore } from \"@ngneat/elf\";\r\nimport { selectAllEntities, withEntities } from \"@ngneat/elf-entities\";\r\n\r\nexport interface SiteDocument {\r\n  DocumentID: number;\r\n  DocumentTitle: string;\r\n  Pinned: boolean;\r\n  Pages: Page[];\r\n  AllowAnon: boolean;\r\n  RemainAnon: boolean;\r\n  Queues: { Key: string, Value: string }[],\r\n  DocumentGroup: string;\r\n  CanCreateHotspot: boolean;\r\n  CanBeAddedToHotspot?: boolean;\r\n  CanBeSavedAsDraft?: boolean;\r\n  CanAddActionerFromApp: boolean;\r\n  CanAddCategoryActioner: boolean;\r\n  CanCreateAssetsFromDocument: boolean;\r\n  CanHaveQueueDuration: boolean;\r\n  CanHaveDocumentLevelImages: boolean;\r\n  CanHaveDocLevelPhotoRoll: boolean;\r\n  ShowDocLevelPhotoButtonAtStartOfDoc: boolean;\r\n  CanAddAsset?: boolean;\r\n  CanAddOperative?: boolean;\r\n  CanHaveCompanyActioner: boolean;\r\n  MetaData: Partial<SiteDocumentMetaData>;\r\n}\r\n\r\nexport interface SiteDocumentMetaData {\r\n  ActionerText: string;\r\n  CanBeEditableDocument: boolean;\r\n  CannotAddSelfAsActioner: boolean;\r\n  ColourHex: string;\r\n  QueueSelectorTitle: string;\r\n  HasSiteList: boolean;\r\n  UsesRadioGroupTable: boolean;\r\n}\r\n\r\nexport interface SiteDocumentAsset {\r\n  AssetID: number;\r\n  Tag: string;\r\n  Name: string;\r\n  QRCode?: string;\r\n  TemplateID?: number;\r\n}\r\n\r\nexport interface SiteDocumentOperative {\r\n  AttendeeID: number;\r\n  Name: string;\r\n  DateAttended: Date;\r\n}\r\n\r\nexport interface Page {\r\n  PageID: number;\r\n  PageTitle: string;\r\n  Sections: Section[]\r\n}\r\n\r\nexport interface Section {\r\n  SectionID: number;\r\n  SectionNo: number;\r\n  SectionTitle: string;\r\n  Questions: Question[];\r\n  SectionQuestiontype: QuestionType;\r\n  IsRepeatable: boolean;\r\n  TableTitles: string[];\r\n}\r\n\r\nexport enum QuestionType {\r\n  Label = 0,\r\n  Checkbox = 1,\r\n  RadioGroup = 2,\r\n  Textbox = 3,\r\n  TextArea = 4,\r\n  Select = 5,\r\n  CheckboxTextbox = 6,\r\n  RadioGroupTextbox = 7,\r\n  Date = 8,\r\n  DateTime = 9,\r\n  OperativeList = 10,\r\n  WallOfText = 11,\r\n  Number = 12,\r\n  CascadeDropdown = 13,\r\n  LinkedBool = 16,\r\n  AssetList = 17,\r\n  LinkedDates = 18,\r\n  Signature = 19,\r\n  CompanySelect = 21,\r\n  AreaSelect = 22,\r\n  AssetGroupsAndTypes = 25,\r\n  AssetInspectionSchedule = 26,\r\n  ProjectSelect = 27,\r\n  RamsSelect = 28,\r\n  SelectText = 29,\r\n  CascadeDropdownText = 30,\r\n  MultiCascade = 31,\r\n  Time = 32,\r\n  LinkedTimes = 33,\r\n  HRASelect = 34,\r\n  MultiCheckbox = 35,\r\n  LinkedDateAndTime = 36\r\n}\r\n\r\nexport interface Question {\r\n  QuestionID: number;\r\n  QuestionText: string;\r\n  CascadeOptionsText: string;\r\n  Assets: SiteDocumentAsset[];\r\n  Operatives: SiteDocumentOperative[];\r\n  Required: boolean;\r\n  AnswerText: string;\r\n  YesNoNA: boolean | null;\r\n  CanHaveImg: boolean;\r\n  CanHaveFiles: boolean;\r\n}\r\n\r\nconst store = createStore(\r\n  { name: \"site-documents\" },\r\n  withEntities<SiteDocument, \"DocumentID\">({ idKey: \"DocumentID\" })\r\n);\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class SiteDocumentStore {\r\n  templates$ = store.pipe(selectAllEntities());\r\n}",
            "properties": [
                {
                    "name": "AllowAnon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "CanAddActionerFromApp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "CanAddAsset",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "CanAddCategoryActioner",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "CanAddOperative",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "CanBeAddedToHotspot",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "CanBeSavedAsDraft",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "CanCreateAssetsFromDocument",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "CanCreateHotspot",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "CanHaveCompanyActioner",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "CanHaveDocLevelPhotoRoll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "CanHaveDocumentLevelImages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "CanHaveQueueDuration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "DocumentGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "DocumentID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "DocumentTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "MetaData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<SiteDocumentMetaData>",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "Pages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Page[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "Pinned",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "Queues",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "RemainAnon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "ShowDocLevelPhotoButtonAtStartOfDoc",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 23
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "SiteDocumentAsset",
            "id": "interface-SiteDocumentAsset-5e983d9f903fd8936b53d457225be33ea528da397258d50470c49d9d13c566aeabe7926fac689cd85bc59e2ab090706562ba55d6b17a0fed0eeb92615db6369d",
            "file": "src/app/core/stores/site-document/site-document.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\";\r\nimport { createStore } from \"@ngneat/elf\";\r\nimport { selectAllEntities, withEntities } from \"@ngneat/elf-entities\";\r\n\r\nexport interface SiteDocument {\r\n  DocumentID: number;\r\n  DocumentTitle: string;\r\n  Pinned: boolean;\r\n  Pages: Page[];\r\n  AllowAnon: boolean;\r\n  RemainAnon: boolean;\r\n  Queues: { Key: string, Value: string }[],\r\n  DocumentGroup: string;\r\n  CanCreateHotspot: boolean;\r\n  CanBeAddedToHotspot?: boolean;\r\n  CanBeSavedAsDraft?: boolean;\r\n  CanAddActionerFromApp: boolean;\r\n  CanAddCategoryActioner: boolean;\r\n  CanCreateAssetsFromDocument: boolean;\r\n  CanHaveQueueDuration: boolean;\r\n  CanHaveDocumentLevelImages: boolean;\r\n  CanHaveDocLevelPhotoRoll: boolean;\r\n  ShowDocLevelPhotoButtonAtStartOfDoc: boolean;\r\n  CanAddAsset?: boolean;\r\n  CanAddOperative?: boolean;\r\n  CanHaveCompanyActioner: boolean;\r\n  MetaData: Partial<SiteDocumentMetaData>;\r\n}\r\n\r\nexport interface SiteDocumentMetaData {\r\n  ActionerText: string;\r\n  CanBeEditableDocument: boolean;\r\n  CannotAddSelfAsActioner: boolean;\r\n  ColourHex: string;\r\n  QueueSelectorTitle: string;\r\n  HasSiteList: boolean;\r\n  UsesRadioGroupTable: boolean;\r\n}\r\n\r\nexport interface SiteDocumentAsset {\r\n  AssetID: number;\r\n  Tag: string;\r\n  Name: string;\r\n  QRCode?: string;\r\n  TemplateID?: number;\r\n}\r\n\r\nexport interface SiteDocumentOperative {\r\n  AttendeeID: number;\r\n  Name: string;\r\n  DateAttended: Date;\r\n}\r\n\r\nexport interface Page {\r\n  PageID: number;\r\n  PageTitle: string;\r\n  Sections: Section[]\r\n}\r\n\r\nexport interface Section {\r\n  SectionID: number;\r\n  SectionNo: number;\r\n  SectionTitle: string;\r\n  Questions: Question[];\r\n  SectionQuestiontype: QuestionType;\r\n  IsRepeatable: boolean;\r\n  TableTitles: string[];\r\n}\r\n\r\nexport enum QuestionType {\r\n  Label = 0,\r\n  Checkbox = 1,\r\n  RadioGroup = 2,\r\n  Textbox = 3,\r\n  TextArea = 4,\r\n  Select = 5,\r\n  CheckboxTextbox = 6,\r\n  RadioGroupTextbox = 7,\r\n  Date = 8,\r\n  DateTime = 9,\r\n  OperativeList = 10,\r\n  WallOfText = 11,\r\n  Number = 12,\r\n  CascadeDropdown = 13,\r\n  LinkedBool = 16,\r\n  AssetList = 17,\r\n  LinkedDates = 18,\r\n  Signature = 19,\r\n  CompanySelect = 21,\r\n  AreaSelect = 22,\r\n  AssetGroupsAndTypes = 25,\r\n  AssetInspectionSchedule = 26,\r\n  ProjectSelect = 27,\r\n  RamsSelect = 28,\r\n  SelectText = 29,\r\n  CascadeDropdownText = 30,\r\n  MultiCascade = 31,\r\n  Time = 32,\r\n  LinkedTimes = 33,\r\n  HRASelect = 34,\r\n  MultiCheckbox = 35,\r\n  LinkedDateAndTime = 36\r\n}\r\n\r\nexport interface Question {\r\n  QuestionID: number;\r\n  QuestionText: string;\r\n  CascadeOptionsText: string;\r\n  Assets: SiteDocumentAsset[];\r\n  Operatives: SiteDocumentOperative[];\r\n  Required: boolean;\r\n  AnswerText: string;\r\n  YesNoNA: boolean | null;\r\n  CanHaveImg: boolean;\r\n  CanHaveFiles: boolean;\r\n}\r\n\r\nconst store = createStore(\r\n  { name: \"site-documents\" },\r\n  withEntities<SiteDocument, \"DocumentID\">({ idKey: \"DocumentID\" })\r\n);\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class SiteDocumentStore {\r\n  templates$ = store.pipe(selectAllEntities());\r\n}",
            "properties": [
                {
                    "name": "AssetID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "Name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "QRCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "Tag",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "TemplateID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 45
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "SiteDocumentMetaData",
            "id": "interface-SiteDocumentMetaData-5e983d9f903fd8936b53d457225be33ea528da397258d50470c49d9d13c566aeabe7926fac689cd85bc59e2ab090706562ba55d6b17a0fed0eeb92615db6369d",
            "file": "src/app/core/stores/site-document/site-document.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\";\r\nimport { createStore } from \"@ngneat/elf\";\r\nimport { selectAllEntities, withEntities } from \"@ngneat/elf-entities\";\r\n\r\nexport interface SiteDocument {\r\n  DocumentID: number;\r\n  DocumentTitle: string;\r\n  Pinned: boolean;\r\n  Pages: Page[];\r\n  AllowAnon: boolean;\r\n  RemainAnon: boolean;\r\n  Queues: { Key: string, Value: string }[],\r\n  DocumentGroup: string;\r\n  CanCreateHotspot: boolean;\r\n  CanBeAddedToHotspot?: boolean;\r\n  CanBeSavedAsDraft?: boolean;\r\n  CanAddActionerFromApp: boolean;\r\n  CanAddCategoryActioner: boolean;\r\n  CanCreateAssetsFromDocument: boolean;\r\n  CanHaveQueueDuration: boolean;\r\n  CanHaveDocumentLevelImages: boolean;\r\n  CanHaveDocLevelPhotoRoll: boolean;\r\n  ShowDocLevelPhotoButtonAtStartOfDoc: boolean;\r\n  CanAddAsset?: boolean;\r\n  CanAddOperative?: boolean;\r\n  CanHaveCompanyActioner: boolean;\r\n  MetaData: Partial<SiteDocumentMetaData>;\r\n}\r\n\r\nexport interface SiteDocumentMetaData {\r\n  ActionerText: string;\r\n  CanBeEditableDocument: boolean;\r\n  CannotAddSelfAsActioner: boolean;\r\n  ColourHex: string;\r\n  QueueSelectorTitle: string;\r\n  HasSiteList: boolean;\r\n  UsesRadioGroupTable: boolean;\r\n}\r\n\r\nexport interface SiteDocumentAsset {\r\n  AssetID: number;\r\n  Tag: string;\r\n  Name: string;\r\n  QRCode?: string;\r\n  TemplateID?: number;\r\n}\r\n\r\nexport interface SiteDocumentOperative {\r\n  AttendeeID: number;\r\n  Name: string;\r\n  DateAttended: Date;\r\n}\r\n\r\nexport interface Page {\r\n  PageID: number;\r\n  PageTitle: string;\r\n  Sections: Section[]\r\n}\r\n\r\nexport interface Section {\r\n  SectionID: number;\r\n  SectionNo: number;\r\n  SectionTitle: string;\r\n  Questions: Question[];\r\n  SectionQuestiontype: QuestionType;\r\n  IsRepeatable: boolean;\r\n  TableTitles: string[];\r\n}\r\n\r\nexport enum QuestionType {\r\n  Label = 0,\r\n  Checkbox = 1,\r\n  RadioGroup = 2,\r\n  Textbox = 3,\r\n  TextArea = 4,\r\n  Select = 5,\r\n  CheckboxTextbox = 6,\r\n  RadioGroupTextbox = 7,\r\n  Date = 8,\r\n  DateTime = 9,\r\n  OperativeList = 10,\r\n  WallOfText = 11,\r\n  Number = 12,\r\n  CascadeDropdown = 13,\r\n  LinkedBool = 16,\r\n  AssetList = 17,\r\n  LinkedDates = 18,\r\n  Signature = 19,\r\n  CompanySelect = 21,\r\n  AreaSelect = 22,\r\n  AssetGroupsAndTypes = 25,\r\n  AssetInspectionSchedule = 26,\r\n  ProjectSelect = 27,\r\n  RamsSelect = 28,\r\n  SelectText = 29,\r\n  CascadeDropdownText = 30,\r\n  MultiCascade = 31,\r\n  Time = 32,\r\n  LinkedTimes = 33,\r\n  HRASelect = 34,\r\n  MultiCheckbox = 35,\r\n  LinkedDateAndTime = 36\r\n}\r\n\r\nexport interface Question {\r\n  QuestionID: number;\r\n  QuestionText: string;\r\n  CascadeOptionsText: string;\r\n  Assets: SiteDocumentAsset[];\r\n  Operatives: SiteDocumentOperative[];\r\n  Required: boolean;\r\n  AnswerText: string;\r\n  YesNoNA: boolean | null;\r\n  CanHaveImg: boolean;\r\n  CanHaveFiles: boolean;\r\n}\r\n\r\nconst store = createStore(\r\n  { name: \"site-documents\" },\r\n  withEntities<SiteDocument, \"DocumentID\">({ idKey: \"DocumentID\" })\r\n);\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class SiteDocumentStore {\r\n  templates$ = store.pipe(selectAllEntities());\r\n}",
            "properties": [
                {
                    "name": "ActionerText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "CanBeEditableDocument",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "CannotAddSelfAsActioner",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "ColourHex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "HasSiteList",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "QueueSelectorTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "UsesRadioGroupTable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 37
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "SiteDocumentOperative",
            "id": "interface-SiteDocumentOperative-5e983d9f903fd8936b53d457225be33ea528da397258d50470c49d9d13c566aeabe7926fac689cd85bc59e2ab090706562ba55d6b17a0fed0eeb92615db6369d",
            "file": "src/app/core/stores/site-document/site-document.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\";\r\nimport { createStore } from \"@ngneat/elf\";\r\nimport { selectAllEntities, withEntities } from \"@ngneat/elf-entities\";\r\n\r\nexport interface SiteDocument {\r\n  DocumentID: number;\r\n  DocumentTitle: string;\r\n  Pinned: boolean;\r\n  Pages: Page[];\r\n  AllowAnon: boolean;\r\n  RemainAnon: boolean;\r\n  Queues: { Key: string, Value: string }[],\r\n  DocumentGroup: string;\r\n  CanCreateHotspot: boolean;\r\n  CanBeAddedToHotspot?: boolean;\r\n  CanBeSavedAsDraft?: boolean;\r\n  CanAddActionerFromApp: boolean;\r\n  CanAddCategoryActioner: boolean;\r\n  CanCreateAssetsFromDocument: boolean;\r\n  CanHaveQueueDuration: boolean;\r\n  CanHaveDocumentLevelImages: boolean;\r\n  CanHaveDocLevelPhotoRoll: boolean;\r\n  ShowDocLevelPhotoButtonAtStartOfDoc: boolean;\r\n  CanAddAsset?: boolean;\r\n  CanAddOperative?: boolean;\r\n  CanHaveCompanyActioner: boolean;\r\n  MetaData: Partial<SiteDocumentMetaData>;\r\n}\r\n\r\nexport interface SiteDocumentMetaData {\r\n  ActionerText: string;\r\n  CanBeEditableDocument: boolean;\r\n  CannotAddSelfAsActioner: boolean;\r\n  ColourHex: string;\r\n  QueueSelectorTitle: string;\r\n  HasSiteList: boolean;\r\n  UsesRadioGroupTable: boolean;\r\n}\r\n\r\nexport interface SiteDocumentAsset {\r\n  AssetID: number;\r\n  Tag: string;\r\n  Name: string;\r\n  QRCode?: string;\r\n  TemplateID?: number;\r\n}\r\n\r\nexport interface SiteDocumentOperative {\r\n  AttendeeID: number;\r\n  Name: string;\r\n  DateAttended: Date;\r\n}\r\n\r\nexport interface Page {\r\n  PageID: number;\r\n  PageTitle: string;\r\n  Sections: Section[]\r\n}\r\n\r\nexport interface Section {\r\n  SectionID: number;\r\n  SectionNo: number;\r\n  SectionTitle: string;\r\n  Questions: Question[];\r\n  SectionQuestiontype: QuestionType;\r\n  IsRepeatable: boolean;\r\n  TableTitles: string[];\r\n}\r\n\r\nexport enum QuestionType {\r\n  Label = 0,\r\n  Checkbox = 1,\r\n  RadioGroup = 2,\r\n  Textbox = 3,\r\n  TextArea = 4,\r\n  Select = 5,\r\n  CheckboxTextbox = 6,\r\n  RadioGroupTextbox = 7,\r\n  Date = 8,\r\n  DateTime = 9,\r\n  OperativeList = 10,\r\n  WallOfText = 11,\r\n  Number = 12,\r\n  CascadeDropdown = 13,\r\n  LinkedBool = 16,\r\n  AssetList = 17,\r\n  LinkedDates = 18,\r\n  Signature = 19,\r\n  CompanySelect = 21,\r\n  AreaSelect = 22,\r\n  AssetGroupsAndTypes = 25,\r\n  AssetInspectionSchedule = 26,\r\n  ProjectSelect = 27,\r\n  RamsSelect = 28,\r\n  SelectText = 29,\r\n  CascadeDropdownText = 30,\r\n  MultiCascade = 31,\r\n  Time = 32,\r\n  LinkedTimes = 33,\r\n  HRASelect = 34,\r\n  MultiCheckbox = 35,\r\n  LinkedDateAndTime = 36\r\n}\r\n\r\nexport interface Question {\r\n  QuestionID: number;\r\n  QuestionText: string;\r\n  CascadeOptionsText: string;\r\n  Assets: SiteDocumentAsset[];\r\n  Operatives: SiteDocumentOperative[];\r\n  Required: boolean;\r\n  AnswerText: string;\r\n  YesNoNA: boolean | null;\r\n  CanHaveImg: boolean;\r\n  CanHaveFiles: boolean;\r\n}\r\n\r\nconst store = createStore(\r\n  { name: \"site-documents\" },\r\n  withEntities<SiteDocument, \"DocumentID\">({ idKey: \"DocumentID\" })\r\n);\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class SiteDocumentStore {\r\n  templates$ = store.pipe(selectAllEntities());\r\n}",
            "properties": [
                {
                    "name": "AttendeeID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "DateAttended",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "Name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 50
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "TargetEvent",
            "id": "interface-TargetEvent-d8ce4e5a23f6985bd019f1bec5424336d6270524c10493fcde06ec6a16c08d27300fc7b01504d272ab1fb52cc4f4bd58ae56bdfe79d6250aafbf2aa964c4e293",
            "file": "src/app/shared/models/events/target-event.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface TargetEvent<T> {\r\n  target: T\r\n}\r\n",
            "properties": [
                {
                    "name": "target",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "TemplateMenuItem",
            "id": "interface-TemplateMenuItem-841bbb28e0f1d7ea49fe52ef349a21a3a4d71571b8b0015b607d3eea447a040c20c7fa22172d377264a5358c8b9fc8a51c34160d7e2c39017c1eafd9327500fe",
            "file": "src/app/core/stores/site-document/form-filler/form-filler.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\r\nimport { inject, Injectable } from \"@angular/core\";\r\nimport { createStore } from \"@ngneat/elf\";\r\nimport { Observable, Subject, switchMap } from \"rxjs\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { withWritingDocument } from \"../props\";\r\nimport { SiteDocument } from \"../site-document.store\";\r\nimport { entitiesPropsFactory } from \"@ngneat/elf-entities\";\r\nimport { writingDocumentAdapter } from \"../adapters/writing-document.adapter\";\r\n\r\nexport interface TemplateMenuItem {\r\n  Id: number;\r\n  Title: string;\r\n  SiteDocumentType: number;\r\n  RevNo: number;\r\n}\r\n\r\nconst { withTemplateMenuEntities } = entitiesPropsFactory(\"templateMenu\");\r\n\r\nconst store = createStore(\r\n  { name: \"form-filler\" },\r\n  withWritingDocument(null as SiteDocument | null),\r\n  withTemplateMenuEntities<TemplateMenuItem, \"Id\">({ idKey: \"Id\", initialValue: [] })\r\n);\r\n\r\nconst { \r\n  selectWritingDocument, \r\n  setWritingDocument \r\n} = writingDocumentAdapter(store);\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class FormFillerStore {\r\n  protected http = inject(HttpClient);\r\n\r\n  writingDocument$ = selectWritingDocument();\r\n\r\n  getTemplateRequest$ = (action$: Observable<number>) => action$.pipe(\r\n    switchMap(id => this.http.get<SiteDocument>(`${environment.siteDocsApi}/TemplateApi/GetDocumentTemplate`, {\r\n      params: {\r\n        id: id!.toString()\r\n      }\r\n    })),\r\n    setWritingDocument()\r\n  );\r\n\r\n  getTemplatesRequest$ = <T>(action$: Observable<T>) => action$.pipe(\r\n    switchMap(() => this.http.get<SiteDocument[]>(`${environment.siteDocsApi}/TemplateApi/`))\r\n  );\r\n\r\n  submitDocument$ = (action$: Observable<SiteDocument>) => action$.pipe(\r\n    switchMap(doc => this.http.post<number>(`${environment.siteDocsApi}/TemplateApi/UploadDocument`, doc))\r\n  );\r\n}",
            "properties": [
                {
                    "name": "Id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "RevNo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "SiteDocumentType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "Title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "TemplateMenuItem",
            "id": "interface-TemplateMenuItem-c86354364b6b3d193563e8480ebd82ec9f5afd4b337ff3335f21f07773abf5051d3e7e713c849024a59fc6b33242400400e65266ffa8e384125d7cbc99ddda10-1",
            "file": "src/app/core/stores/site-document/form-filler/adapters/template-menu.adapter.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Store, StoreDef } from \"@ngneat/elf\";\r\nimport { entitiesPropsFactory, selectAllEntities, setEntities } from \"@ngneat/elf-entities\";\r\nimport { pipeTap } from \"src/app/shared/rxjs\";\r\n\r\nexport interface TemplateMenuItem {\r\n  Id: number;\r\n  Title: string;\r\n  SiteDocumentType: number;\r\n  RevNo: number;\r\n}\r\n\r\nconst { templateMenuEntitiesRef, withTemplateMenuEntities } = entitiesPropsFactory(\"templateMenu\");\r\n\r\nexport { withTemplateMenuEntities }\r\n\r\nexport function templateMenuAdapter(store: Store<StoreDef>) {\r\n  return {\r\n    selectTemplateMenu: () => store.pipe(selectAllEntities({ ref: templateMenuEntitiesRef })),\r\n    setTemplateMenu: pipeTap<TemplateMenuItem[]>(templates => store.update(setEntities(templates, { ref: templateMenuEntitiesRef })))\r\n  }\r\n}",
            "properties": [
                {
                    "name": "Id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "RevNo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "SiteDocumentType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "Title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "TemplateMenuItem-1"
        },
        {
            "name": "User",
            "id": "interface-User-edc8f5205acb5e3ca74b2f3605d779ad0973ddb759afc8600f3defe8a24779e34bf395359f373b794165b252c9660eb4c94a5d95d82b319e12a5587d6b89099f",
            "file": "src/app/core/stores/user/user.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\r\nimport { inject, Injectable } from \"@angular/core\";\r\nimport { createStore, propsFactory } from \"@ngneat/elf\";\r\nimport { localStorageStrategy, persistState } from \"@ngneat/elf-persist-state\";\r\nimport { combineLatest, Observable, switchMap } from \"rxjs\";\r\nimport { getDeviceString, getDeviceUuid } from \"src/app/shared/plugins/device.plugin\";\r\nimport { pipeTap, selector } from \"src/app/shared/rxjs\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\nexport interface User {\r\n  Id: number,\r\n  LastName: string,\r\n  FirstName: string,\r\n  CompanyId: number,\r\n  CompanyName: string,\r\n  Colour: string,\r\n  FontColour: string,\r\n  Token: string,\r\n  Pin: string,\r\n  Site: Site,\r\n  DocumentListingTab: \"Recent\" | \"Pinned\" | \"Issued\",\r\n  IsInSupervisorRole: boolean,\r\n  HasRegisteredPlayerId: number,\r\n  HasAssets: boolean,\r\n  HasAssetCreation: boolean,\r\n  HasDocQrCodes: boolean,\r\n  HasHadWifiPreferenceChecked: boolean,\r\n  HasUpdateableDocs: boolean,\r\n  HasDocQueues: boolean,\r\n  HasCompanies: boolean,\r\n  HasDataTouchAreas: boolean,\r\n  HasQueueSupervisors: boolean,\r\n  HasCategoryActioners: boolean,\r\n  UserSites: Site[],\r\n  //UserCompanies: Company[],\r\n  HasDocQRCodes: boolean,\r\n  HasPlanningMeeting: boolean,\r\n  HasReviewMeeting: boolean,\r\n  HasCollabPlanning: boolean,\r\n  HasRandomOperativebarcodes: boolean,\r\n  HasDataWall: boolean,\r\n  HasLiveQueues: boolean,\r\n  HasResAreas:boolean,\r\n  HasHideOperativeScan: boolean,\r\n  HasSites: boolean,\r\n  HasDocDrop: boolean,\r\n  HasBasicOpInfo: boolean,\r\n  HasSimpleSwipes: boolean,\r\n  HasProjectsOnDocDrop: boolean,\r\n  HasCustomLookups: boolean,\r\n  HasTemplateSender: boolean,\r\n  HasMyOpInfo: boolean,\r\n  HasViewDocumentAsSinglePage: boolean,\r\n  HasShowParentAnswersOnChildDoc: boolean,\r\n  HasCompanySelectWithOtherOption:boolean,\r\n  HideSearchOnOperativeInfo: boolean,\r\n  HideSearchOnOperativeAccess: boolean,\r\n  CanAddOperativesToDocsByName: boolean,\r\n  HasRamsList: boolean,\r\n  CanAddAsssetsToDocsByName: boolean,\r\n  ShowWeightingsOnApp: boolean,\r\n  TemplatesLastUpdate: Date,\r\n  Url: string,\r\n  UseFingerReader: boolean,\r\n  SelectedSite: Site,\r\n  NavTab: \"Modules\" | \"Documents\",\r\n  NumberOfTemplates: number,\r\n  DownloadedTemplates: number,\r\n  //PermittedCategories: DocCategory[],\r\n  HasOperativeInfo: boolean,\r\n  CanOffHireAssets: boolean,\r\n  CanViewOtherOperativeInfo: boolean,\r\n  CanModifyOperativeQRs: boolean,\r\n  CanAddQRsToAssets: boolean\r\n}\r\n\r\nexport interface Site {\r\n  Id: number,\r\n  Name: string\r\n}\r\n\r\nconst {\r\n  withAppUser, \r\n  selectAppUser, \r\n  setAppUser\r\n} = propsFactory(\"appUser\", { initialValue: null as User | null });\r\n\r\nconst store = createStore(\r\n  { name: \"user\" },\r\n  withAppUser()\r\n);\r\n\r\nconst userSelector = selector(store.pipe(selectAppUser()));\r\nconst sites$ = userSelector(user => user?.UserSites || []);\r\n\r\nconst setAppUserUpdate = pipeTap<User>(user => store.update(setAppUser(user)));\r\n\r\npersistState(store, {\r\n  key: \"user\",\r\n  storage: localStorageStrategy\r\n});\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class UserStore {\r\n  httpClient = inject(HttpClient);\r\n\r\n  user$ = store.pipe(selectAppUser());\r\n  sites$ = sites$;\r\n\r\n  getUserRequest$ = (action$: Observable<{ token: string, pin: string }>) => combineLatest({\r\n    login: action$,\r\n    deviceId: getDeviceUuid(),\r\n    deviceString: getDeviceString() \r\n  }).pipe(\r\n    switchMap(({ login, deviceId, deviceString }) => this.httpClient.post<User>(`${environment.siteDocsApi}/LoginApi/LoginSiteDocumentsApp`, {\r\n      deviceId,\r\n      deviceString\r\n    }, {\r\n      headers: {\r\n        appToken: login.token,\r\n        appPin: login.pin\r\n      }\r\n    })),\r\n    setAppUserUpdate()\r\n  );\r\n}",
            "properties": [
                {
                    "name": "CanAddAsssetsToDocsByName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 60
                },
                {
                    "name": "CanAddOperativesToDocsByName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "CanAddQRsToAssets",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 74
                },
                {
                    "name": "CanModifyOperativeQRs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 73
                },
                {
                    "name": "CanOffHireAssets",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 71
                },
                {
                    "name": "CanViewOtherOperativeInfo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 72
                },
                {
                    "name": "Colour",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "CompanyId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "CompanyName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "DocumentListingTab",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"Recent\" | \"Pinned\" | \"Issued\"",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "DownloadedTemplates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 68
                },
                {
                    "name": "FirstName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "FontColour",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "HasAssetCreation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "HasAssets",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "HasBasicOpInfo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "HasCategoryActioners",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "HasCollabPlanning",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "HasCompanies",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "HasCompanySelectWithOtherOption",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "HasCustomLookups",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "HasDataTouchAreas",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "HasDataWall",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "HasDocDrop",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "HasDocQrCodes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "HasDocQRCodes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "HasDocQueues",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "HasHadWifiPreferenceChecked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "HasHideOperativeScan",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "HasLiveQueues",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "HasMyOpInfo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "HasOperativeInfo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 70
                },
                {
                    "name": "HasPlanningMeeting",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "HasProjectsOnDocDrop",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "HasQueueSupervisors",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "HasRamsList",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 59
                },
                {
                    "name": "HasRandomOperativebarcodes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "HasRegisteredPlayerId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "HasResAreas",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "HasReviewMeeting",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "HasShowParentAnswersOnChildDoc",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "HasSimpleSwipes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "HasSites",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "HasTemplateSender",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "HasUpdateableDocs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "HasViewDocumentAsSinglePage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "HideSearchOnOperativeAccess",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "HideSearchOnOperativeInfo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "Id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "IsInSupervisorRole",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "LastName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "NavTab",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"Modules\" | \"Documents\"",
                    "optional": false,
                    "description": "",
                    "line": 66
                },
                {
                    "name": "NumberOfTemplates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 67
                },
                {
                    "name": "Pin",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "SelectedSite",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Site",
                    "optional": false,
                    "description": "",
                    "line": 65
                },
                {
                    "name": "ShowWeightingsOnApp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "Site",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Site",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "TemplatesLastUpdate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "Token",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "Url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 63
                },
                {
                    "name": "UseFingerReader",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 64
                },
                {
                    "name": "UserSites",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Site[]",
                    "optional": false,
                    "description": "",
                    "line": 34
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "FormFillerRoute",
            "id": "injectable-FormFillerRoute-937f82d5c94caf38a8b861c952b1fef6f3314ecd1a43125d6b34b1ac6c792c0b13efb9885ad3552d5f13752dc1c7ae655b05728372f3432c0ac665217592cefe",
            "file": "src/app/core/pages/document-builder/routes/form-filler.route.ts",
            "properties": [
                {
                    "name": "documentIds$",
                    "defaultValue": "this.route.queryParams.pipe(\r\n    map(params => JSON.parse(params[\"ids\"]) as number[])\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "lastDocumentId$",
                    "defaultValue": "this.documentIds$.pipe(\r\n    map(ids => ids[ids.length - 1] || 0),\r\n    filter(id => id > 0)\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "route",
                    "defaultValue": "inject(ActivatedRoute)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable, inject } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { filter, map } from \"rxjs\";\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class FormFillerRoute {\r\n  protected route = inject(ActivatedRoute); \r\n\r\n  documentIds$ = this.route.queryParams.pipe(\r\n    map(params => JSON.parse(params[\"ids\"]) as number[])\r\n  );\r\n\r\n  lastDocumentId$ = this.documentIds$.pipe(\r\n    map(ids => ids[ids.length - 1] || 0),\r\n    filter(id => id > 0)\r\n  );\r\n}",
            "type": "injectable"
        },
        {
            "name": "FormFillerStore",
            "id": "injectable-FormFillerStore-841bbb28e0f1d7ea49fe52ef349a21a3a4d71571b8b0015b607d3eea447a040c20c7fa22172d377264a5358c8b9fc8a51c34160d7e2c39017c1eafd9327500fe",
            "file": "src/app/core/stores/site-document/form-filler/form-filler.store.ts",
            "properties": [
                {
                    "name": "getTemplateRequest$",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "getTemplatesRequest$",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "http",
                    "defaultValue": "inject(HttpClient)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "submitDocument$",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "writingDocument$",
                    "defaultValue": "selectWritingDocument()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\r\nimport { inject, Injectable } from \"@angular/core\";\r\nimport { createStore } from \"@ngneat/elf\";\r\nimport { Observable, Subject, switchMap } from \"rxjs\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { withWritingDocument } from \"../props\";\r\nimport { SiteDocument } from \"../site-document.store\";\r\nimport { entitiesPropsFactory } from \"@ngneat/elf-entities\";\r\nimport { writingDocumentAdapter } from \"../adapters/writing-document.adapter\";\r\n\r\nexport interface TemplateMenuItem {\r\n  Id: number;\r\n  Title: string;\r\n  SiteDocumentType: number;\r\n  RevNo: number;\r\n}\r\n\r\nconst { withTemplateMenuEntities } = entitiesPropsFactory(\"templateMenu\");\r\n\r\nconst store = createStore(\r\n  { name: \"form-filler\" },\r\n  withWritingDocument(null as SiteDocument | null),\r\n  withTemplateMenuEntities<TemplateMenuItem, \"Id\">({ idKey: \"Id\", initialValue: [] })\r\n);\r\n\r\nconst { \r\n  selectWritingDocument, \r\n  setWritingDocument \r\n} = writingDocumentAdapter(store);\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class FormFillerStore {\r\n  protected http = inject(HttpClient);\r\n\r\n  writingDocument$ = selectWritingDocument();\r\n\r\n  getTemplateRequest$ = (action$: Observable<number>) => action$.pipe(\r\n    switchMap(id => this.http.get<SiteDocument>(`${environment.siteDocsApi}/TemplateApi/GetDocumentTemplate`, {\r\n      params: {\r\n        id: id!.toString()\r\n      }\r\n    })),\r\n    setWritingDocument()\r\n  );\r\n\r\n  getTemplatesRequest$ = <T>(action$: Observable<T>) => action$.pipe(\r\n    switchMap(() => this.http.get<SiteDocument[]>(`${environment.siteDocsApi}/TemplateApi/`))\r\n  );\r\n\r\n  submitDocument$ = (action$: Observable<SiteDocument>) => action$.pipe(\r\n    switchMap(doc => this.http.post<number>(`${environment.siteDocsApi}/TemplateApi/UploadDocument`, doc))\r\n  );\r\n}",
            "type": "injectable"
        },
        {
            "name": "LiveQueuesStore",
            "id": "injectable-LiveQueuesStore-ec23ba02ee486a663b1d6dade3cc49270d103e1fce4a0e7711afd0bb87a8989217c5c8f00e2144ae00254dc73157f063f1502f657b528c1ff58c665abefacccd",
            "file": "src/app/core/stores/live-queues/live-queues.store.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\r\nimport { createStore, setProp, withProps } from \"@ngneat/elf\";\r\n\r\nconst store = createStore(\r\n  { name: \"live-queues\" },\r\n  withProps<{ hideEmptyQueues: boolean }>({\r\n    hideEmptyQueues: false\r\n  })\r\n);\r\n\r\nconst toggleHideEmptyQueues = () => store.update(\r\n  setProp(\"hideEmptyQueues\", prop => !prop)\r\n);\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class LiveQueuesStore {\r\n  \r\n}\r\n",
            "type": "injectable"
        },
        {
            "name": "OneSignalService",
            "id": "injectable-OneSignalService-ea68c9c0cbdeea4638925ea4c6f542f26605cc6684bd432b725a6362ea03eab9ca020d4399509462c67d478eb4ea62925b2cf3b9c12c759b8bdbe70ef4684338",
            "file": "src/app/shared/services/onesignal/onesignal.service.ts",
            "properties": [
                {
                    "name": "notificationReceived$",
                    "defaultValue": "new Subject<NotificationReceivedEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "toastCtrl",
                    "defaultValue": "inject(ToastController)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methods": [
                {
                    "name": "startup",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { inject, Injectable } from \"@angular/core\";\nimport { Device } from \"@capacitor/device\";\nimport { ToastController } from \"@ionic/angular\";\nimport OneSignal from \"onesignal-cordova-plugin\";\nimport NotificationReceivedEvent from \"onesignal-cordova-plugin/dist/NotificationReceivedEvent\";\nimport { map, Subject, switchMap, tap } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class OneSignalService {\n  protected toastCtrl = inject(ToastController);\n  protected notificationReceived$ = new Subject<NotificationReceivedEvent>();\n\n  async startup() {\n    const device = await Device.getInfo();\n\n    if (device.platform === \"web\")\n      return;\n\n    this.notificationReceived$.pipe(\n      map(nr => nr.getNotification()),\n      switchMap(notification => this.toastCtrl.create({\n        header: notification.title,\n        message: notification.body,\n        duration: 5000,\n        position: \"top\"\n      })),\n      tap(toast => toast.present())\n    )\n    .subscribe();\n\n    OneSignal.setAppId(\"\");\n\n    OneSignal.promptForPushNotificationsWithUserResponse(() => \n      OneSignal.setNotificationWillShowInForegroundHandler(notification => this.notificationReceived$.next(notification))\n    );\n  }\n}\n",
            "type": "injectable"
        },
        {
            "name": "OperativesStore",
            "id": "injectable-OperativesStore-da4fceccfee7980eb36691e526d77c112617dfbbdd268253f674835959cd36f813342286f451ec8e051b115b051d05badba5be0fd4008a1641af318deebb0382",
            "file": "src/app/core/stores/operative/operatives.store.ts",
            "properties": [
                {
                    "name": "addOperative",
                    "defaultValue": "addOperative",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "operatives$",
                    "defaultValue": "operatives$()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "searchResults$",
                    "defaultValue": "searchResults$()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "setSearchResults",
                    "defaultValue": "setSearchResults",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 53
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\"\r\nimport { createStore } from \"@ngneat/elf\";\r\nimport { entitiesPropsFactory, withEntities } from \"@ngneat/elf-entities\";\r\nimport { localStorageStrategy, persistState } from \"@ngneat/elf-persist-state\";\r\nimport { searchResultsAdapter } from \"src/app/shared/adapters/search-results.adapter\";\r\nimport { operativesAdapter, operativeSearchAdapter } from \"./adapters/operatives.adapter\";\r\n\r\nexport interface Operative {\r\n  ID: number,\r\n  Name: string\r\n}\r\n\r\nexport interface OperativeSearchResult {\r\n  ID: number,\r\n  Name: string,\r\n  CompanyName: string,\r\n  HasQRCode: boolean,\r\n  HasAppAccess: boolean\r\n}\r\n\r\nconst {\r\n  withSearchResultEntities,\r\n  searchResultsAdapt\r\n} = searchResultsAdapter();\r\n\r\nconst store = createStore(\r\n  { name: \"operatives\" },\r\n  withEntities<Operative, \"ID\">({ idKey: \"ID\" }),\r\n  withSearchResultEntities<OperativeSearchResult, \"ID\">({ idKey: \"ID\" })\r\n);\r\n\r\nconst { \r\n  operatives$, \r\n  addOperative,\r\n  searchResults$,\r\n  setSearchResults\r\n} = {\r\n  ...operativesAdapter(store),\r\n  ...searchResultsAdapt(store)\r\n}\r\n\r\npersistState(store, {\r\n  key: \"operatives\",\r\n  storage: localStorageStrategy\r\n});\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class OperativesStore {\r\n  operatives$ = operatives$();\r\n  searchResults$ = searchResults$();\r\n\r\n  addOperative = addOperative;\r\n  setSearchResults = setSearchResults;\r\n}",
            "type": "injectable"
        },
        {
            "name": "SiteDocumentStore",
            "id": "injectable-SiteDocumentStore-5e983d9f903fd8936b53d457225be33ea528da397258d50470c49d9d13c566aeabe7926fac689cd85bc59e2ab090706562ba55d6b17a0fed0eeb92615db6369d",
            "file": "src/app/core/stores/site-document/site-document.store.ts",
            "properties": [
                {
                    "name": "templates$",
                    "defaultValue": "store.pipe(selectAllEntities())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 125
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\r\nimport { createStore } from \"@ngneat/elf\";\r\nimport { selectAllEntities, withEntities } from \"@ngneat/elf-entities\";\r\n\r\nexport interface SiteDocument {\r\n  DocumentID: number;\r\n  DocumentTitle: string;\r\n  Pinned: boolean;\r\n  Pages: Page[];\r\n  AllowAnon: boolean;\r\n  RemainAnon: boolean;\r\n  Queues: { Key: string, Value: string }[],\r\n  DocumentGroup: string;\r\n  CanCreateHotspot: boolean;\r\n  CanBeAddedToHotspot?: boolean;\r\n  CanBeSavedAsDraft?: boolean;\r\n  CanAddActionerFromApp: boolean;\r\n  CanAddCategoryActioner: boolean;\r\n  CanCreateAssetsFromDocument: boolean;\r\n  CanHaveQueueDuration: boolean;\r\n  CanHaveDocumentLevelImages: boolean;\r\n  CanHaveDocLevelPhotoRoll: boolean;\r\n  ShowDocLevelPhotoButtonAtStartOfDoc: boolean;\r\n  CanAddAsset?: boolean;\r\n  CanAddOperative?: boolean;\r\n  CanHaveCompanyActioner: boolean;\r\n  MetaData: Partial<SiteDocumentMetaData>;\r\n}\r\n\r\nexport interface SiteDocumentMetaData {\r\n  ActionerText: string;\r\n  CanBeEditableDocument: boolean;\r\n  CannotAddSelfAsActioner: boolean;\r\n  ColourHex: string;\r\n  QueueSelectorTitle: string;\r\n  HasSiteList: boolean;\r\n  UsesRadioGroupTable: boolean;\r\n}\r\n\r\nexport interface SiteDocumentAsset {\r\n  AssetID: number;\r\n  Tag: string;\r\n  Name: string;\r\n  QRCode?: string;\r\n  TemplateID?: number;\r\n}\r\n\r\nexport interface SiteDocumentOperative {\r\n  AttendeeID: number;\r\n  Name: string;\r\n  DateAttended: Date;\r\n}\r\n\r\nexport interface Page {\r\n  PageID: number;\r\n  PageTitle: string;\r\n  Sections: Section[]\r\n}\r\n\r\nexport interface Section {\r\n  SectionID: number;\r\n  SectionNo: number;\r\n  SectionTitle: string;\r\n  Questions: Question[];\r\n  SectionQuestiontype: QuestionType;\r\n  IsRepeatable: boolean;\r\n  TableTitles: string[];\r\n}\r\n\r\nexport enum QuestionType {\r\n  Label = 0,\r\n  Checkbox = 1,\r\n  RadioGroup = 2,\r\n  Textbox = 3,\r\n  TextArea = 4,\r\n  Select = 5,\r\n  CheckboxTextbox = 6,\r\n  RadioGroupTextbox = 7,\r\n  Date = 8,\r\n  DateTime = 9,\r\n  OperativeList = 10,\r\n  WallOfText = 11,\r\n  Number = 12,\r\n  CascadeDropdown = 13,\r\n  LinkedBool = 16,\r\n  AssetList = 17,\r\n  LinkedDates = 18,\r\n  Signature = 19,\r\n  CompanySelect = 21,\r\n  AreaSelect = 22,\r\n  AssetGroupsAndTypes = 25,\r\n  AssetInspectionSchedule = 26,\r\n  ProjectSelect = 27,\r\n  RamsSelect = 28,\r\n  SelectText = 29,\r\n  CascadeDropdownText = 30,\r\n  MultiCascade = 31,\r\n  Time = 32,\r\n  LinkedTimes = 33,\r\n  HRASelect = 34,\r\n  MultiCheckbox = 35,\r\n  LinkedDateAndTime = 36\r\n}\r\n\r\nexport interface Question {\r\n  QuestionID: number;\r\n  QuestionText: string;\r\n  CascadeOptionsText: string;\r\n  Assets: SiteDocumentAsset[];\r\n  Operatives: SiteDocumentOperative[];\r\n  Required: boolean;\r\n  AnswerText: string;\r\n  YesNoNA: boolean | null;\r\n  CanHaveImg: boolean;\r\n  CanHaveFiles: boolean;\r\n}\r\n\r\nconst store = createStore(\r\n  { name: \"site-documents\" },\r\n  withEntities<SiteDocument, \"DocumentID\">({ idKey: \"DocumentID\" })\r\n);\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class SiteDocumentStore {\r\n  templates$ = store.pipe(selectAllEntities());\r\n}",
            "type": "injectable"
        },
        {
            "name": "UserStore",
            "id": "injectable-UserStore-edc8f5205acb5e3ca74b2f3605d779ad0973ddb759afc8600f3defe8a24779e34bf395359f373b794165b252c9660eb4c94a5d95d82b319e12a5587d6b89099f",
            "file": "src/app/core/stores/user/user.store.ts",
            "properties": [
                {
                    "name": "getUserRequest$",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 110
                },
                {
                    "name": "httpClient",
                    "defaultValue": "inject(HttpClient)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 105
                },
                {
                    "name": "sites$",
                    "defaultValue": "sites$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 108
                },
                {
                    "name": "user$",
                    "defaultValue": "store.pipe(selectAppUser())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 107
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\r\nimport { inject, Injectable } from \"@angular/core\";\r\nimport { createStore, propsFactory } from \"@ngneat/elf\";\r\nimport { localStorageStrategy, persistState } from \"@ngneat/elf-persist-state\";\r\nimport { combineLatest, Observable, switchMap } from \"rxjs\";\r\nimport { getDeviceString, getDeviceUuid } from \"src/app/shared/plugins/device.plugin\";\r\nimport { pipeTap, selector } from \"src/app/shared/rxjs\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\nexport interface User {\r\n  Id: number,\r\n  LastName: string,\r\n  FirstName: string,\r\n  CompanyId: number,\r\n  CompanyName: string,\r\n  Colour: string,\r\n  FontColour: string,\r\n  Token: string,\r\n  Pin: string,\r\n  Site: Site,\r\n  DocumentListingTab: \"Recent\" | \"Pinned\" | \"Issued\",\r\n  IsInSupervisorRole: boolean,\r\n  HasRegisteredPlayerId: number,\r\n  HasAssets: boolean,\r\n  HasAssetCreation: boolean,\r\n  HasDocQrCodes: boolean,\r\n  HasHadWifiPreferenceChecked: boolean,\r\n  HasUpdateableDocs: boolean,\r\n  HasDocQueues: boolean,\r\n  HasCompanies: boolean,\r\n  HasDataTouchAreas: boolean,\r\n  HasQueueSupervisors: boolean,\r\n  HasCategoryActioners: boolean,\r\n  UserSites: Site[],\r\n  //UserCompanies: Company[],\r\n  HasDocQRCodes: boolean,\r\n  HasPlanningMeeting: boolean,\r\n  HasReviewMeeting: boolean,\r\n  HasCollabPlanning: boolean,\r\n  HasRandomOperativebarcodes: boolean,\r\n  HasDataWall: boolean,\r\n  HasLiveQueues: boolean,\r\n  HasResAreas:boolean,\r\n  HasHideOperativeScan: boolean,\r\n  HasSites: boolean,\r\n  HasDocDrop: boolean,\r\n  HasBasicOpInfo: boolean,\r\n  HasSimpleSwipes: boolean,\r\n  HasProjectsOnDocDrop: boolean,\r\n  HasCustomLookups: boolean,\r\n  HasTemplateSender: boolean,\r\n  HasMyOpInfo: boolean,\r\n  HasViewDocumentAsSinglePage: boolean,\r\n  HasShowParentAnswersOnChildDoc: boolean,\r\n  HasCompanySelectWithOtherOption:boolean,\r\n  HideSearchOnOperativeInfo: boolean,\r\n  HideSearchOnOperativeAccess: boolean,\r\n  CanAddOperativesToDocsByName: boolean,\r\n  HasRamsList: boolean,\r\n  CanAddAsssetsToDocsByName: boolean,\r\n  ShowWeightingsOnApp: boolean,\r\n  TemplatesLastUpdate: Date,\r\n  Url: string,\r\n  UseFingerReader: boolean,\r\n  SelectedSite: Site,\r\n  NavTab: \"Modules\" | \"Documents\",\r\n  NumberOfTemplates: number,\r\n  DownloadedTemplates: number,\r\n  //PermittedCategories: DocCategory[],\r\n  HasOperativeInfo: boolean,\r\n  CanOffHireAssets: boolean,\r\n  CanViewOtherOperativeInfo: boolean,\r\n  CanModifyOperativeQRs: boolean,\r\n  CanAddQRsToAssets: boolean\r\n}\r\n\r\nexport interface Site {\r\n  Id: number,\r\n  Name: string\r\n}\r\n\r\nconst {\r\n  withAppUser, \r\n  selectAppUser, \r\n  setAppUser\r\n} = propsFactory(\"appUser\", { initialValue: null as User | null });\r\n\r\nconst store = createStore(\r\n  { name: \"user\" },\r\n  withAppUser()\r\n);\r\n\r\nconst userSelector = selector(store.pipe(selectAppUser()));\r\nconst sites$ = userSelector(user => user?.UserSites || []);\r\n\r\nconst setAppUserUpdate = pipeTap<User>(user => store.update(setAppUser(user)));\r\n\r\npersistState(store, {\r\n  key: \"user\",\r\n  storage: localStorageStrategy\r\n});\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class UserStore {\r\n  httpClient = inject(HttpClient);\r\n\r\n  user$ = store.pipe(selectAppUser());\r\n  sites$ = sites$;\r\n\r\n  getUserRequest$ = (action$: Observable<{ token: string, pin: string }>) => combineLatest({\r\n    login: action$,\r\n    deviceId: getDeviceUuid(),\r\n    deviceString: getDeviceString() \r\n  }).pipe(\r\n    switchMap(({ login, deviceId, deviceString }) => this.httpClient.post<User>(`${environment.siteDocsApi}/LoginApi/LoginSiteDocumentsApp`, {\r\n      deviceId,\r\n      deviceString\r\n    }, {\r\n      headers: {\r\n        appToken: login.token,\r\n        appPin: login.pin\r\n      }\r\n    })),\r\n    setAppUserUpdate()\r\n  );\r\n}",
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [
        {
            "name": "AssetListModal",
            "id": "class-AssetListModal-6afe7b5a3f66b3a856573947b2509f8ef3ecd451897623f684ea99121a3694d03502b514cb6980506ba0f59f9187d4b0e0f724755022e6b696f5670a665dfbbc",
            "file": "src/app/shared/modals/asset-list/asset-list.modal.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class AssetListModal {\r\n}\r\n",
            "properties": [],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        },
        {
            "name": "DocumentBuilderRoute",
            "id": "class-DocumentBuilderRoute-5418e7fd864e4b6dff177225b0764180b895dc4a01ebea47d519a3cf9b19170d965e2896bcc321527bb1b52f43de203ed6aeff4652341ba07322564a0d60c28c",
            "file": "src/app/core/pages/document-builder/routes/document-builder.route.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "class",
            "sourceCode": "export class DocumentBuilderRoute {\r\n  \r\n}",
            "properties": [],
            "methods": [],
            "indexSignatures": [],
            "inputsClass": [],
            "outputsClass": [],
            "hostBindings": [],
            "hostListeners": []
        }
    ],
    "directives": [
        {
            "name": "BarcodeScannerDirective",
            "id": "directive-BarcodeScannerDirective-e7ab6e64f44fc426c4d8d715ee139a730b17b8b0304d2ed60c9bd1963305c222b91562838f03e7d909258d5d1b915ddc777b6614fa4103b28777a1fefaa3e26b",
            "file": "src/app/shared/directives/barcode-scanner/barcode-scanner.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, EventEmitter, HostListener, Input, Output } from \"@angular/core\";\nimport { BarcodeScanner, ScanOptions } from \"@capacitor-community/barcode-scanner\";\n\n@Directive({\n  selector: \"[barcode-scanner]\",\n  standalone: true\n})\nexport class BarcodeScannerDirective {\n  @Input(\"barcode-scanner\")\n  options: ScanOptions = {}\n\n  @Output(\"scan\") \n  scan = new EventEmitter<string>();\n\n  @HostListener(\"click\")\n  async scanCode() {\n    await BarcodeScanner.hideBackground();\n    const res = await BarcodeScanner.startScan({ targetedFormats: [] });\n    \n    if (res.hasContent)\n      this.scan.emit(res.content);\n  }\n}\n",
            "selector": "[barcode-scanner]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "barcode-scanner",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "ScanOptions",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "scan",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "EventEmitter"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "click",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "scanCode",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'click'"
                        }
                    ],
                    "modifierKind": [
                        131
                    ]
                }
            ]
        },
        {
            "name": "CameraDirective",
            "id": "directive-CameraDirective-f10927f7df2eb3c81832d7b42583e586499c7f0ddb1106034e3c715ac18c83dd59604204487614b6d0fa286aac7ca15a8e32f94cb28e5087c15ac956f206ec92",
            "file": "src/app/shared/directives/camera/camera.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, EventEmitter, HostBinding, Input, Output } from \"@angular/core\";\nimport { Camera, ImageOptions } from \"@capacitor/camera\";\nimport { CameraResultType, Photo } from \"@capacitor/camera/dist/esm/definitions\";\n\n@Directive({\n  selector: \"[camera]\",\n  standalone: true\n})\nexport class CameraDirective {\n  @Input(\"camera\")\n  options: ImageOptions = {\n    resultType: CameraResultType.Base64\n  };\n\n  @Output()\n  takePhoto = new EventEmitter<Photo>();\n\n  @HostBinding(\"click\")\n  async take() {\n    const photo = await Camera.getPhoto(this.options);\n    this.takePhoto.emit(photo);\n  }\n}\n",
            "selector": "[camera]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "camera",
                    "defaultValue": "{\n    resultType: CameraResultType.Base64\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "ImageOptions",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "takePhoto",
                    "defaultValue": "new EventEmitter<Photo>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "EventEmitter"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "click",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "() => any",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "take",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'click'"
                        }
                    ],
                    "modifierKind": [
                        131
                    ]
                }
            ]
        },
        {
            "name": "DateDirective",
            "id": "directive-DateDirective-ed7c05613ff3036a98ba6f6b01b7905c09f43c85fce214f484e8bd4aa52de348fe1e0ff96a598fdca7586f51c4f1557922a41b0f2e6eb1e2f12975b8608bd303",
            "file": "src/app/shared/directives/date/date.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, ElementRef, EventEmitter, HostListener, inject, Input, Output } from \"@angular/core\";\r\nimport { formatISO, parseISO } from \"date-fns\";\r\n\r\n@Directive({\r\n  selector: \"[date]\",\r\n  standalone: true\r\n})\r\nexport class DateDirective {\r\n  protected element: Element & { value: string } = inject(ElementRef).nativeElement;\r\n  \r\n  @Input(\"date\")\r\n  date!: Date;\r\n  \r\n  @Output()\r\n  dateChange = new EventEmitter<Date>();\r\n\r\n  \r\n  ngOnChanges() {\r\n    this.element.value = formatISO(this.date);\r\n  }\r\n\r\n  @HostListener(\"change\")\r\n  @HostListener(\"ionChange\")\r\n  change() {\r\n    this.date = parseISO(this.element.value);\r\n    this.dateChange.emit(this.date);\r\n  }\r\n}\r\n",
            "selector": "[date]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "Date",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "dateChange",
                    "defaultValue": "new EventEmitter<Date>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "change",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24
                },
                {
                    "name": "ionChange",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24
                }
            ],
            "propertiesClass": [
                {
                    "name": "element",
                    "defaultValue": "inject(ElementRef).nativeElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "change",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'change'"
                        },
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'ionChange'"
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ]
        },
        {
            "name": "PhotoViewerDirective",
            "id": "directive-PhotoViewerDirective-95e560abab13b269266e477e2a243003be7b81bb057bd0f0a9d17bab884f6267d581d1034dc26453f0fb226e763bcff8340a963790ed069a24cb8d3140a69495",
            "file": "src/app/shared/directives/photo-viewer/photo-viewer.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, HostBinding, Input } from \"@angular/core\";\r\nimport { PhotoViewer } from \"@capacitor-community/photoviewer\";\r\n\r\n@Directive({\r\n  selector: \"[photo-viewer]\",\r\n  standalone: true\r\n})\r\nexport class PhotoViewerDirective {\r\n  @Input(\"photo-viewer\")\r\n  url!: string;\r\n\r\n  @HostBinding(\"click\")\r\n  view() {\r\n    PhotoViewer.show({\r\n      images: [{ url: this.url }]\r\n    });\r\n  }\r\n}\r\n",
            "selector": "[photo-viewer]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "photo-viewer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "click",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "() => void",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "view",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'click'"
                        }
                    ]
                }
            ]
        },
        {
            "name": "QuestionTemplateDirective",
            "id": "directive-QuestionTemplateDirective-add9b009c2f9d37c99439a369cf05ae21358d1d3672ec550e8f7127a1facefa6be3ac0b27a6ac27bc6fa5970d3ea97fb38e62e979f4010681d6ed2112c9578c3",
            "file": "src/app/core/pages/document-builder/components/document-section/document-section.component.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { NgTemplateOutlet } from \"@angular/common\";\r\nimport { ChangeDetectionStrategy, Component, ContentChild, Directive, Input, TemplateRef } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question, Section } from \"src/app/core/stores/site-document/site-document.store\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\n\r\n@Directive({\r\n  selector: \"ng-template[questions]\",\r\n  standalone: true\r\n})\r\nexport class QuestionTemplateDirective {\r\n  @Input()\r\n  questions!: Question[];\r\n\r\n  static ngTemplateContextGuard(dir: QuestionTemplateDirective, ctx: unknown): ctx is { $implicit: Question } {\r\n    return true;\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: \"document-section[section]\",\r\n  template: `\r\n    <ion-label>{{ section.SectionTitle }}</ion-label>\r\n    <ng-container *rxIf=\"section.IsRepeatable\">\r\n      <ion-button color=\"secondary\" fill=\"clear\">\r\n        <ion-icon name=\"duplicate-outline\"></ion-icon>\r\n      </ion-button>\r\n      <ion-button color=\"secondary\" fill=\"clear\">\r\n        <ion-icon name=\"remove-circle-outline\"></ion-icon>\r\n      </ion-button>\r\n    </ng-container>\r\n\r\n    <ng-container *rxFor=\"let question of section.Questions\">\r\n      <ng-container *ngTemplateOutlet=\"questions; context: { $implicit: question }\"></ng-container>\r\n    </ng-container>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    NgTemplateOutlet,\r\n    QuestionTemplateDirective\r\n  ]\r\n})\r\nexport class DocumentSectionComponent {\r\n  @Input()\r\n  section!: Section;\r\n\r\n  @ContentChild(QuestionTemplateDirective, { read: TemplateRef }) \r\n  questions!: TemplateRef<unknown>;\r\n}\r\n",
            "selector": "ng-template[questions]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "questions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "Question[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngTemplateContextGuard",
                    "args": [
                        {
                            "name": "dir",
                            "type": "QuestionTemplateDirective",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "ctx",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "literal type",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "dir",
                            "type": "QuestionTemplateDirective",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "ctx",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        }
    ],
    "components": [
        {
            "name": "ActionerSelectComponent",
            "id": "component-ActionerSelectComponent-b30429c2f608dbd3840887b9ba6efd7ec75f8f251426725f27740b8e390187f4702193fe03b697bdf26d14b31ed8b3358aaac11d1874c8682bddb2e864670588",
            "file": "src/app/core/pages/document-builder/components/input-types/actioner-select/actioner-select.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "actioner-select",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-card>\n  <ion-card-header>\n    <h2 class=\"ion-text-center ion-text-wrap\">{{ title }}</h2>\n  </ion-card-header>\n  <ion-card-content>\n    <ion-list>\n      <ion-item [id]=\"operativeSearchId\" button>\n        <ion-label class=\"ion-text-wrap\">{{ actioner?.Name || \"Select an Actioner\" }}</ion-label>\n        <ion-icon name=\"person-outline\" slot=\"start\"></ion-icon>\n      </ion-item>\n      <!-- <operative-search-modal [trigger]=\"operativeSearchId\"></operative-search-modal> -->\n    </ion-list>\n  </ion-card-content>\n</ion-card>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "actioner",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "Operative",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "\"To Action / Attention Of\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "actionerChange",
                    "defaultValue": "new EventEmitter<Operative>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "operativeSearchId",
                    "defaultValue": "crypto.randomUUID()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 31
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Operative } from \"src/app/core/stores/operative/operatives.store\";\r\n\r\n@Component({\r\n  selector: \"actioner-select\",\r\n  template: `\r\n    <ion-card>\r\n      <ion-card-header>\r\n        <h2 class=\"ion-text-center ion-text-wrap\">{{ title }}</h2>\r\n      </ion-card-header>\r\n      <ion-card-content>\r\n        <ion-list>\r\n          <ion-item [id]=\"operativeSearchId\" button>\r\n            <ion-label class=\"ion-text-wrap\">{{ actioner?.Name || \"Select an Actioner\" }}</ion-label>\r\n            <ion-icon name=\"person-outline\" slot=\"start\"></ion-icon>\r\n          </ion-item>\r\n          <!-- <operative-search-modal [trigger]=\"operativeSearchId\"></operative-search-modal> -->\r\n        </ion-list>\r\n      </ion-card-content>\r\n    </ion-card>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    //OperativeSearchModal\r\n  ]\r\n})\r\nexport class ActionerSelectComponent {\r\n  operativeSearchId = crypto.randomUUID();\r\n\r\n  @Input()\r\n  title: string = \"To Action / Attention Of\";\r\n\r\n  @Input()\r\n  actioner?: Operative;\r\n\r\n  @Output()\r\n  actionerChange = new EventEmitter<Operative>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-d41cfd42d13923078762ea410fbe2dca1567b4115e79eed159cf8ddb724e841d83ae01cc29a79701af47deae4a91fa8962e9322fcc26c1f1cbe8126ef1638a0c",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-app>\n  <ion-router-outlet></ion-router-outlet>\n</ion-app>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { IonicModule } from '@ionic/angular';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <ion-app>\n      <ion-router-outlet></ion-router-outlet>\n    </ion-app>\n  `,\n  standalone: true,\n  imports: [IonicModule],\n})\nexport class AppComponent {\n  constructor() {}\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 14
            }
        },
        {
            "name": "AssetListComponent",
            "id": "component-AssetListComponent-372d98f8975d2a85ec778524ddd65556fec38b900134d8b36d657c7bfbf3d42b3b6141dca01a06163a02d16b81ccece5e843b6b5127ac12074fadf7b63cf3190",
            "file": "src/app/core/pages/document-builder/components/question-types/17-asset-list/asset-list.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "asset-list-question[question]",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text>{{ question.QuestionText }}</question-text>\n    <ion-button fill=\"clear\" slot=\"end\">\n      <ion-icon name=\"scan-outline\" slots=\"icon-only\"></ion-icon>\n    </ion-button>\n    <ion-button fill=\"clear\" slot=\"end\">\n      <ion-icon name=\"search-outline\" slot=\"icon-only\"></ion-icon>\n    </ion-button>\n  </ion-item>\n</ion-list>\n\n<ion-list>\n  <ion-item-sliding *rxFor=\"let asset of question.Assets; last as isLast\">\n    <ion-item [lines]=\"isLast ? 'none' : 'inset'\" button>\n      <ion-label>{{ asset.AssetID }}: {{ asset.Name }}</ion-label>\n    </ion-item>\n\n    <ion-item-options side=\"end\">\n      <ion-item-option color=\"danger\">\n        <ion-icon name=\"trash-outline\" slot=\"icon-only\"></ion-icon>\n      </ion-item-option>\n    </ion-item-options>\n  </ion-item-sliding>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "question",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isMobileApp",
                    "defaultValue": "isMobileApp()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 49
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/site-document.store\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { isMobileApp } from \"src/app/shared/plugins/platform.plugin\";\r\nimport { QuestionTextComponent } from \"../extras\";\r\n\r\n@Component({\r\n  selector: \"asset-list-question[question]\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text>{{ question.QuestionText }}</question-text>\r\n        <ion-button fill=\"clear\" slot=\"end\">\r\n          <ion-icon name=\"scan-outline\" slots=\"icon-only\"></ion-icon>\r\n        </ion-button>\r\n        <ion-button fill=\"clear\" slot=\"end\">\r\n          <ion-icon name=\"search-outline\" slot=\"icon-only\"></ion-icon>\r\n        </ion-button>\r\n      </ion-item>\r\n    </ion-list>\r\n\r\n    <ion-list>\r\n      <ion-item-sliding *rxFor=\"let asset of question.Assets; last as isLast\">\r\n        <ion-item [lines]=\"isLast ? 'none' : 'inset'\" button>\r\n          <ion-label>{{ asset.AssetID }}: {{ asset.Name }}</ion-label>\r\n        </ion-item>\r\n\r\n        <ion-item-options side=\"end\">\r\n          <ion-item-option color=\"danger\">\r\n            <ion-icon name=\"trash-outline\" slot=\"icon-only\"></ion-icon>\r\n          </ion-item-option>\r\n        </ion-item-options>\r\n      </ion-item-sliding>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    QuestionTextComponent\r\n  ]\r\n})\r\nexport class AssetListComponent {\r\n  @Input()\r\n  question!: Question;\r\n\r\n  isMobileApp = isMobileApp();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CameraCaptureComponent",
            "id": "component-CameraCaptureComponent-1dc43fc24ef5c79f99b404d5910fd6732b2f4cbb212ec6424e67fe9002ca9bbcc308794fc3683e0b5108e2faa22708259aa37019eb1c53630f488b81619408b8",
            "file": "src/app/core/pages/document-builder/components/question-types/extras/camera-capture/camera-capture.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "camera-capture",
            "styleUrls": [],
            "styles": [],
            "template": "<if [condition]=\"base64Img == null\">\n  <!-- <ion-button\n    show\n    [unpatch]\n    [camera]=\"vm.options$ | push\"\n    (takePhoto)=\"take($event)\"\n    fill=\"clear\">\n    <ion-icon name=\"camera-outline\" slot=\"icon-only\"></ion-icon>\n  </ion-button> -->\n  <camera show fill=\"clear\">\n    <ion-icon name=\"camera-outline\" slot=\"icon-only\"></ion-icon>\n  </camera>\n\n  <ng-container else>\n    <ion-button [photo-viewer]=\"base64Img!\" [unpatch] fill=\"clear\">\n      <ion-icon name=\"eye-outline\" slot=\"icon-only\"></ion-icon>\n    </ion-button>\n    <ion-button (click)=\"remove()\" [unpatch] fill=\"clear\" color=\"danger\">\n      <ion-icon name=\"close-outline\" slot=\"icon-only\"></ion-icon>\n    </ion-button>\n  </ng-container>\n</if>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "base64Img",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "string | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "removePhoto",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "EventEmitter"
                },
                {
                    "name": "takePhoto",
                    "defaultValue": "new EventEmitter<Photo>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "remove",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "take",
                    "args": [
                        {
                            "name": "photo",
                            "type": "Photo",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "photo",
                            "type": "Photo",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { Photo } from \"@capacitor/camera\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { CameraComponent, IfComponent } from \"src/app/shared/components\";\r\nimport { PhotoViewerDirective } from \"src/app/shared/directives\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\n\r\n@Component({\r\n  selector: \"camera-capture\",\r\n  template: `\r\n    <if [condition]=\"base64Img == null\">\r\n      <!-- <ion-button \r\n        show\r\n        [unpatch]\r\n        [camera]=\"vm.options$ | push\" \r\n        (takePhoto)=\"take($event)\" \r\n        fill=\"clear\">\r\n        <ion-icon name=\"camera-outline\" slot=\"icon-only\"></ion-icon>\r\n      </ion-button> -->\r\n      <camera show fill=\"clear\">\r\n        <ion-icon name=\"camera-outline\" slot=\"icon-only\"></ion-icon>\r\n      </camera>\r\n\r\n      <ng-container else>\r\n        <ion-button [photo-viewer]=\"base64Img!\" [unpatch] fill=\"clear\">\r\n          <ion-icon name=\"eye-outline\" slot=\"icon-only\"></ion-icon>\r\n        </ion-button>\r\n        <ion-button (click)=\"remove()\" [unpatch] fill=\"clear\" color=\"danger\">\r\n          <ion-icon name=\"close-outline\" slot=\"icon-only\"></ion-icon>\r\n        </ion-button>\r\n      </ng-container>\r\n    </if>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    IfComponent,\r\n    CameraComponent,\r\n    PhotoViewerDirective\r\n  ]\r\n})\r\nexport class CameraCaptureComponent {\r\n\r\n  @Input()\r\n  base64Img: string | null = null;\r\n\r\n  @Output()\r\n  takePhoto = new EventEmitter<Photo>();\r\n\r\n  @Output()\r\n  removePhoto = new EventEmitter();\r\n\r\n  take(photo: Photo) {\r\n    this.base64Img = photo.base64String || null;\r\n    this.takePhoto.emit(photo);\r\n  }\r\n\r\n  remove() {\r\n    this.base64Img = null;\r\n    this.removePhoto.emit();\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CameraComponent",
            "id": "component-CameraComponent-7f5562e5bd967d5de5940fb573bb2d3087808e8dd862b8374f6ec471ecfa42a2d7efe0147932f5f06b7bfdcff7cd0911b1529fb16b19c592dbf4691c621766f3",
            "file": "src/app/shared/components/camera/camera.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "camera",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-button [fill]=\"fill\" [expand]=\"expand\" [color]=\"color\">\n  <if [condition]=\"isMobileApp\">\n    <div show></div>\n    <upload else accept=\"image/*\"></upload>\n  </if>\n  <ng-content></ng-content>\n</ion-button>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "expand",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "\"block\" | \"full\"",
                    "decorators": []
                },
                {
                    "name": "fill",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 30,
                    "type": "\"clear\" | \"outline\" | \"solid\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isMobileApp",
                    "defaultValue": "isMobileApp()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { importRxTemplate } from \"../../imports\";\r\nimport { isMobileApp } from \"../../plugins/platform.plugin\";\r\nimport { IfComponent } from \"../if/if.component\";\r\nimport { UploadComponent } from \"../upload/upload.component\";\r\n\r\n@Component({\r\n  selector: \"camera\",\r\n  template: `\r\n    <ion-button [fill]=\"fill\" [expand]=\"expand\" [color]=\"color\">\r\n      <if [condition]=\"isMobileApp\">\r\n        <div show></div>\r\n        <upload else accept=\"image/*\"></upload>\r\n      </if>\r\n      <ng-content></ng-content>\r\n    </ion-button>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule, \r\n    ...importRxTemplate(),\r\n    IfComponent,\r\n    UploadComponent\r\n  ]\r\n})\r\nexport class CameraComponent {\r\n  @Input()\r\n  fill?: \"clear\" | \"outline\" | \"solid\";\r\n\r\n  @Input()\r\n  expand?: \"block\" | \"full\";\r\n\r\n  @Input()\r\n  color?: string;\r\n\r\n  isMobileApp = isMobileApp();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CheckboxComponent",
            "id": "component-CheckboxComponent-a84da3e61649daea969cae62b280e1337dc72d2777d9a6ee3c76cfb64f1474122df0c1db01e184a58b28306216efe841dfa4348ba2475512ed32f868b0d43cd7",
            "file": "src/app/core/pages/document-builder/components/question-types/01-checkbox/checkbox.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "checkbox-question[question]",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-item lines=\"none\">\n  <ion-checkbox [(ngModel)]=\"question.YesNoNA\" aria-label=\"\" slot=\"start\"></ion-checkbox>\n  <question-text [required]=\"question.Required\">\n    {{ question.QuestionText }}\n  </question-text>\n  <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\"></camera-capture>\n  <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\"></file-upload>\n</ion-item>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "question",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/site-document.store\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\nimport { FormsModule } from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: 'checkbox-question[question]',\r\n  template: `\r\n    <ion-item lines=\"none\">\r\n      <ion-checkbox [(ngModel)]=\"question.YesNoNA\" aria-label=\"\" slot=\"start\"></ion-checkbox>\r\n      <question-text [required]=\"question.Required\">\r\n        {{ question.QuestionText }}\r\n      </question-text>\r\n      <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\"></camera-capture>\r\n      <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\"></file-upload>\r\n    </ion-item>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    FormsModule,\r\n    ...importRxTemplate(),\r\n    QuestionTextComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent\r\n  ]\r\n})\r\nexport class CheckboxComponent {\r\n  @Input()\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CheckboxTextboxComponent",
            "id": "component-CheckboxTextboxComponent-f2dc25f5c249b7936056a04531b9e57fadfc74445bbde651854427957e3d8e7c81ba21badfc0b6635fb66a776383c3e7262a0b47ab4fed0595d18f05d859d460",
            "file": "src/app/core/pages/document-builder/components/question-types/06-checkbox-textbox/checkbox-textbox.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "checkbox-question-question[question]",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <ion-checkbox aria-label=\"\" slot=\"start\"></ion-checkbox>\n    <question-text [required]=\"question.Required\">\n      {{ question.QuestionText }}\n    </question-text>\n    <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\"></camera-capture>\n    <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\"></file-upload>\n  </ion-item>\n\n  <ion-item>\n    <ion-label position=\"stacked\">Text:</ion-label>\n    <ion-textarea label=\"\" rows=\"3\"></ion-textarea>\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "question",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/site-document.store\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\n\r\n@Component({\r\n  selector: \"checkbox-question-question[question]\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <ion-checkbox aria-label=\"\" slot=\"start\"></ion-checkbox>\r\n        <question-text [required]=\"question.Required\">\r\n          {{ question.QuestionText }}\r\n        </question-text>\r\n        <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\"></camera-capture>\r\n        <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\"></file-upload>\r\n      </ion-item>\r\n\r\n      <ion-item>\r\n        <ion-label position=\"stacked\">Text:</ion-label>\r\n        <ion-textarea label=\"\" rows=\"3\"></ion-textarea>\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    QuestionTextComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent,\r\n  ]\r\n})\r\nexport class CheckboxTextboxComponent {\r\n  @Input()\r\n  question!: Question;\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ChildDocumentCardComponent",
            "id": "component-ChildDocumentCardComponent-a6c93a601dfb49952bb99be591db0de210767a13ef4b1cdc86ccf79ff9ed9a4f98ebc0bfd34d8de4f8b7f652e1cc04e9b2795ab2edf235c641d3eeee3a6d43d1",
            "file": "src/app/core/pages/document-builder/components/child-document-card/child-document-card.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "child-document-card[document]",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-list-header>Action Document</ion-list-header>\n  <ion-item lines=\"none\">\n    <ion-label class=\"ion-text-wrap\">\n      {{ document.DocumentTitle }}\n    </ion-label>\n    <ion-button>\n      <ion-icon name=\"pencil-outline\" slot=\"icon-only\"></ion-icon>\n    </ion-button>\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "document",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "SiteDocument",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\nimport { IonicModule } from \"@ionic/angular\";\nimport { SiteDocument } from \"src/app/core/stores/site-document/site-document.store\";\n\n@Component({\n  selector: \"child-document-card[document]\",\n  template: `\n    <ion-list>\n      <ion-list-header>Action Document</ion-list-header>\n      <ion-item lines=\"none\">\n        <ion-label class=\"ion-text-wrap\">\n          {{ document.DocumentTitle }}\n        </ion-label>\n        <ion-button>\n          <ion-icon name=\"pencil-outline\" slot=\"icon-only\"></ion-icon>\n        </ion-button>\n      </ion-item>\n    </ion-list>\n  `,\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [IonicModule]\n})\nexport class ChildDocumentCardComponent {\n  @Input()\n  document!: SiteDocument;\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CompanyActionerSelectComponent",
            "id": "component-CompanyActionerSelectComponent-1707227d165a383231362370cb0e4490d5732cafb3bc0c64e85f75bad2271652455a5e7a701a310f0f44be0a993c8be1fe38f343d0b5c3dbb644e9b0777ab618",
            "file": "src/app/core/pages/document-builder/components/input-types/company-actioner-select/company-actioner-select.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "company-actioner-select",
            "styleUrls": [],
            "styles": [],
            "template": "<selectable placeholder=\"Actioners\"></selectable>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { SelectableComponent } from \"src/app/shared/components/selectable/selectable.component\";\r\n\r\n@Component({\r\n  selector: \"company-actioner-select\",\r\n  template: `\r\n    <selectable placeholder=\"Actioners\"></selectable>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule, \r\n    SelectableComponent\r\n  ]\r\n})\r\nexport class CompanyActionerSelectComponent {\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "DateComponent",
            "id": "component-DateComponent-ac8149cef3bf3c7475930ab68fed4545c403d4a844be0664a119780ea483a622b6a354f9d8182aeefc3071a0e808d15bc2909e0a6a48e9d0c7110be94d49f4b1",
            "file": "src/app/core/pages/document-builder/components/question-types/08-date/date.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "date-question[question]",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n  </ion-item>\n  <datetime-picker presentation=\"date\"></datetime-picker>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "question",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/site-document.store\";\r\nimport { DatetimePickerComponent } from \"src/app/shared/components/datetime-picker/datetime-picker.component\";\r\nimport { QuestionTextComponent } from \"../extras\";\r\n\r\n@Component({\r\n  selector: \"date-question[question]\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n      </ion-item>\r\n      <datetime-picker presentation=\"date\"></datetime-picker>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    QuestionTextComponent,\r\n    DatetimePickerComponent\r\n  ]\r\n})\r\nexport class DateComponent {\r\n  @Input()\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "DatetimeComponent",
            "id": "component-DatetimeComponent-fd476406618e010c58896eceaf6a57e80f58be2bf19030bdcd651f633d5e450bc279a13d31900eff948a449183fc1836993a84e27e43be8523cda852cb120ec1",
            "file": "src/app/core/pages/document-builder/components/question-types/09-datetime/datetime.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "datetime-question[question]",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n  </ion-item>\n  <datetime-picker></datetime-picker>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "question",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/site-document.store\";\r\nimport { DatetimePickerComponent } from \"src/app/shared/components/datetime-picker/datetime-picker.component\";\r\nimport { QuestionTextComponent } from \"../extras\";\r\n\r\n@Component({\r\n  selector: \"datetime-question[question]\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n      </ion-item>\r\n      <datetime-picker></datetime-picker>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    QuestionTextComponent,\r\n    DatetimePickerComponent\r\n  ]\r\n})\r\nexport class DatetimeComponent {\r\n  @Input()\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "DatetimePickerComponent",
            "id": "component-DatetimePickerComponent-67147e69e87b1af017f22270cfd08584cdb521368c12315e6782ab6df8204e8c275f5e6cc95e2f422f1252f93fa63f26114e5741ec737cdbaeed23813ab546d4",
            "file": "src/app/shared/components/datetime-picker/datetime-picker.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "datetime-picker",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-item [id]=\"id\" [unpatch] button>\n  <ion-label *rxIf=\"presentation === 'date'\">{{ datetime | utcDate }}</ion-label>\n  <ion-label *rxIf=\"presentation !== 'date'\">{{ datetime | utcDateTime }}</ion-label>\n</ion-item>\n\n<ion-popover [trigger]=\"id\" triggerAction=\"click\" size=\"auto\">\n  <ng-template>\n    <ion-content>\n      <ion-datetime\n        [(date)]=\"datetime\"\n        (ionChange)=\"datetimeChange.emit(datetime)\"\n        [presentation]=\"presentation\">\n      </ion-datetime>\n    </ion-content>\n  </ng-template>\n</ion-popover>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "datetime",
                    "defaultValue": "new Date()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "presentation",
                    "defaultValue": "\"date-time\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "\"date\" | \"date-time\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "datetimeChange",
                    "defaultValue": "new EventEmitter<Date>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "id",
                    "defaultValue": "crypto.randomUUID()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 42
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { IfModule } from \"@rx-angular/template/if\";\r\nimport { UnpatchModule } from \"@rx-angular/template/unpatch\";\r\nimport { DateDirective } from \"../../directives/date/date.directive\";\r\nimport { UtcDatePipe, UtcDateTimePipe } from \"../../pipes\";\r\n\r\n@Component({\r\n  selector: \"datetime-picker\",\r\n  template: `\r\n    <ion-item [id]=\"id\" [unpatch] button>\r\n      <ion-label *rxIf=\"presentation === 'date'\">{{ datetime | utcDate }}</ion-label>\r\n      <ion-label *rxIf=\"presentation !== 'date'\">{{ datetime | utcDateTime }}</ion-label>\r\n    </ion-item>\r\n\r\n    <ion-popover [trigger]=\"id\" triggerAction=\"click\" size=\"auto\">\r\n      <ng-template>\r\n        <ion-content>\r\n          <ion-datetime \r\n            [(date)]=\"datetime\" \r\n            (ionChange)=\"datetimeChange.emit(datetime)\" \r\n            [presentation]=\"presentation\">\r\n          </ion-datetime>\r\n        </ion-content>\r\n      </ng-template>\r\n    </ion-popover>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    FormsModule,\r\n    IfModule,\r\n    UnpatchModule,\r\n    UtcDatePipe,\r\n    UtcDateTimePipe,\r\n    DateDirective\r\n  ]\r\n})\r\nexport class DatetimePickerComponent {\r\n  id = crypto.randomUUID();\r\n  \r\n  @Input()\r\n  datetime = new Date();\r\n\r\n  @Output()\r\n  datetimeChange = new EventEmitter<Date>();\r\n\r\n  @Input()\r\n  presentation: \"date\" | \"date-time\" = \"date-time\";\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "DocumentBuilderPage",
            "id": "component-DocumentBuilderPage-1e1324b7330a0a96d56f7b21c1c84984466467e5922c7fe1ff812a70e4cfa17dad6bc8de131b9f8195962e90643af4d1fdc3571e9d36cdd255d2bf8d72012753",
            "file": "src/app/core/pages/document-builder/document-builder.page.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-document-builder",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-header>\n  <ion-toolbar *rxIf=\"document$; let document\">\n    <ion-title class=\"ion-text-center ion-text-wrap\">\n      {{ document.DocumentTitle }}\n    </ion-title>\n    <ion-buttons slot=\"end\">\n      <if [condition]=\"document.Pinned\">\n        <ion-button show color=\"primary\">\n          <ion-icon name=\"bookmark\"></ion-icon>\n        </ion-button>\n\n        <ion-button else>\n          <ion-icon name=\"bookmark-outline\"></ion-icon>\n        </ion-button>\n      </if>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content *rxIf=\"document$; let document\" class=\"ion-padding\">\n  <actioner-select *rxIf=\"document.CanAddActionerFromApp\"></actioner-select>\n  <company-actioner-select *rxIf=\"document.CanHaveCompanyActioner\"></company-actioner-select>\n  <queue-select *rxIf=\"document.Queues && document.Queues.length > 0\"></queue-select>\n  <queue-duration *rxIf=\"document.CanHaveQueueDuration\"></queue-duration>\n\n  <document-page *rxFor=\"let page of document.Pages; index as idx\" [page]=\"page\">\n    <document-section *rxFor=\"let section of page.Sections\" [section]=\"section\">\n      <ng-template [ngSwitch]=\"section.SectionQuestiontype\" [questions]=\"section.Questions\" let-question>\n        <label-question *ngSwitchCase=\"QuestionType.Label\" [question]=\"question\"></label-question>\n        <checkbox-question *ngSwitchCase=\"QuestionType.Checkbox\" [question]=\"question\"></checkbox-question>\n        <radio-group-question *ngSwitchCase=\"QuestionType.RadioGroup\" [section]=\"section\" [question]=\"question\"></radio-group-question>\n        <radio-table-question\n          *rxIf=\"section.SectionQuestiontype === QuestionType.RadioGroup && document.MetaData.UsesRadioGroupTable\"\n          [question]=\"question\">\n        </radio-table-question>\n        <textarea-question *ngSwitchCase=\"QuestionType.TextArea\" [question]=\"question\"></textarea-question>\n        <select-question *ngSwitchCase=\"QuestionType.Select\" [question]=\"question\"></select-question>\n        <checkbox-question *ngSwitchCase=\"QuestionType.CheckboxTextbox\" [question]=\"question\"></checkbox-question>\n        <radio-group-textbox-question *ngSwitchCase=\"QuestionType.RadioGroupTextbox\" [question]=\"question\"></radio-group-textbox-question>\n        <radio-table-textbox-question\n          *rxIf=\"section.SectionQuestiontype === QuestionType.RadioGroupTextbox && document.MetaData.UsesRadioGroupTable\"\n          [question]=\"question\">\n        </radio-table-textbox-question>\n        <date-question *ngSwitchCase=\"QuestionType.Date\" [question]=\"question\"></date-question>\n        <datetime-question *ngSwitchCase=\"QuestionType.DateTime\" [question]=\"question\"></datetime-question>\n        <operative-list-question *ngSwitchCase=\"QuestionType.OperativeList\" [question]=\"question\"></operative-list-question>\n        <number-question *ngSwitchCase=\"QuestionType.Number\" [question]=\"question\"></number-question>\n        <asset-list-question *ngSwitchCase=\"QuestionType.AssetList\" [question]=\"question\"></asset-list-question>\n        <linked-dates-question *ngSwitchCase=\"QuestionType.LinkedDates\" [question]=\"question\"></linked-dates-question>\n        <signature-question *ngSwitchCase=\"QuestionType.Signature\" [question]=\"question\"></signature-question>\n        <select-text-question *ngSwitchCase=\"QuestionType.SelectText\" [question]=\"question\"></select-text-question>\n        <time-question *ngSwitchCase=\"QuestionType.Time\" [question]=\"question\"></time-question>\n      </ng-template>\n    </document-section>\n  </document-page>\n\n  <remain-anonymous\n    *rxIf=\"document.AllowAnon\"\n    [(isTicked)]=\"document.RemainAnon\">\n  </remain-anonymous>\n\n  <ion-button\n    (click)=\"submit(document)\"\n    class=\"ion-margin-vertical\"\n    expand=\"full\">\n    Submit\n  </ion-button>\n</ion-content>\n\n<ng-container *rxIf=\"document$; let document\">\n  <ion-footer *rxIf=\"document.Pages.length > 1\">\n    <ion-button class=\"float-left\">Back</ion-button>\n    <ion-button class=\"float-right\">Next</ion-button>\n  </ion-footer>\n</ng-container>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "document$",
                    "defaultValue": "merge(\r\n    this.formFillerStore.getTemplateRequest$(this.formFillerRoute.lastDocumentId$),\r\n  ).pipe(\r\n    switchMap(() => this.formFillerStore.writingDocument$),\r\n    shareReplay()\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 116
                },
                {
                    "name": "formFillerRoute",
                    "defaultValue": "inject(FormFillerRoute)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 109,
                    "modifierKind": [
                        122,
                        144
                    ]
                },
                {
                    "name": "formFillerStore",
                    "defaultValue": "inject(FormFillerStore)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 110,
                    "modifierKind": [
                        122,
                        144
                    ]
                },
                {
                    "name": "QuestionType",
                    "defaultValue": "QuestionType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 112
                },
                {
                    "name": "submit",
                    "defaultValue": "clickReaction<SiteDocument>(document$ => this.formFillerStore.submitDocument$(document$).pipe(\r\n    this.takeUntilDestroyed()\r\n  ))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 123
                },
                {
                    "name": "templates$",
                    "defaultValue": "this.formFillerStore",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 114
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, inject } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { merge, shareReplay, switchMap } from \"rxjs\";\r\nimport { IfComponent } from \"src/app/shared/components\";\r\nimport { importNgSwitch, importRxTemplate } from \"src/app/shared/imports\";\r\nimport { AngularComponent } from \"src/app/shared/lifecycles\";\r\nimport { FormFillerStore } from \"../../stores/site-document/form-filler/form-filler.store\";\r\nimport { QuestionType, SiteDocument } from \"../../stores/site-document/site-document.store\";\r\nimport { DocumentPageComponent, DocumentSectionComponent, QuestionTemplateDirective, importInputTypes, importQuestionTypes } from \"./components\";\r\nimport { FormFillerRoute } from \"./routes\";\r\nimport { clickReaction } from \"src/app/shared/reactions\";\r\nimport { TemplateMenuModal } from \"./modals\";\r\n\r\n@Component({\r\n  selector: 'app-document-builder',\r\n  template: `\r\n    <ion-header>\r\n      <ion-toolbar *rxIf=\"document$; let document\">\r\n        <ion-title class=\"ion-text-center ion-text-wrap\">\r\n          {{ document.DocumentTitle }}\r\n        </ion-title>\r\n        <ion-buttons slot=\"end\">\r\n          <if [condition]=\"document.Pinned\">\r\n            <ion-button show color=\"primary\">\r\n              <ion-icon name=\"bookmark\"></ion-icon>\r\n            </ion-button>\r\n\r\n            <ion-button else>\r\n              <ion-icon name=\"bookmark-outline\"></ion-icon>\r\n            </ion-button>\r\n          </if>\r\n        </ion-buttons>\r\n      </ion-toolbar>\r\n    </ion-header>\r\n\r\n    <ion-content *rxIf=\"document$; let document\" class=\"ion-padding\">\r\n      <actioner-select *rxIf=\"document.CanAddActionerFromApp\"></actioner-select>\r\n      <company-actioner-select *rxIf=\"document.CanHaveCompanyActioner\"></company-actioner-select>\r\n      <queue-select *rxIf=\"document.Queues && document.Queues.length > 0\"></queue-select>\r\n      <queue-duration *rxIf=\"document.CanHaveQueueDuration\"></queue-duration>\r\n\r\n      <document-page *rxFor=\"let page of document.Pages; index as idx\" [page]=\"page\">\r\n        <document-section *rxFor=\"let section of page.Sections\" [section]=\"section\">\r\n          <ng-template [ngSwitch]=\"section.SectionQuestiontype\" [questions]=\"section.Questions\" let-question>\r\n            <label-question *ngSwitchCase=\"QuestionType.Label\" [question]=\"question\"></label-question>\r\n            <checkbox-question *ngSwitchCase=\"QuestionType.Checkbox\" [question]=\"question\"></checkbox-question>\r\n            <radio-group-question *ngSwitchCase=\"QuestionType.RadioGroup\" [section]=\"section\" [question]=\"question\"></radio-group-question>\r\n            <radio-table-question \r\n              *rxIf=\"section.SectionQuestiontype === QuestionType.RadioGroup && document.MetaData.UsesRadioGroupTable\" \r\n              [question]=\"question\">\r\n            </radio-table-question>\r\n            <textarea-question *ngSwitchCase=\"QuestionType.TextArea\" [question]=\"question\"></textarea-question>\r\n            <select-question *ngSwitchCase=\"QuestionType.Select\" [question]=\"question\"></select-question>\r\n            <checkbox-question *ngSwitchCase=\"QuestionType.CheckboxTextbox\" [question]=\"question\"></checkbox-question>\r\n            <radio-group-textbox-question *ngSwitchCase=\"QuestionType.RadioGroupTextbox\" [question]=\"question\"></radio-group-textbox-question>\r\n            <radio-table-textbox-question \r\n              *rxIf=\"section.SectionQuestiontype === QuestionType.RadioGroupTextbox && document.MetaData.UsesRadioGroupTable\" \r\n              [question]=\"question\">\r\n            </radio-table-textbox-question>\r\n            <date-question *ngSwitchCase=\"QuestionType.Date\" [question]=\"question\"></date-question>\r\n            <datetime-question *ngSwitchCase=\"QuestionType.DateTime\" [question]=\"question\"></datetime-question>\r\n            <operative-list-question *ngSwitchCase=\"QuestionType.OperativeList\" [question]=\"question\"></operative-list-question>\r\n            <number-question *ngSwitchCase=\"QuestionType.Number\" [question]=\"question\"></number-question>\r\n            <asset-list-question *ngSwitchCase=\"QuestionType.AssetList\" [question]=\"question\"></asset-list-question>\r\n            <linked-dates-question *ngSwitchCase=\"QuestionType.LinkedDates\" [question]=\"question\"></linked-dates-question>\r\n            <signature-question *ngSwitchCase=\"QuestionType.Signature\" [question]=\"question\"></signature-question>\r\n            <select-text-question *ngSwitchCase=\"QuestionType.SelectText\" [question]=\"question\"></select-text-question>\r\n            <time-question *ngSwitchCase=\"QuestionType.Time\" [question]=\"question\"></time-question>\r\n          </ng-template>\r\n        </document-section>\r\n      </document-page>\r\n\r\n      <remain-anonymous \r\n        *rxIf=\"document.AllowAnon\"\r\n        [(isTicked)]=\"document.RemainAnon\">\r\n      </remain-anonymous>\r\n\r\n      <ion-button\r\n        (click)=\"submit(document)\" \r\n        class=\"ion-margin-vertical\" \r\n        expand=\"full\">\r\n        Submit\r\n      </ion-button>\r\n    </ion-content>\r\n\r\n    <ng-container *rxIf=\"document$; let document\">\r\n      <ion-footer *rxIf=\"document.Pages.length > 1\">\r\n        <ion-button class=\"float-left\">Back</ion-button>\r\n        <ion-button class=\"float-right\">Next</ion-button>\r\n      </ion-footer>\r\n    </ng-container>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    ...importNgSwitch(),\r\n    IfComponent,\r\n    DocumentPageComponent,\r\n    DocumentSectionComponent,\r\n    QuestionTemplateDirective,\r\n    ...importInputTypes(),\r\n    ...importQuestionTypes(),\r\n    TemplateMenuModal\r\n  ]\r\n})\r\nexport class DocumentBuilderPage extends AngularComponent() {  \r\n  protected readonly formFillerRoute = inject(FormFillerRoute);\r\n  protected readonly formFillerStore = inject(FormFillerStore);\r\n\r\n  QuestionType = QuestionType;\r\n\r\n  templates$ = this.formFillerStore\r\n\r\n  document$ = merge(\r\n    this.formFillerStore.getTemplateRequest$(this.formFillerRoute.lastDocumentId$),\r\n  ).pipe(\r\n    switchMap(() => this.formFillerStore.writingDocument$),\r\n    shareReplay()\r\n  );\r\n\r\n  submit = clickReaction<SiteDocument>(document$ => this.formFillerStore.submitDocument$(document$).pipe(\r\n    this.takeUntilDestroyed()\r\n  ));\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "DocumentPageComponent",
            "id": "component-DocumentPageComponent-d64876b186d63116f7ef6aa8cac698e52966c4c1d1a7de6b964bc71723e11a701e606b16b63386c075c718c903c55dab609c2dadc879de570d3c9baa16c0f0e3",
            "file": "src/app/core/pages/document-builder/components/document-page/document-page.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "document-page[page]",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-item lines=\"none\">\n  <ion-label>{{ page.PageTitle }}</ion-label>\n</ion-item>\n<ng-content></ng-content>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "page",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "Page",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Page } from \"src/app/core/stores/site-document/site-document.store\";\r\n\r\n@Component({\r\n  selector: \"document-page[page]\",\r\n  template: `\r\n    <ion-item lines=\"none\">\r\n      <ion-label>{{ page.PageTitle }}</ion-label>\r\n    </ion-item>\r\n    <ng-content></ng-content>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [IonicModule]\r\n})\r\nexport class DocumentPageComponent {\r\n  @Input()\r\n  page!: Page;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "DocumentSectionComponent",
            "id": "component-DocumentSectionComponent-add9b009c2f9d37c99439a369cf05ae21358d1d3672ec550e8f7127a1facefa6be3ac0b27a6ac27bc6fa5970d3ea97fb38e62e979f4010681d6ed2112c9578c3",
            "file": "src/app/core/pages/document-builder/components/document-section/document-section.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "document-section[section]",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-label>{{ section.SectionTitle }}</ion-label>\n<ng-container *rxIf=\"section.IsRepeatable\">\n  <ion-button color=\"secondary\" fill=\"clear\">\n    <ion-icon name=\"duplicate-outline\"></ion-icon>\n  </ion-button>\n  <ion-button color=\"secondary\" fill=\"clear\">\n    <ion-icon name=\"remove-circle-outline\"></ion-icon>\n  </ion-button>\n</ng-container>\n\n<ng-container *rxFor=\"let question of section.Questions\">\n  <ng-container *ngTemplateOutlet=\"questions; context: { $implicit: question }\"></ng-container>\n</ng-container>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "section",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "Section",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "questions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 51,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "QuestionTemplateDirective, {read: TemplateRef}"
                        }
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { NgTemplateOutlet } from \"@angular/common\";\r\nimport { ChangeDetectionStrategy, Component, ContentChild, Directive, Input, TemplateRef } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question, Section } from \"src/app/core/stores/site-document/site-document.store\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\n\r\n@Directive({\r\n  selector: \"ng-template[questions]\",\r\n  standalone: true\r\n})\r\nexport class QuestionTemplateDirective {\r\n  @Input()\r\n  questions!: Question[];\r\n\r\n  static ngTemplateContextGuard(dir: QuestionTemplateDirective, ctx: unknown): ctx is { $implicit: Question } {\r\n    return true;\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: \"document-section[section]\",\r\n  template: `\r\n    <ion-label>{{ section.SectionTitle }}</ion-label>\r\n    <ng-container *rxIf=\"section.IsRepeatable\">\r\n      <ion-button color=\"secondary\" fill=\"clear\">\r\n        <ion-icon name=\"duplicate-outline\"></ion-icon>\r\n      </ion-button>\r\n      <ion-button color=\"secondary\" fill=\"clear\">\r\n        <ion-icon name=\"remove-circle-outline\"></ion-icon>\r\n      </ion-button>\r\n    </ng-container>\r\n\r\n    <ng-container *rxFor=\"let question of section.Questions\">\r\n      <ng-container *ngTemplateOutlet=\"questions; context: { $implicit: question }\"></ng-container>\r\n    </ng-container>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    NgTemplateOutlet,\r\n    QuestionTemplateDirective\r\n  ]\r\n})\r\nexport class DocumentSectionComponent {\r\n  @Input()\r\n  section!: Section;\r\n\r\n  @ContentChild(QuestionTemplateDirective, { read: TemplateRef }) \r\n  questions!: TemplateRef<unknown>;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "FileUploadComponent",
            "id": "component-FileUploadComponent-6b64a8200df6992820a9e949ffad61f70c20d58c3975e2df7c8e48d29fcebc1d5a221e59d627b6beec17531fdc4aa477b247960899acb73b34762e4106d95b74",
            "file": "src/app/core/pages/document-builder/components/question-types/extras/file-upload/file-upload.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "file-upload",
            "styleUrls": [],
            "styles": [],
            "template": "<if [condition]=\"filename == null\">\n  <ion-button show fill=\"clear\">\n    <upload></upload>\n    <ion-icon name=\"cloud-upload-outline\"></ion-icon>\n  </ion-button>\n\n  <ion-button else fill=\"clear\" color=\"danger\">\n    <ion-icon name=\"trash-bin-outline\"></ion-icon>\n  </ion-button>\n</if>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "filename",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 29
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { IfComponent } from \"src/app/shared/components/if/if.component\";\r\nimport { UploadComponent } from \"src/app/shared/components/upload/upload.component\";\r\n\r\n@Component({\r\n  selector: \"file-upload\",\r\n  template: `\r\n    <if [condition]=\"filename == null\">\r\n      <ion-button show fill=\"clear\">\r\n        <upload></upload>\r\n        <ion-icon name=\"cloud-upload-outline\"></ion-icon>\r\n      </ion-button>\r\n\r\n      <ion-button else fill=\"clear\" color=\"danger\">\r\n        <ion-icon name=\"trash-bin-outline\"></ion-icon>\r\n      </ion-button>\r\n    </if>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    IfComponent,\r\n    UploadComponent\r\n  ]\r\n})\r\nexport class FileUploadComponent {\r\n  filename: string | null = null;\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "IfComponent",
            "id": "component-IfComponent-1ffa5894ba5369dfb224a6cbe4b8402e3b954c83712f3b029270ae9e972d1f75bee0dad6e519fc10fcbe5bd4a38d131579d51f182ffb17a7c3c491f508c0e124",
            "file": "src/app/shared/components/if/if.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "if[condition]",
            "styleUrls": [],
            "styles": [
                "\n    :host { display: contents }\n  "
            ],
            "template": "<ng-content *rxIf=\"condition\" select=\"[show]\"></ng-content>\n<ng-content *rxIf=\"!condition\" select=\"[else]\"></ng-content>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "condition",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IfModule } from \"@rx-angular/template/if\";\r\n\r\n@Component({\r\n  selector: 'if[condition]',\r\n  styles: [`\r\n    :host { display: contents }\r\n  `],\r\n  template:`\r\n    <ng-content *rxIf=\"condition\" select=\"[show]\"></ng-content>\r\n    <ng-content *rxIf=\"!condition\" select=\"[else]\"></ng-content>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IfModule\r\n  ]\r\n})\r\nexport class IfComponent {\r\n  @Input() condition!: boolean;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n    :host { display: contents }\n  \n"
        },
        {
            "name": "LabelComponent",
            "id": "component-LabelComponent-f5177c8e3f9b669689441f0a0b0c6942fe28b1765bc5d01477c046cd4517a466efc7fcce9967125f996d185d64553485f54da94c0673da9507e94e6d34431114",
            "file": "src/app/core/pages/document-builder/components/question-types/00-label/label.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "label-question[question]",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-item lines=\"none\">\n  <question-text>{{ question.QuestionText }}</question-text>\n  <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\"></camera-capture>\n  <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\"></file-upload>\n</ion-item>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "question",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/site-document.store\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\n\r\n@Component({\r\n  selector: 'label-question[question]',\r\n  template: `\r\n    <ion-item lines=\"none\">\r\n      <question-text>{{ question.QuestionText }}</question-text>\r\n      <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\"></camera-capture>\r\n      <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\"></file-upload>\r\n    </ion-item>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    QuestionTextComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent\r\n  ]\r\n})\r\nexport class LabelComponent {\r\n  @Input()\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "LinkedDatesComponent",
            "id": "component-LinkedDatesComponent-1ac5079dc200aa29811d2a752786a5e05c3248abf2313740004318ff28bb345156aa72c1ccfa7d06ba9eb32fb002ddb55fe5bb65bfc1d5fe729a69a03e400e5f",
            "file": "src/app/core/pages/document-builder/components/question-types/18-linked-dates/linked-dates.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "linked-dates-question[question]",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n  </ion-item>\n  <datetime-picker presentation=\"date\"></datetime-picker>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.CascadeOptionsText }}</question-text>\n  </ion-item>\n  <datetime-picker presentation=\"date\"></datetime-picker>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "question",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/site-document.store\";\r\nimport { DatetimePickerComponent } from \"src/app/shared/components/datetime-picker/datetime-picker.component\";\r\nimport { QuestionTextComponent } from \"../extras\";\r\n\r\n@Component({\r\n  selector: \"linked-dates-question[question]\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n      </ion-item>\r\n      <datetime-picker presentation=\"date\"></datetime-picker>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.CascadeOptionsText }}</question-text>\r\n      </ion-item>\r\n      <datetime-picker presentation=\"date\"></datetime-picker>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    QuestionTextComponent,\r\n    DatetimePickerComponent\r\n  ]\r\n})\r\nexport class LinkedDatesComponent {\r\n  @Input()\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "LinkedTimeComponent",
            "id": "component-LinkedTimeComponent-55f37cbf8b857a0bf2cf71636cb0d248f0039df3eeff209a29c6f7c121a01c088ec92c7ef93cd77f57b24bc601152cd78e56424da67d15412159ed2ad41d03bd",
            "file": "src/app/core/pages/document-builder/components/question-types/33-linked-time/linked-time.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "linked-time[question]",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "question",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/site-document.store\";\r\nimport { QuestionTextComponent } from \"../extras\";\r\n\r\n@Component({\r\n  selector: \"linked-time[question]\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [IonicModule, QuestionTextComponent]\r\n})\r\nexport class LinkedTimeComponent {\r\n  @Input()\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "LocalOperativeSearchComponent",
            "id": "component-LocalOperativeSearchComponent-1823702a67bf29e9d61987471f089b17e2edd592ece71ea316604712c35cd967d55ebd2070c2240f616da80b10dadf219d7fbf8333f34730009a6747ca60503f",
            "file": "src/app/shared/modals/operative-list/components/local-operative-search/local-operative-search.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "local-operative-search",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-searchbar class=\"animate__animated animate__fadeIn\"></ion-searchbar>\n\n<ion-list>\n  <ion-item\n    *rxIf=\"user$; let user\"\n    (click)=\"select.emit({ ID: user.Id, Name: user.FirstName + ' ' + user.LastName })\"\n    class=\"animate__animated animate__flipInX animate__faster\"\n    button>\n      {{ user.Id }} - {{ user.FirstName }} {{ user.LastName }}\n  </ion-item>\n  <ion-item-sliding *rxFor=\"let op of operatives$; last as isLast\">\n    <ion-item\n      class=\"animate__animated animate__flipInX animate__faster\"\n      button>\n      {{ op.ID }} - {{ op.Name }}\n    </ion-item>\n    <ion-item-options side=\"end\">\n      <ion-item-option color=\"danger\">\n        <ion-icon name=\"trash-bin-outline\"></ion-icon>\n      </ion-item-option>\n    </ion-item-options>\n  </ion-item-sliding>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "select",
                    "defaultValue": "new EventEmitter<Operative>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "operatives$",
                    "defaultValue": "this.operativesStore.operatives$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "operativesStore",
                    "defaultValue": "inject(OperativesStore)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "user$",
                    "defaultValue": "this.userStore.user$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "userStore",
                    "defaultValue": "inject(UserStore)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, inject, Output } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Operative, OperativesStore } from \"src/app/core/stores/operative/operatives.store\";\r\nimport { UserStore } from \"src/app/core/stores/user/user.store\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { AngularComponent } from \"src/app/shared/lifecycles\";\r\n\r\n@Component({\r\n  selector: \"local-operative-search\",\r\n  template: `\r\n    <ion-searchbar class=\"animate__animated animate__fadeIn\"></ion-searchbar>\r\n\r\n    <ion-list>\r\n      <ion-item \r\n        *rxIf=\"user$; let user\"\r\n        (click)=\"select.emit({ ID: user.Id, Name: user.FirstName + ' ' + user.LastName })\"\r\n        class=\"animate__animated animate__flipInX animate__faster\" \r\n        button>\r\n          {{ user.Id }} - {{ user.FirstName }} {{ user.LastName }}\r\n      </ion-item>\r\n      <ion-item-sliding *rxFor=\"let op of operatives$; last as isLast\">\r\n        <ion-item \r\n          class=\"animate__animated animate__flipInX animate__faster\" \r\n          button>\r\n          {{ op.ID }} - {{ op.Name }}\r\n        </ion-item>\r\n        <ion-item-options side=\"end\">\r\n          <ion-item-option color=\"danger\">\r\n            <ion-icon name=\"trash-bin-outline\"></ion-icon>\r\n          </ion-item-option>\r\n        </ion-item-options>\r\n      </ion-item-sliding>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n  ]\r\n})\r\nexport class LocalOperativeSearchComponent extends AngularComponent() {\r\n  userStore = inject(UserStore);\r\n  operativesStore = inject(OperativesStore);\r\n\r\n  @Output()\r\n  select = new EventEmitter<Operative>();\r\n\r\n  user$ = this.userStore.user$;\r\n  operatives$ = this.operativesStore.operatives$;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "MultiSelectableComponent",
            "id": "component-MultiSelectableComponent-a82f73d9a662f5bd6e570b82b9b705b31af1d370f0b26955cdba5c4cc90ab9dc88c524b4fee317fb9f9b1cd03d10f6d71764831887d7d29df356ce4d1cfbe9ae",
            "file": "src/app/shared/components/multi-selectable/multi-selectable.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "multi-selectable",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-item [id]=\"id\" [unpatch] button>\n  <ion-label [color]=\"values.length > 0 ? 'medium' : ''\" class=\"ion-text-wrap\">\n    <if [condition]=\"values.length === 0\">\n      <ion-label show color=\"medium\" class=\"ion-text-wrap\">{{ placeholder }}</ion-label>\n      <ion-label else>\n        <p *rxFor=\"let text of selectedTexts\">{{ text }}</p>\n      </ion-label>\n    </if>\n  </ion-label>\n  <ion-button *rxIf=\"canClear && values.length > 0\" (click)=\"$event.stopPropagation(); values = []; valuesChange.emit([])\" fill=\"clear\">\n    <ion-icon name=\"close-outline\" color=\"danger\" slot=\"icon-only\"></ion-icon>\n  </ion-button>\n  <ion-icon name=\"caret-down-outline\" slot=\"end\"></ion-icon>\n</ion-item>\n\n<ion-modal #modal [trigger]=\"id\">\n  <ng-template>\n    <ion-header>\n      <ion-toolbar>\n        <ion-buttons slot=\"start\">\n          <ion-button (click)=\"modal.dismiss()\" [unpatch] fill=\"clear\">\n            <ion-icon name=\"arrow-back-outline\" slot=\"icon-only\"></ion-icon>\n          </ion-button>\n        </ion-buttons>\n        <ion-title class=\"ion-text-center\">{{ title }}</ion-title>\n      </ion-toolbar>\n      <ion-toolbar>\n        <ion-searchbar [(ngModel)]=\"searchValue\" placeholder=\"Search\"></ion-searchbar>\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content>\n      <cdk-virtual-scroll-viewport itemSize=\"50\" minBufferPx=\"1200\" maxBufferPx=\"1200\">\n        <ion-list>\n          <ion-item\n            *cdkVirtualFor=\"let item of items | fuse: {\n              search: searchValue,\n              keys: itemText != null\n                ? [itemText]\n                : []\n            };\n            last as isLast\"\n            (click)=\"select(item)\"\n            [lines]=\"isLast ? 'none' : 'inset'\"\n            button>\n            <ion-label class=\"ion-text-wrap\">{{ itemText != null ? item[itemText] : item }}</ion-label>\n            <ion-icon\n              *rxIf=\"selectedValues.includes(itemVal != null ? item[itemVal] : item)\"\n              name=\"checkmark-outline\"\n              slot=\"end\">\n            </ion-icon>\n          </ion-item>\n        </ion-list>\n      </cdk-virtual-scroll-viewport>\n    </ion-content>\n  </ng-template>\n</ion-modal>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "canClear",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 117,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 90,
                    "type": "T[]",
                    "decorators": []
                },
                {
                    "name": "itemText",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 93,
                    "type": " | null",
                    "decorators": []
                },
                {
                    "name": "itemVal",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 96,
                    "type": " | null",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 84,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "searchValue",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 120,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 87,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "values",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 99,
                    "type": "T[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "valuesChange",
                    "defaultValue": "new EventEmitter<T[]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 114,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "id",
                    "defaultValue": "crypto.randomUUID()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 81
                }
            ],
            "methodsClass": [
                {
                    "name": "select",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 122,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ScrollingModule } from \"@angular/cdk/scrolling\";\r\nimport { Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { importRxTemplate } from \"../../imports\";\r\nimport { FusePipe } from \"../../pipes\";\r\nimport { IfComponent } from \"../if/if.component\";\r\n\r\n@Component({\r\n  selector: \"multi-selectable\",\r\n  template: `\r\n    <ion-item [id]=\"id\" [unpatch] button>\r\n      <ion-label [color]=\"values.length > 0 ? 'medium' : ''\" class=\"ion-text-wrap\">\r\n        <if [condition]=\"values.length === 0\">\r\n          <ion-label show color=\"medium\" class=\"ion-text-wrap\">{{ placeholder }}</ion-label>\r\n          <ion-label else>\r\n            <p *rxFor=\"let text of selectedTexts\">{{ text }}</p>\r\n          </ion-label>\r\n        </if>\r\n      </ion-label>\r\n      <ion-button *rxIf=\"canClear && values.length > 0\" (click)=\"$event.stopPropagation(); values = []; valuesChange.emit([])\" fill=\"clear\">\r\n        <ion-icon name=\"close-outline\" color=\"danger\" slot=\"icon-only\"></ion-icon>\r\n      </ion-button>\r\n      <ion-icon name=\"caret-down-outline\" slot=\"end\"></ion-icon>\r\n    </ion-item>\r\n\r\n    <ion-modal #modal [trigger]=\"id\">\r\n      <ng-template>\r\n        <ion-header>\r\n          <ion-toolbar>\r\n            <ion-buttons slot=\"start\">\r\n              <ion-button (click)=\"modal.dismiss()\" [unpatch] fill=\"clear\">\r\n                <ion-icon name=\"arrow-back-outline\" slot=\"icon-only\"></ion-icon>\r\n              </ion-button>\r\n            </ion-buttons>\r\n            <ion-title class=\"ion-text-center\">{{ title }}</ion-title>\r\n          </ion-toolbar>\r\n          <ion-toolbar>\r\n            <ion-searchbar [(ngModel)]=\"searchValue\" placeholder=\"Search\"></ion-searchbar>\r\n          </ion-toolbar>\r\n        </ion-header>\r\n\r\n        <ion-content>\r\n          <cdk-virtual-scroll-viewport itemSize=\"50\" minBufferPx=\"1200\" maxBufferPx=\"1200\">\r\n            <ion-list>\r\n              <ion-item \r\n                *cdkVirtualFor=\"let item of items | fuse: { \r\n                  search: searchValue,\r\n                  keys: itemText != null \r\n                    ? [itemText]\r\n                    : []\r\n                }; \r\n                last as isLast\" \r\n                (click)=\"select(item)\"\r\n                [lines]=\"isLast ? 'none' : 'inset'\" \r\n                button>\r\n                <ion-label class=\"ion-text-wrap\">{{ itemText != null ? item[itemText] : item }}</ion-label>\r\n                <ion-icon \r\n                  *rxIf=\"selectedValues.includes(itemVal != null ? item[itemVal] : item)\" \r\n                  name=\"checkmark-outline\" \r\n                  slot=\"end\">\r\n                </ion-icon>\r\n              </ion-item>\r\n            </ion-list>\r\n          </cdk-virtual-scroll-viewport>\r\n        </ion-content>\r\n      </ng-template>\r\n    </ion-modal>\r\n  `,\r\n  standalone: true,\r\n  imports: [\r\n    IonicModule,\r\n    IfComponent,\r\n    ...importRxTemplate(),\r\n    ScrollingModule,\r\n    FormsModule,\r\n    FusePipe\r\n  ]\r\n})\r\nexport class MultiSelectableComponent<T = unknown> {\r\n  id = crypto.randomUUID();\r\n\r\n  @Input()\r\n  placeholder: string = \"\";\r\n\r\n  @Input()\r\n  title: string = \"\";\r\n\r\n  @Input()\r\n  items: T[] = [];\r\n  \r\n  @Input()\r\n  itemText: keyof T | null = null;\r\n\r\n  @Input()\r\n  itemVal: keyof T | null = null;\r\n\r\n  @Input()\r\n  values: T[] = [];\r\n\r\n  get selectedValues() {\r\n    return this.itemVal != null\r\n      ? this.values.map(val => val[this.itemVal as keyof T] + \"\")\r\n      : this.values.map(val => val + \"\");\r\n  }\r\n\r\n  get selectedTexts() {\r\n    return this.itemText != null\r\n      ? this.values.map(val => val[this.itemText as keyof T] + \"\")\r\n      : this.values.map(val => val + \"\");\r\n  }\r\n\r\n  @Output()\r\n  valuesChange = new EventEmitter<T[]>();\r\n\r\n  @Input()\r\n  canClear: boolean = true;\r\n\r\n  @Input()\r\n  searchValue: string = \"\";\r\n\r\n  select(item: T) {\r\n    const val = this.itemVal != null\r\n      ? item[this.itemVal as keyof T] + \"\"\r\n      : item + \"\";\r\n\r\n    this.values = this.selectedValues.includes(val)\r\n      ? this.values.filter(itemVal => this.itemVal != null \r\n        ? (itemVal[this.itemVal] + \"\") !== val\r\n        : (itemVal + \"\") !== val\r\n      )\r\n    : [...this.values, item];\r\n\r\n    this.valuesChange.emit(this.values);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "accessors": {
                "selectedValues": {
                    "name": "selectedValues",
                    "getSignature": {
                        "name": "selectedValues",
                        "type": "",
                        "returnType": "",
                        "line": 101
                    }
                },
                "selectedTexts": {
                    "name": "selectedTexts",
                    "getSignature": {
                        "name": "selectedTexts",
                        "type": "",
                        "returnType": "",
                        "line": 107
                    }
                }
            }
        },
        {
            "name": "NumberComponent",
            "id": "component-NumberComponent-b20a201c30419a925ce387b16d60d0ebc30cd86072bebfef7fcb7acca38ee5165c5ed4b2bd2852cdfa44f72c8fd9143335b0c53e88b761be3cb5751bd68bcc13",
            "file": "src/app/core/pages/document-builder/components/question-types/12-number/number.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "number-question[question]",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n    <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\"></camera-capture>\n    <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\"></file-upload>\n  </ion-item>\n\n  <ion-item>\n    <ion-input label=\"\" type=\"number\"></ion-input>\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "question",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/site-document.store\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\n\r\n@Component({\r\n  selector: \"number-question[question]\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n        <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\"></camera-capture>\r\n        <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\"></file-upload>\r\n      </ion-item>\r\n\r\n      <ion-item>\r\n        <ion-input label=\"\" type=\"number\"></ion-input>\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  standalone: true,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    QuestionTextComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent\r\n  ]\r\n})\r\nexport class NumberComponent {\r\n  @Input()\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "OnlineOperativeSearchComponent",
            "id": "component-OnlineOperativeSearchComponent-8fd81c7809ec5a62236de761f200f726015152ec605391ee07012c6845d0e92dcf57ecf12c8e1d222ee46e09c72604ee4b8e10e3c3b615fecdda1e734f2e0a2a",
            "file": "src/app/shared/modals/operative-list/components/online-operative-search/online-operative-search.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "online-operative-search",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-searchbar\n  class=\"animate__animated animate__fadeIn\">\n</ion-searchbar>\n\n<ion-list>\n  <ion-item lines=\"none\">\n    <ion-skeleton-text [animated]=\"true\"></ion-skeleton-text>\n  </ion-item>\n  <ion-item lines=\"none\">\n    <ion-skeleton-text [animated]=\"true\"></ion-skeleton-text>\n  </ion-item>\n  <ion-item lines=\"none\">\n    <ion-skeleton-text [animated]=\"true\"></ion-skeleton-text>\n  </ion-item>\n  <ion-item lines=\"none\">\n    <ion-skeleton-text [animated]=\"true\"></ion-skeleton-text>\n  </ion-item>\n</ion-list>\n\n<cdk-virtual-scroll-viewport *rxLet=\"searchResults$; let results\" itemSize=\"50\" minBufferPx=\"1200\" maxBufferPx=\"1200\">\n  <ion-item\n    *cdkVirtualFor=\"let op of results; last as isLast\"\n    [lines]=\"isLast ? 'none' : 'inset'\"\n    class=\"animate__animated animate__flipInX animate__faster\"\n    button>\n    {{ op.ID }} - {{ op.Name }}\n  </ion-item>\n</cdk-virtual-scroll-viewport>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "operativesStore",
                    "defaultValue": "inject(OperativesStore)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "searchResults$",
                    "defaultValue": "this.operativesStore.searchResults$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 51
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ScrollingModule } from \"@angular/cdk/scrolling\";\r\nimport { ChangeDetectionStrategy, Component, inject } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { AngularComponent } from \"src/app/shared/lifecycles\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { OperativesStore } from \"src/app/core/stores/operative/operatives.store\";\r\n\r\n@Component({\r\n  selector: \"online-operative-search\",\r\n  template: `\r\n    <ion-searchbar \r\n      class=\"animate__animated animate__fadeIn\">\r\n    </ion-searchbar>\r\n\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <ion-skeleton-text [animated]=\"true\"></ion-skeleton-text>\r\n      </ion-item>\r\n      <ion-item lines=\"none\">\r\n        <ion-skeleton-text [animated]=\"true\"></ion-skeleton-text>\r\n      </ion-item>\r\n      <ion-item lines=\"none\">\r\n        <ion-skeleton-text [animated]=\"true\"></ion-skeleton-text>\r\n      </ion-item>\r\n      <ion-item lines=\"none\">\r\n        <ion-skeleton-text [animated]=\"true\"></ion-skeleton-text>\r\n      </ion-item>\r\n    </ion-list>\r\n\r\n    <cdk-virtual-scroll-viewport *rxLet=\"searchResults$; let results\" itemSize=\"50\" minBufferPx=\"1200\" maxBufferPx=\"1200\">\r\n      <ion-item \r\n        *cdkVirtualFor=\"let op of results; last as isLast\"\r\n        [lines]=\"isLast ? 'none' : 'inset'\"\r\n        class=\"animate__animated animate__flipInX animate__faster\" \r\n        button>\r\n        {{ op.ID }} - {{ op.Name }}\r\n      </ion-item>\r\n    </cdk-virtual-scroll-viewport>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    ScrollingModule\r\n  ]\r\n})\r\nexport class OnlineOperativeSearchComponent extends AngularComponent() {\r\n  operativesStore = inject(OperativesStore);\r\n\r\n  searchResults$ = this.operativesStore.searchResults$;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "OperativeListComponent",
            "id": "component-OperativeListComponent-ac0520c9e7bf9a7ca90cd10f959ceeb55a46667e87cd3374c9a3de78aabba857e73dad42183c96372c6e0f8b5756964f833b394e43eda084630d38148552385f",
            "file": "src/app/core/pages/document-builder/components/question-types/10-operative-list/operative-list.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "operative-list-question[question]",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text>{{ question.QuestionText }}</question-text>\n    <ion-button *rxIf=\"isMobileApp\" fill=\"clear\" slot=\"end\">\n      <ion-icon name=\"scan-outline\" slot=\"icon-only\"></ion-icon>\n    </ion-button>\n    <ion-button fill=\"clear\" slot=\"end\">\n      <ion-icon name=\"search-outline\" slot=\"icon-only\"></ion-icon>\n    </ion-button>\n  </ion-item>\n</ion-list>\n\n<ion-list>\n  <ion-item-sliding *rxFor=\"let operative of question.Operatives; last as isLast\">\n    <ion-item [lines]=\"isLast ? 'none' : 'inset'\">\n      {{ operative.AttendeeID }}: {{ operative.Name }}\n    </ion-item>\n\n    <ion-item-options side=\"end\">\n      <ion-item-option color=\"danger\">\n        <ion-icon name=\"trash-outline\" slot=\"icon-only\"></ion-icon>\n      </ion-item-option>\n    </ion-item-options>\n  </ion-item-sliding>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "question",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isMobileApp",
                    "defaultValue": "isMobileApp()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 51
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/site-document.store\";\r\nimport { BarcodeScannerDirective } from \"src/app/shared/directives\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { isMobileApp } from \"src/app/shared/plugins/platform.plugin\";\r\nimport { QuestionTextComponent } from \"../extras\";\r\n\r\n@Component({\r\n  selector: \"operative-list-question[question]\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text>{{ question.QuestionText }}</question-text>\r\n        <ion-button *rxIf=\"isMobileApp\" fill=\"clear\" slot=\"end\">\r\n          <ion-icon name=\"scan-outline\" slot=\"icon-only\"></ion-icon>\r\n        </ion-button>\r\n        <ion-button fill=\"clear\" slot=\"end\">\r\n          <ion-icon name=\"search-outline\" slot=\"icon-only\"></ion-icon>\r\n        </ion-button>\r\n      </ion-item>\r\n    </ion-list>\r\n\r\n    <ion-list>\r\n      <ion-item-sliding *rxFor=\"let operative of question.Operatives; last as isLast\">\r\n        <ion-item [lines]=\"isLast ? 'none' : 'inset'\">\r\n          {{ operative.AttendeeID }}: {{ operative.Name }}\r\n        </ion-item>\r\n\r\n        <ion-item-options side=\"end\">\r\n          <ion-item-option color=\"danger\">\r\n            <ion-icon name=\"trash-outline\" slot=\"icon-only\"></ion-icon>\r\n          </ion-item-option>\r\n        </ion-item-options>\r\n      </ion-item-sliding>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule, \r\n    ...importRxTemplate(),\r\n    BarcodeScannerDirective,\r\n    QuestionTextComponent\r\n  ]\r\n})\r\nexport class OperativeListComponent {\r\n  @Input()\r\n  question!: Question;\r\n\r\n  isMobileApp = isMobileApp();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "OperativeListModal",
            "id": "component-OperativeListModal-f7b1d181e1dc4ef979421c02858b24abf449582f038f71855955aea4fab346d973ad490340aeb8a8a4283e235fa7429ffabc1c3428dc4eeeb7b068a0574c3119",
            "file": "src/app/shared/modals/operative-list/operative-list.modal.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "operative-search-modal[trigger]",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-modal #modal [trigger]=\"trigger\" [isOpen]=\"isOpen\">\n  <ng-template>\n    <ion-header>\n      <ion-toolbar>\n        <ion-title class=\"ion-text-center\">Select an Operative</ion-title>\n        <ion-buttons slot=\"end\">\n          <ion-button (click)=\"modal.dismiss()\" [unpatch]>\n            <ion-icon name=\"close-outline\" slot=\"icon-only\"></ion-icon>\n          </ion-button>\n        </ion-buttons>\n      </ion-toolbar>\n\n      <ion-toolbar>\n        <ion-segment class=\"w-full\">\n          <ion-segment-button value=\"local\">\n            <ion-icon name=\"phone-portrait-outline\"></ion-icon>\n          </ion-segment-button>\n          <ion-segment-button value=\"online\">\n            <ion-icon name=\"wifi-outline\"></ion-icon>\n          </ion-segment-button>\n        </ion-segment>\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content class=\"ion-padding\">\n      <local-operative-search></local-operative-search>\n      <online-operative-search></online-operative-search>\n    </ion-content>\n  </ng-template>\n</ion-modal>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "trigger",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { importRxTemplate } from \"../../imports\";\r\nimport { LocalOperativeSearchComponent, OnlineOperativeSearchComponent } from \"./components\";\r\n\r\n@Component({\r\n  selector: \"operative-search-modal[trigger]\",\r\n  template: `\r\n    <ion-modal #modal [trigger]=\"trigger\" [isOpen]=\"isOpen\">\r\n      <ng-template>\r\n        <ion-header>\r\n          <ion-toolbar>\r\n            <ion-title class=\"ion-text-center\">Select an Operative</ion-title>\r\n            <ion-buttons slot=\"end\">\r\n              <ion-button (click)=\"modal.dismiss()\" [unpatch]>\r\n                <ion-icon name=\"close-outline\" slot=\"icon-only\"></ion-icon>\r\n              </ion-button>\r\n            </ion-buttons>\r\n          </ion-toolbar>\r\n\r\n          <ion-toolbar>\r\n            <ion-segment class=\"w-full\">\r\n              <ion-segment-button value=\"local\">\r\n                <ion-icon name=\"phone-portrait-outline\"></ion-icon>\r\n              </ion-segment-button>\r\n              <ion-segment-button value=\"online\">\r\n                <ion-icon name=\"wifi-outline\"></ion-icon>\r\n              </ion-segment-button>\r\n            </ion-segment>\r\n          </ion-toolbar>\r\n        </ion-header>\r\n      \r\n        <ion-content class=\"ion-padding\">\r\n          <local-operative-search></local-operative-search>\r\n          <online-operative-search></online-operative-search>\r\n        </ion-content>\r\n      </ng-template>\r\n    </ion-modal>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    LocalOperativeSearchComponent,\r\n    OnlineOperativeSearchComponent\r\n  ]\r\n})\r\nexport class OperativeListModal {\r\n  @Input()\r\n  trigger!: string;\r\n  \r\n  @Input()\r\n  isOpen: boolean = false;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "QuestionTextComponent",
            "id": "component-QuestionTextComponent-efba3a76ed75b15a5f1a29d14085f495ba7c23b0d69572524ed799486cb10a6a9c8213a644994acae4cf84059b086a2211c9fbc6be4607a1f7122915094e5164",
            "file": "src/app/core/pages/document-builder/components/question-types/extras/question-text/question-text.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "question-text",
            "styleUrls": [],
            "styles": [],
            "template": "<p class=\"ion-text-wrap\">\n  <ng-content></ng-content>\n  <span *rxIf=\"required\" class=\"text-red-500\">*</span>\n</p>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\n\r\n@Component({\r\n  selector: \"question-text\",\r\n  template: `\r\n    <p class=\"ion-text-wrap\">\r\n      <ng-content></ng-content>\r\n      <span *rxIf=\"required\" class=\"text-red-500\">*</span>\r\n    </p>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [...importRxTemplate()]\r\n})\r\nexport class QuestionTextComponent {\r\n  @Input()\r\n  required: boolean = false;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "QueueDurationComponent",
            "id": "component-QueueDurationComponent-f6916162bc2e7c75a5594259e8ffe633f425dd0a5db32bef1ef291ae9ab0dddd751e39b7c42d5a5830c84dacc054bf7ff3fbb1bd968b644baa528413cb891e08",
            "file": "src/app/core/pages/document-builder/components/input-types/queue-duration/queue-duration.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "queue-duration",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-label class=\"text-lg\">Queue Duration</ion-label>\n\n<ion-grid>\n  <ion-row>\n    <ion-col>\n      <ion-input label=\"Duration\" labelPlacement=\"floating\" type=\"number\" min=\"0\"></ion-input>\n    </ion-col>\n    <ion-col>\n      <ion-select label=\"Type\" labelPlacement=\"floating\">\n        <ion-select-option value=\"Mins\">Minutes</ion-select-option>\n        <ion-select-option value=\"Hours\">Hours</ion-select-option>\n        <ion-select-option value=\"Days\">Days</ion-select-option>\n      </ion-select>\n    </ion-col>\n  </ion-row>\n</ion-grid>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\n\r\n@Component({\r\n  selector: \"queue-duration\",\r\n  template: `\r\n    <ion-label class=\"text-lg\">Queue Duration</ion-label>\r\n    \r\n    <ion-grid>\r\n      <ion-row>\r\n        <ion-col>\r\n          <ion-input label=\"Duration\" labelPlacement=\"floating\" type=\"number\" min=\"0\"></ion-input>\r\n        </ion-col>\r\n        <ion-col>\r\n          <ion-select label=\"Type\" labelPlacement=\"floating\">\r\n            <ion-select-option value=\"Mins\">Minutes</ion-select-option>\r\n            <ion-select-option value=\"Hours\">Hours</ion-select-option>\r\n            <ion-select-option value=\"Days\">Days</ion-select-option>\r\n          </ion-select>\r\n        </ion-col>\r\n      </ion-row>\r\n    </ion-grid>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [IonicModule]\r\n})\r\nexport class QueueDurationComponent {\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "QueueSelectComponent",
            "id": "component-QueueSelectComponent-563d45b87579dc61ad31753f65b03fee2756a21b77da578d1868c8aaca691f875345836bc60524387c3593320f48971ebd8b31e399b67a7fcf0a0165abc9ce5b",
            "file": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "queue-select",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-card>\n  <ion-card-header class=\"ion-text-center\">\n    {{ title }}\n  </ion-card-header>\n\n  <ion-card-content>\n    <ion-list>\n      <selectable\n        placeholder=\"Queues\"\n        [value]=\"value$ | push\"\n        (valueChange)=\"queueIdChange.emit($event!.id)\"\n        [items]=\"queues\"\n        itemText=\"name\"\n        [canClear]=\"false\">\n      </selectable>\n    </ion-list>\n  </ion-card-content>\n</ion-card>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "queueId",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "number | null",
                    "decorators": []
                },
                {
                    "name": "queues",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "Array<literal type>",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "\"Select Queue\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "queueIdChange",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "value$",
                    "defaultValue": "merge(\r\n    this.afterViewInit$,\r\n    this.input$(\"queueId\")\r\n  ).pipe(\r\n    map(() => this.queues.find(q => q.id === this.queueId) || null)\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<literal type | null>",
                    "optional": false,
                    "description": "",
                    "line": 54
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AsyncPipe } from \"@angular/common\";\r\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { map, merge, Observable } from \"rxjs\";\r\nimport { SelectableComponent } from \"src/app/shared/components/selectable/selectable.component\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { AngularComponent, withAfterViewInit, withOnChanges } from \"src/app/shared/lifecycles\";\r\n\r\n@Component({\r\n  selector: \"queue-select\",\r\n  template: `\r\n    <ion-card>\r\n      <ion-card-header class=\"ion-text-center\">\r\n        {{ title }}\r\n      </ion-card-header>\r\n\r\n      <ion-card-content>\r\n        <ion-list>\r\n          <selectable \r\n            placeholder=\"Queues\"\r\n            [value]=\"value$ | push\"\r\n            (valueChange)=\"queueIdChange.emit($event!.id)\"\r\n            [items]=\"queues\" \r\n            itemText=\"name\"\r\n            [canClear]=\"false\">\r\n          </selectable>\r\n        </ion-list>\r\n      </ion-card-content>\r\n    </ion-card>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    SelectableComponent,\r\n    AsyncPipe\r\n  ]\r\n})\r\nexport class QueueSelectComponent extends AngularComponent(withAfterViewInit, withOnChanges) {\r\n\r\n  @Input()\r\n  title: string = \"Select Queue\";\r\n\r\n  @Input()\r\n  queues: Array<{ id: number, name: string }> = [];\r\n\r\n  @Input()\r\n  queueId: number | null = null;\r\n\r\n  @Output()\r\n  queueIdChange = new EventEmitter<number>();\r\n\r\n  value$: Observable<{ id: number, name: string } | null> = merge(\r\n    this.afterViewInit$,\r\n    this.input$(\"queueId\")\r\n  ).pipe(\r\n    map(() => this.queues.find(q => q.id === this.queueId) || null)\r\n  );\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "RadioGroupComponent",
            "id": "component-RadioGroupComponent-5843cadb10e20d65f2f2299aecf7ce8749c8f1fb2b5ebb37b7f92a2957c1882a450935a462ffe2b93121cd5618d34f66d8df1a0852cb67ec381d2c665799d2fb",
            "file": "src/app/core/pages/document-builder/components/question-types/02-radio-group/radio-group.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "radio-group-question[section][question]",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-item class=\"ion-no-padding\" lines=\"none\">\n  <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n  <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\"></camera-capture>\n  <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\"></file-upload>\n</ion-item>\n\n<ion-radio-group>\n  <ion-list>\n    <ion-item>\n      <ion-radio aria-label=\"\" color=\"success\" [value]=\"true\">{{ section.TableTitles[0] }}</ion-radio>\n    </ion-item>\n\n    <ion-item>\n      <ion-radio aria-label=\"\" color=\"danger\" [value]=\"false\">{{ section.TableTitles[1] }}</ion-radio>\n    </ion-item>\n\n    <ion-item>\n      <ion-radio aria-label=\"\" [value]=\"null\">{{ section.TableTitles[2] }}</ion-radio>\n    </ion-item>\n  </ion-list>\n</ion-radio-group>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "question",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "Question",
                    "decorators": []
                },
                {
                    "name": "section",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "Section",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question, Section } from \"src/app/core/stores/site-document/site-document.store\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\n\r\n@Component({\r\n  selector: \"radio-group-question[section][question]\",\r\n  template: `\r\n    <ion-item class=\"ion-no-padding\" lines=\"none\">\r\n      <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n      <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\"></camera-capture>\r\n      <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\"></file-upload>\r\n    </ion-item>\r\n\r\n    <ion-radio-group>\r\n      <ion-list>\r\n        <ion-item>\r\n          <ion-radio aria-label=\"\" color=\"success\" [value]=\"true\">{{ section.TableTitles[0] }}</ion-radio>\r\n        </ion-item>\r\n\r\n        <ion-item>\r\n          <ion-radio aria-label=\"\" color=\"danger\" [value]=\"false\">{{ section.TableTitles[1] }}</ion-radio>\r\n        </ion-item>\r\n\r\n        <ion-item>\r\n          <ion-radio aria-label=\"\" [value]=\"null\">{{ section.TableTitles[2] }}</ion-radio>\r\n        </ion-item>\r\n      </ion-list>\r\n    </ion-radio-group>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    QuestionTextComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent\r\n  ]\r\n})\r\nexport class RadioGroupComponent {\r\n  @Input()\r\n  section!: Section;\r\n  \r\n  @Input()\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "RadioGroupTextboxComponent",
            "id": "component-RadioGroupTextboxComponent-340ca6881281909544e11ef804ff9b93f306efb0f75de8e0fc341f8be15355ab73f592a7cc1a62371bf5e090d87785b3ae18c613d8ebe28c9d20610f86f5bdbf",
            "file": "src/app/core/pages/document-builder/components/question-types/07-radio-group-textbox/radio-group-textbox.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "radio-group-textbox-question[question]",
            "styleUrls": [],
            "styles": [],
            "template": "<radio-group-question [section]=\"section\" [question]=\"question\"></radio-group-question>\n\n<ion-list>\n  <ion-item>\n    <ion-textarea label=\"\" rows=\"4\"></ion-textarea>\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "question",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 29,
                    "type": "Question",
                    "decorators": []
                },
                {
                    "name": "section",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "Section",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question, Section } from \"src/app/core/stores/site-document/site-document.store\";\r\nimport { RadioGroupComponent } from \"../02-radio-group/radio-group.component\";\r\n\r\n@Component({\r\n  selector: \"radio-group-textbox-question[question]\",\r\n  template: `\r\n    <radio-group-question [section]=\"section\" [question]=\"question\"></radio-group-question>\r\n\r\n    <ion-list>\r\n      <ion-item>\r\n        <ion-textarea label=\"\" rows=\"4\"></ion-textarea>\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    RadioGroupComponent\r\n  ]\r\n})\r\nexport class RadioGroupTextboxComponent {\r\n  @Input()\r\n  section!: Section;\r\n\r\n  @Input()\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "RadioTableComponent",
            "id": "component-RadioTableComponent-c712b3d14da094ff402056728e0731c1a0be194260ddd0e5045d78ab699907a92afe3b2811acfc83d99a731130e8f717d8ad8f3fe555f9ba0629b0526c713fbc",
            "file": "src/app/core/pages/document-builder/components/question-types/02-radio-table/radio-table.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "radio-table-question[question]",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-row>\n  <ion-col class=\"flex items-center\" size=\"2\">\n    <ion-label>\n      <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n    </ion-label>\n  </ion-col>\n  <ion-radio-group class=\"contents\">\n    <ion-col class=\"flex justify-center items-center\" size=\"1\">\n      <ion-radio aria-label=\"\" color=\"success\" [value]=\"true\"></ion-radio>\n    </ion-col>\n    <ion-col class=\"flex justify-center items-center\" size=\"1\">\n      <ion-radio aria-label=\"\" color=\"danger\" [value]=\"false\"></ion-radio>\n    </ion-col>\n    <ion-col class=\"flex justify-center items-center\" size=\"1\">\n      <ion-radio aria-label=\"\" [value]=\"null\"></ion-radio>\n    </ion-col>\n  </ion-radio-group>\n  <ion-col size=\"1\">\n    <camera-capture></camera-capture>\n    <file-upload></file-upload>\n  </ion-col>\n</ion-row>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "question",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/site-document.store\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\n\r\n@Component({\r\n  selector: \"radio-table-question[question]\",\r\n  template: `\r\n    <ion-row>\r\n      <ion-col class=\"flex items-center\" size=\"2\">\r\n        <ion-label>\r\n          <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n        </ion-label>\r\n      </ion-col>\r\n      <ion-radio-group class=\"contents\">\r\n        <ion-col class=\"flex justify-center items-center\" size=\"1\">\r\n          <ion-radio aria-label=\"\" color=\"success\" [value]=\"true\"></ion-radio>\r\n        </ion-col>\r\n        <ion-col class=\"flex justify-center items-center\" size=\"1\">\r\n          <ion-radio aria-label=\"\" color=\"danger\" [value]=\"false\"></ion-radio>\r\n        </ion-col>\r\n        <ion-col class=\"flex justify-center items-center\" size=\"1\">\r\n          <ion-radio aria-label=\"\" [value]=\"null\"></ion-radio>\r\n        </ion-col>\r\n      </ion-radio-group>\r\n      <ion-col size=\"1\">\r\n        <camera-capture></camera-capture>\r\n        <file-upload></file-upload>\r\n      </ion-col>\r\n    </ion-row>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    QuestionTextComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent\r\n  ]\r\n})\r\nexport class RadioTableComponent {  \r\n  @Input()\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "RadioTableTextboxComponent",
            "id": "component-RadioTableTextboxComponent-01e413330c2454ae413c39156f907e706e878bf3f3d00dd5dc46c27022cf1e22de8e7ba740da638b2ca9b0d71699b98325eceebe027c11574573870d619d99fe",
            "file": "src/app/core/pages/document-builder/components/question-types/07-radio-table-textbox/radio-table-textbox.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "radio-table-textbox-question[question]",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-row>\n  <ion-col class=\"flex items-center\" size=\"2\">\n    <ion-label>\n      <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n    </ion-label>\n  </ion-col>\n  <ion-radio-group class=\"contents\">\n    <ion-col class=\"flex justify-center items-center\" size=\"1\">\n      <ion-radio aria-label=\"\" color=\"success\" [value]=\"true\"></ion-radio>\n    </ion-col>\n    <ion-col class=\"flex justify-center items-center\" size=\"1\">\n      <ion-radio aria-label=\"\" color=\"danger\" [value]=\"false\"></ion-radio>\n    </ion-col>\n    <ion-col class=\"flex justify-center items-center\" size=\"1\">\n      <ion-radio aria-label=\"\" [value]=\"null\"></ion-radio>\n    </ion-col>\n  </ion-radio-group>\n  <ion-col size=\"2\">\n    <ion-item>\n      <ion-textarea label=\"\" rows=\"4\"></ion-textarea>\n    </ion-item>\n  </ion-col>\n</ion-row>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "question",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/site-document.store\";\r\nimport { QuestionTextComponent } from \"../extras\";\r\n\r\n@Component({\r\n  selector: \"radio-table-textbox-question[question]\",\r\n  template: `\r\n    <ion-row>\r\n      <ion-col class=\"flex items-center\" size=\"2\">\r\n        <ion-label>\r\n          <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n        </ion-label>\r\n      </ion-col>\r\n      <ion-radio-group class=\"contents\">\r\n        <ion-col class=\"flex justify-center items-center\" size=\"1\">\r\n          <ion-radio aria-label=\"\" color=\"success\" [value]=\"true\"></ion-radio>\r\n        </ion-col>\r\n        <ion-col class=\"flex justify-center items-center\" size=\"1\">\r\n          <ion-radio aria-label=\"\" color=\"danger\" [value]=\"false\"></ion-radio>\r\n        </ion-col>\r\n        <ion-col class=\"flex justify-center items-center\" size=\"1\">\r\n          <ion-radio aria-label=\"\" [value]=\"null\"></ion-radio>\r\n        </ion-col>\r\n      </ion-radio-group>\r\n      <ion-col size=\"2\">\r\n        <ion-item>\r\n          <ion-textarea label=\"\" rows=\"4\"></ion-textarea>\r\n        </ion-item>\r\n      </ion-col>\r\n    </ion-row>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule, \r\n    QuestionTextComponent\r\n  ]\r\n})\r\nexport class RadioTableTextboxComponent {\r\n  @Input()\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ReactiveComponent",
            "id": "component-ReactiveComponent-6f7b8e48b57df5fc1689d81b1abf401639d2fc7f09d4c48e4aa299899cc7570d502d6be4b2c8864143a8e8da75863ec0546bc8efca4f0b265083d0eb2e9a0173",
            "file": "src/app/shared/lifecycles/lifecycle-component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "_destroy$",
                    "defaultValue": "new Subject<void>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        121
                    ]
                },
                {
                    "name": "destroy$",
                    "defaultValue": "this._destroy$.asObservable()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        144
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnDestroy",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "takeUntilDestroyed",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 20,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from \"@angular/core\";\r\nimport { flow } from \"lodash-es\";\r\nimport { Observable, pipe, Subject, takeUntil, UnaryFunction } from \"rxjs\";\r\n\r\nexport type ReactiveConstructor = new (...args: any[]) => {\r\n  destroy$: Observable<void>,\r\n  takeUntilDestroyed<T>(): UnaryFunction<Observable<T>, Observable<T>>\r\n};\r\n\r\n@Component({ template: \"\" })\r\nclass ReactiveComponent {\r\n  private _destroy$ = new Subject<void>();\r\n  readonly destroy$ = this._destroy$.asObservable();\r\n\r\n  ngOnDestroy() {\r\n    this._destroy$.next();\r\n    this._destroy$.complete();\r\n  }\r\n\r\n  takeUntilDestroyed<T>() {\r\n    return pipe(\r\n      takeUntil<T>(this.destroy$)\r\n    );\r\n  }\r\n};\r\n\r\nfunction withNoop<TBase extends ReactiveConstructor>(Base: TBase) {\r\n  return class extends Base {}\r\n}\r\n\r\ntype AnyFunction = (...args: any) => any;\r\n\r\nexport function AngularComponent<T1 extends AnyFunction>(h1: T1): ReturnType<T1>\r\nexport function AngularComponent<T1 extends AnyFunction, T2 extends AnyFunction>(h1: T1, h2: T2): ReturnType<T1> & ReturnType<T2>\r\nexport function AngularComponent<T1 extends AnyFunction, T2 extends AnyFunction, T3 extends AnyFunction>(h1: T1, h2: T2, h3: T3): ReturnType<T1> & ReturnType<T2> & ReturnType<T3>\r\nexport function AngularComponent<T1 extends AnyFunction, T2 extends AnyFunction, T3 extends AnyFunction, T4 extends AnyFunction>(h1: T1, h2: T2, h3: T3, h4: T4): ReturnType<T1> & ReturnType<T2> & ReturnType<T3> & ReturnType<T4>\r\nexport function AngularComponent<T1 extends AnyFunction, T2 extends AnyFunction, T3 extends AnyFunction, T4 extends AnyFunction, T5 extends AnyFunction>(h1: T1, h2: T2, h3: T3, h4: T4, h5: T5): ReturnType<T1> & ReturnType<T2> & ReturnType<T3> & ReturnType<T4> & ReturnType<T5>\r\nexport function AngularComponent<T1 extends AnyFunction, T2 extends AnyFunction, T3 extends AnyFunction, T4 extends AnyFunction, T5 extends AnyFunction, T6 extends AnyFunction>(h1: T1, h2: T2, h3: T3, h4: T4, h5: T5, h6: T6): ReturnType<T1> & ReturnType<T2> & ReturnType<T3> & ReturnType<T4> & ReturnType<T5> & ReturnType<T6>\r\nexport function AngularComponent(): ReturnType<typeof withNoop> & ReactiveComponent;\r\nexport function AngularComponent(...args: AnyFunction[]): any {\r\n  if (args == null || args.length === 0) return ReactiveComponent;\r\n\r\n  const withHooks = flow(args);\r\n  return withHooks(ReactiveComponent); \r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "RegistrationPage",
            "id": "component-RegistrationPage-d71b1642a0ec899988fd6f6d7065c3ebf150083a23012e6fef27a380f3d9180e3a6fe98596ee2f99b2b2a82f90735384b9f6a06267010ded9d0addc9ad9bcf67",
            "file": "src/app/core/pages/registration/registration.page.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-registration",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-header>\n  <ion-toolbar>\n    <ion-title class=\"ion-text-center ion-text-wrap animate__animated animate__fadeInLeft animate__faster\">Site Documents Registration</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content [formGroup]=\"form\" class=\"ion-padding animate__animated animate__fadeInLeft animate__faster\">\n  <ion-list>\n    <ion-item>\n      <ion-input\n        label=\"Registration Code\"\n        labelPlacement=\"floating\"\n        formControlName=\"token\"\n        type=\"text\"\n        clearInput>\n      </ion-input>\n    </ion-item>\n    <ion-item>\n      <ion-input\n        label=\"Pin\"\n        labelPlacement=\"floating\"\n        formControlName=\"pin\"\n        type=\"tel\"\n        clearInput>\n      </ion-input>\n    </ion-item>\n  </ion-list>\n\n  <ion-button\n    *rxLet=\"form.invalid$; let isInvalid\"\n    [disabled]=\"isInvalid\"\n    (click)=\"submit()\"\n    expand=\"full\">\n    Submit\n  </ion-button>\n</ion-content>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "form",
                    "defaultValue": "new FormGroup({\r\n    token: new FormControl(\"\", [\r\n      Validators.required\r\n    ]),\r\n    pin: new FormControl(\"\", [\r\n      Validators.required,\r\n      Validators.minLength(4)\r\n    ])\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "submit",
                    "defaultValue": "clickReaction(click$ => click$.pipe(\r\n    this.takeUntilDestroyed(),\r\n    switchMap(() => this.userStore.getUserRequest$(this.form.value$))\r\n  ))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 72
                },
                {
                    "name": "userStore",
                    "defaultValue": "inject(UserStore)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 60
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, inject } from \"@angular/core\";\r\nimport { ReactiveFormsModule, Validators } from \"@angular/forms\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { FormGroup, FormControl } from \"@ngneat/reactive-forms\";\r\nimport { AngularComponent } from \"src/app/shared/lifecycles\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { UserStore } from \"../../stores/user/user.store\";\r\nimport { switchMap } from \"rxjs\";\r\nimport { clickReaction } from \"src/app/shared/reactions\";\r\n\r\n@Component({\r\n  selector: \"app-registration\",\r\n  template: `\r\n    <ion-header>\r\n      <ion-toolbar>\r\n        <ion-title class=\"ion-text-center ion-text-wrap animate__animated animate__fadeInLeft animate__faster\">Site Documents Registration</ion-title>\r\n      </ion-toolbar>\r\n    </ion-header>\r\n\r\n    <ion-content [formGroup]=\"form\" class=\"ion-padding animate__animated animate__fadeInLeft animate__faster\">\r\n      <ion-list>\r\n        <ion-item>\r\n          <ion-input \r\n            label=\"Registration Code\" \r\n            labelPlacement=\"floating\"\r\n            formControlName=\"token\"\r\n            type=\"text\" \r\n            clearInput>\r\n          </ion-input>\r\n        </ion-item>\r\n        <ion-item>\r\n          <ion-input \r\n            label=\"Pin\"\r\n            labelPlacement=\"floating\"\r\n            formControlName=\"pin\" \r\n            type=\"tel\" \r\n            clearInput>\r\n          </ion-input>\r\n        </ion-item>\r\n      </ion-list>\r\n\r\n      <ion-button \r\n        *rxLet=\"form.invalid$; let isInvalid\" \r\n        [disabled]=\"isInvalid\"\r\n        (click)=\"submit()\"\r\n        expand=\"full\">\r\n        Submit\r\n      </ion-button>\r\n    </ion-content>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class RegistrationPage extends AngularComponent() {\r\n  userStore = inject(UserStore);\r\n\r\n  form = new FormGroup({\r\n    token: new FormControl(\"\", [\r\n      Validators.required\r\n    ]),\r\n    pin: new FormControl(\"\", [\r\n      Validators.required,\r\n      Validators.minLength(4)\r\n    ])\r\n  });\r\n\r\n  submit = clickReaction(click$ => click$.pipe(\r\n    this.takeUntilDestroyed(),\r\n    switchMap(() => this.userStore.getUserRequest$(this.form.value$))\r\n  ));\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "RemainAnonymousComponent",
            "id": "component-RemainAnonymousComponent-deec727657d3bd327b4c7dff596e01c111ec7bc5b03faaddc4611c82cc9e3a8f2aeff97b4791b5e0ea06e77c3558d48ac01b81a005eeb1d69e7065660468437d",
            "file": "src/app/core/pages/document-builder/components/input-types/remain-anonymous/remain-anonymous.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "remain-anonymous",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item>\n    <ion-checkbox [(ngModel)]=\"isTicked\" (ionChange)=\"isTickedChange.emit(isTicked)\">\n      Remain Anonymous?\n    </ion-checkbox>\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isTicked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "isTickedChange",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\n\r\n@Component({\r\n  selector: \"remain-anonymous\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item>\r\n        <ion-checkbox [(ngModel)]=\"isTicked\" (ionChange)=\"isTickedChange.emit(isTicked)\">\r\n          Remain Anonymous?\r\n        </ion-checkbox>\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    FormsModule\r\n  ]\r\n})\r\nexport class RemainAnonymousComponent {\r\n  @Input()\r\n  isTicked: boolean = false;\r\n\r\n  @Output()\r\n  isTickedChange = new EventEmitter<boolean>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SelectableComponent",
            "id": "component-SelectableComponent-bccf1a2bf58b33d18fcfacfa3edec447ba211133f22b2d47ee8a833497d615e04e3cb6af1b4805bbd3b04c35343beff7c826db8f2fbe7b9e2bdbc89889dc639a",
            "file": "src/app/shared/components/selectable/selectable.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "selectable",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-item [id]=\"id\" [unpatch] button>\n  <ion-label [color]=\"value == null ? 'medium' : ''\" class=\"ion-text-wrap\">\n  {{\n    value == null\n      ? placeholder\n      : itemText != null\n        ? value[itemText]\n        : value\n  }}\n  </ion-label>\n  <ion-button *rxIf=\"canClear && value != null\" (click)=\"$event.stopPropagation(); value = null; valueChange.emit(null)\" fill=\"clear\">\n    <ion-icon name=\"close-outline\" color=\"danger\" slot=\"icon-only\"></ion-icon>\n  </ion-button>\n  <ion-icon name=\"caret-down-outline\" slot=\"end\"></ion-icon>\n</ion-item>\n\n<ion-modal #modal [trigger]=\"id\">\n  <ng-template>\n    <ion-header>\n      <ion-toolbar>\n        <ion-buttons slot=\"start\">\n          <ion-button (click)=\"modal.dismiss()\" [unpatch] fill=\"clear\">\n            <ion-icon name=\"arrow-back-outline\" slot=\"icon-only\"></ion-icon>\n          </ion-button>\n        </ion-buttons>\n        <ion-title class=\"ion-text-center\">{{ title }}</ion-title>\n      </ion-toolbar>\n      <ion-toolbar>\n        <ion-searchbar\n          [(ngModel)]=\"searchValue\"\n          debounce=\"300\"\n          placeholder=\"Search\">\n        </ion-searchbar>\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content>\n      <cdk-virtual-scroll-viewport itemSize=\"50\" minBufferPx=\"1200\" maxBufferPx=\"1200\">\n        <ion-list>\n          <ion-item\n            *cdkVirtualFor=\"let item of items\n              | fuse: {\n                search: searchValue,\n                keys: itemText != null\n                  ? [itemText]\n                  : []\n              };\n              last as isLast\"\n            (click)=\"value = item; valueChange.emit(item); modal.dismiss()\"\n            [lines]=\"isLast ? 'none' : 'inset'\"\n            [unpatch]\n            button>\n            <ion-label class=\"ion-text-wrap\">{{ itemText != null ? item[itemText] : item }}</ion-label>\n          </ion-item>\n        </ion-list>\n      </cdk-virtual-scroll-viewport>\n    </ion-content>\n  </ng-template>\n</ion-modal>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "canClear",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 102,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 90,
                    "type": "T[]",
                    "decorators": []
                },
                {
                    "name": "itemText",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 93,
                    "type": " | null",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 84,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 87,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 96,
                    "type": "T | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter<T | null>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 99,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "id",
                    "defaultValue": "crypto.randomUUID()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 81
                },
                {
                    "name": "searchValue",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 104
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ScrollingModule } from \"@angular/cdk/scrolling\";\r\nimport { Component, EventEmitter, inject, Input, Output } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { IonicModule, ModalController } from \"@ionic/angular\";\r\nimport { importRxTemplate } from \"../../imports\";\r\nimport { FusePipe } from \"../../pipes\";\r\n\r\n@Component({\r\n  selector: \"selectable\",\r\n  template: `\r\n    <ion-item [id]=\"id\" [unpatch] button>\r\n      <ion-label [color]=\"value == null ? 'medium' : ''\" class=\"ion-text-wrap\">\r\n      {{ \r\n        value == null \r\n          ? placeholder\r\n          : itemText != null\r\n            ? value[itemText]\r\n            : value\r\n      }}\r\n      </ion-label>\r\n      <ion-button *rxIf=\"canClear && value != null\" (click)=\"$event.stopPropagation(); value = null; valueChange.emit(null)\" fill=\"clear\">\r\n        <ion-icon name=\"close-outline\" color=\"danger\" slot=\"icon-only\"></ion-icon>\r\n      </ion-button>\r\n      <ion-icon name=\"caret-down-outline\" slot=\"end\"></ion-icon>\r\n    </ion-item>\r\n\r\n    <ion-modal #modal [trigger]=\"id\">\r\n      <ng-template>\r\n        <ion-header>\r\n          <ion-toolbar>\r\n            <ion-buttons slot=\"start\">\r\n              <ion-button (click)=\"modal.dismiss()\" [unpatch] fill=\"clear\">\r\n                <ion-icon name=\"arrow-back-outline\" slot=\"icon-only\"></ion-icon>\r\n              </ion-button>\r\n            </ion-buttons>\r\n            <ion-title class=\"ion-text-center\">{{ title }}</ion-title>\r\n          </ion-toolbar>\r\n          <ion-toolbar>\r\n            <ion-searchbar \r\n              [(ngModel)]=\"searchValue\"\r\n              debounce=\"300\" \r\n              placeholder=\"Search\">\r\n            </ion-searchbar>\r\n          </ion-toolbar>\r\n        </ion-header>\r\n\r\n        <ion-content>\r\n          <cdk-virtual-scroll-viewport itemSize=\"50\" minBufferPx=\"1200\" maxBufferPx=\"1200\">\r\n            <ion-list>\r\n              <ion-item \r\n                *cdkVirtualFor=\"let item of items \r\n                  | fuse: {\r\n                    search: searchValue,\r\n                    keys: itemText != null \r\n                      ? [itemText]\r\n                      : []\r\n                  }; \r\n                  last as isLast\" \r\n                (click)=\"value = item; valueChange.emit(item); modal.dismiss()\"\r\n                [lines]=\"isLast ? 'none' : 'inset'\" \r\n                [unpatch] \r\n                button>\r\n                <ion-label class=\"ion-text-wrap\">{{ itemText != null ? item[itemText] : item }}</ion-label>\r\n              </ion-item>\r\n            </ion-list>\r\n          </cdk-virtual-scroll-viewport>\r\n        </ion-content>\r\n      </ng-template>\r\n    </ion-modal>\r\n  `,\r\n  standalone: true,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    FormsModule,\r\n    ScrollingModule,\r\n    FusePipe\r\n  ]\r\n})\r\nexport class SelectableComponent<T = unknown> {\r\n  id = crypto.randomUUID();\r\n\r\n  @Input()\r\n  placeholder: string = \"\";\r\n\r\n  @Input()\r\n  title: string = \"\";\r\n\r\n  @Input()\r\n  items: T[] = [];\r\n\r\n  @Input()\r\n  itemText: keyof T | null = null;\r\n\r\n  @Input()\r\n  value: T | null = null;\r\n\r\n  @Output()\r\n  valueChange = new EventEmitter<T | null>();\r\n\r\n  @Input()\r\n  canClear: boolean = true;\r\n\r\n  searchValue: string = \"\";\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SelectComponent",
            "id": "component-SelectComponent-80046c5bd1511c2b83575e02b6e367d62e62a52eb2a5b14b249e2ce1d165a642b5cd29f0e53128a8c19d893aa19fc866583c9d638d185be2891dc2a2852a8bae",
            "file": "src/app/core/pages/document-builder/components/question-types/05-select/select.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "select-question[question]",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n    <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\"></camera-capture>\n    <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\"></file-upload>\n  </ion-item>\n  <selectable placeholder=\"Select\"></selectable>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "question",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/site-document.store\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { SelectableComponent } from \"src/app/shared/components/selectable/selectable.component\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\n\r\n@Component({\r\n  selector: \"select-question[question]\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n        <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\"></camera-capture>\r\n        <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\"></file-upload>\r\n      </ion-item>\r\n      <selectable placeholder=\"Select\"></selectable>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    QuestionTextComponent,\r\n    SelectableComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent\r\n  ]\r\n})\r\nexport class SelectComponent {\r\n  @Input()\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SelectTextComponent",
            "id": "component-SelectTextComponent-222d1df943e0e80b6f91d77e104b472b0745ff74d53baface12821e5e0c551214822a8455def9edbc85d29625acb125e56b5057f28e7d25fb26b0006334c8bed",
            "file": "src/app/core/pages/document-builder/components/question-types/29-select-text/select-text.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "select-text-question[question]",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n    <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\"></camera-capture>\n    <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\"></file-upload>\n  </ion-item>\n  <selectable placeholder=\"Select\"></selectable>\n  <ion-item>\n    <ion-input label=\"Comments\" labelPlacement=\"floating\" type=\"text\"></ion-input>\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "question",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/site-document.store\";\r\nimport { SelectableComponent } from \"src/app/shared/components/selectable/selectable.component\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\n\r\n@Component({\r\n  selector: \"select-text-question[question]\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n        <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\"></camera-capture>\r\n        <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\"></file-upload>\r\n      </ion-item>\r\n      <selectable placeholder=\"Select\"></selectable>\r\n      <ion-item>\r\n        <ion-input label=\"Comments\" labelPlacement=\"floating\" type=\"text\"></ion-input>\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    QuestionTextComponent,\r\n    SelectableComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent\r\n  ]\r\n})\r\nexport class SelectTextComponent {\r\n  @Input()\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SignatureComponent",
            "id": "component-SignatureComponent-68a021a7f442cfab4f57b46a93140205715ffccc218e6239a41837800dbd6751f3373d53d5592b12e780ac95cd57495ce387f7abde5b533df60af9b7edafb36b",
            "file": "src/app/core/pages/document-builder/components/question-types/19-signature/signature.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "signature-question[question]",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n  </ion-item>\n\n  <ion-item>\n    <ion-input label=\"Print\" labelPlacement=\"floating\" type=\"text\"></ion-input>\n    <ion-button fill=\"clear\" slot=\"end\">\n      <ion-icon name=\"create-outline\" slot=\"icon-only\"></ion-icon>\n    </ion-button>\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "question",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/site-document.store\";\r\nimport { QuestionTextComponent } from \"../extras\";\r\n\r\n@Component({\r\n  selector: \"signature-question[question]\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n      </ion-item>\r\n\r\n      <ion-item>\r\n        <ion-input label=\"Print\" labelPlacement=\"floating\" type=\"text\"></ion-input>\r\n        <ion-button fill=\"clear\" slot=\"end\">\r\n          <ion-icon name=\"create-outline\" slot=\"icon-only\"></ion-icon>\r\n        </ion-button>\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    QuestionTextComponent\r\n  ]\r\n})\r\nexport class SignatureComponent {\r\n  @Input()\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SiteSelectComponent",
            "id": "component-SiteSelectComponent-adb64957daefb15fbd6e286b8b90ca6d9ce4a174e6d9140f509ce112d177dc2eb68279851394e07076c67489443d1d34348e528bd69fecc8f9956d001288f764",
            "file": "src/app/core/pages/document-builder/components/input-types/site-select/site-select.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "site-select",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-card>\n  <ion-card-header>\n\n  </ion-card-header>\n  <ion-card-content>\n    <ion-item lines=\"none\">\n      <selectable></selectable>\n    </ion-item>\n  </ion-card-content>\n</ion-card>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from \"@angular/core\";\nimport { IonicModule } from \"@ionic/angular\";\nimport { SelectableComponent } from \"src/app/shared/components\";\n\n@Component({\n  selector: \"site-select\",\n  template: `\n    <ion-card>\n      <ion-card-header>\n        \n      </ion-card-header>\n      <ion-card-content>\n        <ion-item lines=\"none\">\n          <selectable></selectable>\n        </ion-item>\n      </ion-card-content>\n    </ion-card>\n  `,\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    IonicModule,\n    SelectableComponent\n  ]\n})\nexport class SiteSelectComponent {\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "TemplateMenuModal",
            "id": "component-TemplateMenuModal-b3f5dbb2b23208830bf6f163cb762189760a32bc1eba4b313cdc7c7466fbad3dd4600625d43533e89a8383a03744ed4987be1bed5d881c57e6172fe7ccaa0c56",
            "file": "src/app/core/pages/document-builder/modals/template-menu/template-menu.modal.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "template-menu-modal[trigger]",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-modal #modal [trigger]=\"trigger\" [isOpen]=\"isOpen\">\n  <ng-template>\n    <ion-header>\n      <ion-toolbar>\n        <ion-title class=\"text-center\">Templates</ion-title>\n        <ion-buttons slot=\"end\">\n          <ion-button>\n            <ion-icon name=\"close-outline\" slot=\"icon-only\"></ion-icon>\n          </ion-button>\n        </ion-buttons>\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content class=\"ion-padding\">\n      <cdk-virtual-scroll-viewport itemSize=\"50\" minBufferPx=\"1200\" maxBufferPx=\"1200\">\n        <ion-list>\n          <ion-item button></ion-item>\n        </ion-list>\n      </cdk-virtual-scroll-viewport>\n    </ion-content>\n  </ng-template>\n</ion-modal>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "trigger",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ScrollingModule } from \"@angular/cdk/scrolling\";\r\nimport { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\n\r\n@Component({\r\n  selector: \"template-menu-modal[trigger]\",\r\n  template: `\r\n    <ion-modal #modal [trigger]=\"trigger\" [isOpen]=\"isOpen\">\r\n      <ng-template>\r\n        <ion-header>\r\n          <ion-toolbar>\r\n            <ion-title class=\"text-center\">Templates</ion-title>\r\n            <ion-buttons slot=\"end\">\r\n              <ion-button>\r\n                <ion-icon name=\"close-outline\" slot=\"icon-only\"></ion-icon>\r\n              </ion-button>\r\n            </ion-buttons>\r\n          </ion-toolbar>\r\n        </ion-header>\r\n\r\n        <ion-content class=\"ion-padding\">\r\n          <cdk-virtual-scroll-viewport itemSize=\"50\" minBufferPx=\"1200\" maxBufferPx=\"1200\">\r\n            <ion-list>\r\n              <ion-item button></ion-item>\r\n            </ion-list>\r\n          </cdk-virtual-scroll-viewport>\r\n        </ion-content>\r\n      </ng-template>\r\n    </ion-modal>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ScrollingModule\r\n  ]\r\n})\r\nexport class TemplateMenuModal {\r\n  @Input()\r\n  trigger!: string;\r\n\r\n  @Input()\r\n  isOpen: boolean = false;\r\n\r\n  \r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "TextareaComponent",
            "id": "component-TextareaComponent-2c3d58a4d0bacd538e86216a4a189e0cd8000be98eb5b2f0557156cdd61eb72e0c72116f5be378fd10a7147339a195a0582fc979c6328c1c97715df277b9ca6f",
            "file": "src/app/core/pages/document-builder/components/question-types/04-textarea/textarea.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "textarea-question[question]",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">\n      {{ question.QuestionText }}\n    </question-text>\n    <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\"></camera-capture>\n    <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\"></file-upload>\n  </ion-item>\n  <ion-item class=\"ion-padding-horizontal\">\n    <ion-textarea label=\"\" rows=\"6\"></ion-textarea>\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "question",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/site-document.store\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\n\r\n@Component({\r\n  selector: \"textarea-question[question]\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">\r\n          {{ question.QuestionText }}\r\n        </question-text>\r\n        <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\"></camera-capture>\r\n        <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\"></file-upload>\r\n      </ion-item>\r\n      <ion-item class=\"ion-padding-horizontal\">\r\n        <ion-textarea label=\"\" rows=\"6\"></ion-textarea>\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    QuestionTextComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent\r\n  ]\r\n})\r\nexport class TextareaComponent {\r\n  @Input()\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "TextboxComponent",
            "id": "component-TextboxComponent-da93173b207ccd23ffa4331d1b64e474f2ec3620a4b511615a351bfbc87828b1b0603868c4813544db35e2e57e12f08ca1f1b93ebade3cfca3817993edeba5bb",
            "file": "src/app/core/pages/document-builder/components/question-types/03-textbox/textbox.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "textbox-question[question]",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n    <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\"></camera-capture>\n    <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\"></file-upload>\n  </ion-item>\n  <ion-item>\n    <ion-input label=\"\" type=\"text\"></ion-input>\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "question",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 33,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/site-document.store\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\n\r\n@Component({\r\n  selector: \"textbox-question[question]\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n        <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\"></camera-capture>\r\n        <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\"></file-upload>\r\n      </ion-item>\r\n      <ion-item>\r\n        <ion-input label=\"\" type=\"text\"></ion-input>\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    QuestionTextComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent\r\n  ]\r\n})\r\nexport class TextboxComponent {\r\n  @Input()\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "TimeComponent",
            "id": "component-TimeComponent-eae73a87e718cefef444d7cb9f132172ec766179ecff46e0bb802323d3d211bbb92834417da1c699ce07de3e86e0084ea7e52995bc57f1056c040dc5c4c93ad7",
            "file": "src/app/core/pages/document-builder/components/question-types/32-time/time.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "time-question[question]",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">\n      {{ question.QuestionText }}\n    </question-text>\n  </ion-item>\n\n  <ion-item>\n\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "question",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "id",
                    "defaultValue": "crypto.randomUUID()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/site-document.store\";\r\nimport { QuestionTextComponent } from \"../extras\";\r\n\r\n@Component({\r\n  selector: \"time-question[question]\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">\r\n          {{ question.QuestionText }}\r\n        </question-text>\r\n      </ion-item>\r\n\r\n      <ion-item>\r\n\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    QuestionTextComponent\r\n  ]\r\n})\r\nexport class TimeComponent {\r\n  id = crypto.randomUUID();\r\n\r\n  @Input()\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "UploadComponent",
            "id": "component-UploadComponent-b0d791b21428c648e0f13bfa5ec6bd64769a981a87915d09a599761702892dfa9c35862d4cf786ac7c42b0336c7ec40553274414d65f804c0622612ea2e372f3",
            "file": "src/app/shared/components/upload/upload.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "upload",
            "styleUrls": [],
            "styles": [
                "\n    :host { display: contents }\n  "
            ],
            "template": "<label [for]=\"id\" class=\"w-full h-full fixed cursor-pointer\"></label>\n<input [id]=\"id\" type=\"file\" [accept]=\"accept\" (change)=\"take($event)\" class=\"hidden\" />\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "accept",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "uploadFile",
                    "defaultValue": "new EventEmitter<DataUrlFile[]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "id",
                    "defaultValue": "crypto.randomUUID()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                }
            ],
            "methodsClass": [
                {
                    "name": "take",
                    "args": [
                        {
                            "name": "ev",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "ev",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { TargetEvent } from \"../../models/events/target-event.model\";\r\nimport { DataUrlFile } from \"../../models/files/data-url-file.model\";\r\n\r\nfunction fileReader(): FileReader {\r\n  const fileReader = new FileReader();\r\n  const zoneOriginalInstance = (fileReader as any)[\"__zone_symbol__originalInstance\"];\r\n  return zoneOriginalInstance || fileReader;\r\n}\r\n\r\nfunction fileToDataUrlFile(file: File): Promise<DataUrlFile> {\r\n  const reader = fileReader();\r\n  return new Promise(resolve => {\r\n    reader.onload = (event) => resolve({ ...file, dataUrl: event.target!.result as string })//resolve(event.target!.result as string);\r\n    reader.readAsDataURL(file);\r\n  });\r\n}\r\n\r\n@Component({\r\n  selector: \"upload\",\r\n  styles: [`\r\n    :host { display: contents }\r\n  `],\r\n  template: `\r\n    <label [for]=\"id\" class=\"w-full h-full fixed cursor-pointer\"></label>\r\n    <input [id]=\"id\" type=\"file\" [accept]=\"accept\" (change)=\"take($event)\" class=\"hidden\" />\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class UploadComponent {\r\n  id = crypto.randomUUID();\r\n\r\n  @Input()\r\n  accept?: string;\r\n\r\n  @Output()\r\n  uploadFile = new EventEmitter<DataUrlFile[]>();\r\n\r\n  async take(ev: unknown) {\r\n    const event = ev as TargetEvent<{ files: File[] }>;\r\n    const files: File[] = [...event.target.files];\r\n\r\n    const dataUrlFiles = await Promise.all(files.map(fileToDataUrlFile));\r\n    this.uploadFile.emit(dataUrlFiles);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n    :host { display: contents }\n  \n"
        },
        {
            "name": "VirtualScrollComponent",
            "id": "component-VirtualScrollComponent-f469845016b01faf3c26bb4186205f1484c59bee65ba291ef0bc908be9d486ffe67c2f58c56436d4fc758e36529aa5b77b080284727046f02d09aa8f26d4f32b",
            "file": "src/app/shared/components/virtual-scroll/virtual-scroll.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "virtual-scroll",
            "styleUrls": [],
            "styles": [],
            "template": "<cdk-virtual-scroll-viewport itemSize=\"50\" minBufferPx=\"1200\" maxBufferPx=\"1200\">\n  <ng-content>\n  </ng-content>\n</cdk-virtual-scroll-viewport>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CdkVirtualForOf, CdkVirtualScrollViewport } from \"@angular/cdk/scrolling\";\r\nimport { ChangeDetectionStrategy, Component } from \"@angular/core\";\r\n\r\n@Component({\r\n  selector: \"virtual-scroll\",\r\n  template: `\r\n    <cdk-virtual-scroll-viewport itemSize=\"50\" minBufferPx=\"1200\" maxBufferPx=\"1200\">\r\n      <ng-content>\r\n      </ng-content>\r\n    </cdk-virtual-scroll-viewport>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    CdkVirtualScrollViewport,\r\n    CdkVirtualForOf\r\n  ]\r\n})\r\nexport class VirtualScrollComponent {}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "DateOnly",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/datetime-picker/datetime-picker.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/registration/registration.page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/camera/camera.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/datetime-picker/datetime-picker.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/selectable/selectable.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/multi-selectable/multi-selectable.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/actioner-select/actioner-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/queue-duration/queue-duration.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/remain-anonymous/remain-anonymous.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/01-checkbox/checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/02-radio-group/radio-group.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/03-textbox/textbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/04-textarea/textarea.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/05-select/select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/02-radio-table/radio-table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/06-checkbox-textbox/checkbox-textbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/07-radio-group-textbox/radio-group-textbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/09-datetime/datetime.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/08-date/date.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/07-radio-table-textbox/radio-table-textbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/10-operative-list/operative-list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/12-number/number.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/19-signature/signature.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/18-linked-dates/linked-dates.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/extras/camera-capture/camera-capture.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/extras/file-upload/file-upload.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "defaultDoc",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "SiteDocument",
                "defaultValue": "{\r\n  ...defaultSiteDocument,\r\n  DocumentTitle: faker.lorem.word(),\r\n  Pages: [\r\n    {\r\n      PageID: 1,\r\n      PageTitle: faker.lorem.word(),\r\n      Sections: Object\r\n        .values(QuestionType)\r\n        .filter(qt => typeof qt === \"number\")\r\n        .map((qt, idx) => \r\n          ({\r\n            ...defaultSection,\r\n            SectionID: idx,\r\n            SectionNo: idx,\r\n            SectionTitle: \"\",\r\n            SectionQuestiontype: qt as QuestionType,\r\n            Questions: [\r\n              {\r\n                ...defaultQuestion,\r\n                QuestionText: QuestionType[qt as number].toString()\r\n              }\r\n            ]\r\n          })\r\n        )\r\n    }\r\n  ]\r\n}"
            },
            {
                "name": "DocumentWithAllPermissionsTurnedOn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "docWithAllPermissionsOn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "SiteDocument",
                "defaultValue": "{\r\n  ...defaultSiteDocument,\r\n  DocumentTitle: faker.lorem.word(),\r\n  Pages: [\r\n    {\r\n      PageID: 1,\r\n      PageTitle: faker.lorem.word(),\r\n      Sections: Object\r\n        .values(QuestionType)\r\n        .filter(qt => typeof qt === \"number\")\r\n        .map((qt, idx) => \r\n          ({\r\n            ...defaultSection,\r\n            SectionID: idx,\r\n            SectionNo: idx,\r\n            SectionTitle: \"\",\r\n            SectionQuestiontype: qt as QuestionType,\r\n            Questions: [\r\n              {\r\n                ...defaultQuestion,\r\n                QuestionText: QuestionType[qt as number].toString()\r\n              }\r\n            ]\r\n          })\r\n        )\r\n    }\r\n  ],\r\n  Queues: Array\r\n    .from({ length: 5 })\r\n    .map((val, idx) => \r\n      ({\r\n        Key: idx.toString(),\r\n        Value: faker.lorem.word()\r\n      })\r\n  ),\r\n  CanAddAsset: true,\r\n  CanAddOperative: true,\r\n  CanCreateHotspot: true,\r\n  CanAddActionerFromApp: true,\r\n  CanAddCategoryActioner: true,\r\n  CanCreateAssetsFromDocument: true,\r\n  CanHaveCompanyActioner: true,\r\n  CanHaveDocLevelPhotoRoll: true,\r\n  CanHaveDocumentLevelImages: true,\r\n  CanHaveQueueDuration: true,\r\n  ShowDocLevelPhotoButtonAtStartOfDoc: true,\r\n  CanBeAddedToHotspot: true,\r\n  CanBeSavedAsDraft: true,\r\n  AllowAnon: true,\r\n  RemainAnon: false,\r\n  MetaData: {\r\n    ActionerText: faker.lorem.word(),\r\n    CanBeEditableDocument: true,\r\n    CannotAddSelfAsActioner: true,\r\n    HasSiteList: true,\r\n    ColourHex: faker.color.rgb({ prefix: \"\", casing: \"upper\" }),\r\n    QueueSelectorTitle: faker.lorem.word()\r\n  }\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: true,\n  siteDocsApi: \"http://localhost:3002/api\",\n  apiTimeout: 60000\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  production: false,\n  siteDocsApi: \"http://localhost:3002/api\",\n  apiTimeout: 60000\n}"
            },
            {
                "name": "formFillerRouteMock",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<FormFillerRoute>",
                "defaultValue": "{\r\n  documentIds$: of([29]),\r\n  lastDocumentId$: of(29)\r\n}"
            },
            {
                "name": "formFillerStoreMock",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<FormFillerStore>",
                "defaultValue": "{\r\n  writingDocument$: new Subject<SiteDocument>(),\r\n  submitDocument$: (action$: Observable<SiteDocument>) => of(),\r\n  getTemplateRequest$: (action$: Observable<number>) => of(),\r\n  getTemplatesRequest$: <T>(action$: Observable<T>) => of()\r\n}"
            },
            {
                "name": "getDeviceString",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/plugins/device.plugin.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize(async () => {\r\n  const info = await Device.getInfo();\r\n  return `${info.model}@${info.platform}@${info.osVersion}`;\r\n})"
            },
            {
                "name": "getDeviceUuid",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/plugins/device.plugin.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize(async () => {\r\n  const { uuid } = await Device.getId();\r\n  return uuid;\r\n})"
            },
            {
                "name": "isMobileApp",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/plugins/platform.plugin.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize(() => {\r\n  const platform = inject(Platform);\r\n\r\n  return platform.is(\"cordova\");\r\n})"
            },
            {
                "name": "ObjectSelectable",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/selectable/selectable.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({}) as StoryFn<SelectableComponent<{ name: string }>>"
            },
            {
                "name": "Prepopulated",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "PrepopulatedSelectable",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/selectable/selectable.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": ".storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\r\n  parameters: {\r\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\r\n    controls: {\r\n      matchers: {\r\n        color: /(background|color)$/i,\r\n        date: /Date$/,\r\n      },\r\n    },\r\n  },\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        importProvidersFrom(IonicModule.forRoot({})),\r\n        provideHttpClient()\r\n      ]\r\n    }),\r\n    componentWrapperDecorator(story => `<ion-app>${story}</ion-app>`)\r\n  ]\r\n}"
            },
            {
                "name": "queues",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Array\r\n  .from({ length: 10 })\r\n  .map((val, idx) => \r\n    ({\r\n      id: idx,\r\n      name: faker.lorem.word()\r\n    })\r\n  )"
            },
            {
                "name": "setAppUserUpdate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/user/user.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "pipeTap<User>(user => store.update(setAppUser(user)))"
            },
            {
                "name": "sites$",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/user/user.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "userSelector(user => user?.UserSites || [])"
            },
            {
                "name": "store",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/live-queues/live-queues.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createStore(\r\n  { name: \"live-queues\" },\r\n  withProps<{ hideEmptyQueues: boolean }>({\r\n    hideEmptyQueues: false\r\n  })\r\n)"
            },
            {
                "name": "store",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/operative/operatives.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createStore(\r\n  { name: \"operatives\" },\r\n  withEntities<Operative, \"ID\">({ idKey: \"ID\" }),\r\n  withSearchResultEntities<OperativeSearchResult, \"ID\">({ idKey: \"ID\" })\r\n)"
            },
            {
                "name": "store",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/site-document/site-document.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createStore(\r\n  { name: \"site-documents\" },\r\n  withEntities<SiteDocument, \"DocumentID\">({ idKey: \"DocumentID\" })\r\n)"
            },
            {
                "name": "store",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/user/user.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createStore(\r\n  { name: \"user\" },\r\n  withAppUser()\r\n)"
            },
            {
                "name": "store",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/site-document/form-filler/form-filler.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createStore(\r\n  { name: \"form-filler\" },\r\n  withWritingDocument(null as SiteDocument | null),\r\n  withTemplateMenuEntities<TemplateMenuItem, \"Id\">({ idKey: \"Id\", initialValue: [] })\r\n)"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<DocumentBuilderPage>",
                "defaultValue": "(args: DocumentBuilderPage) => ({\r\n  props: args,\r\n  styles: [`\r\n    app-document-builder { display: contents; }\r\n  `]\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/registration/registration.page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<RegistrationPage>",
                "defaultValue": "(args: RegistrationPage) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/camera/camera.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<CameraComponent>",
                "defaultValue": "(args: CameraComponent) => ({\r\n  props: args,\r\n  template: `\r\n    <camera [fill]=\"fill\" [expand]=\"expand\" [color]=\"color\">\r\n      Add Image\r\n    </camera>\r\n  `\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/datetime-picker/datetime-picker.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<DatetimePickerComponent>",
                "defaultValue": "(args: DatetimePickerComponent) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/selectable/selectable.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<SelectableComponent>",
                "defaultValue": "(args: SelectableComponent) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/multi-selectable/multi-selectable.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<MultiSelectableComponent>",
                "defaultValue": "(args: MultiSelectableComponent) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/actioner-select/actioner-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<ActionerSelectComponent>",
                "defaultValue": "(args: ActionerSelectComponent) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/queue-duration/queue-duration.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<QueueDurationComponent>",
                "defaultValue": "(args: QueueDurationComponent) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/remain-anonymous/remain-anonymous.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<RemainAnonymousComponent>",
                "defaultValue": "(args: RemainAnonymousComponent) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<QueueSelectComponent>",
                "defaultValue": "(args: QueueSelectComponent) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/01-checkbox/checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<>",
                "defaultValue": "(args: CheckboxComponent & Prefix<Question, \"question\">) => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...args.question,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/02-radio-group/radio-group.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<RadioGroupComponent>",
                "defaultValue": "(args: RadioGroupComponent) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/03-textbox/textbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<TextboxComponent>",
                "defaultValue": "(args: TextboxComponent) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/04-textarea/textarea.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<TextareaComponent>",
                "defaultValue": "(args: TextareaComponent) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/05-select/select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<SelectComponent>",
                "defaultValue": "(args: SelectComponent) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/02-radio-table/radio-table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<RadioTableComponent>",
                "defaultValue": "(args: RadioTableComponent) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/06-checkbox-textbox/checkbox-textbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<CheckboxTextboxComponent>",
                "defaultValue": "(args: CheckboxTextboxComponent) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/07-radio-group-textbox/radio-group-textbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<RadioGroupTextboxComponent>",
                "defaultValue": "(args: RadioGroupTextboxComponent) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/09-datetime/datetime.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<DatetimeComponent>",
                "defaultValue": "(args: DatetimeComponent) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/08-date/date.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<DateComponent>",
                "defaultValue": "(args: DateComponent) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/07-radio-table-textbox/radio-table-textbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<RadioTableTextboxComponent>",
                "defaultValue": "(args: RadioTableTextboxComponent) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/10-operative-list/operative-list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<OperativeListComponent>",
                "defaultValue": "(args: OperativeListComponent) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/12-number/number.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<NumberComponent>",
                "defaultValue": "(args: NumberComponent) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/19-signature/signature.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<SignatureComponent>",
                "defaultValue": "(args: SignatureComponent) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/18-linked-dates/linked-dates.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<LinkedDatesComponent>",
                "defaultValue": "(args: LinkedDatesComponent) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/extras/camera-capture/camera-capture.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<CameraCaptureComponent>",
                "defaultValue": "(args: CameraCaptureComponent) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/extras/file-upload/file-upload.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<FileUploadComponent>",
                "defaultValue": "(args: FileUploadComponent) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "toggleHideEmptyQueues",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/live-queues/live-queues.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "() => store.update(\r\n  setProp(\"hideEmptyQueues\", prop => !prop)\r\n)"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/adapters/search-results.adapter.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "entitiesPropsFactory(\"SearchResult\")"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/operative/operatives.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "searchResultsAdapter()"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/operative/operatives.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  ...operativesAdapter(store),\r\n  ...searchResultsAdapt(store)\r\n}"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/user/user.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "propsFactory(\"appUser\", { initialValue: null as User | null })"
            },
            {
                "name": "userSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/user/user.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "selector(store.pipe(selectAppUser()))"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/site-document/adapters/writing-document.adapter.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "propsFactory(\"writingDocument\", { initialValue: null as SiteDocument | null })"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/site-document/form-filler/form-filler.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "entitiesPropsFactory(\"templateMenu\")"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/site-document/form-filler/form-filler.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "writingDocumentAdapter(store)"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/site-document/props/writing-document.props.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "propsFactory(\"writingDocument\", { initialValue: null as SiteDocument | null })"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/site-document/form-filler/adapters/template-menu.adapter.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "entitiesPropsFactory(\"templateMenu\")"
            }
        ],
        "functions": [
            {
                "name": "AngularComponent",
                "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "ReturnType<T1>",
                "jsdoctags": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "AngularComponent",
                "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "AngularComponent",
                "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h3",
                        "type": "T3",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h3",
                        "type": "T3",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "AngularComponent",
                "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h3",
                        "type": "T3",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h4",
                        "type": "T4",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h3",
                        "type": "T3",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h4",
                        "type": "T4",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "AngularComponent",
                "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h3",
                        "type": "T3",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h4",
                        "type": "T4",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h5",
                        "type": "T5",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h3",
                        "type": "T3",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h4",
                        "type": "T4",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h5",
                        "type": "T5",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "AngularComponent",
                "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h3",
                        "type": "T3",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h4",
                        "type": "T4",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h5",
                        "type": "T5",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h6",
                        "type": "T6",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h3",
                        "type": "T3",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h4",
                        "type": "T4",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h5",
                        "type": "T5",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h6",
                        "type": "T6",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "AngularComponent",
                "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "AngularComponent",
                "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "args",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "dotDotDotToken": true
                    }
                ],
                "returnType": "any",
                "jsdoctags": [
                    {
                        "name": "args",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "dotDotDotToken": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "booleanAdapter",
                "file": "src/app/shared/adapters/boolean.adapter.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "key",
                        "type": "TProp",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "key",
                        "type": "TProp",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "clickReaction",
                "file": "src/app/shared/reactions/click.reaction.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "reaction",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "reaction",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "createWaitForSelector",
                "file": "src/app/shared/testing/wait-for.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "spectator",
                        "type": "Spectator",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "WaitForSelector",
                "jsdoctags": [
                    {
                        "name": "spectator",
                        "type": "Spectator",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "fileReader",
                "file": "src/app/shared/components/upload/upload.component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "FileReader"
            },
            {
                "name": "fileToDataUrlFile",
                "file": "src/app/shared/components/upload/upload.component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "file",
                        "type": "File",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Promise<DataUrlFile>",
                "jsdoctags": [
                    {
                        "name": "file",
                        "type": "File",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "ifBiometricsIsAvailable",
                "file": "src/app/shared/plugins/biometric.plugin.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "importInputTypes",
                "file": "src/app/core/pages/document-builder/components/input-types/input-types.import.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "importNgSwitch",
                "file": "src/app/shared/imports/ng-switch.import.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "importQuestionTypes",
                "file": "src/app/core/pages/document-builder/components/question-types/question-types.import.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "importRxTemplate",
                "file": "src/app/shared/imports/rx-template.import.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "isBiometricAvailable",
                "file": "src/app/shared/plugins/biometric.plugin.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "isNull",
                "file": "src/app/shared/operators/rxjs/is-null.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "operativesAdapter",
                "file": "src/app/core/stores/operative/adapters/operatives.adapter.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "operativeSearchAdapter",
                "file": "src/app/core/stores/operative/adapters/operatives.adapter.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "store",
                        "type": "AdapterTarget<TState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "9ae0ee54-a7ac-4fe7-8e30-8079fb09cc5e",
                        "destructuredParameter": true
                    },
                    {
                        "name": "ref",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "9ae0ee54-a7ac-4fe7-8e30-8079fb09cc5e",
                        "destructuredParameter": true
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "AdapterTarget<TState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "9ae0ee54-a7ac-4fe7-8e30-8079fb09cc5e",
                        "destructuredParameter": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "ref",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "9ae0ee54-a7ac-4fe7-8e30-8079fb09cc5e",
                        "destructuredParameter": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "pipeTap",
                "file": "src/app/shared/rxjs/pipes/pipe-tap.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "action",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "action",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "searchResultsAdapt",
                "file": "src/app/shared/adapters/search-results.adapter.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "searchResultsAdapter",
                "file": "src/app/shared/adapters/search-results.adapter.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "selector",
                "file": "src/app/shared/rxjs/selector.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "observable",
                        "type": "Observable",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "observable",
                        "type": "Observable",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "templateMenuAdapter",
                "file": "src/app/core/stores/site-document/form-filler/adapters/template-menu.adapter.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "verifyIdentity",
                "file": "src/app/shared/plugins/biometric.plugin.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "options",
                        "type": "BiometricOptions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "options",
                        "type": "BiometricOptions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "withAfterViewInit",
                "file": "src/app/shared/lifecycles/angular/with-after-view-init.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "withIonViewDidEnter",
                "file": "src/app/shared/lifecycles/ionic/with-ion-view-did-enter.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "withIonViewDidLeave",
                "file": "src/app/shared/lifecycles/ionic/with-ion-view-did-leave.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "withIonViewWillEnter",
                "file": "src/app/shared/lifecycles/ionic/with-ion-view-will-enter.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "withIonViewWillLeave",
                "file": "src/app/shared/lifecycles/ionic/with-ion-view-will-leave.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "withNoop",
                "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "withOnChanges",
                "file": "src/app/shared/lifecycles/angular/with-on-changes.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "withOnInit",
                "file": "src/app/shared/lifecycles/angular/with-on-init.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "writingDocumentActions",
                "file": "src/app/core/stores/site-document/props/writing-document.props.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "writingDocumentAdapter",
                "file": "src/app/core/stores/site-document/adapters/writing-document.adapter.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "AnyFunction",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "function",
                "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 178
            },
            {
                "name": "ReactiveConstructor",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 179
            },
            {
                "name": "SearchEntitiesRef",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "EntitiesRef<SearchResultEntities | SearchResultIds | idKeySearchResult>",
                "file": "src/app/core/stores/operative/adapters/operatives.adapter.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "WaitForSelector",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "function",
                "file": "src/app/shared/testing/wait-for.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 178
            }
        ],
        "enumerations": [
            {
                "name": "QuestionType",
                "childs": [
                    {
                        "name": "Label",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 0
                    },
                    {
                        "name": "Checkbox",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 1
                    },
                    {
                        "name": "RadioGroup",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 2
                    },
                    {
                        "name": "Textbox",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 3
                    },
                    {
                        "name": "TextArea",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 4
                    },
                    {
                        "name": "Select",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 5
                    },
                    {
                        "name": "CheckboxTextbox",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 6
                    },
                    {
                        "name": "RadioGroupTextbox",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 7
                    },
                    {
                        "name": "Date",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 8
                    },
                    {
                        "name": "DateTime",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 9
                    },
                    {
                        "name": "OperativeList",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 10
                    },
                    {
                        "name": "WallOfText",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 11
                    },
                    {
                        "name": "Number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 12
                    },
                    {
                        "name": "CascadeDropdown",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 13
                    },
                    {
                        "name": "LinkedBool",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 16
                    },
                    {
                        "name": "AssetList",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 17
                    },
                    {
                        "name": "LinkedDates",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 18
                    },
                    {
                        "name": "Signature",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 19
                    },
                    {
                        "name": "CompanySelect",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 21
                    },
                    {
                        "name": "AreaSelect",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 22
                    },
                    {
                        "name": "AssetGroupsAndTypes",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 25
                    },
                    {
                        "name": "AssetInspectionSchedule",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 26
                    },
                    {
                        "name": "ProjectSelect",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 27
                    },
                    {
                        "name": "RamsSelect",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 28
                    },
                    {
                        "name": "SelectText",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 29
                    },
                    {
                        "name": "CascadeDropdownText",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 30
                    },
                    {
                        "name": "MultiCascade",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 31
                    },
                    {
                        "name": "Time",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 32
                    },
                    {
                        "name": "LinkedTimes",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 33
                    },
                    {
                        "name": "HRASelect",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 34
                    },
                    {
                        "name": "MultiCheckbox",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 35
                    },
                    {
                        "name": "LinkedDateAndTime",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 36
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/core/stores/site-document/site-document.store.ts"
            }
        ],
        "groupedVariables": {
            "src/app/shared/components/datetime-picker/datetime-picker.component.stories.ts": [
                {
                    "name": "DateOnly",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/datetime-picker/datetime-picker.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/datetime-picker/datetime-picker.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/datetime-picker/datetime-picker.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<DatetimePickerComponent>",
                    "defaultValue": "(args: DatetimePickerComponent) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/document-builder.page.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "defaultDoc",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SiteDocument",
                    "defaultValue": "{\r\n  ...defaultSiteDocument,\r\n  DocumentTitle: faker.lorem.word(),\r\n  Pages: [\r\n    {\r\n      PageID: 1,\r\n      PageTitle: faker.lorem.word(),\r\n      Sections: Object\r\n        .values(QuestionType)\r\n        .filter(qt => typeof qt === \"number\")\r\n        .map((qt, idx) => \r\n          ({\r\n            ...defaultSection,\r\n            SectionID: idx,\r\n            SectionNo: idx,\r\n            SectionTitle: \"\",\r\n            SectionQuestiontype: qt as QuestionType,\r\n            Questions: [\r\n              {\r\n                ...defaultQuestion,\r\n                QuestionText: QuestionType[qt as number].toString()\r\n              }\r\n            ]\r\n          })\r\n        )\r\n    }\r\n  ]\r\n}"
                },
                {
                    "name": "DocumentWithAllPermissionsTurnedOn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "docWithAllPermissionsOn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SiteDocument",
                    "defaultValue": "{\r\n  ...defaultSiteDocument,\r\n  DocumentTitle: faker.lorem.word(),\r\n  Pages: [\r\n    {\r\n      PageID: 1,\r\n      PageTitle: faker.lorem.word(),\r\n      Sections: Object\r\n        .values(QuestionType)\r\n        .filter(qt => typeof qt === \"number\")\r\n        .map((qt, idx) => \r\n          ({\r\n            ...defaultSection,\r\n            SectionID: idx,\r\n            SectionNo: idx,\r\n            SectionTitle: \"\",\r\n            SectionQuestiontype: qt as QuestionType,\r\n            Questions: [\r\n              {\r\n                ...defaultQuestion,\r\n                QuestionText: QuestionType[qt as number].toString()\r\n              }\r\n            ]\r\n          })\r\n        )\r\n    }\r\n  ],\r\n  Queues: Array\r\n    .from({ length: 5 })\r\n    .map((val, idx) => \r\n      ({\r\n        Key: idx.toString(),\r\n        Value: faker.lorem.word()\r\n      })\r\n  ),\r\n  CanAddAsset: true,\r\n  CanAddOperative: true,\r\n  CanCreateHotspot: true,\r\n  CanAddActionerFromApp: true,\r\n  CanAddCategoryActioner: true,\r\n  CanCreateAssetsFromDocument: true,\r\n  CanHaveCompanyActioner: true,\r\n  CanHaveDocLevelPhotoRoll: true,\r\n  CanHaveDocumentLevelImages: true,\r\n  CanHaveQueueDuration: true,\r\n  ShowDocLevelPhotoButtonAtStartOfDoc: true,\r\n  CanBeAddedToHotspot: true,\r\n  CanBeSavedAsDraft: true,\r\n  AllowAnon: true,\r\n  RemainAnon: false,\r\n  MetaData: {\r\n    ActionerText: faker.lorem.word(),\r\n    CanBeEditableDocument: true,\r\n    CannotAddSelfAsActioner: true,\r\n    HasSiteList: true,\r\n    ColourHex: faker.color.rgb({ prefix: \"\", casing: \"upper\" }),\r\n    QueueSelectorTitle: faker.lorem.word()\r\n  }\r\n}"
                },
                {
                    "name": "formFillerRouteMock",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<FormFillerRoute>",
                    "defaultValue": "{\r\n  documentIds$: of([29]),\r\n  lastDocumentId$: of(29)\r\n}"
                },
                {
                    "name": "formFillerStoreMock",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<FormFillerStore>",
                    "defaultValue": "{\r\n  writingDocument$: new Subject<SiteDocument>(),\r\n  submitDocument$: (action$: Observable<SiteDocument>) => of(),\r\n  getTemplateRequest$: (action$: Observable<number>) => of(),\r\n  getTemplatesRequest$: <T>(action$: Observable<T>) => of()\r\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<DocumentBuilderPage>",
                    "defaultValue": "(args: DocumentBuilderPage) => ({\r\n  props: args,\r\n  styles: [`\r\n    app-document-builder { display: contents; }\r\n  `]\r\n})"
                }
            ],
            "src/app/core/pages/registration/registration.page.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/registration/registration.page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/registration/registration.page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<RegistrationPage>",
                    "defaultValue": "(args: RegistrationPage) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/shared/components/camera/camera.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/camera/camera.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/camera/camera.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<CameraComponent>",
                    "defaultValue": "(args: CameraComponent) => ({\r\n  props: args,\r\n  template: `\r\n    <camera [fill]=\"fill\" [expand]=\"expand\" [color]=\"color\">\r\n      Add Image\r\n    </camera>\r\n  `\r\n})"
                }
            ],
            "src/app/shared/components/selectable/selectable.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/selectable/selectable.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "ObjectSelectable",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/selectable/selectable.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({}) as StoryFn<SelectableComponent<{ name: string }>>"
                },
                {
                    "name": "PrepopulatedSelectable",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/selectable/selectable.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/selectable/selectable.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<SelectableComponent>",
                    "defaultValue": "(args: SelectableComponent) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/shared/components/multi-selectable/multi-selectable.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/multi-selectable/multi-selectable.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/multi-selectable/multi-selectable.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<MultiSelectableComponent>",
                    "defaultValue": "(args: MultiSelectableComponent) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/input-types/actioner-select/actioner-select.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/actioner-select/actioner-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/actioner-select/actioner-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<ActionerSelectComponent>",
                    "defaultValue": "(args: ActionerSelectComponent) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/input-types/queue-duration/queue-duration.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/queue-duration/queue-duration.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/queue-duration/queue-duration.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<QueueDurationComponent>",
                    "defaultValue": "(args: QueueDurationComponent) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/input-types/remain-anonymous/remain-anonymous.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/remain-anonymous/remain-anonymous.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/remain-anonymous/remain-anonymous.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<RemainAnonymousComponent>",
                    "defaultValue": "(args: RemainAnonymousComponent) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Prepopulated",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "queues",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Array\r\n  .from({ length: 10 })\r\n  .map((val, idx) => \r\n    ({\r\n      id: idx,\r\n      name: faker.lorem.word()\r\n    })\r\n  )"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<QueueSelectComponent>",
                    "defaultValue": "(args: QueueSelectComponent) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/01-checkbox/checkbox.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/01-checkbox/checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/01-checkbox/checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<>",
                    "defaultValue": "(args: CheckboxComponent & Prefix<Question, \"question\">) => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...args.question,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/02-radio-group/radio-group.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/02-radio-group/radio-group.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/02-radio-group/radio-group.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<RadioGroupComponent>",
                    "defaultValue": "(args: RadioGroupComponent) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/03-textbox/textbox.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/03-textbox/textbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/03-textbox/textbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<TextboxComponent>",
                    "defaultValue": "(args: TextboxComponent) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/04-textarea/textarea.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/04-textarea/textarea.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/04-textarea/textarea.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<TextareaComponent>",
                    "defaultValue": "(args: TextareaComponent) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/05-select/select.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/05-select/select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/05-select/select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<SelectComponent>",
                    "defaultValue": "(args: SelectComponent) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/02-radio-table/radio-table.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/02-radio-table/radio-table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/02-radio-table/radio-table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<RadioTableComponent>",
                    "defaultValue": "(args: RadioTableComponent) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/06-checkbox-textbox/checkbox-textbox.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/06-checkbox-textbox/checkbox-textbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/06-checkbox-textbox/checkbox-textbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<CheckboxTextboxComponent>",
                    "defaultValue": "(args: CheckboxTextboxComponent) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/07-radio-group-textbox/radio-group-textbox.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/07-radio-group-textbox/radio-group-textbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/07-radio-group-textbox/radio-group-textbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<RadioGroupTextboxComponent>",
                    "defaultValue": "(args: RadioGroupTextboxComponent) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/09-datetime/datetime.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/09-datetime/datetime.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/09-datetime/datetime.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<DatetimeComponent>",
                    "defaultValue": "(args: DatetimeComponent) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/08-date/date.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/08-date/date.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/08-date/date.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<DateComponent>",
                    "defaultValue": "(args: DateComponent) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/07-radio-table-textbox/radio-table-textbox.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/07-radio-table-textbox/radio-table-textbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/07-radio-table-textbox/radio-table-textbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<RadioTableTextboxComponent>",
                    "defaultValue": "(args: RadioTableTextboxComponent) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/10-operative-list/operative-list.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/10-operative-list/operative-list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/10-operative-list/operative-list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<OperativeListComponent>",
                    "defaultValue": "(args: OperativeListComponent) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/12-number/number.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/12-number/number.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/12-number/number.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<NumberComponent>",
                    "defaultValue": "(args: NumberComponent) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/19-signature/signature.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/19-signature/signature.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/19-signature/signature.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<SignatureComponent>",
                    "defaultValue": "(args: SignatureComponent) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/18-linked-dates/linked-dates.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/18-linked-dates/linked-dates.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/18-linked-dates/linked-dates.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<LinkedDatesComponent>",
                    "defaultValue": "(args: LinkedDatesComponent) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/extras/camera-capture/camera-capture.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/extras/camera-capture/camera-capture.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/extras/camera-capture/camera-capture.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<CameraCaptureComponent>",
                    "defaultValue": "(args: CameraCaptureComponent) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/extras/file-upload/file-upload.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/extras/file-upload/file-upload.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/extras/file-upload/file-upload.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<FileUploadComponent>",
                    "defaultValue": "(args: FileUploadComponent) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: true,\n  siteDocsApi: \"http://localhost:3002/api\",\n  apiTimeout: 60000\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  production: false,\n  siteDocsApi: \"http://localhost:3002/api\",\n  apiTimeout: 60000\n}"
                }
            ],
            "src/app/shared/plugins/device.plugin.ts": [
                {
                    "name": "getDeviceString",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/plugins/device.plugin.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize(async () => {\r\n  const info = await Device.getInfo();\r\n  return `${info.model}@${info.platform}@${info.osVersion}`;\r\n})"
                },
                {
                    "name": "getDeviceUuid",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/plugins/device.plugin.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize(async () => {\r\n  const { uuid } = await Device.getId();\r\n  return uuid;\r\n})"
                }
            ],
            "src/app/shared/plugins/platform.plugin.ts": [
                {
                    "name": "isMobileApp",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/plugins/platform.plugin.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize(() => {\r\n  const platform = inject(Platform);\r\n\r\n  return platform.is(\"cordova\");\r\n})"
                }
            ],
            ".storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": ".storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\r\n  parameters: {\r\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\r\n    controls: {\r\n      matchers: {\r\n        color: /(background|color)$/i,\r\n        date: /Date$/,\r\n      },\r\n    },\r\n  },\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        importProvidersFrom(IonicModule.forRoot({})),\r\n        provideHttpClient()\r\n      ]\r\n    }),\r\n    componentWrapperDecorator(story => `<ion-app>${story}</ion-app>`)\r\n  ]\r\n}"
                }
            ],
            "src/app/core/stores/user/user.store.ts": [
                {
                    "name": "setAppUserUpdate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/user/user.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "pipeTap<User>(user => store.update(setAppUser(user)))"
                },
                {
                    "name": "sites$",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/user/user.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "userSelector(user => user?.UserSites || [])"
                },
                {
                    "name": "store",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/user/user.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createStore(\r\n  { name: \"user\" },\r\n  withAppUser()\r\n)"
                },
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/user/user.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "propsFactory(\"appUser\", { initialValue: null as User | null })"
                },
                {
                    "name": "userSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/user/user.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "selector(store.pipe(selectAppUser()))"
                }
            ],
            "src/app/core/stores/live-queues/live-queues.store.ts": [
                {
                    "name": "store",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/live-queues/live-queues.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createStore(\r\n  { name: \"live-queues\" },\r\n  withProps<{ hideEmptyQueues: boolean }>({\r\n    hideEmptyQueues: false\r\n  })\r\n)"
                },
                {
                    "name": "toggleHideEmptyQueues",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/live-queues/live-queues.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "() => store.update(\r\n  setProp(\"hideEmptyQueues\", prop => !prop)\r\n)"
                }
            ],
            "src/app/core/stores/operative/operatives.store.ts": [
                {
                    "name": "store",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/operative/operatives.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createStore(\r\n  { name: \"operatives\" },\r\n  withEntities<Operative, \"ID\">({ idKey: \"ID\" }),\r\n  withSearchResultEntities<OperativeSearchResult, \"ID\">({ idKey: \"ID\" })\r\n)"
                },
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/operative/operatives.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "searchResultsAdapter()"
                },
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/operative/operatives.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  ...operativesAdapter(store),\r\n  ...searchResultsAdapt(store)\r\n}"
                }
            ],
            "src/app/core/stores/site-document/site-document.store.ts": [
                {
                    "name": "store",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/site-document/site-document.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createStore(\r\n  { name: \"site-documents\" },\r\n  withEntities<SiteDocument, \"DocumentID\">({ idKey: \"DocumentID\" })\r\n)"
                }
            ],
            "src/app/core/stores/site-document/form-filler/form-filler.store.ts": [
                {
                    "name": "store",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/site-document/form-filler/form-filler.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createStore(\r\n  { name: \"form-filler\" },\r\n  withWritingDocument(null as SiteDocument | null),\r\n  withTemplateMenuEntities<TemplateMenuItem, \"Id\">({ idKey: \"Id\", initialValue: [] })\r\n)"
                },
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/site-document/form-filler/form-filler.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "entitiesPropsFactory(\"templateMenu\")"
                },
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/site-document/form-filler/form-filler.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "writingDocumentAdapter(store)"
                }
            ],
            "src/app/shared/adapters/search-results.adapter.ts": [
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/adapters/search-results.adapter.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "entitiesPropsFactory(\"SearchResult\")"
                }
            ],
            "src/app/core/stores/site-document/adapters/writing-document.adapter.ts": [
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/site-document/adapters/writing-document.adapter.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "propsFactory(\"writingDocument\", { initialValue: null as SiteDocument | null })"
                }
            ],
            "src/app/core/stores/site-document/props/writing-document.props.ts": [
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/site-document/props/writing-document.props.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "propsFactory(\"writingDocument\", { initialValue: null as SiteDocument | null })"
                }
            ],
            "src/app/core/stores/site-document/form-filler/adapters/template-menu.adapter.ts": [
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/site-document/form-filler/adapters/template-menu.adapter.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "entitiesPropsFactory(\"templateMenu\")"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/shared/lifecycles/lifecycle-component.ts": [
                {
                    "name": "AngularComponent",
                    "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "ReturnType<T1>",
                    "jsdoctags": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "AngularComponent",
                    "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "AngularComponent",
                    "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h3",
                            "type": "T3",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h3",
                            "type": "T3",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "AngularComponent",
                    "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h3",
                            "type": "T3",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h4",
                            "type": "T4",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h3",
                            "type": "T3",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h4",
                            "type": "T4",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "AngularComponent",
                    "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h3",
                            "type": "T3",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h4",
                            "type": "T4",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h5",
                            "type": "T5",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h3",
                            "type": "T3",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h4",
                            "type": "T4",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h5",
                            "type": "T5",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "AngularComponent",
                    "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h3",
                            "type": "T3",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h4",
                            "type": "T4",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h5",
                            "type": "T5",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h6",
                            "type": "T6",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h3",
                            "type": "T3",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h4",
                            "type": "T4",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h5",
                            "type": "T5",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h6",
                            "type": "T6",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "AngularComponent",
                    "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                },
                {
                    "name": "AngularComponent",
                    "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "args",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true
                        }
                    ],
                    "returnType": "any",
                    "jsdoctags": [
                        {
                            "name": "args",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "withNoop",
                    "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/adapters/boolean.adapter.ts": [
                {
                    "name": "booleanAdapter",
                    "file": "src/app/shared/adapters/boolean.adapter.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "store",
                            "type": "Store",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "key",
                            "type": "TProp",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "store",
                            "type": "Store",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "key",
                            "type": "TProp",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/reactions/click.reaction.ts": [
                {
                    "name": "clickReaction",
                    "file": "src/app/shared/reactions/click.reaction.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "reaction",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "reaction",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/testing/wait-for.ts": [
                {
                    "name": "createWaitForSelector",
                    "file": "src/app/shared/testing/wait-for.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "spectator",
                            "type": "Spectator",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "WaitForSelector",
                    "jsdoctags": [
                        {
                            "name": "spectator",
                            "type": "Spectator",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/components/upload/upload.component.ts": [
                {
                    "name": "fileReader",
                    "file": "src/app/shared/components/upload/upload.component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "FileReader"
                },
                {
                    "name": "fileToDataUrlFile",
                    "file": "src/app/shared/components/upload/upload.component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "file",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Promise<DataUrlFile>",
                    "jsdoctags": [
                        {
                            "name": "file",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/plugins/biometric.plugin.ts": [
                {
                    "name": "ifBiometricsIsAvailable",
                    "file": "src/app/shared/plugins/biometric.plugin.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                },
                {
                    "name": "isBiometricAvailable",
                    "file": "src/app/shared/plugins/biometric.plugin.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                },
                {
                    "name": "verifyIdentity",
                    "file": "src/app/shared/plugins/biometric.plugin.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "options",
                            "type": "BiometricOptions",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "options",
                            "type": "BiometricOptions",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/core/pages/document-builder/components/input-types/input-types.import.ts": [
                {
                    "name": "importInputTypes",
                    "file": "src/app/core/pages/document-builder/components/input-types/input-types.import.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ],
            "src/app/shared/imports/ng-switch.import.ts": [
                {
                    "name": "importNgSwitch",
                    "file": "src/app/shared/imports/ng-switch.import.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/question-types.import.ts": [
                {
                    "name": "importQuestionTypes",
                    "file": "src/app/core/pages/document-builder/components/question-types/question-types.import.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ],
            "src/app/shared/imports/rx-template.import.ts": [
                {
                    "name": "importRxTemplate",
                    "file": "src/app/shared/imports/rx-template.import.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ],
            "src/app/shared/operators/rxjs/is-null.ts": [
                {
                    "name": "isNull",
                    "file": "src/app/shared/operators/rxjs/is-null.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ],
            "src/app/core/stores/operative/adapters/operatives.adapter.ts": [
                {
                    "name": "operativesAdapter",
                    "file": "src/app/core/stores/operative/adapters/operatives.adapter.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "store",
                            "type": "Store",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "store",
                            "type": "Store",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "operativeSearchAdapter",
                    "file": "src/app/core/stores/operative/adapters/operatives.adapter.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "store",
                            "type": "AdapterTarget<TState>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "9ae0ee54-a7ac-4fe7-8e30-8079fb09cc5e",
                            "destructuredParameter": true
                        },
                        {
                            "name": "ref",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "9ae0ee54-a7ac-4fe7-8e30-8079fb09cc5e",
                            "destructuredParameter": true
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "store",
                            "type": "AdapterTarget<TState>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "9ae0ee54-a7ac-4fe7-8e30-8079fb09cc5e",
                            "destructuredParameter": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "ref",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "9ae0ee54-a7ac-4fe7-8e30-8079fb09cc5e",
                            "destructuredParameter": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/rxjs/pipes/pipe-tap.ts": [
                {
                    "name": "pipeTap",
                    "file": "src/app/shared/rxjs/pipes/pipe-tap.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "action",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "action",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/adapters/search-results.adapter.ts": [
                {
                    "name": "searchResultsAdapt",
                    "file": "src/app/shared/adapters/search-results.adapter.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "store",
                            "type": "Store",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "store",
                            "type": "Store",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "searchResultsAdapter",
                    "file": "src/app/shared/adapters/search-results.adapter.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ],
            "src/app/shared/rxjs/selector.ts": [
                {
                    "name": "selector",
                    "file": "src/app/shared/rxjs/selector.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "observable",
                            "type": "Observable",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "observable",
                            "type": "Observable",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/core/stores/site-document/form-filler/adapters/template-menu.adapter.ts": [
                {
                    "name": "templateMenuAdapter",
                    "file": "src/app/core/stores/site-document/form-filler/adapters/template-menu.adapter.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "store",
                            "type": "Store",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "store",
                            "type": "Store",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/lifecycles/angular/with-after-view-init.ts": [
                {
                    "name": "withAfterViewInit",
                    "file": "src/app/shared/lifecycles/angular/with-after-view-init.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/lifecycles/ionic/with-ion-view-did-enter.ts": [
                {
                    "name": "withIonViewDidEnter",
                    "file": "src/app/shared/lifecycles/ionic/with-ion-view-did-enter.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/lifecycles/ionic/with-ion-view-did-leave.ts": [
                {
                    "name": "withIonViewDidLeave",
                    "file": "src/app/shared/lifecycles/ionic/with-ion-view-did-leave.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/lifecycles/ionic/with-ion-view-will-enter.ts": [
                {
                    "name": "withIonViewWillEnter",
                    "file": "src/app/shared/lifecycles/ionic/with-ion-view-will-enter.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/lifecycles/ionic/with-ion-view-will-leave.ts": [
                {
                    "name": "withIonViewWillLeave",
                    "file": "src/app/shared/lifecycles/ionic/with-ion-view-will-leave.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/lifecycles/angular/with-on-changes.ts": [
                {
                    "name": "withOnChanges",
                    "file": "src/app/shared/lifecycles/angular/with-on-changes.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/lifecycles/angular/with-on-init.ts": [
                {
                    "name": "withOnInit",
                    "file": "src/app/shared/lifecycles/angular/with-on-init.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/core/stores/site-document/props/writing-document.props.ts": [
                {
                    "name": "writingDocumentActions",
                    "file": "src/app/core/stores/site-document/props/writing-document.props.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "store",
                            "type": "Store",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "store",
                            "type": "Store",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/core/stores/site-document/adapters/writing-document.adapter.ts": [
                {
                    "name": "writingDocumentAdapter",
                    "file": "src/app/core/stores/site-document/adapters/writing-document.adapter.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "store",
                            "type": "Store",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "store",
                            "type": "Store",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {
            "src/app/core/stores/site-document/site-document.store.ts": [
                {
                    "name": "QuestionType",
                    "childs": [
                        {
                            "name": "Label",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 0
                        },
                        {
                            "name": "Checkbox",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 1
                        },
                        {
                            "name": "RadioGroup",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 2
                        },
                        {
                            "name": "Textbox",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 3
                        },
                        {
                            "name": "TextArea",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 4
                        },
                        {
                            "name": "Select",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 5
                        },
                        {
                            "name": "CheckboxTextbox",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 6
                        },
                        {
                            "name": "RadioGroupTextbox",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 7
                        },
                        {
                            "name": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 8
                        },
                        {
                            "name": "DateTime",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 9
                        },
                        {
                            "name": "OperativeList",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 10
                        },
                        {
                            "name": "WallOfText",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 11
                        },
                        {
                            "name": "Number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 12
                        },
                        {
                            "name": "CascadeDropdown",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 13
                        },
                        {
                            "name": "LinkedBool",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 16
                        },
                        {
                            "name": "AssetList",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 17
                        },
                        {
                            "name": "LinkedDates",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 18
                        },
                        {
                            "name": "Signature",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 19
                        },
                        {
                            "name": "CompanySelect",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 21
                        },
                        {
                            "name": "AreaSelect",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 22
                        },
                        {
                            "name": "AssetGroupsAndTypes",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 25
                        },
                        {
                            "name": "AssetInspectionSchedule",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 26
                        },
                        {
                            "name": "ProjectSelect",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 27
                        },
                        {
                            "name": "RamsSelect",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 28
                        },
                        {
                            "name": "SelectText",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 29
                        },
                        {
                            "name": "CascadeDropdownText",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 30
                        },
                        {
                            "name": "MultiCascade",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 31
                        },
                        {
                            "name": "Time",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 32
                        },
                        {
                            "name": "LinkedTimes",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 33
                        },
                        {
                            "name": "HRASelect",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 34
                        },
                        {
                            "name": "MultiCheckbox",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 35
                        },
                        {
                            "name": "LinkedDateAndTime",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 36
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/core/stores/site-document/site-document.store.ts"
                }
            ]
        },
        "groupedTypeAliases": {
            "src/app/shared/lifecycles/lifecycle-component.ts": [
                {
                    "name": "AnyFunction",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "function",
                    "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 178
                },
                {
                    "name": "ReactiveConstructor",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 179
                }
            ],
            "src/app/core/stores/operative/adapters/operatives.adapter.ts": [
                {
                    "name": "SearchEntitiesRef",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "EntitiesRef<SearchResultEntities | SearchResultIds | idKeySearchResult>",
                    "file": "src/app/core/stores/operative/adapters/operatives.adapter.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/app/shared/testing/wait-for.ts": [
                {
                    "name": "WaitForSelector",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "function",
                    "file": "src/app/shared/testing/wait-for.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 178
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": ".storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/child-document-card/child-document-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChildDocumentCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/document-page/document-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DocumentPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/document-section/document-section.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DocumentSectionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/document-section/document-section.component.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "QuestionTemplateDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/actioner-select/actioner-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/actioner-select/actioner-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/actioner-select/actioner-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ActionerSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/company-actioner-select/company-actioner-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CompanyActionerSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/input-types.import.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "importInputTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/queue-duration/queue-duration.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/queue-duration/queue-duration.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/queue-duration/queue-duration.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "QueueDurationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Prepopulated",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "queues",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "QueueSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/remain-anonymous/remain-anonymous.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/remain-anonymous/remain-anonymous.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/remain-anonymous/remain-anonymous.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RemainAnonymousComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/site-select/site-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SiteSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/00-label/label.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LabelComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/01-checkbox/checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/01-checkbox/checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/01-checkbox/checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/02-radio-group/radio-group.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/02-radio-group/radio-group.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/02-radio-group/radio-group.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RadioGroupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/02-radio-table/radio-table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/02-radio-table/radio-table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/02-radio-table/radio-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RadioTableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/03-textbox/textbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/03-textbox/textbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/03-textbox/textbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/04-textarea/textarea.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/04-textarea/textarea.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/04-textarea/textarea.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextareaComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/05-select/select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/05-select/select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/05-select/select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/06-checkbox-textbox/checkbox-textbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/06-checkbox-textbox/checkbox-textbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/06-checkbox-textbox/checkbox-textbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxTextboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/07-radio-group-textbox/radio-group-textbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/07-radio-group-textbox/radio-group-textbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/07-radio-group-textbox/radio-group-textbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RadioGroupTextboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/07-radio-table-textbox/radio-table-textbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/07-radio-table-textbox/radio-table-textbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/07-radio-table-textbox/radio-table-textbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RadioTableTextboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/08-date/date.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/08-date/date.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/08-date/date.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DateComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/09-datetime/datetime.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/09-datetime/datetime.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/09-datetime/datetime.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DatetimeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/10-operative-list/operative-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/10-operative-list/operative-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/10-operative-list/operative-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OperativeListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/12-number/number.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/12-number/number.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/12-number/number.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NumberComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/17-asset-list/asset-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AssetListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/18-linked-dates/linked-dates.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/18-linked-dates/linked-dates.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/18-linked-dates/linked-dates.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LinkedDatesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/19-signature/signature.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/19-signature/signature.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/19-signature/signature.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignatureComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/29-select-text/select-text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectTextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/32-time/time.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TimeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/33-linked-time/linked-time.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LinkedTimeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/extras/camera-capture/camera-capture.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/extras/camera-capture/camera-capture.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/extras/camera-capture/camera-capture.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CameraCaptureComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/extras/file-upload/file-upload.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/extras/file-upload/file-upload.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/extras/file-upload/file-upload.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FileUploadComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/extras/question-text/question-text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "QuestionTextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/question-types.import.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "importQuestionTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultDoc",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DocumentWithAllPermissionsTurnedOn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "docWithAllPermissionsOn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "formFillerRouteMock",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "formFillerStoreMock",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/document-builder.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "DocumentBuilderPage",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/modals/template-menu/template-menu.modal.ts",
                "type": "component",
                "linktype": "component",
                "name": "TemplateMenuModal",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/routes/document-builder.route.ts",
                "type": "class",
                "linktype": "classe",
                "name": "DocumentBuilderRoute",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/routes/form-filler.route.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FormFillerRoute",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/registration/registration.page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/registration/registration.page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/registration/registration.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "RegistrationPage",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/live-queues/live-queues.store.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "LiveQueuesStore",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/live-queues/live-queues.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "store",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/live-queues/live-queues.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "toggleHideEmptyQueues",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/operative/adapters/operatives.adapter.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AdapterTarget",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/operative/adapters/operatives.adapter.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "EntitiesType",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/operative/adapters/operatives.adapter.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SearchEntitiesType",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/operative/adapters/operatives.adapter.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "operativesAdapter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/operative/adapters/operatives.adapter.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "operativeSearchAdapter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/operative/operatives.store.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "OperativesStore",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/operative/operatives.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Operative",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/operative/operatives.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "OperativeSearchResult",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/operative/operatives.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "store",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/operative/operatives.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/operative/operatives.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/adapters/writing-document.adapter.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "writingDocumentAdapter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/adapters/writing-document.adapter.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/form-filler/adapters/template-menu.adapter.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TemplateMenuItem",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/form-filler/adapters/template-menu.adapter.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "templateMenuAdapter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/form-filler/adapters/template-menu.adapter.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/form-filler/form-filler.store.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FormFillerStore",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/form-filler/form-filler.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TemplateMenuItem",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/form-filler/form-filler.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "store",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/form-filler/form-filler.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/form-filler/form-filler.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/props/writing-document.props.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "writingDocumentActions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/props/writing-document.props.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/site-document.store.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SiteDocumentStore",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/site-document.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Page",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/site-document.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Question",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/site-document.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Section",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/site-document.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SiteDocument",
                "coveragePercent": 0,
                "coverageCount": "0/23",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/site-document.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SiteDocumentAsset",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/site-document.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SiteDocumentMetaData",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/site-document.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SiteDocumentOperative",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/site-document.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "store",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/user/user.store.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UserStore",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/user/user.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Site",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/user/user.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/63",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/user/user.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "setAppUserUpdate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/user/user.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sites$",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/user/user.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "store",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/user/user.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/user/user.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "userSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/adapters/boolean.adapter.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "booleanAdapter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/adapters/search-results.adapter.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SearchEntitiesType",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/adapters/search-results.adapter.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "searchResultsAdapt",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/adapters/search-results.adapter.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "searchResultsAdapter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/adapters/search-results.adapter.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/camera/camera.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/camera/camera.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/camera/camera.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CameraComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/datetime-picker/datetime-picker.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DateOnly",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/datetime-picker/datetime-picker.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/datetime-picker/datetime-picker.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/datetime-picker/datetime-picker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DatetimePickerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/if/if.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IfComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/multi-selectable/multi-selectable.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/multi-selectable/multi-selectable.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/multi-selectable/multi-selectable.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MultiSelectableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/selectable/selectable.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/selectable/selectable.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ObjectSelectable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/selectable/selectable.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PrepopulatedSelectable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/selectable/selectable.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/selectable/selectable.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/upload/upload.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UploadComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/upload/upload.component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "fileReader",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/upload/upload.component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "fileToDataUrlFile",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/virtual-scroll/virtual-scroll.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "VirtualScrollComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/directives/barcode-scanner/barcode-scanner.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "BarcodeScannerDirective",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/directives/camera/camera.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "CameraDirective",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/directives/date/date.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "DateDirective",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/directives/photo-viewer/photo-viewer.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "PhotoViewerDirective",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/imports/ng-switch.import.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "importNgSwitch",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/imports/rx-template.import.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "importRxTemplate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/angular/with-after-view-init.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "withAfterViewInit",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/angular/with-on-changes.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "withOnChanges",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/angular/with-on-init.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "withOnInit",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/ionic/with-ion-view-did-enter.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "withIonViewDidEnter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/ionic/with-ion-view-did-leave.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "withIonViewDidLeave",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/ionic/with-ion-view-will-enter.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "withIonViewWillEnter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/ionic/with-ion-view-will-leave.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "withIonViewWillLeave",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ReactiveComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "AngularComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "AngularComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "AngularComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "AngularComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "AngularComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "AngularComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "AngularComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "AngularComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "withNoop",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/asset-list/asset-list.modal.ts",
                "type": "class",
                "linktype": "classe",
                "name": "AssetListModal",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/operative-list/components/local-operative-search/local-operative-search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LocalOperativeSearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/operative-list/components/online-operative-search/online-operative-search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OnlineOperativeSearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/operative-list/operative-list.modal.ts",
                "type": "component",
                "linktype": "component",
                "name": "OperativeListModal",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/events/target-event.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TargetEvent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/files/data-url-file.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DataUrlFile",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/operators/rxjs/is-null.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "isNull",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/pipes/fuse/fuse.pipe.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FuseOptions",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/pipes/fuse/fuse.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "FusePipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/pipes/utc-date/utc-date.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "UtcDatePipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/pipes/utc-datetime/utc-date-time.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "UtcDateTimePipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/plugins/biometric.plugin.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "ifBiometricsIsAvailable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/plugins/biometric.plugin.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "isBiometricAvailable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/plugins/biometric.plugin.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "verifyIdentity",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/plugins/device.plugin.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getDeviceString",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/plugins/device.plugin.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getDeviceUuid",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/plugins/platform.plugin.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "isMobileApp",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/reactions/click.reaction.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "clickReaction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/rxjs/pipes/pipe-tap.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "pipeTap",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/rxjs/selector.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "selector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/onesignal/onesignal.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "OneSignalService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/testing/wait-for.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "createWaitForSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}