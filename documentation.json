{
    "pipes": [
        {
            "name": "FusePipe",
            "id": "pipe-FusePipe-72cd7cdb79b10358cd8faace511648d173e708959dc741bd6569b62c3918319fd99d6fe95cab3ccbad2d0fd642230dc23f903214f3e9f7929a0595e03574920c",
            "file": "src/app/shared/pipes/fuse/fuse.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "values",
                            "type": "T[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "options",
                            "type": "FuseOptions<T>",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [
                        "T"
                    ],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "values",
                            "type": "T[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "options",
                            "type": "FuseOptions<T>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "fuse",
            "sourceCode": "import { Pipe, PipeTransform } from \"@angular/core\";\r\nimport Fuse from 'fuse.js'\r\n\r\nexport interface FuseOptions<T> extends Omit<Fuse.IFuseOptions<T>, \"keys\"> {\r\n  search: string,\r\n  keys?: keyof T | Array<keyof T>\r\n}\r\n\r\n@Pipe({\r\n  name: \"fuse\",\r\n  standalone: true\r\n})\r\nexport class FusePipe implements PipeTransform {\r\n  transform<T>(values: T[], options: FuseOptions<T>) {\r\n    if (options.search == null || options.search.length === 0)\r\n      return values;\r\n\r\n    return new Fuse(values, { \r\n      threshold: .1,\r\n      ignoreLocation: true,\r\n      ...options as Fuse.IFuseOptions<T>\r\n    })\r\n    .search(options.search)\r\n    .map(val => val.item);\r\n  }\r\n}\r\n"
        },
        {
            "name": "UtcDatePipe",
            "id": "pipe-UtcDatePipe-e643435144cafa36a6ca19fa1657a44984fbc310b60dd5a564d77bc931fc2ffd8e56b2005cce529bc6622007b02e570033ff849e208e1beb0372cb1c260a166a",
            "file": "src/app/shared/pipes/utc-date/utc-date.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "utcDate",
            "sourceCode": "import { Pipe, PipeTransform } from \"@angular/core\";\r\nimport { format } from \"date-fns\";\r\n\r\n@Pipe({\r\n  name: 'utcDate',\r\n  standalone: true\r\n})\r\nexport class UtcDatePipe implements PipeTransform {\r\n  transform(value: Date) {\r\n    return format(value, \"yyyy-MM-dd\");\r\n  }\r\n}"
        },
        {
            "name": "UtcDateTimePipe",
            "id": "pipe-UtcDateTimePipe-2f07b1337163b150e5ff54cafd731868fe89901055cfef58c0cd7939bfe840424032dcda937124cdf07afbe60b2ef41110fe9b85fc2a94386e5ef6a95e4ea0ab",
            "file": "src/app/shared/pipes/utc-datetime/utc-date-time.pipe.ts",
            "type": "pipe",
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "properties": [],
            "methods": [
                {
                    "name": "transform",
                    "args": [
                        {
                            "name": "value",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 9,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "value",
                            "type": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "ngname": "utcDateTime",
            "sourceCode": "import { Pipe, PipeTransform } from \"@angular/core\";\r\nimport { format } from \"date-fns\";\r\n\r\n@Pipe({\r\n  name: 'utcDateTime',\r\n  standalone: true\r\n})\r\nexport class UtcDateTimePipe implements PipeTransform {\r\n  transform(value: Date) {\r\n    return format(value, \"yyyy-MM-dd HH:mm\");\r\n  }\r\n}"
        }
    ],
    "interfaces": [
        {
            "name": "AdapterConfig",
            "id": "interface-AdapterConfig-0245decb74ff5f3ca0c9255691faf819bed16b92334744dbe9f804aa7db115409ca1924b9762501471b29d079440a22ba77ba5d00f5954c26e9a260d4ef122d2",
            "file": "src/app/shared/states/adapter-config.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface AdapterConfig<TValue, TState, TProps> {\r\n  name: string,\r\n  initialValue: TValue,\r\n  props?: (state: TState) => TProps\r\n}",
            "properties": [
                {
                    "name": "initialValue",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TValue",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "props",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": true,
                    "description": "",
                    "line": 4
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "AdapterTarget",
            "id": "interface-AdapterTarget-1bdbb626e75577b3a840a415e32b2694a95e70f778d041334621dea3933ebdc0b36d1794c1f6b3edb5b410d5a41920007f632d0f43d1e860b86f1cd3498e9a3b",
            "file": "src/app/core/stores/operative/adapters/operatives.adapter.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Store, StoreDef } from \"@ngneat/elf\";\r\nimport { addEntities, EntitiesRef, selectAllEntities, setEntities } from \"@ngneat/elf-entities\";\r\nimport { pipeTap } from \"src/app/shared/rxjs\";\r\nimport { Operative, OperativeSearchResult } from \"../operatives.store\";\r\n\r\ninterface EntitiesType {\r\n  entities: Record<number, Operative>,\r\n  ids: number[]\r\n}\r\n\r\nexport function operativesAdapter<TState extends EntitiesType>(store: Store<StoreDef<TState>>) {\r\n  return {\r\n    operatives$: () => store.pipe(selectAllEntities()),\r\n    addOperative: pipeTap<Operative>(operative => store.update(\r\n      addEntities(operative)\r\n    ))\r\n  }\r\n}\r\n\r\ninterface SearchEntitiesType {\r\n  SearchResultEntities: Record<number, OperativeSearchResult>,\r\n  SearchResultIds: number[]\r\n}\r\n\r\ntype SearchEntitiesRef = EntitiesRef<\"SearchResultEntities\", \"SearchResultIds\", \"idKeySearchResult\">;\r\n\r\ninterface AdapterTarget<TState extends SearchEntitiesType> {\r\n  store: Store<StoreDef<TState>>,\r\n  ref: SearchEntitiesRef\r\n}\r\n\r\nexport function operativeSearchAdapter<TState extends SearchEntitiesType>({ store, ref }: AdapterTarget<TState>) {\r\n  return {\r\n    searchResults$: () => store.pipe(selectAllEntities({ ref })),\r\n    setSearchResults: pipeTap<OperativeSearchResult[]>(results => store.update(\r\n      setEntities(results, { ref })\r\n    ))\r\n  }\r\n}",
            "properties": [
                {
                    "name": "ref",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SearchEntitiesRef",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "store",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Store<StoreDef<TState>>",
                    "optional": false,
                    "description": "",
                    "line": 28
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Asset",
            "id": "interface-Asset-1a8a17aa73c85a4e408758989ea79251b2d6e599a31e4e4b38ed3a1a49d368ac6ec9dac1d94753d285c727f5cbbeba800edee9ced646f4d648a86c129b6f8abe",
            "file": "src/app/core/stores/asset/asset.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\";\r\nimport { createStore } from \"@ngneat/elf\";\r\nimport { selectAllEntities, withEntities } from \"@ngneat/elf-entities\";\r\n\r\nexport interface Asset {\r\n  Id : number,\r\n  Registration: string\r\n}\r\n\r\nconst store = createStore(\r\n  { name: \"assets\" },\r\n  withEntities<Asset, \"Id\">({ idKey: \"Id\" })\r\n);\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class AssetStore {\r\n  assets$ = store.pipe(selectAllEntities());\r\n}\r\n",
            "properties": [
                {
                    "name": "Id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "Registration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "BooleanState",
            "id": "interface-BooleanState-c4d2886ffa0583c246e0cc2f356d63b24f3996db3d35f014ef1d40185ce698861e00f785bfe0e3af33dc412b6c2c401744304fab78073ea2c29aadb756d411ad",
            "file": "src/app/shared/states/boolean.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { createStore, propsFactory } from \"@ngneat/elf\";\r\nimport { Observable } from \"rxjs\";\r\nimport { AdapterConfig } from \"./adapter-config.model\";\r\n\r\nexport interface BooleanState {\r\n  value$: Observable<boolean>,\r\n  toggle: () => void,\r\n  set: (value: boolean) => void\r\n}\r\n\r\nexport function booleanState<TProps = {}>({ name, initialValue, props }: AdapterConfig<boolean, BooleanState, TProps>): TProps & BooleanState {\r\n  const propsFn = props != null \r\n    ? props\r\n    : () => ({});\r\n\r\n    const { \r\n      withBoolean,\r\n      selectBoolean,\r\n      setBoolean\r\n    } = propsFactory(\"boolean\", {\r\n      initialValue\r\n    });\r\n  \r\n    const store = createStore(\r\n      { name }, \r\n      withBoolean()\r\n    );\r\n  \r\n    const state: BooleanState = {\r\n      value$: store.pipe(selectBoolean()),\r\n      toggle: () => store.update(setBoolean(state => !state.boolean)),\r\n      set: (val: boolean) => store.update(setBoolean(val))\r\n    };\r\n\r\n    return {\r\n      ...propsFn(state),\r\n      ...state\r\n    } as TProps & BooleanState;\r\n}",
            "properties": [
                {
                    "name": "set",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "toggle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "value$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<boolean>",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "CascadeOption",
            "id": "interface-CascadeOption-250dc99fceadc7eca47ca221235703a249f26304444d268eef8263bf5b53f59067a6a00220b711b1237d825b120356cbcb15a66aeb71497dcadbf8410246c2ba",
            "file": "src/app/core/stores/site-document/models/site-document.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface SiteDocument {\r\n  DocumentID: number;\r\n  DocumentTitle: string;\r\n  Pinned: boolean;\r\n  Pages: Page[];\r\n  AllowAnon: boolean;\r\n  RemainAnon: boolean;\r\n  Queues: { Key: string, Value: string }[],\r\n  DocumentGroup: string;\r\n  DocumentCategory?: number;\r\n  CanCreateHotspot: boolean;\r\n  CanBeAddedToHotspot?: boolean;\r\n  CanBeSavedAsDraft?: boolean;\r\n  CanAddActionerFromApp: boolean;\r\n  CanAddCategoryActioner: boolean;\r\n  CanCreateAssetsFromDocument: boolean;\r\n  CanHaveQueueDuration: boolean;\r\n  CanHaveDocumentLevelImages: boolean;\r\n  CanHaveDocLevelPhotoRoll: boolean;\r\n  CurrentActionerOperativeID?: number;\r\n  CompanyActionerId?: number;\r\n  ShowDocLevelPhotoButtonAtStartOfDoc: boolean;\r\n  CanAddAsset?: boolean;\r\n  CanAddOperative?: boolean;\r\n  CanHaveCompanyActioner: boolean;\r\n  MetaData: Partial<SiteDocumentMetaData>;\r\n  SiteId?: number;\r\n  AutoQueueID?: number;\r\n  QueueDuration?: {\r\n    Value: number;\r\n    Type: string;\r\n  }\r\n}\r\n\r\nexport interface SiteDocumentImage {\r\n  DocumentId: number,\r\n  DocumentSubmissionId: number,\r\n  Base64: string,\r\n  ImageNo: number\r\n}\r\n\r\nexport interface SiteDocumentMetaData {\r\n  ActionerText: string;\r\n  CanBeEditableDocument: boolean;\r\n  CannotAddSelfAsActioner: boolean;\r\n  ColourHex: string;\r\n  QueueSelectorTitle: string;\r\n  HasSiteList: boolean;\r\n  SiteListTitle: string;\r\n  UsesRadioGroupTable: boolean;\r\n}\r\n\r\nexport interface SiteDocumentAsset {\r\n  AssetID: number;\r\n  Tag: string;\r\n  Name: string;\r\n  QRCode?: string;\r\n  TemplateID?: number;\r\n}\r\n\r\nexport interface SiteDocumentOperative {\r\n  AttendeeID: number;\r\n  Name: string;\r\n  DateAttended: Date;\r\n}\r\n\r\nexport interface Page {\r\n  PageID: number;\r\n  PageTitle: string;\r\n  Sections: Section[]\r\n}\r\n\r\nexport interface Section {\r\n  SectionID: number;\r\n  SectionNo: number;\r\n  SectionTitle: string;\r\n  Questions: Question[];\r\n  SectionQuestiontype: QuestionType;\r\n  IsRepeatable: boolean;\r\n  TableTitles: string[];\r\n}\r\n\r\nexport enum QuestionType {\r\n  Label = 0,\r\n  Checkbox = 1,\r\n  RadioGroup = 2,\r\n  Textbox = 3,\r\n  TextArea = 4,\r\n  Select = 5,\r\n  CheckboxTextbox = 6,\r\n  RadioGroupTextbox = 7,\r\n  Date = 8,\r\n  DateTime = 9,\r\n  OperativeList = 10,\r\n  WallOfText = 11,\r\n  Number = 12,\r\n  CascadeDropdown = 13,\r\n  LinkedBool = 16,\r\n  AssetList = 17,\r\n  LinkedDates = 18,\r\n  Signature = 19,\r\n  CompanySelect = 21,\r\n  AreaSelect = 22,\r\n  AssetGroupsAndTypes = 25,\r\n  AssetInspectionSchedule = 26,\r\n  ProjectSelect = 27,\r\n  RamsSelect = 28,\r\n  SelectText = 29,\r\n  CascadeDropdownText = 30,\r\n  MultiCascade = 31,\r\n  Time = 32,\r\n  LinkedTimes = 33,\r\n  HRASelect = 34,\r\n  MultiCheckbox = 35,\r\n  LinkedDateAndTime = 36\r\n}\r\n\r\nexport interface Question {\r\n  QuestionID: number;\r\n  QuestionText: string;\r\n  CascadeOptionsText: string;\r\n  CommentsText: string;\r\n  Assets: SiteDocumentAsset[];\r\n  Operatives: SiteDocumentOperative[];\r\n  Required: boolean;\r\n  AnswerText: string;\r\n  DateAndTime: Date;\r\n  DateAndTime2: Date;\r\n  NumberVal?: number;\r\n  OptionVal?: string | null;\r\n  Options: SelectOption[];\r\n  CascadeOptions: CascadeOption[];\r\n  CascadeOptionVal?: string | null;\r\n  YesNoNA: boolean | null;\r\n  CanHaveImg: boolean;\r\n  CanHaveFiles: boolean;\r\n}\r\n\r\nexport interface SelectOption {\r\n  Active?: boolean;\r\n  Text: string;\r\n  Val: string;\r\n  MetaData?: any;\r\n  OptionsMetadataJson?: string;\r\n}\r\n\r\nexport interface SelectOptionMetaData {\r\n  ColourHex?: string;\r\n}\r\n\r\nexport interface CascadeOption { \r\n  ParentVal: string, \r\n  Text: string, \r\n  Val: string \r\n}",
            "properties": [
                {
                    "name": "ParentVal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 152
                },
                {
                    "name": "Text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 153
                },
                {
                    "name": "Val",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 154
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "CategoryActioner",
            "id": "interface-CategoryActioner-42f16afc6748431c0a69b740335336a0f23d0c571b1bc3521bef9b27932b93f2ff8f2f0b9fc2e210b44b0585b64faeac40950e5e9a9fac61b7bfb6c4642715ff",
            "file": "src/app/core/stores/category-actioners/category-actioners.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable, inject } from \"@angular/core\";\r\nimport { createStore } from \"@ngneat/elf\";\r\nimport { selectAllEntities, withEntities } from \"@ngneat/elf-entities\";\r\nimport { map } from \"rxjs\";\r\n\r\nexport interface CategoryActioner {\r\n  Id: number,\r\n  Name: string,\r\n  CategoryId: number\r\n}\r\n\r\nconst store = createStore(\r\n  { name: \"site-documents\" },\r\n  withEntities<CategoryActioner, \"Id\">({ idKey: \"Id\" })\r\n);\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class CategoryActionersStore {\r\n  http = inject(HttpClient);\r\n\r\n  categoryActioners$ = store.pipe(selectAllEntities());\r\n  categoryActionersById$ = (categoryId: number) => this.categoryActioners$.pipe(\r\n    map(catActioners => catActioners.filter(ca => ca.CategoryId === categoryId))\r\n  );\r\n\r\n  downloadCategoryActioners$ = (siteId: number) => this.http.get<CategoryActioner[]>(\"api/LoginApi/GetCategoryActioners\", {\r\n    params: {\r\n      siteId: siteId.toString()\r\n    }\r\n  });\r\n}\r\n",
            "properties": [
                {
                    "name": "CategoryId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "Id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "Name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Company",
            "id": "interface-Company-d9c4e58eb5e3ed0204b1567826f19b300f2ed701d45ff500e4041032f49807e638d2317ce8199f5ff1b284addc3b0f51613cd29a6feea064f155875afa1b3a74",
            "file": "src/app/core/stores/user/user.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\r\nimport { inject, Injectable } from \"@angular/core\";\r\nimport { createStore, propsFactory } from \"@ngneat/elf\";\r\nimport { localStorageStrategy, persistState } from \"@ngneat/elf-persist-state\";\r\nimport { combineLatest, Observable, switchMap } from \"rxjs\";\r\nimport { getDeviceString, getDeviceUuid } from \"src/app/shared/plugins/device.plugin\";\r\nimport { pipeTap, selector } from \"src/app/shared/rxjs\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\nexport interface User {\r\n  Id: number,\r\n  LastName: string,\r\n  FirstName: string,\r\n  CompanyId: number,\r\n  CompanyName: string,\r\n  Colour: string,\r\n  FontColour: string,\r\n  Token: string,\r\n  Pin: string,\r\n  Site: Site,\r\n  DocumentListingTab: \"Recent\" | \"Pinned\" | \"Issued\",\r\n  IsInSupervisorRole: boolean,\r\n  HasRegisteredPlayerId: number,\r\n  HasAssets: boolean,\r\n  HasAssetCreation: boolean,\r\n  HasDocQrCodes: boolean,\r\n  HasHadWifiPreferenceChecked: boolean,\r\n  HasUpdateableDocs: boolean,\r\n  HasDocQueues: boolean,\r\n  HasCompanies: boolean,\r\n  HasDataTouchAreas: boolean,\r\n  HasQueueSupervisors: boolean,\r\n  HasCategoryActioners: boolean,\r\n  UserSites: Site[],\r\n  UserCompanies: Company[],\r\n  HasPlanningMeeting: boolean,\r\n  HasReviewMeeting: boolean,\r\n  HasCollabPlanning: boolean,\r\n  HasRandomOperativebarcodes: boolean,\r\n  HasLiveQueues: boolean,\r\n  HasResAreas:boolean,\r\n  HasHideOperativeScan: boolean,\r\n  HasSites: boolean,\r\n  HasDocDrop: boolean,\r\n  HasBasicOpInfo: boolean,\r\n  HasSimpleSwipes: boolean,\r\n  HasProjectsOnDocDrop: boolean,\r\n  HasCustomLookups: boolean,\r\n  HasTemplateSender: boolean,\r\n  HasMyOpInfo: boolean,\r\n  HasViewDocumentAsSinglePage: boolean,\r\n  HasShowParentAnswersOnChildDoc: boolean,\r\n  HasCompanySelectWithOtherOption:boolean,\r\n  HideSearchOnOperativeInfo: boolean,\r\n  HideSearchOnOperativeAccess: boolean,\r\n  CanAddOperativesToDocsByName: boolean,\r\n  HasRamsList: boolean,\r\n  CanAddAsssetsToDocsByName: boolean,\r\n  ShowWeightingsOnApp: boolean,\r\n  TemplatesLastUpdate: Date,\r\n  Url: string,\r\n  UseFingerReader: boolean,\r\n  SelectedSite?: Site,\r\n  NavTab: \"Modules\" | \"Documents\",\r\n  NumberOfTemplates: number,\r\n  DownloadedTemplates: number,\r\n  //PermittedCategories: DocCategory[],\r\n  HasOperativeInfo: boolean,\r\n  CanOffHireAssets: boolean,\r\n  CanViewOtherOperativeInfo: boolean,\r\n  CanModifyOperativeQRs: boolean,\r\n  CanAddQRsToAssets: boolean\r\n}\r\n\r\nexport interface Site {\r\n  Id: number,\r\n  Name: string\r\n}\r\n\r\nexport interface Company {\r\n  Id: number,\r\n  Text: string\r\n}\r\n\r\nconst {\r\n  withAppUser, \r\n  selectAppUser, \r\n  setAppUser\r\n} = propsFactory(\"appUser\", { initialValue: null as User | null });\r\n\r\nconst store = createStore(\r\n  { name: \"user\" },\r\n  withAppUser()\r\n);\r\n\r\nconst userSelector = selector(store.pipe(selectAppUser()));\r\nconst sites$ = userSelector(user => user?.UserSites || []);\r\n\r\nconst setAppUserUpdate = pipeTap<User>(user => store.update(setAppUser(user)));\r\n\r\npersistState(store, {\r\n  key: \"user\",\r\n  storage: localStorageStrategy\r\n});\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class UserStore {\r\n  httpClient = inject(HttpClient);\r\n\r\n  user$ = store.pipe(selectAppUser());\r\n  sites$ = sites$;\r\n  companies$ = userSelector(user => user?.UserCompanies || []);\r\n\r\n  getUserRequest$ = (action$: Observable<{ token: string, pin: string }>) => combineLatest({\r\n    login: action$,\r\n    deviceId: getDeviceUuid(),\r\n    deviceString: getDeviceString() \r\n  }).pipe(\r\n    switchMap(({ login, deviceId, deviceString }) => this.httpClient.post<User>(`${environment.siteDocsApi}/LoginApi/LoginSiteDocumentsApp`, {\r\n      deviceId,\r\n      deviceString\r\n    }, {\r\n      headers: {\r\n        appToken: login.token,\r\n        appPin: login.pin\r\n      }\r\n    })),\r\n    setAppUserUpdate()\r\n  );\r\n}",
            "properties": [
                {
                    "name": "Id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 81
                },
                {
                    "name": "Text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 82
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "DataUrlFile",
            "id": "interface-DataUrlFile-72a893f9b32b755dc1fe36e5b3f6b437b2ba78f53017509834bbd9f5c10f723a550ec054aae91e6e10674e584785de02b909c5342982820ab89c416224f1b014",
            "file": "src/app/shared/models/files/data-url-file.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface DataUrlFile extends Pick<File, \"name\" | \"lastModified\" | \"size\" | \"type\"> {\r\n  dataUrl: string\r\n}",
            "properties": [
                {
                    "name": "dataUrl",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "extends": "Pick"
        },
        {
            "name": "EntitiesType",
            "id": "interface-EntitiesType-1bdbb626e75577b3a840a415e32b2694a95e70f778d041334621dea3933ebdc0b36d1794c1f6b3edb5b410d5a41920007f632d0f43d1e860b86f1cd3498e9a3b",
            "file": "src/app/core/stores/operative/adapters/operatives.adapter.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Store, StoreDef } from \"@ngneat/elf\";\r\nimport { addEntities, EntitiesRef, selectAllEntities, setEntities } from \"@ngneat/elf-entities\";\r\nimport { pipeTap } from \"src/app/shared/rxjs\";\r\nimport { Operative, OperativeSearchResult } from \"../operatives.store\";\r\n\r\ninterface EntitiesType {\r\n  entities: Record<number, Operative>,\r\n  ids: number[]\r\n}\r\n\r\nexport function operativesAdapter<TState extends EntitiesType>(store: Store<StoreDef<TState>>) {\r\n  return {\r\n    operatives$: () => store.pipe(selectAllEntities()),\r\n    addOperative: pipeTap<Operative>(operative => store.update(\r\n      addEntities(operative)\r\n    ))\r\n  }\r\n}\r\n\r\ninterface SearchEntitiesType {\r\n  SearchResultEntities: Record<number, OperativeSearchResult>,\r\n  SearchResultIds: number[]\r\n}\r\n\r\ntype SearchEntitiesRef = EntitiesRef<\"SearchResultEntities\", \"SearchResultIds\", \"idKeySearchResult\">;\r\n\r\ninterface AdapterTarget<TState extends SearchEntitiesType> {\r\n  store: Store<StoreDef<TState>>,\r\n  ref: SearchEntitiesRef\r\n}\r\n\r\nexport function operativeSearchAdapter<TState extends SearchEntitiesType>({ store, ref }: AdapterTarget<TState>) {\r\n  return {\r\n    searchResults$: () => store.pipe(selectAllEntities({ ref })),\r\n    setSearchResults: pipeTap<OperativeSearchResult[]>(results => store.update(\r\n      setEntities(results, { ref })\r\n    ))\r\n  }\r\n}",
            "properties": [
                {
                    "name": "entities",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<number | Operative>",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "ids",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number[]",
                    "optional": false,
                    "description": "",
                    "line": 8
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "FuseOptions",
            "id": "interface-FuseOptions-72cd7cdb79b10358cd8faace511648d173e708959dc741bd6569b62c3918319fd99d6fe95cab3ccbad2d0fd642230dc23f903214f3e9f7929a0595e03574920c",
            "file": "src/app/shared/pipes/fuse/fuse.pipe.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Pipe, PipeTransform } from \"@angular/core\";\r\nimport Fuse from 'fuse.js'\r\n\r\nexport interface FuseOptions<T> extends Omit<Fuse.IFuseOptions<T>, \"keys\"> {\r\n  search: string,\r\n  keys?: keyof T | Array<keyof T>\r\n}\r\n\r\n@Pipe({\r\n  name: \"fuse\",\r\n  standalone: true\r\n})\r\nexport class FusePipe implements PipeTransform {\r\n  transform<T>(values: T[], options: FuseOptions<T>) {\r\n    if (options.search == null || options.search.length === 0)\r\n      return values;\r\n\r\n    return new Fuse(values, { \r\n      threshold: .1,\r\n      ignoreLocation: true,\r\n      ...options as Fuse.IFuseOptions<T>\r\n    })\r\n    .search(options.search)\r\n    .map(val => val.item);\r\n  }\r\n}\r\n",
            "properties": [
                {
                    "name": "keys",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": " | Array<T>",
                    "optional": true,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "search",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 5
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "extends": "Omit"
        },
        {
            "name": "NumberState",
            "id": "interface-NumberState-08ac5100878d5ecdc96750e0cb4703ba5b848a4a3ad01aadc5d7bed2535b5a0386836b46ba1ce7d17e6f1a44eab134e6973f0d7b8212c8e0e993dcb26aea81ed",
            "file": "src/app/shared/states/number.state.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { createStore, propsFactory } from \"@ngneat/elf\";\r\nimport { Observable, map, shareReplay } from \"rxjs\";\r\nimport { AdapterConfig } from \"./adapter-config.model\";\r\n\r\nexport interface NumberState {\r\n  value$: Observable<number>,\r\n  increment: () => void,\r\n  decrement: () => void,\r\n  is$: (predicate: (value: number) => boolean) => Observable<boolean>,\r\n  set: (value: number) => void\r\n}\r\n\r\nexport function numberState<TProps = {}>({ name, initialValue, props }: AdapterConfig<number, NumberState, TProps>): TProps & NumberState {\r\n  const propsFn = props != null \r\n    ? props\r\n    : () => ({}); \r\n\r\n  const {\r\n    withNumber,\r\n    selectNumber,\r\n    setNumber\r\n  } = propsFactory(\"number\", {\r\n    initialValue\r\n  });\r\n\r\n  const store = createStore(\r\n    { name },\r\n    withNumber()\r\n  );\r\n\r\n  const state: NumberState = {\r\n    value$: store.pipe(selectNumber(), shareReplay()),\r\n    increment: () => store.update(setNumber(state => state.number + 1)),\r\n    decrement: () => store.update(setNumber(state => state.number - 1)),\r\n    is$: (predicate: (value: number) => boolean) => store.pipe(\r\n      selectNumber(),\r\n      map(predicate)\r\n    ),\r\n    set: (value: number) => store.update(setNumber(value))\r\n  }\r\n  \r\n  return {\r\n    ...propsFn(state),\r\n    ...state\r\n  } as TProps & NumberState\r\n}",
            "properties": [
                {
                    "name": "decrement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "increment",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "is$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "set",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "function",
                    "optional": false,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "value$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<number>",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Operative",
            "id": "interface-Operative-91556e30f45bb35500235156580cdd5001d82990d959ec1360343f8ea5e07f00f6aabfb8f55e3b3890c5062d28956f08d90c0ad3f60c9686df6f84eab48733ab",
            "file": "src/app/core/stores/operative/operatives.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable, inject } from \"@angular/core\"\r\nimport { createStore } from \"@ngneat/elf\";\r\nimport { addEntities, withEntities } from \"@ngneat/elf-entities\";\r\nimport { localStorageStrategy, persistState } from \"@ngneat/elf-persist-state\";\r\nimport { searchResultsAdapter } from \"src/app/shared/states/search-results.adapter\";\r\nimport { operativesAdapter } from \"./adapters/operatives.adapter\";\r\nimport { tap } from \"rxjs\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { createRequestsStatusOperator, selectIsRequestPending, updateRequestStatus, withRequestsStatus } from \"@ngneat/elf-requests\";\r\n\r\nexport interface Operative {\r\n  ID: number,\r\n  Name: string\r\n}\r\n\r\nexport interface OperativeSearchParams {\r\n  search: string,\r\n  noAppLimit: boolean,\r\n  siteId?: number\r\n}\r\n\r\nexport interface OperativeSearchResult {\r\n  ID: number,\r\n  Name: string,\r\n  CompanyName: string,\r\n  HasQRCode: boolean,\r\n  HasAppAccess: boolean\r\n}\r\n\r\nconst {\r\n  SearchResultEntitiesRef,\r\n  withSearchResultEntities,\r\n  searchResultsAdapt\r\n} = searchResultsAdapter();\r\n\r\n// function withTapUpdate(): PropsFactory<{ tapUpdate: object }, EmptyConfig> {\r\n//   return {\r\n//     props: {\r\n//       tapUpdate: pipe(\r\n//         tap()\r\n//       )\r\n//     }\r\n//   }\r\n// }\r\n\r\nconst store = createStore(\r\n  { name: \"operatives\" },\r\n  withEntities<Operative, \"ID\">({ idKey: \"ID\" }),\r\n  withSearchResultEntities<OperativeSearchResult, \"ID\">({ idKey: \"ID\" }),\r\n  withRequestsStatus<\"operativesSearch\">()\r\n);\r\n\r\nconst { \r\n  operatives$, \r\n  addOperative,\r\n  searchResults$,\r\n  setSearchResults\r\n} = {\r\n  ...operativesAdapter(store),\r\n  ...searchResultsAdapt(store)\r\n}\r\n\r\nconst trackRequestStatus = createRequestsStatusOperator(store);\r\n\r\npersistState(store, {\r\n  key: \"operatives\",\r\n  storage: localStorageStrategy\r\n});\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class OperativesStore {\r\n  httpClient = inject(HttpClient);\r\n\r\n  operatives$ = operatives$();\r\n  searchResults$ = searchResults$();\r\n  searchResultsIsPending$ = store.pipe(selectIsRequestPending(\"operativesSearch\"));\r\n\r\n  addOperative = addOperative;\r\n  setSearchResults = setSearchResults;\r\n\r\n  getSearchResults = (params: OperativeSearchParams) => this.httpClient.get<OperativeSearchResult[]>(`${environment.siteDocsApi}/OperativeApi/GetOperativesByName`, {\r\n    params: {\r\n      search: params.search,\r\n      noAppLimit: params.noAppLimit,\r\n      siteId: params.siteId?.toString() || \"null\"\r\n    }\r\n  }).pipe(\r\n    trackRequestStatus(\"operativesSearch\"),\r\n    tap(searchResults => store.update(\r\n      addEntities(searchResults, { ref: SearchResultEntitiesRef }),\r\n      updateRequestStatus(\"operativesSearch\", \"success\")\r\n    ))\r\n  );\r\n}",
            "properties": [
                {
                    "name": "ID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "Name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 14
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "OperativeSearchParams",
            "id": "interface-OperativeSearchParams-91556e30f45bb35500235156580cdd5001d82990d959ec1360343f8ea5e07f00f6aabfb8f55e3b3890c5062d28956f08d90c0ad3f60c9686df6f84eab48733ab",
            "file": "src/app/core/stores/operative/operatives.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable, inject } from \"@angular/core\"\r\nimport { createStore } from \"@ngneat/elf\";\r\nimport { addEntities, withEntities } from \"@ngneat/elf-entities\";\r\nimport { localStorageStrategy, persistState } from \"@ngneat/elf-persist-state\";\r\nimport { searchResultsAdapter } from \"src/app/shared/states/search-results.adapter\";\r\nimport { operativesAdapter } from \"./adapters/operatives.adapter\";\r\nimport { tap } from \"rxjs\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { createRequestsStatusOperator, selectIsRequestPending, updateRequestStatus, withRequestsStatus } from \"@ngneat/elf-requests\";\r\n\r\nexport interface Operative {\r\n  ID: number,\r\n  Name: string\r\n}\r\n\r\nexport interface OperativeSearchParams {\r\n  search: string,\r\n  noAppLimit: boolean,\r\n  siteId?: number\r\n}\r\n\r\nexport interface OperativeSearchResult {\r\n  ID: number,\r\n  Name: string,\r\n  CompanyName: string,\r\n  HasQRCode: boolean,\r\n  HasAppAccess: boolean\r\n}\r\n\r\nconst {\r\n  SearchResultEntitiesRef,\r\n  withSearchResultEntities,\r\n  searchResultsAdapt\r\n} = searchResultsAdapter();\r\n\r\n// function withTapUpdate(): PropsFactory<{ tapUpdate: object }, EmptyConfig> {\r\n//   return {\r\n//     props: {\r\n//       tapUpdate: pipe(\r\n//         tap()\r\n//       )\r\n//     }\r\n//   }\r\n// }\r\n\r\nconst store = createStore(\r\n  { name: \"operatives\" },\r\n  withEntities<Operative, \"ID\">({ idKey: \"ID\" }),\r\n  withSearchResultEntities<OperativeSearchResult, \"ID\">({ idKey: \"ID\" }),\r\n  withRequestsStatus<\"operativesSearch\">()\r\n);\r\n\r\nconst { \r\n  operatives$, \r\n  addOperative,\r\n  searchResults$,\r\n  setSearchResults\r\n} = {\r\n  ...operativesAdapter(store),\r\n  ...searchResultsAdapt(store)\r\n}\r\n\r\nconst trackRequestStatus = createRequestsStatusOperator(store);\r\n\r\npersistState(store, {\r\n  key: \"operatives\",\r\n  storage: localStorageStrategy\r\n});\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class OperativesStore {\r\n  httpClient = inject(HttpClient);\r\n\r\n  operatives$ = operatives$();\r\n  searchResults$ = searchResults$();\r\n  searchResultsIsPending$ = store.pipe(selectIsRequestPending(\"operativesSearch\"));\r\n\r\n  addOperative = addOperative;\r\n  setSearchResults = setSearchResults;\r\n\r\n  getSearchResults = (params: OperativeSearchParams) => this.httpClient.get<OperativeSearchResult[]>(`${environment.siteDocsApi}/OperativeApi/GetOperativesByName`, {\r\n    params: {\r\n      search: params.search,\r\n      noAppLimit: params.noAppLimit,\r\n      siteId: params.siteId?.toString() || \"null\"\r\n    }\r\n  }).pipe(\r\n    trackRequestStatus(\"operativesSearch\"),\r\n    tap(searchResults => store.update(\r\n      addEntities(searchResults, { ref: SearchResultEntitiesRef }),\r\n      updateRequestStatus(\"operativesSearch\", \"success\")\r\n    ))\r\n  );\r\n}",
            "properties": [
                {
                    "name": "noAppLimit",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "search",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "siteId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 20
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "OperativeSearchResult",
            "id": "interface-OperativeSearchResult-91556e30f45bb35500235156580cdd5001d82990d959ec1360343f8ea5e07f00f6aabfb8f55e3b3890c5062d28956f08d90c0ad3f60c9686df6f84eab48733ab",
            "file": "src/app/core/stores/operative/operatives.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable, inject } from \"@angular/core\"\r\nimport { createStore } from \"@ngneat/elf\";\r\nimport { addEntities, withEntities } from \"@ngneat/elf-entities\";\r\nimport { localStorageStrategy, persistState } from \"@ngneat/elf-persist-state\";\r\nimport { searchResultsAdapter } from \"src/app/shared/states/search-results.adapter\";\r\nimport { operativesAdapter } from \"./adapters/operatives.adapter\";\r\nimport { tap } from \"rxjs\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { createRequestsStatusOperator, selectIsRequestPending, updateRequestStatus, withRequestsStatus } from \"@ngneat/elf-requests\";\r\n\r\nexport interface Operative {\r\n  ID: number,\r\n  Name: string\r\n}\r\n\r\nexport interface OperativeSearchParams {\r\n  search: string,\r\n  noAppLimit: boolean,\r\n  siteId?: number\r\n}\r\n\r\nexport interface OperativeSearchResult {\r\n  ID: number,\r\n  Name: string,\r\n  CompanyName: string,\r\n  HasQRCode: boolean,\r\n  HasAppAccess: boolean\r\n}\r\n\r\nconst {\r\n  SearchResultEntitiesRef,\r\n  withSearchResultEntities,\r\n  searchResultsAdapt\r\n} = searchResultsAdapter();\r\n\r\n// function withTapUpdate(): PropsFactory<{ tapUpdate: object }, EmptyConfig> {\r\n//   return {\r\n//     props: {\r\n//       tapUpdate: pipe(\r\n//         tap()\r\n//       )\r\n//     }\r\n//   }\r\n// }\r\n\r\nconst store = createStore(\r\n  { name: \"operatives\" },\r\n  withEntities<Operative, \"ID\">({ idKey: \"ID\" }),\r\n  withSearchResultEntities<OperativeSearchResult, \"ID\">({ idKey: \"ID\" }),\r\n  withRequestsStatus<\"operativesSearch\">()\r\n);\r\n\r\nconst { \r\n  operatives$, \r\n  addOperative,\r\n  searchResults$,\r\n  setSearchResults\r\n} = {\r\n  ...operativesAdapter(store),\r\n  ...searchResultsAdapt(store)\r\n}\r\n\r\nconst trackRequestStatus = createRequestsStatusOperator(store);\r\n\r\npersistState(store, {\r\n  key: \"operatives\",\r\n  storage: localStorageStrategy\r\n});\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class OperativesStore {\r\n  httpClient = inject(HttpClient);\r\n\r\n  operatives$ = operatives$();\r\n  searchResults$ = searchResults$();\r\n  searchResultsIsPending$ = store.pipe(selectIsRequestPending(\"operativesSearch\"));\r\n\r\n  addOperative = addOperative;\r\n  setSearchResults = setSearchResults;\r\n\r\n  getSearchResults = (params: OperativeSearchParams) => this.httpClient.get<OperativeSearchResult[]>(`${environment.siteDocsApi}/OperativeApi/GetOperativesByName`, {\r\n    params: {\r\n      search: params.search,\r\n      noAppLimit: params.noAppLimit,\r\n      siteId: params.siteId?.toString() || \"null\"\r\n    }\r\n  }).pipe(\r\n    trackRequestStatus(\"operativesSearch\"),\r\n    tap(searchResults => store.update(\r\n      addEntities(searchResults, { ref: SearchResultEntitiesRef }),\r\n      updateRequestStatus(\"operativesSearch\", \"success\")\r\n    ))\r\n  );\r\n}",
            "properties": [
                {
                    "name": "CompanyName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "HasAppAccess",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "HasQRCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "ID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "Name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 25
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Page",
            "id": "interface-Page-250dc99fceadc7eca47ca221235703a249f26304444d268eef8263bf5b53f59067a6a00220b711b1237d825b120356cbcb15a66aeb71497dcadbf8410246c2ba",
            "file": "src/app/core/stores/site-document/models/site-document.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface SiteDocument {\r\n  DocumentID: number;\r\n  DocumentTitle: string;\r\n  Pinned: boolean;\r\n  Pages: Page[];\r\n  AllowAnon: boolean;\r\n  RemainAnon: boolean;\r\n  Queues: { Key: string, Value: string }[],\r\n  DocumentGroup: string;\r\n  DocumentCategory?: number;\r\n  CanCreateHotspot: boolean;\r\n  CanBeAddedToHotspot?: boolean;\r\n  CanBeSavedAsDraft?: boolean;\r\n  CanAddActionerFromApp: boolean;\r\n  CanAddCategoryActioner: boolean;\r\n  CanCreateAssetsFromDocument: boolean;\r\n  CanHaveQueueDuration: boolean;\r\n  CanHaveDocumentLevelImages: boolean;\r\n  CanHaveDocLevelPhotoRoll: boolean;\r\n  CurrentActionerOperativeID?: number;\r\n  CompanyActionerId?: number;\r\n  ShowDocLevelPhotoButtonAtStartOfDoc: boolean;\r\n  CanAddAsset?: boolean;\r\n  CanAddOperative?: boolean;\r\n  CanHaveCompanyActioner: boolean;\r\n  MetaData: Partial<SiteDocumentMetaData>;\r\n  SiteId?: number;\r\n  AutoQueueID?: number;\r\n  QueueDuration?: {\r\n    Value: number;\r\n    Type: string;\r\n  }\r\n}\r\n\r\nexport interface SiteDocumentImage {\r\n  DocumentId: number,\r\n  DocumentSubmissionId: number,\r\n  Base64: string,\r\n  ImageNo: number\r\n}\r\n\r\nexport interface SiteDocumentMetaData {\r\n  ActionerText: string;\r\n  CanBeEditableDocument: boolean;\r\n  CannotAddSelfAsActioner: boolean;\r\n  ColourHex: string;\r\n  QueueSelectorTitle: string;\r\n  HasSiteList: boolean;\r\n  SiteListTitle: string;\r\n  UsesRadioGroupTable: boolean;\r\n}\r\n\r\nexport interface SiteDocumentAsset {\r\n  AssetID: number;\r\n  Tag: string;\r\n  Name: string;\r\n  QRCode?: string;\r\n  TemplateID?: number;\r\n}\r\n\r\nexport interface SiteDocumentOperative {\r\n  AttendeeID: number;\r\n  Name: string;\r\n  DateAttended: Date;\r\n}\r\n\r\nexport interface Page {\r\n  PageID: number;\r\n  PageTitle: string;\r\n  Sections: Section[]\r\n}\r\n\r\nexport interface Section {\r\n  SectionID: number;\r\n  SectionNo: number;\r\n  SectionTitle: string;\r\n  Questions: Question[];\r\n  SectionQuestiontype: QuestionType;\r\n  IsRepeatable: boolean;\r\n  TableTitles: string[];\r\n}\r\n\r\nexport enum QuestionType {\r\n  Label = 0,\r\n  Checkbox = 1,\r\n  RadioGroup = 2,\r\n  Textbox = 3,\r\n  TextArea = 4,\r\n  Select = 5,\r\n  CheckboxTextbox = 6,\r\n  RadioGroupTextbox = 7,\r\n  Date = 8,\r\n  DateTime = 9,\r\n  OperativeList = 10,\r\n  WallOfText = 11,\r\n  Number = 12,\r\n  CascadeDropdown = 13,\r\n  LinkedBool = 16,\r\n  AssetList = 17,\r\n  LinkedDates = 18,\r\n  Signature = 19,\r\n  CompanySelect = 21,\r\n  AreaSelect = 22,\r\n  AssetGroupsAndTypes = 25,\r\n  AssetInspectionSchedule = 26,\r\n  ProjectSelect = 27,\r\n  RamsSelect = 28,\r\n  SelectText = 29,\r\n  CascadeDropdownText = 30,\r\n  MultiCascade = 31,\r\n  Time = 32,\r\n  LinkedTimes = 33,\r\n  HRASelect = 34,\r\n  MultiCheckbox = 35,\r\n  LinkedDateAndTime = 36\r\n}\r\n\r\nexport interface Question {\r\n  QuestionID: number;\r\n  QuestionText: string;\r\n  CascadeOptionsText: string;\r\n  CommentsText: string;\r\n  Assets: SiteDocumentAsset[];\r\n  Operatives: SiteDocumentOperative[];\r\n  Required: boolean;\r\n  AnswerText: string;\r\n  DateAndTime: Date;\r\n  DateAndTime2: Date;\r\n  NumberVal?: number;\r\n  OptionVal?: string | null;\r\n  Options: SelectOption[];\r\n  CascadeOptions: CascadeOption[];\r\n  CascadeOptionVal?: string | null;\r\n  YesNoNA: boolean | null;\r\n  CanHaveImg: boolean;\r\n  CanHaveFiles: boolean;\r\n}\r\n\r\nexport interface SelectOption {\r\n  Active?: boolean;\r\n  Text: string;\r\n  Val: string;\r\n  MetaData?: any;\r\n  OptionsMetadataJson?: string;\r\n}\r\n\r\nexport interface SelectOptionMetaData {\r\n  ColourHex?: string;\r\n}\r\n\r\nexport interface CascadeOption { \r\n  ParentVal: string, \r\n  Text: string, \r\n  Val: string \r\n}",
            "properties": [
                {
                    "name": "PageID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 68
                },
                {
                    "name": "PageTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 69
                },
                {
                    "name": "Sections",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Section[]",
                    "optional": false,
                    "description": "",
                    "line": 70
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Question",
            "id": "interface-Question-250dc99fceadc7eca47ca221235703a249f26304444d268eef8263bf5b53f59067a6a00220b711b1237d825b120356cbcb15a66aeb71497dcadbf8410246c2ba",
            "file": "src/app/core/stores/site-document/models/site-document.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface SiteDocument {\r\n  DocumentID: number;\r\n  DocumentTitle: string;\r\n  Pinned: boolean;\r\n  Pages: Page[];\r\n  AllowAnon: boolean;\r\n  RemainAnon: boolean;\r\n  Queues: { Key: string, Value: string }[],\r\n  DocumentGroup: string;\r\n  DocumentCategory?: number;\r\n  CanCreateHotspot: boolean;\r\n  CanBeAddedToHotspot?: boolean;\r\n  CanBeSavedAsDraft?: boolean;\r\n  CanAddActionerFromApp: boolean;\r\n  CanAddCategoryActioner: boolean;\r\n  CanCreateAssetsFromDocument: boolean;\r\n  CanHaveQueueDuration: boolean;\r\n  CanHaveDocumentLevelImages: boolean;\r\n  CanHaveDocLevelPhotoRoll: boolean;\r\n  CurrentActionerOperativeID?: number;\r\n  CompanyActionerId?: number;\r\n  ShowDocLevelPhotoButtonAtStartOfDoc: boolean;\r\n  CanAddAsset?: boolean;\r\n  CanAddOperative?: boolean;\r\n  CanHaveCompanyActioner: boolean;\r\n  MetaData: Partial<SiteDocumentMetaData>;\r\n  SiteId?: number;\r\n  AutoQueueID?: number;\r\n  QueueDuration?: {\r\n    Value: number;\r\n    Type: string;\r\n  }\r\n}\r\n\r\nexport interface SiteDocumentImage {\r\n  DocumentId: number,\r\n  DocumentSubmissionId: number,\r\n  Base64: string,\r\n  ImageNo: number\r\n}\r\n\r\nexport interface SiteDocumentMetaData {\r\n  ActionerText: string;\r\n  CanBeEditableDocument: boolean;\r\n  CannotAddSelfAsActioner: boolean;\r\n  ColourHex: string;\r\n  QueueSelectorTitle: string;\r\n  HasSiteList: boolean;\r\n  SiteListTitle: string;\r\n  UsesRadioGroupTable: boolean;\r\n}\r\n\r\nexport interface SiteDocumentAsset {\r\n  AssetID: number;\r\n  Tag: string;\r\n  Name: string;\r\n  QRCode?: string;\r\n  TemplateID?: number;\r\n}\r\n\r\nexport interface SiteDocumentOperative {\r\n  AttendeeID: number;\r\n  Name: string;\r\n  DateAttended: Date;\r\n}\r\n\r\nexport interface Page {\r\n  PageID: number;\r\n  PageTitle: string;\r\n  Sections: Section[]\r\n}\r\n\r\nexport interface Section {\r\n  SectionID: number;\r\n  SectionNo: number;\r\n  SectionTitle: string;\r\n  Questions: Question[];\r\n  SectionQuestiontype: QuestionType;\r\n  IsRepeatable: boolean;\r\n  TableTitles: string[];\r\n}\r\n\r\nexport enum QuestionType {\r\n  Label = 0,\r\n  Checkbox = 1,\r\n  RadioGroup = 2,\r\n  Textbox = 3,\r\n  TextArea = 4,\r\n  Select = 5,\r\n  CheckboxTextbox = 6,\r\n  RadioGroupTextbox = 7,\r\n  Date = 8,\r\n  DateTime = 9,\r\n  OperativeList = 10,\r\n  WallOfText = 11,\r\n  Number = 12,\r\n  CascadeDropdown = 13,\r\n  LinkedBool = 16,\r\n  AssetList = 17,\r\n  LinkedDates = 18,\r\n  Signature = 19,\r\n  CompanySelect = 21,\r\n  AreaSelect = 22,\r\n  AssetGroupsAndTypes = 25,\r\n  AssetInspectionSchedule = 26,\r\n  ProjectSelect = 27,\r\n  RamsSelect = 28,\r\n  SelectText = 29,\r\n  CascadeDropdownText = 30,\r\n  MultiCascade = 31,\r\n  Time = 32,\r\n  LinkedTimes = 33,\r\n  HRASelect = 34,\r\n  MultiCheckbox = 35,\r\n  LinkedDateAndTime = 36\r\n}\r\n\r\nexport interface Question {\r\n  QuestionID: number;\r\n  QuestionText: string;\r\n  CascadeOptionsText: string;\r\n  CommentsText: string;\r\n  Assets: SiteDocumentAsset[];\r\n  Operatives: SiteDocumentOperative[];\r\n  Required: boolean;\r\n  AnswerText: string;\r\n  DateAndTime: Date;\r\n  DateAndTime2: Date;\r\n  NumberVal?: number;\r\n  OptionVal?: string | null;\r\n  Options: SelectOption[];\r\n  CascadeOptions: CascadeOption[];\r\n  CascadeOptionVal?: string | null;\r\n  YesNoNA: boolean | null;\r\n  CanHaveImg: boolean;\r\n  CanHaveFiles: boolean;\r\n}\r\n\r\nexport interface SelectOption {\r\n  Active?: boolean;\r\n  Text: string;\r\n  Val: string;\r\n  MetaData?: any;\r\n  OptionsMetadataJson?: string;\r\n}\r\n\r\nexport interface SelectOptionMetaData {\r\n  ColourHex?: string;\r\n}\r\n\r\nexport interface CascadeOption { \r\n  ParentVal: string, \r\n  Text: string, \r\n  Val: string \r\n}",
            "properties": [
                {
                    "name": "AnswerText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 126
                },
                {
                    "name": "Assets",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SiteDocumentAsset[]",
                    "optional": false,
                    "description": "",
                    "line": 123
                },
                {
                    "name": "CanHaveFiles",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 136
                },
                {
                    "name": "CanHaveImg",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 135
                },
                {
                    "name": "CascadeOptions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "CascadeOption[]",
                    "optional": false,
                    "description": "",
                    "line": 132
                },
                {
                    "name": "CascadeOptionsText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 121
                },
                {
                    "name": "CascadeOptionVal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": true,
                    "description": "",
                    "line": 133
                },
                {
                    "name": "CommentsText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 122
                },
                {
                    "name": "DateAndTime",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 127
                },
                {
                    "name": "DateAndTime2",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 128
                },
                {
                    "name": "NumberVal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 129
                },
                {
                    "name": "Operatives",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SiteDocumentOperative[]",
                    "optional": false,
                    "description": "",
                    "line": 124
                },
                {
                    "name": "Options",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SelectOption[]",
                    "optional": false,
                    "description": "",
                    "line": 131
                },
                {
                    "name": "OptionVal",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": true,
                    "description": "",
                    "line": 130
                },
                {
                    "name": "QuestionID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 119
                },
                {
                    "name": "QuestionText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 120
                },
                {
                    "name": "Required",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 125
                },
                {
                    "name": "YesNoNA",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean | null",
                    "optional": false,
                    "description": "",
                    "line": 134
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ResponsibilityArea",
            "id": "interface-ResponsibilityArea-939de3da069ba66b6240a9296476df2f670a51cbe802dc1846bbf6fbfea2389c84b5753e87e9023e3428fa08653289eeb418e48939e792a252b3ed0722c45877",
            "file": "src/app/core/stores/responsibility-area-types/responsibility-area-types.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\";\r\nimport { createStore } from \"@ngneat/elf\";\r\nimport { selectAllEntities, withEntities } from \"@ngneat/elf-entities\";\r\nimport { map } from \"rxjs\";\r\n\r\nexport interface ResponsibilityArea {\r\n  Id: number,\r\n  Name: string,\r\n  DocResAreaTypeId: number,\r\n  SiteId?: number\r\n}\r\n\r\nexport interface ResponsibilityAreaType {\r\n  Id: number,\r\n  TypeName: string,\r\n  AppQuestionText: string,\r\n  Areas: ResponsibilityArea[]\r\n}\r\n\r\nconst store = createStore(\r\n  { name: \"responsibility-area-types\" },\r\n  withEntities<ResponsibilityAreaType, \"Id\">({ idKey: \"Id\" })\r\n);\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class ResponsibilityAreaTypesStore {\r\n  responsibilityAreaTypes$ = store.pipe(selectAllEntities());\r\n  responsibilityAreaTypeById$ = (id: number) => this.responsibilityAreaTypes$.pipe(\r\n    map(resAreaTypes => resAreaTypes.find(t => t.Id === id))\r\n  );\r\n}\r\n",
            "properties": [
                {
                    "name": "DocResAreaTypeId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "Id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "Name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "SiteId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 10
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "ResponsibilityAreaType",
            "id": "interface-ResponsibilityAreaType-939de3da069ba66b6240a9296476df2f670a51cbe802dc1846bbf6fbfea2389c84b5753e87e9023e3428fa08653289eeb418e48939e792a252b3ed0722c45877",
            "file": "src/app/core/stores/responsibility-area-types/responsibility-area-types.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Injectable } from \"@angular/core\";\r\nimport { createStore } from \"@ngneat/elf\";\r\nimport { selectAllEntities, withEntities } from \"@ngneat/elf-entities\";\r\nimport { map } from \"rxjs\";\r\n\r\nexport interface ResponsibilityArea {\r\n  Id: number,\r\n  Name: string,\r\n  DocResAreaTypeId: number,\r\n  SiteId?: number\r\n}\r\n\r\nexport interface ResponsibilityAreaType {\r\n  Id: number,\r\n  TypeName: string,\r\n  AppQuestionText: string,\r\n  Areas: ResponsibilityArea[]\r\n}\r\n\r\nconst store = createStore(\r\n  { name: \"responsibility-area-types\" },\r\n  withEntities<ResponsibilityAreaType, \"Id\">({ idKey: \"Id\" })\r\n);\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class ResponsibilityAreaTypesStore {\r\n  responsibilityAreaTypes$ = store.pipe(selectAllEntities());\r\n  responsibilityAreaTypeById$ = (id: number) => this.responsibilityAreaTypes$.pipe(\r\n    map(resAreaTypes => resAreaTypes.find(t => t.Id === id))\r\n  );\r\n}\r\n",
            "properties": [
                {
                    "name": "AppQuestionText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "Areas",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ResponsibilityArea[]",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "Id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "TypeName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "SearchEntitiesType",
            "id": "interface-SearchEntitiesType-2e50ce7c6b5b004936ea8217210e3b1cc5b95e2c9e42c273120bfac43a66bb250c30427e91b8d2c9d2092689922f548e964925711c3f829e3ce66985d78aa119",
            "file": "src/app/shared/states/search-results.adapter.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Store, StoreDef } from \"@ngneat/elf\";\r\nimport { entitiesPropsFactory, selectAllEntities, setEntities } from \"@ngneat/elf-entities\";\r\nimport { pipeTap } from \"../rxjs\";\r\n\r\nconst { SearchResultEntitiesRef, withSearchResultEntities } = entitiesPropsFactory(\"SearchResult\")\r\n\r\nexport interface SearchEntitiesType<TResult> {\r\n  SearchResultEntities: Record<number, TResult>,\r\n  SearchResultIds: number[]\r\n}\r\n\r\nfunction searchResultsAdapt<TResult, TState extends SearchEntitiesType<TResult>>(store: Store<StoreDef<TState>>) {\r\n  return {\r\n    searchResults$: () => store.pipe(selectAllEntities({ ref: SearchResultEntitiesRef })),\r\n    setSearchResults: pipeTap<TResult[]>(results => store.update(\r\n      setEntities(results, { ref: SearchResultEntitiesRef })\r\n    ))\r\n  }\r\n}\r\n\r\nexport function searchResultsAdapter() {\r\n  return {\r\n    SearchResultEntitiesRef,\r\n    withSearchResultEntities,\r\n    searchResultsAdapt\r\n  }\r\n}",
            "properties": [
                {
                    "name": "SearchResultEntities",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<number | TResult>",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "SearchResultIds",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number[]",
                    "optional": false,
                    "description": "",
                    "line": 9
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "SearchEntitiesType",
            "id": "interface-SearchEntitiesType-1bdbb626e75577b3a840a415e32b2694a95e70f778d041334621dea3933ebdc0b36d1794c1f6b3edb5b410d5a41920007f632d0f43d1e860b86f1cd3498e9a3b-1",
            "file": "src/app/core/stores/operative/adapters/operatives.adapter.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Store, StoreDef } from \"@ngneat/elf\";\r\nimport { addEntities, EntitiesRef, selectAllEntities, setEntities } from \"@ngneat/elf-entities\";\r\nimport { pipeTap } from \"src/app/shared/rxjs\";\r\nimport { Operative, OperativeSearchResult } from \"../operatives.store\";\r\n\r\ninterface EntitiesType {\r\n  entities: Record<number, Operative>,\r\n  ids: number[]\r\n}\r\n\r\nexport function operativesAdapter<TState extends EntitiesType>(store: Store<StoreDef<TState>>) {\r\n  return {\r\n    operatives$: () => store.pipe(selectAllEntities()),\r\n    addOperative: pipeTap<Operative>(operative => store.update(\r\n      addEntities(operative)\r\n    ))\r\n  }\r\n}\r\n\r\ninterface SearchEntitiesType {\r\n  SearchResultEntities: Record<number, OperativeSearchResult>,\r\n  SearchResultIds: number[]\r\n}\r\n\r\ntype SearchEntitiesRef = EntitiesRef<\"SearchResultEntities\", \"SearchResultIds\", \"idKeySearchResult\">;\r\n\r\ninterface AdapterTarget<TState extends SearchEntitiesType> {\r\n  store: Store<StoreDef<TState>>,\r\n  ref: SearchEntitiesRef\r\n}\r\n\r\nexport function operativeSearchAdapter<TState extends SearchEntitiesType>({ store, ref }: AdapterTarget<TState>) {\r\n  return {\r\n    searchResults$: () => store.pipe(selectAllEntities({ ref })),\r\n    setSearchResults: pipeTap<OperativeSearchResult[]>(results => store.update(\r\n      setEntities(results, { ref })\r\n    ))\r\n  }\r\n}",
            "properties": [
                {
                    "name": "SearchResultEntities",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Record<number | OperativeSearchResult>",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "SearchResultIds",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number[]",
                    "optional": false,
                    "description": "",
                    "line": 22
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "SearchEntitiesType-1"
        },
        {
            "name": "Section",
            "id": "interface-Section-250dc99fceadc7eca47ca221235703a249f26304444d268eef8263bf5b53f59067a6a00220b711b1237d825b120356cbcb15a66aeb71497dcadbf8410246c2ba",
            "file": "src/app/core/stores/site-document/models/site-document.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface SiteDocument {\r\n  DocumentID: number;\r\n  DocumentTitle: string;\r\n  Pinned: boolean;\r\n  Pages: Page[];\r\n  AllowAnon: boolean;\r\n  RemainAnon: boolean;\r\n  Queues: { Key: string, Value: string }[],\r\n  DocumentGroup: string;\r\n  DocumentCategory?: number;\r\n  CanCreateHotspot: boolean;\r\n  CanBeAddedToHotspot?: boolean;\r\n  CanBeSavedAsDraft?: boolean;\r\n  CanAddActionerFromApp: boolean;\r\n  CanAddCategoryActioner: boolean;\r\n  CanCreateAssetsFromDocument: boolean;\r\n  CanHaveQueueDuration: boolean;\r\n  CanHaveDocumentLevelImages: boolean;\r\n  CanHaveDocLevelPhotoRoll: boolean;\r\n  CurrentActionerOperativeID?: number;\r\n  CompanyActionerId?: number;\r\n  ShowDocLevelPhotoButtonAtStartOfDoc: boolean;\r\n  CanAddAsset?: boolean;\r\n  CanAddOperative?: boolean;\r\n  CanHaveCompanyActioner: boolean;\r\n  MetaData: Partial<SiteDocumentMetaData>;\r\n  SiteId?: number;\r\n  AutoQueueID?: number;\r\n  QueueDuration?: {\r\n    Value: number;\r\n    Type: string;\r\n  }\r\n}\r\n\r\nexport interface SiteDocumentImage {\r\n  DocumentId: number,\r\n  DocumentSubmissionId: number,\r\n  Base64: string,\r\n  ImageNo: number\r\n}\r\n\r\nexport interface SiteDocumentMetaData {\r\n  ActionerText: string;\r\n  CanBeEditableDocument: boolean;\r\n  CannotAddSelfAsActioner: boolean;\r\n  ColourHex: string;\r\n  QueueSelectorTitle: string;\r\n  HasSiteList: boolean;\r\n  SiteListTitle: string;\r\n  UsesRadioGroupTable: boolean;\r\n}\r\n\r\nexport interface SiteDocumentAsset {\r\n  AssetID: number;\r\n  Tag: string;\r\n  Name: string;\r\n  QRCode?: string;\r\n  TemplateID?: number;\r\n}\r\n\r\nexport interface SiteDocumentOperative {\r\n  AttendeeID: number;\r\n  Name: string;\r\n  DateAttended: Date;\r\n}\r\n\r\nexport interface Page {\r\n  PageID: number;\r\n  PageTitle: string;\r\n  Sections: Section[]\r\n}\r\n\r\nexport interface Section {\r\n  SectionID: number;\r\n  SectionNo: number;\r\n  SectionTitle: string;\r\n  Questions: Question[];\r\n  SectionQuestiontype: QuestionType;\r\n  IsRepeatable: boolean;\r\n  TableTitles: string[];\r\n}\r\n\r\nexport enum QuestionType {\r\n  Label = 0,\r\n  Checkbox = 1,\r\n  RadioGroup = 2,\r\n  Textbox = 3,\r\n  TextArea = 4,\r\n  Select = 5,\r\n  CheckboxTextbox = 6,\r\n  RadioGroupTextbox = 7,\r\n  Date = 8,\r\n  DateTime = 9,\r\n  OperativeList = 10,\r\n  WallOfText = 11,\r\n  Number = 12,\r\n  CascadeDropdown = 13,\r\n  LinkedBool = 16,\r\n  AssetList = 17,\r\n  LinkedDates = 18,\r\n  Signature = 19,\r\n  CompanySelect = 21,\r\n  AreaSelect = 22,\r\n  AssetGroupsAndTypes = 25,\r\n  AssetInspectionSchedule = 26,\r\n  ProjectSelect = 27,\r\n  RamsSelect = 28,\r\n  SelectText = 29,\r\n  CascadeDropdownText = 30,\r\n  MultiCascade = 31,\r\n  Time = 32,\r\n  LinkedTimes = 33,\r\n  HRASelect = 34,\r\n  MultiCheckbox = 35,\r\n  LinkedDateAndTime = 36\r\n}\r\n\r\nexport interface Question {\r\n  QuestionID: number;\r\n  QuestionText: string;\r\n  CascadeOptionsText: string;\r\n  CommentsText: string;\r\n  Assets: SiteDocumentAsset[];\r\n  Operatives: SiteDocumentOperative[];\r\n  Required: boolean;\r\n  AnswerText: string;\r\n  DateAndTime: Date;\r\n  DateAndTime2: Date;\r\n  NumberVal?: number;\r\n  OptionVal?: string | null;\r\n  Options: SelectOption[];\r\n  CascadeOptions: CascadeOption[];\r\n  CascadeOptionVal?: string | null;\r\n  YesNoNA: boolean | null;\r\n  CanHaveImg: boolean;\r\n  CanHaveFiles: boolean;\r\n}\r\n\r\nexport interface SelectOption {\r\n  Active?: boolean;\r\n  Text: string;\r\n  Val: string;\r\n  MetaData?: any;\r\n  OptionsMetadataJson?: string;\r\n}\r\n\r\nexport interface SelectOptionMetaData {\r\n  ColourHex?: string;\r\n}\r\n\r\nexport interface CascadeOption { \r\n  ParentVal: string, \r\n  Text: string, \r\n  Val: string \r\n}",
            "properties": [
                {
                    "name": "IsRepeatable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 79
                },
                {
                    "name": "Questions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Question[]",
                    "optional": false,
                    "description": "",
                    "line": 77
                },
                {
                    "name": "SectionID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 74
                },
                {
                    "name": "SectionNo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 75
                },
                {
                    "name": "SectionQuestiontype",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "QuestionType",
                    "optional": false,
                    "description": "",
                    "line": 78
                },
                {
                    "name": "SectionTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 76
                },
                {
                    "name": "TableTitles",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 80
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "SelectOption",
            "id": "interface-SelectOption-250dc99fceadc7eca47ca221235703a249f26304444d268eef8263bf5b53f59067a6a00220b711b1237d825b120356cbcb15a66aeb71497dcadbf8410246c2ba",
            "file": "src/app/core/stores/site-document/models/site-document.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface SiteDocument {\r\n  DocumentID: number;\r\n  DocumentTitle: string;\r\n  Pinned: boolean;\r\n  Pages: Page[];\r\n  AllowAnon: boolean;\r\n  RemainAnon: boolean;\r\n  Queues: { Key: string, Value: string }[],\r\n  DocumentGroup: string;\r\n  DocumentCategory?: number;\r\n  CanCreateHotspot: boolean;\r\n  CanBeAddedToHotspot?: boolean;\r\n  CanBeSavedAsDraft?: boolean;\r\n  CanAddActionerFromApp: boolean;\r\n  CanAddCategoryActioner: boolean;\r\n  CanCreateAssetsFromDocument: boolean;\r\n  CanHaveQueueDuration: boolean;\r\n  CanHaveDocumentLevelImages: boolean;\r\n  CanHaveDocLevelPhotoRoll: boolean;\r\n  CurrentActionerOperativeID?: number;\r\n  CompanyActionerId?: number;\r\n  ShowDocLevelPhotoButtonAtStartOfDoc: boolean;\r\n  CanAddAsset?: boolean;\r\n  CanAddOperative?: boolean;\r\n  CanHaveCompanyActioner: boolean;\r\n  MetaData: Partial<SiteDocumentMetaData>;\r\n  SiteId?: number;\r\n  AutoQueueID?: number;\r\n  QueueDuration?: {\r\n    Value: number;\r\n    Type: string;\r\n  }\r\n}\r\n\r\nexport interface SiteDocumentImage {\r\n  DocumentId: number,\r\n  DocumentSubmissionId: number,\r\n  Base64: string,\r\n  ImageNo: number\r\n}\r\n\r\nexport interface SiteDocumentMetaData {\r\n  ActionerText: string;\r\n  CanBeEditableDocument: boolean;\r\n  CannotAddSelfAsActioner: boolean;\r\n  ColourHex: string;\r\n  QueueSelectorTitle: string;\r\n  HasSiteList: boolean;\r\n  SiteListTitle: string;\r\n  UsesRadioGroupTable: boolean;\r\n}\r\n\r\nexport interface SiteDocumentAsset {\r\n  AssetID: number;\r\n  Tag: string;\r\n  Name: string;\r\n  QRCode?: string;\r\n  TemplateID?: number;\r\n}\r\n\r\nexport interface SiteDocumentOperative {\r\n  AttendeeID: number;\r\n  Name: string;\r\n  DateAttended: Date;\r\n}\r\n\r\nexport interface Page {\r\n  PageID: number;\r\n  PageTitle: string;\r\n  Sections: Section[]\r\n}\r\n\r\nexport interface Section {\r\n  SectionID: number;\r\n  SectionNo: number;\r\n  SectionTitle: string;\r\n  Questions: Question[];\r\n  SectionQuestiontype: QuestionType;\r\n  IsRepeatable: boolean;\r\n  TableTitles: string[];\r\n}\r\n\r\nexport enum QuestionType {\r\n  Label = 0,\r\n  Checkbox = 1,\r\n  RadioGroup = 2,\r\n  Textbox = 3,\r\n  TextArea = 4,\r\n  Select = 5,\r\n  CheckboxTextbox = 6,\r\n  RadioGroupTextbox = 7,\r\n  Date = 8,\r\n  DateTime = 9,\r\n  OperativeList = 10,\r\n  WallOfText = 11,\r\n  Number = 12,\r\n  CascadeDropdown = 13,\r\n  LinkedBool = 16,\r\n  AssetList = 17,\r\n  LinkedDates = 18,\r\n  Signature = 19,\r\n  CompanySelect = 21,\r\n  AreaSelect = 22,\r\n  AssetGroupsAndTypes = 25,\r\n  AssetInspectionSchedule = 26,\r\n  ProjectSelect = 27,\r\n  RamsSelect = 28,\r\n  SelectText = 29,\r\n  CascadeDropdownText = 30,\r\n  MultiCascade = 31,\r\n  Time = 32,\r\n  LinkedTimes = 33,\r\n  HRASelect = 34,\r\n  MultiCheckbox = 35,\r\n  LinkedDateAndTime = 36\r\n}\r\n\r\nexport interface Question {\r\n  QuestionID: number;\r\n  QuestionText: string;\r\n  CascadeOptionsText: string;\r\n  CommentsText: string;\r\n  Assets: SiteDocumentAsset[];\r\n  Operatives: SiteDocumentOperative[];\r\n  Required: boolean;\r\n  AnswerText: string;\r\n  DateAndTime: Date;\r\n  DateAndTime2: Date;\r\n  NumberVal?: number;\r\n  OptionVal?: string | null;\r\n  Options: SelectOption[];\r\n  CascadeOptions: CascadeOption[];\r\n  CascadeOptionVal?: string | null;\r\n  YesNoNA: boolean | null;\r\n  CanHaveImg: boolean;\r\n  CanHaveFiles: boolean;\r\n}\r\n\r\nexport interface SelectOption {\r\n  Active?: boolean;\r\n  Text: string;\r\n  Val: string;\r\n  MetaData?: any;\r\n  OptionsMetadataJson?: string;\r\n}\r\n\r\nexport interface SelectOptionMetaData {\r\n  ColourHex?: string;\r\n}\r\n\r\nexport interface CascadeOption { \r\n  ParentVal: string, \r\n  Text: string, \r\n  Val: string \r\n}",
            "properties": [
                {
                    "name": "Active",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 140
                },
                {
                    "name": "MetaData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "any",
                    "optional": true,
                    "description": "",
                    "line": 143
                },
                {
                    "name": "OptionsMetadataJson",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 144
                },
                {
                    "name": "Text",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 141
                },
                {
                    "name": "Val",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 142
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "SelectOptionMetaData",
            "id": "interface-SelectOptionMetaData-250dc99fceadc7eca47ca221235703a249f26304444d268eef8263bf5b53f59067a6a00220b711b1237d825b120356cbcb15a66aeb71497dcadbf8410246c2ba",
            "file": "src/app/core/stores/site-document/models/site-document.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface SiteDocument {\r\n  DocumentID: number;\r\n  DocumentTitle: string;\r\n  Pinned: boolean;\r\n  Pages: Page[];\r\n  AllowAnon: boolean;\r\n  RemainAnon: boolean;\r\n  Queues: { Key: string, Value: string }[],\r\n  DocumentGroup: string;\r\n  DocumentCategory?: number;\r\n  CanCreateHotspot: boolean;\r\n  CanBeAddedToHotspot?: boolean;\r\n  CanBeSavedAsDraft?: boolean;\r\n  CanAddActionerFromApp: boolean;\r\n  CanAddCategoryActioner: boolean;\r\n  CanCreateAssetsFromDocument: boolean;\r\n  CanHaveQueueDuration: boolean;\r\n  CanHaveDocumentLevelImages: boolean;\r\n  CanHaveDocLevelPhotoRoll: boolean;\r\n  CurrentActionerOperativeID?: number;\r\n  CompanyActionerId?: number;\r\n  ShowDocLevelPhotoButtonAtStartOfDoc: boolean;\r\n  CanAddAsset?: boolean;\r\n  CanAddOperative?: boolean;\r\n  CanHaveCompanyActioner: boolean;\r\n  MetaData: Partial<SiteDocumentMetaData>;\r\n  SiteId?: number;\r\n  AutoQueueID?: number;\r\n  QueueDuration?: {\r\n    Value: number;\r\n    Type: string;\r\n  }\r\n}\r\n\r\nexport interface SiteDocumentImage {\r\n  DocumentId: number,\r\n  DocumentSubmissionId: number,\r\n  Base64: string,\r\n  ImageNo: number\r\n}\r\n\r\nexport interface SiteDocumentMetaData {\r\n  ActionerText: string;\r\n  CanBeEditableDocument: boolean;\r\n  CannotAddSelfAsActioner: boolean;\r\n  ColourHex: string;\r\n  QueueSelectorTitle: string;\r\n  HasSiteList: boolean;\r\n  SiteListTitle: string;\r\n  UsesRadioGroupTable: boolean;\r\n}\r\n\r\nexport interface SiteDocumentAsset {\r\n  AssetID: number;\r\n  Tag: string;\r\n  Name: string;\r\n  QRCode?: string;\r\n  TemplateID?: number;\r\n}\r\n\r\nexport interface SiteDocumentOperative {\r\n  AttendeeID: number;\r\n  Name: string;\r\n  DateAttended: Date;\r\n}\r\n\r\nexport interface Page {\r\n  PageID: number;\r\n  PageTitle: string;\r\n  Sections: Section[]\r\n}\r\n\r\nexport interface Section {\r\n  SectionID: number;\r\n  SectionNo: number;\r\n  SectionTitle: string;\r\n  Questions: Question[];\r\n  SectionQuestiontype: QuestionType;\r\n  IsRepeatable: boolean;\r\n  TableTitles: string[];\r\n}\r\n\r\nexport enum QuestionType {\r\n  Label = 0,\r\n  Checkbox = 1,\r\n  RadioGroup = 2,\r\n  Textbox = 3,\r\n  TextArea = 4,\r\n  Select = 5,\r\n  CheckboxTextbox = 6,\r\n  RadioGroupTextbox = 7,\r\n  Date = 8,\r\n  DateTime = 9,\r\n  OperativeList = 10,\r\n  WallOfText = 11,\r\n  Number = 12,\r\n  CascadeDropdown = 13,\r\n  LinkedBool = 16,\r\n  AssetList = 17,\r\n  LinkedDates = 18,\r\n  Signature = 19,\r\n  CompanySelect = 21,\r\n  AreaSelect = 22,\r\n  AssetGroupsAndTypes = 25,\r\n  AssetInspectionSchedule = 26,\r\n  ProjectSelect = 27,\r\n  RamsSelect = 28,\r\n  SelectText = 29,\r\n  CascadeDropdownText = 30,\r\n  MultiCascade = 31,\r\n  Time = 32,\r\n  LinkedTimes = 33,\r\n  HRASelect = 34,\r\n  MultiCheckbox = 35,\r\n  LinkedDateAndTime = 36\r\n}\r\n\r\nexport interface Question {\r\n  QuestionID: number;\r\n  QuestionText: string;\r\n  CascadeOptionsText: string;\r\n  CommentsText: string;\r\n  Assets: SiteDocumentAsset[];\r\n  Operatives: SiteDocumentOperative[];\r\n  Required: boolean;\r\n  AnswerText: string;\r\n  DateAndTime: Date;\r\n  DateAndTime2: Date;\r\n  NumberVal?: number;\r\n  OptionVal?: string | null;\r\n  Options: SelectOption[];\r\n  CascadeOptions: CascadeOption[];\r\n  CascadeOptionVal?: string | null;\r\n  YesNoNA: boolean | null;\r\n  CanHaveImg: boolean;\r\n  CanHaveFiles: boolean;\r\n}\r\n\r\nexport interface SelectOption {\r\n  Active?: boolean;\r\n  Text: string;\r\n  Val: string;\r\n  MetaData?: any;\r\n  OptionsMetadataJson?: string;\r\n}\r\n\r\nexport interface SelectOptionMetaData {\r\n  ColourHex?: string;\r\n}\r\n\r\nexport interface CascadeOption { \r\n  ParentVal: string, \r\n  Text: string, \r\n  Val: string \r\n}",
            "properties": [
                {
                    "name": "ColourHex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 148
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "Site",
            "id": "interface-Site-d9c4e58eb5e3ed0204b1567826f19b300f2ed701d45ff500e4041032f49807e638d2317ce8199f5ff1b284addc3b0f51613cd29a6feea064f155875afa1b3a74",
            "file": "src/app/core/stores/user/user.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\r\nimport { inject, Injectable } from \"@angular/core\";\r\nimport { createStore, propsFactory } from \"@ngneat/elf\";\r\nimport { localStorageStrategy, persistState } from \"@ngneat/elf-persist-state\";\r\nimport { combineLatest, Observable, switchMap } from \"rxjs\";\r\nimport { getDeviceString, getDeviceUuid } from \"src/app/shared/plugins/device.plugin\";\r\nimport { pipeTap, selector } from \"src/app/shared/rxjs\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\nexport interface User {\r\n  Id: number,\r\n  LastName: string,\r\n  FirstName: string,\r\n  CompanyId: number,\r\n  CompanyName: string,\r\n  Colour: string,\r\n  FontColour: string,\r\n  Token: string,\r\n  Pin: string,\r\n  Site: Site,\r\n  DocumentListingTab: \"Recent\" | \"Pinned\" | \"Issued\",\r\n  IsInSupervisorRole: boolean,\r\n  HasRegisteredPlayerId: number,\r\n  HasAssets: boolean,\r\n  HasAssetCreation: boolean,\r\n  HasDocQrCodes: boolean,\r\n  HasHadWifiPreferenceChecked: boolean,\r\n  HasUpdateableDocs: boolean,\r\n  HasDocQueues: boolean,\r\n  HasCompanies: boolean,\r\n  HasDataTouchAreas: boolean,\r\n  HasQueueSupervisors: boolean,\r\n  HasCategoryActioners: boolean,\r\n  UserSites: Site[],\r\n  UserCompanies: Company[],\r\n  HasPlanningMeeting: boolean,\r\n  HasReviewMeeting: boolean,\r\n  HasCollabPlanning: boolean,\r\n  HasRandomOperativebarcodes: boolean,\r\n  HasLiveQueues: boolean,\r\n  HasResAreas:boolean,\r\n  HasHideOperativeScan: boolean,\r\n  HasSites: boolean,\r\n  HasDocDrop: boolean,\r\n  HasBasicOpInfo: boolean,\r\n  HasSimpleSwipes: boolean,\r\n  HasProjectsOnDocDrop: boolean,\r\n  HasCustomLookups: boolean,\r\n  HasTemplateSender: boolean,\r\n  HasMyOpInfo: boolean,\r\n  HasViewDocumentAsSinglePage: boolean,\r\n  HasShowParentAnswersOnChildDoc: boolean,\r\n  HasCompanySelectWithOtherOption:boolean,\r\n  HideSearchOnOperativeInfo: boolean,\r\n  HideSearchOnOperativeAccess: boolean,\r\n  CanAddOperativesToDocsByName: boolean,\r\n  HasRamsList: boolean,\r\n  CanAddAsssetsToDocsByName: boolean,\r\n  ShowWeightingsOnApp: boolean,\r\n  TemplatesLastUpdate: Date,\r\n  Url: string,\r\n  UseFingerReader: boolean,\r\n  SelectedSite?: Site,\r\n  NavTab: \"Modules\" | \"Documents\",\r\n  NumberOfTemplates: number,\r\n  DownloadedTemplates: number,\r\n  //PermittedCategories: DocCategory[],\r\n  HasOperativeInfo: boolean,\r\n  CanOffHireAssets: boolean,\r\n  CanViewOtherOperativeInfo: boolean,\r\n  CanModifyOperativeQRs: boolean,\r\n  CanAddQRsToAssets: boolean\r\n}\r\n\r\nexport interface Site {\r\n  Id: number,\r\n  Name: string\r\n}\r\n\r\nexport interface Company {\r\n  Id: number,\r\n  Text: string\r\n}\r\n\r\nconst {\r\n  withAppUser, \r\n  selectAppUser, \r\n  setAppUser\r\n} = propsFactory(\"appUser\", { initialValue: null as User | null });\r\n\r\nconst store = createStore(\r\n  { name: \"user\" },\r\n  withAppUser()\r\n);\r\n\r\nconst userSelector = selector(store.pipe(selectAppUser()));\r\nconst sites$ = userSelector(user => user?.UserSites || []);\r\n\r\nconst setAppUserUpdate = pipeTap<User>(user => store.update(setAppUser(user)));\r\n\r\npersistState(store, {\r\n  key: \"user\",\r\n  storage: localStorageStrategy\r\n});\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class UserStore {\r\n  httpClient = inject(HttpClient);\r\n\r\n  user$ = store.pipe(selectAppUser());\r\n  sites$ = sites$;\r\n  companies$ = userSelector(user => user?.UserCompanies || []);\r\n\r\n  getUserRequest$ = (action$: Observable<{ token: string, pin: string }>) => combineLatest({\r\n    login: action$,\r\n    deviceId: getDeviceUuid(),\r\n    deviceString: getDeviceString() \r\n  }).pipe(\r\n    switchMap(({ login, deviceId, deviceString }) => this.httpClient.post<User>(`${environment.siteDocsApi}/LoginApi/LoginSiteDocumentsApp`, {\r\n      deviceId,\r\n      deviceString\r\n    }, {\r\n      headers: {\r\n        appToken: login.token,\r\n        appPin: login.pin\r\n      }\r\n    })),\r\n    setAppUserUpdate()\r\n  );\r\n}",
            "properties": [
                {
                    "name": "Id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 76
                },
                {
                    "name": "Name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 77
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "SiteDocument",
            "id": "interface-SiteDocument-250dc99fceadc7eca47ca221235703a249f26304444d268eef8263bf5b53f59067a6a00220b711b1237d825b120356cbcb15a66aeb71497dcadbf8410246c2ba",
            "file": "src/app/core/stores/site-document/models/site-document.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface SiteDocument {\r\n  DocumentID: number;\r\n  DocumentTitle: string;\r\n  Pinned: boolean;\r\n  Pages: Page[];\r\n  AllowAnon: boolean;\r\n  RemainAnon: boolean;\r\n  Queues: { Key: string, Value: string }[],\r\n  DocumentGroup: string;\r\n  DocumentCategory?: number;\r\n  CanCreateHotspot: boolean;\r\n  CanBeAddedToHotspot?: boolean;\r\n  CanBeSavedAsDraft?: boolean;\r\n  CanAddActionerFromApp: boolean;\r\n  CanAddCategoryActioner: boolean;\r\n  CanCreateAssetsFromDocument: boolean;\r\n  CanHaveQueueDuration: boolean;\r\n  CanHaveDocumentLevelImages: boolean;\r\n  CanHaveDocLevelPhotoRoll: boolean;\r\n  CurrentActionerOperativeID?: number;\r\n  CompanyActionerId?: number;\r\n  ShowDocLevelPhotoButtonAtStartOfDoc: boolean;\r\n  CanAddAsset?: boolean;\r\n  CanAddOperative?: boolean;\r\n  CanHaveCompanyActioner: boolean;\r\n  MetaData: Partial<SiteDocumentMetaData>;\r\n  SiteId?: number;\r\n  AutoQueueID?: number;\r\n  QueueDuration?: {\r\n    Value: number;\r\n    Type: string;\r\n  }\r\n}\r\n\r\nexport interface SiteDocumentImage {\r\n  DocumentId: number,\r\n  DocumentSubmissionId: number,\r\n  Base64: string,\r\n  ImageNo: number\r\n}\r\n\r\nexport interface SiteDocumentMetaData {\r\n  ActionerText: string;\r\n  CanBeEditableDocument: boolean;\r\n  CannotAddSelfAsActioner: boolean;\r\n  ColourHex: string;\r\n  QueueSelectorTitle: string;\r\n  HasSiteList: boolean;\r\n  SiteListTitle: string;\r\n  UsesRadioGroupTable: boolean;\r\n}\r\n\r\nexport interface SiteDocumentAsset {\r\n  AssetID: number;\r\n  Tag: string;\r\n  Name: string;\r\n  QRCode?: string;\r\n  TemplateID?: number;\r\n}\r\n\r\nexport interface SiteDocumentOperative {\r\n  AttendeeID: number;\r\n  Name: string;\r\n  DateAttended: Date;\r\n}\r\n\r\nexport interface Page {\r\n  PageID: number;\r\n  PageTitle: string;\r\n  Sections: Section[]\r\n}\r\n\r\nexport interface Section {\r\n  SectionID: number;\r\n  SectionNo: number;\r\n  SectionTitle: string;\r\n  Questions: Question[];\r\n  SectionQuestiontype: QuestionType;\r\n  IsRepeatable: boolean;\r\n  TableTitles: string[];\r\n}\r\n\r\nexport enum QuestionType {\r\n  Label = 0,\r\n  Checkbox = 1,\r\n  RadioGroup = 2,\r\n  Textbox = 3,\r\n  TextArea = 4,\r\n  Select = 5,\r\n  CheckboxTextbox = 6,\r\n  RadioGroupTextbox = 7,\r\n  Date = 8,\r\n  DateTime = 9,\r\n  OperativeList = 10,\r\n  WallOfText = 11,\r\n  Number = 12,\r\n  CascadeDropdown = 13,\r\n  LinkedBool = 16,\r\n  AssetList = 17,\r\n  LinkedDates = 18,\r\n  Signature = 19,\r\n  CompanySelect = 21,\r\n  AreaSelect = 22,\r\n  AssetGroupsAndTypes = 25,\r\n  AssetInspectionSchedule = 26,\r\n  ProjectSelect = 27,\r\n  RamsSelect = 28,\r\n  SelectText = 29,\r\n  CascadeDropdownText = 30,\r\n  MultiCascade = 31,\r\n  Time = 32,\r\n  LinkedTimes = 33,\r\n  HRASelect = 34,\r\n  MultiCheckbox = 35,\r\n  LinkedDateAndTime = 36\r\n}\r\n\r\nexport interface Question {\r\n  QuestionID: number;\r\n  QuestionText: string;\r\n  CascadeOptionsText: string;\r\n  CommentsText: string;\r\n  Assets: SiteDocumentAsset[];\r\n  Operatives: SiteDocumentOperative[];\r\n  Required: boolean;\r\n  AnswerText: string;\r\n  DateAndTime: Date;\r\n  DateAndTime2: Date;\r\n  NumberVal?: number;\r\n  OptionVal?: string | null;\r\n  Options: SelectOption[];\r\n  CascadeOptions: CascadeOption[];\r\n  CascadeOptionVal?: string | null;\r\n  YesNoNA: boolean | null;\r\n  CanHaveImg: boolean;\r\n  CanHaveFiles: boolean;\r\n}\r\n\r\nexport interface SelectOption {\r\n  Active?: boolean;\r\n  Text: string;\r\n  Val: string;\r\n  MetaData?: any;\r\n  OptionsMetadataJson?: string;\r\n}\r\n\r\nexport interface SelectOptionMetaData {\r\n  ColourHex?: string;\r\n}\r\n\r\nexport interface CascadeOption { \r\n  ParentVal: string, \r\n  Text: string, \r\n  Val: string \r\n}",
            "properties": [
                {
                    "name": "AllowAnon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "AutoQueueID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "CanAddActionerFromApp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "CanAddAsset",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "CanAddCategoryActioner",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "CanAddOperative",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "CanBeAddedToHotspot",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "CanBeSavedAsDraft",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": true,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "CanCreateAssetsFromDocument",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "CanCreateHotspot",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "CanHaveCompanyActioner",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "CanHaveDocLevelPhotoRoll",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "CanHaveDocumentLevelImages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "CanHaveQueueDuration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "CompanyActionerId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "CurrentActionerOperativeID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "DocumentCategory",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 10
                },
                {
                    "name": "DocumentGroup",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "DocumentID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 2
                },
                {
                    "name": "DocumentTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 3
                },
                {
                    "name": "MetaData",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<SiteDocumentMetaData>",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "Pages",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Page[]",
                    "optional": false,
                    "description": "",
                    "line": 5
                },
                {
                    "name": "Pinned",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 4
                },
                {
                    "name": "QueueDuration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type",
                    "optional": true,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "Queues",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "RemainAnon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 7
                },
                {
                    "name": "ShowDocLevelPhotoButtonAtStartOfDoc",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "SiteId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 27
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "SiteDocumentAsset",
            "id": "interface-SiteDocumentAsset-250dc99fceadc7eca47ca221235703a249f26304444d268eef8263bf5b53f59067a6a00220b711b1237d825b120356cbcb15a66aeb71497dcadbf8410246c2ba",
            "file": "src/app/core/stores/site-document/models/site-document.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface SiteDocument {\r\n  DocumentID: number;\r\n  DocumentTitle: string;\r\n  Pinned: boolean;\r\n  Pages: Page[];\r\n  AllowAnon: boolean;\r\n  RemainAnon: boolean;\r\n  Queues: { Key: string, Value: string }[],\r\n  DocumentGroup: string;\r\n  DocumentCategory?: number;\r\n  CanCreateHotspot: boolean;\r\n  CanBeAddedToHotspot?: boolean;\r\n  CanBeSavedAsDraft?: boolean;\r\n  CanAddActionerFromApp: boolean;\r\n  CanAddCategoryActioner: boolean;\r\n  CanCreateAssetsFromDocument: boolean;\r\n  CanHaveQueueDuration: boolean;\r\n  CanHaveDocumentLevelImages: boolean;\r\n  CanHaveDocLevelPhotoRoll: boolean;\r\n  CurrentActionerOperativeID?: number;\r\n  CompanyActionerId?: number;\r\n  ShowDocLevelPhotoButtonAtStartOfDoc: boolean;\r\n  CanAddAsset?: boolean;\r\n  CanAddOperative?: boolean;\r\n  CanHaveCompanyActioner: boolean;\r\n  MetaData: Partial<SiteDocumentMetaData>;\r\n  SiteId?: number;\r\n  AutoQueueID?: number;\r\n  QueueDuration?: {\r\n    Value: number;\r\n    Type: string;\r\n  }\r\n}\r\n\r\nexport interface SiteDocumentImage {\r\n  DocumentId: number,\r\n  DocumentSubmissionId: number,\r\n  Base64: string,\r\n  ImageNo: number\r\n}\r\n\r\nexport interface SiteDocumentMetaData {\r\n  ActionerText: string;\r\n  CanBeEditableDocument: boolean;\r\n  CannotAddSelfAsActioner: boolean;\r\n  ColourHex: string;\r\n  QueueSelectorTitle: string;\r\n  HasSiteList: boolean;\r\n  SiteListTitle: string;\r\n  UsesRadioGroupTable: boolean;\r\n}\r\n\r\nexport interface SiteDocumentAsset {\r\n  AssetID: number;\r\n  Tag: string;\r\n  Name: string;\r\n  QRCode?: string;\r\n  TemplateID?: number;\r\n}\r\n\r\nexport interface SiteDocumentOperative {\r\n  AttendeeID: number;\r\n  Name: string;\r\n  DateAttended: Date;\r\n}\r\n\r\nexport interface Page {\r\n  PageID: number;\r\n  PageTitle: string;\r\n  Sections: Section[]\r\n}\r\n\r\nexport interface Section {\r\n  SectionID: number;\r\n  SectionNo: number;\r\n  SectionTitle: string;\r\n  Questions: Question[];\r\n  SectionQuestiontype: QuestionType;\r\n  IsRepeatable: boolean;\r\n  TableTitles: string[];\r\n}\r\n\r\nexport enum QuestionType {\r\n  Label = 0,\r\n  Checkbox = 1,\r\n  RadioGroup = 2,\r\n  Textbox = 3,\r\n  TextArea = 4,\r\n  Select = 5,\r\n  CheckboxTextbox = 6,\r\n  RadioGroupTextbox = 7,\r\n  Date = 8,\r\n  DateTime = 9,\r\n  OperativeList = 10,\r\n  WallOfText = 11,\r\n  Number = 12,\r\n  CascadeDropdown = 13,\r\n  LinkedBool = 16,\r\n  AssetList = 17,\r\n  LinkedDates = 18,\r\n  Signature = 19,\r\n  CompanySelect = 21,\r\n  AreaSelect = 22,\r\n  AssetGroupsAndTypes = 25,\r\n  AssetInspectionSchedule = 26,\r\n  ProjectSelect = 27,\r\n  RamsSelect = 28,\r\n  SelectText = 29,\r\n  CascadeDropdownText = 30,\r\n  MultiCascade = 31,\r\n  Time = 32,\r\n  LinkedTimes = 33,\r\n  HRASelect = 34,\r\n  MultiCheckbox = 35,\r\n  LinkedDateAndTime = 36\r\n}\r\n\r\nexport interface Question {\r\n  QuestionID: number;\r\n  QuestionText: string;\r\n  CascadeOptionsText: string;\r\n  CommentsText: string;\r\n  Assets: SiteDocumentAsset[];\r\n  Operatives: SiteDocumentOperative[];\r\n  Required: boolean;\r\n  AnswerText: string;\r\n  DateAndTime: Date;\r\n  DateAndTime2: Date;\r\n  NumberVal?: number;\r\n  OptionVal?: string | null;\r\n  Options: SelectOption[];\r\n  CascadeOptions: CascadeOption[];\r\n  CascadeOptionVal?: string | null;\r\n  YesNoNA: boolean | null;\r\n  CanHaveImg: boolean;\r\n  CanHaveFiles: boolean;\r\n}\r\n\r\nexport interface SelectOption {\r\n  Active?: boolean;\r\n  Text: string;\r\n  Val: string;\r\n  MetaData?: any;\r\n  OptionsMetadataJson?: string;\r\n}\r\n\r\nexport interface SelectOptionMetaData {\r\n  ColourHex?: string;\r\n}\r\n\r\nexport interface CascadeOption { \r\n  ParentVal: string, \r\n  Text: string, \r\n  Val: string \r\n}",
            "properties": [
                {
                    "name": "AssetID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "Name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "QRCode",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "Tag",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "TemplateID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": true,
                    "description": "",
                    "line": 58
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "SiteDocumentImage",
            "id": "interface-SiteDocumentImage-250dc99fceadc7eca47ca221235703a249f26304444d268eef8263bf5b53f59067a6a00220b711b1237d825b120356cbcb15a66aeb71497dcadbf8410246c2ba",
            "file": "src/app/core/stores/site-document/models/site-document.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface SiteDocument {\r\n  DocumentID: number;\r\n  DocumentTitle: string;\r\n  Pinned: boolean;\r\n  Pages: Page[];\r\n  AllowAnon: boolean;\r\n  RemainAnon: boolean;\r\n  Queues: { Key: string, Value: string }[],\r\n  DocumentGroup: string;\r\n  DocumentCategory?: number;\r\n  CanCreateHotspot: boolean;\r\n  CanBeAddedToHotspot?: boolean;\r\n  CanBeSavedAsDraft?: boolean;\r\n  CanAddActionerFromApp: boolean;\r\n  CanAddCategoryActioner: boolean;\r\n  CanCreateAssetsFromDocument: boolean;\r\n  CanHaveQueueDuration: boolean;\r\n  CanHaveDocumentLevelImages: boolean;\r\n  CanHaveDocLevelPhotoRoll: boolean;\r\n  CurrentActionerOperativeID?: number;\r\n  CompanyActionerId?: number;\r\n  ShowDocLevelPhotoButtonAtStartOfDoc: boolean;\r\n  CanAddAsset?: boolean;\r\n  CanAddOperative?: boolean;\r\n  CanHaveCompanyActioner: boolean;\r\n  MetaData: Partial<SiteDocumentMetaData>;\r\n  SiteId?: number;\r\n  AutoQueueID?: number;\r\n  QueueDuration?: {\r\n    Value: number;\r\n    Type: string;\r\n  }\r\n}\r\n\r\nexport interface SiteDocumentImage {\r\n  DocumentId: number,\r\n  DocumentSubmissionId: number,\r\n  Base64: string,\r\n  ImageNo: number\r\n}\r\n\r\nexport interface SiteDocumentMetaData {\r\n  ActionerText: string;\r\n  CanBeEditableDocument: boolean;\r\n  CannotAddSelfAsActioner: boolean;\r\n  ColourHex: string;\r\n  QueueSelectorTitle: string;\r\n  HasSiteList: boolean;\r\n  SiteListTitle: string;\r\n  UsesRadioGroupTable: boolean;\r\n}\r\n\r\nexport interface SiteDocumentAsset {\r\n  AssetID: number;\r\n  Tag: string;\r\n  Name: string;\r\n  QRCode?: string;\r\n  TemplateID?: number;\r\n}\r\n\r\nexport interface SiteDocumentOperative {\r\n  AttendeeID: number;\r\n  Name: string;\r\n  DateAttended: Date;\r\n}\r\n\r\nexport interface Page {\r\n  PageID: number;\r\n  PageTitle: string;\r\n  Sections: Section[]\r\n}\r\n\r\nexport interface Section {\r\n  SectionID: number;\r\n  SectionNo: number;\r\n  SectionTitle: string;\r\n  Questions: Question[];\r\n  SectionQuestiontype: QuestionType;\r\n  IsRepeatable: boolean;\r\n  TableTitles: string[];\r\n}\r\n\r\nexport enum QuestionType {\r\n  Label = 0,\r\n  Checkbox = 1,\r\n  RadioGroup = 2,\r\n  Textbox = 3,\r\n  TextArea = 4,\r\n  Select = 5,\r\n  CheckboxTextbox = 6,\r\n  RadioGroupTextbox = 7,\r\n  Date = 8,\r\n  DateTime = 9,\r\n  OperativeList = 10,\r\n  WallOfText = 11,\r\n  Number = 12,\r\n  CascadeDropdown = 13,\r\n  LinkedBool = 16,\r\n  AssetList = 17,\r\n  LinkedDates = 18,\r\n  Signature = 19,\r\n  CompanySelect = 21,\r\n  AreaSelect = 22,\r\n  AssetGroupsAndTypes = 25,\r\n  AssetInspectionSchedule = 26,\r\n  ProjectSelect = 27,\r\n  RamsSelect = 28,\r\n  SelectText = 29,\r\n  CascadeDropdownText = 30,\r\n  MultiCascade = 31,\r\n  Time = 32,\r\n  LinkedTimes = 33,\r\n  HRASelect = 34,\r\n  MultiCheckbox = 35,\r\n  LinkedDateAndTime = 36\r\n}\r\n\r\nexport interface Question {\r\n  QuestionID: number;\r\n  QuestionText: string;\r\n  CascadeOptionsText: string;\r\n  CommentsText: string;\r\n  Assets: SiteDocumentAsset[];\r\n  Operatives: SiteDocumentOperative[];\r\n  Required: boolean;\r\n  AnswerText: string;\r\n  DateAndTime: Date;\r\n  DateAndTime2: Date;\r\n  NumberVal?: number;\r\n  OptionVal?: string | null;\r\n  Options: SelectOption[];\r\n  CascadeOptions: CascadeOption[];\r\n  CascadeOptionVal?: string | null;\r\n  YesNoNA: boolean | null;\r\n  CanHaveImg: boolean;\r\n  CanHaveFiles: boolean;\r\n}\r\n\r\nexport interface SelectOption {\r\n  Active?: boolean;\r\n  Text: string;\r\n  Val: string;\r\n  MetaData?: any;\r\n  OptionsMetadataJson?: string;\r\n}\r\n\r\nexport interface SelectOptionMetaData {\r\n  ColourHex?: string;\r\n}\r\n\r\nexport interface CascadeOption { \r\n  ParentVal: string, \r\n  Text: string, \r\n  Val: string \r\n}",
            "properties": [
                {
                    "name": "Base64",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "DocumentId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "DocumentSubmissionId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "ImageNo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 39
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "SiteDocumentMetaData",
            "id": "interface-SiteDocumentMetaData-250dc99fceadc7eca47ca221235703a249f26304444d268eef8263bf5b53f59067a6a00220b711b1237d825b120356cbcb15a66aeb71497dcadbf8410246c2ba",
            "file": "src/app/core/stores/site-document/models/site-document.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface SiteDocument {\r\n  DocumentID: number;\r\n  DocumentTitle: string;\r\n  Pinned: boolean;\r\n  Pages: Page[];\r\n  AllowAnon: boolean;\r\n  RemainAnon: boolean;\r\n  Queues: { Key: string, Value: string }[],\r\n  DocumentGroup: string;\r\n  DocumentCategory?: number;\r\n  CanCreateHotspot: boolean;\r\n  CanBeAddedToHotspot?: boolean;\r\n  CanBeSavedAsDraft?: boolean;\r\n  CanAddActionerFromApp: boolean;\r\n  CanAddCategoryActioner: boolean;\r\n  CanCreateAssetsFromDocument: boolean;\r\n  CanHaveQueueDuration: boolean;\r\n  CanHaveDocumentLevelImages: boolean;\r\n  CanHaveDocLevelPhotoRoll: boolean;\r\n  CurrentActionerOperativeID?: number;\r\n  CompanyActionerId?: number;\r\n  ShowDocLevelPhotoButtonAtStartOfDoc: boolean;\r\n  CanAddAsset?: boolean;\r\n  CanAddOperative?: boolean;\r\n  CanHaveCompanyActioner: boolean;\r\n  MetaData: Partial<SiteDocumentMetaData>;\r\n  SiteId?: number;\r\n  AutoQueueID?: number;\r\n  QueueDuration?: {\r\n    Value: number;\r\n    Type: string;\r\n  }\r\n}\r\n\r\nexport interface SiteDocumentImage {\r\n  DocumentId: number,\r\n  DocumentSubmissionId: number,\r\n  Base64: string,\r\n  ImageNo: number\r\n}\r\n\r\nexport interface SiteDocumentMetaData {\r\n  ActionerText: string;\r\n  CanBeEditableDocument: boolean;\r\n  CannotAddSelfAsActioner: boolean;\r\n  ColourHex: string;\r\n  QueueSelectorTitle: string;\r\n  HasSiteList: boolean;\r\n  SiteListTitle: string;\r\n  UsesRadioGroupTable: boolean;\r\n}\r\n\r\nexport interface SiteDocumentAsset {\r\n  AssetID: number;\r\n  Tag: string;\r\n  Name: string;\r\n  QRCode?: string;\r\n  TemplateID?: number;\r\n}\r\n\r\nexport interface SiteDocumentOperative {\r\n  AttendeeID: number;\r\n  Name: string;\r\n  DateAttended: Date;\r\n}\r\n\r\nexport interface Page {\r\n  PageID: number;\r\n  PageTitle: string;\r\n  Sections: Section[]\r\n}\r\n\r\nexport interface Section {\r\n  SectionID: number;\r\n  SectionNo: number;\r\n  SectionTitle: string;\r\n  Questions: Question[];\r\n  SectionQuestiontype: QuestionType;\r\n  IsRepeatable: boolean;\r\n  TableTitles: string[];\r\n}\r\n\r\nexport enum QuestionType {\r\n  Label = 0,\r\n  Checkbox = 1,\r\n  RadioGroup = 2,\r\n  Textbox = 3,\r\n  TextArea = 4,\r\n  Select = 5,\r\n  CheckboxTextbox = 6,\r\n  RadioGroupTextbox = 7,\r\n  Date = 8,\r\n  DateTime = 9,\r\n  OperativeList = 10,\r\n  WallOfText = 11,\r\n  Number = 12,\r\n  CascadeDropdown = 13,\r\n  LinkedBool = 16,\r\n  AssetList = 17,\r\n  LinkedDates = 18,\r\n  Signature = 19,\r\n  CompanySelect = 21,\r\n  AreaSelect = 22,\r\n  AssetGroupsAndTypes = 25,\r\n  AssetInspectionSchedule = 26,\r\n  ProjectSelect = 27,\r\n  RamsSelect = 28,\r\n  SelectText = 29,\r\n  CascadeDropdownText = 30,\r\n  MultiCascade = 31,\r\n  Time = 32,\r\n  LinkedTimes = 33,\r\n  HRASelect = 34,\r\n  MultiCheckbox = 35,\r\n  LinkedDateAndTime = 36\r\n}\r\n\r\nexport interface Question {\r\n  QuestionID: number;\r\n  QuestionText: string;\r\n  CascadeOptionsText: string;\r\n  CommentsText: string;\r\n  Assets: SiteDocumentAsset[];\r\n  Operatives: SiteDocumentOperative[];\r\n  Required: boolean;\r\n  AnswerText: string;\r\n  DateAndTime: Date;\r\n  DateAndTime2: Date;\r\n  NumberVal?: number;\r\n  OptionVal?: string | null;\r\n  Options: SelectOption[];\r\n  CascadeOptions: CascadeOption[];\r\n  CascadeOptionVal?: string | null;\r\n  YesNoNA: boolean | null;\r\n  CanHaveImg: boolean;\r\n  CanHaveFiles: boolean;\r\n}\r\n\r\nexport interface SelectOption {\r\n  Active?: boolean;\r\n  Text: string;\r\n  Val: string;\r\n  MetaData?: any;\r\n  OptionsMetadataJson?: string;\r\n}\r\n\r\nexport interface SelectOptionMetaData {\r\n  ColourHex?: string;\r\n}\r\n\r\nexport interface CascadeOption { \r\n  ParentVal: string, \r\n  Text: string, \r\n  Val: string \r\n}",
            "properties": [
                {
                    "name": "ActionerText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "CanBeEditableDocument",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "CannotAddSelfAsActioner",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "ColourHex",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "HasSiteList",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "QueueSelectorTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "SiteListTitle",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "UsesRadioGroupTable",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 50
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "SiteDocumentOperative",
            "id": "interface-SiteDocumentOperative-250dc99fceadc7eca47ca221235703a249f26304444d268eef8263bf5b53f59067a6a00220b711b1237d825b120356cbcb15a66aeb71497dcadbf8410246c2ba",
            "file": "src/app/core/stores/site-document/models/site-document.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface SiteDocument {\r\n  DocumentID: number;\r\n  DocumentTitle: string;\r\n  Pinned: boolean;\r\n  Pages: Page[];\r\n  AllowAnon: boolean;\r\n  RemainAnon: boolean;\r\n  Queues: { Key: string, Value: string }[],\r\n  DocumentGroup: string;\r\n  DocumentCategory?: number;\r\n  CanCreateHotspot: boolean;\r\n  CanBeAddedToHotspot?: boolean;\r\n  CanBeSavedAsDraft?: boolean;\r\n  CanAddActionerFromApp: boolean;\r\n  CanAddCategoryActioner: boolean;\r\n  CanCreateAssetsFromDocument: boolean;\r\n  CanHaveQueueDuration: boolean;\r\n  CanHaveDocumentLevelImages: boolean;\r\n  CanHaveDocLevelPhotoRoll: boolean;\r\n  CurrentActionerOperativeID?: number;\r\n  CompanyActionerId?: number;\r\n  ShowDocLevelPhotoButtonAtStartOfDoc: boolean;\r\n  CanAddAsset?: boolean;\r\n  CanAddOperative?: boolean;\r\n  CanHaveCompanyActioner: boolean;\r\n  MetaData: Partial<SiteDocumentMetaData>;\r\n  SiteId?: number;\r\n  AutoQueueID?: number;\r\n  QueueDuration?: {\r\n    Value: number;\r\n    Type: string;\r\n  }\r\n}\r\n\r\nexport interface SiteDocumentImage {\r\n  DocumentId: number,\r\n  DocumentSubmissionId: number,\r\n  Base64: string,\r\n  ImageNo: number\r\n}\r\n\r\nexport interface SiteDocumentMetaData {\r\n  ActionerText: string;\r\n  CanBeEditableDocument: boolean;\r\n  CannotAddSelfAsActioner: boolean;\r\n  ColourHex: string;\r\n  QueueSelectorTitle: string;\r\n  HasSiteList: boolean;\r\n  SiteListTitle: string;\r\n  UsesRadioGroupTable: boolean;\r\n}\r\n\r\nexport interface SiteDocumentAsset {\r\n  AssetID: number;\r\n  Tag: string;\r\n  Name: string;\r\n  QRCode?: string;\r\n  TemplateID?: number;\r\n}\r\n\r\nexport interface SiteDocumentOperative {\r\n  AttendeeID: number;\r\n  Name: string;\r\n  DateAttended: Date;\r\n}\r\n\r\nexport interface Page {\r\n  PageID: number;\r\n  PageTitle: string;\r\n  Sections: Section[]\r\n}\r\n\r\nexport interface Section {\r\n  SectionID: number;\r\n  SectionNo: number;\r\n  SectionTitle: string;\r\n  Questions: Question[];\r\n  SectionQuestiontype: QuestionType;\r\n  IsRepeatable: boolean;\r\n  TableTitles: string[];\r\n}\r\n\r\nexport enum QuestionType {\r\n  Label = 0,\r\n  Checkbox = 1,\r\n  RadioGroup = 2,\r\n  Textbox = 3,\r\n  TextArea = 4,\r\n  Select = 5,\r\n  CheckboxTextbox = 6,\r\n  RadioGroupTextbox = 7,\r\n  Date = 8,\r\n  DateTime = 9,\r\n  OperativeList = 10,\r\n  WallOfText = 11,\r\n  Number = 12,\r\n  CascadeDropdown = 13,\r\n  LinkedBool = 16,\r\n  AssetList = 17,\r\n  LinkedDates = 18,\r\n  Signature = 19,\r\n  CompanySelect = 21,\r\n  AreaSelect = 22,\r\n  AssetGroupsAndTypes = 25,\r\n  AssetInspectionSchedule = 26,\r\n  ProjectSelect = 27,\r\n  RamsSelect = 28,\r\n  SelectText = 29,\r\n  CascadeDropdownText = 30,\r\n  MultiCascade = 31,\r\n  Time = 32,\r\n  LinkedTimes = 33,\r\n  HRASelect = 34,\r\n  MultiCheckbox = 35,\r\n  LinkedDateAndTime = 36\r\n}\r\n\r\nexport interface Question {\r\n  QuestionID: number;\r\n  QuestionText: string;\r\n  CascadeOptionsText: string;\r\n  CommentsText: string;\r\n  Assets: SiteDocumentAsset[];\r\n  Operatives: SiteDocumentOperative[];\r\n  Required: boolean;\r\n  AnswerText: string;\r\n  DateAndTime: Date;\r\n  DateAndTime2: Date;\r\n  NumberVal?: number;\r\n  OptionVal?: string | null;\r\n  Options: SelectOption[];\r\n  CascadeOptions: CascadeOption[];\r\n  CascadeOptionVal?: string | null;\r\n  YesNoNA: boolean | null;\r\n  CanHaveImg: boolean;\r\n  CanHaveFiles: boolean;\r\n}\r\n\r\nexport interface SelectOption {\r\n  Active?: boolean;\r\n  Text: string;\r\n  Val: string;\r\n  MetaData?: any;\r\n  OptionsMetadataJson?: string;\r\n}\r\n\r\nexport interface SelectOptionMetaData {\r\n  ColourHex?: string;\r\n}\r\n\r\nexport interface CascadeOption { \r\n  ParentVal: string, \r\n  Text: string, \r\n  Val: string \r\n}",
            "properties": [
                {
                    "name": "AttendeeID",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "DateAttended",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 64
                },
                {
                    "name": "Name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 63
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "TargetEvent",
            "id": "interface-TargetEvent-d8ce4e5a23f6985bd019f1bec5424336d6270524c10493fcde06ec6a16c08d27300fc7b01504d272ab1fb52cc4f4bd58ae56bdfe79d6250aafbf2aa964c4e293",
            "file": "src/app/shared/models/events/target-event.model.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface TargetEvent<T> {\r\n  target: T\r\n}\r\n",
            "properties": [
                {
                    "name": "target",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "T",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "TemplateMenuItem",
            "id": "interface-TemplateMenuItem-c2be98fffa7ec3ef9d374c97515526030466fc8b8f692ec4c721d9c75e06b55b91db2588bc54399f129804f9964bc9e7d2971d09806048451193ca2c25e1224b",
            "file": "src/app/core/stores/site-document/form-filler/form-filler.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\r\nimport { inject, Injectable } from \"@angular/core\";\r\nimport { createStore } from \"@ngneat/elf\";\r\nimport { entitiesPropsFactory } from \"@ngneat/elf-entities\";\r\nimport { Observable, switchMap } from \"rxjs\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { withWritingDocument } from \"../props\";\r\nimport { writingDocumentAdapter } from \"../adapters/writing-document.adapter\";\r\nimport { SiteDocument } from \"../models\";\r\n\r\nexport interface TemplateMenuItem {\r\n  Id: number;\r\n  Title: string;\r\n  SiteDocumentType: number;\r\n  RevNo: number;\r\n}\r\n\r\nconst { withTemplateMenuEntities } = entitiesPropsFactory(\"templateMenu\");\r\n\r\nconst store = createStore(\r\n  { name: \"form-filler\" },\r\n  withWritingDocument(null as SiteDocument | null),\r\n  withTemplateMenuEntities<TemplateMenuItem, \"Id\">({ idKey: \"Id\", initialValue: [] })\r\n);\r\n\r\nconst { \r\n  selectWritingDocument, \r\n  setWritingDocument \r\n} = writingDocumentAdapter(store);\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class FormFillerStore {\r\n  protected http = inject(HttpClient);\r\n\r\n  writingDocument$ = selectWritingDocument();\r\n\r\n  getTemplateRequest$ = (action$: Observable<number>) => action$.pipe(\r\n    switchMap(id => this.http.get<SiteDocument>(`${environment.siteDocsApi}/TemplateApi/GetDocumentTemplate`, {\r\n      params: {\r\n        id: id!.toString()\r\n      }\r\n    })),\r\n    setWritingDocument()\r\n  );\r\n\r\n  getTemplatesRequest$ = () => this.http.get<SiteDocument[]>(`${environment.siteDocsApi}/TemplateApi/`).pipe(\r\n    \r\n  );\r\n\r\n  submitDocument$ = (action$: Observable<SiteDocument>) => action$.pipe(\r\n    switchMap(doc => this.http.post<number>(`${environment.siteDocsApi}/TemplateApi/UploadDocument`, doc))\r\n  );\r\n}",
            "properties": [
                {
                    "name": "Id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "RevNo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "SiteDocumentType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "Title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        },
        {
            "name": "TemplateMenuItem",
            "id": "interface-TemplateMenuItem-c86354364b6b3d193563e8480ebd82ec9f5afd4b337ff3335f21f07773abf5051d3e7e713c849024a59fc6b33242400400e65266ffa8e384125d7cbc99ddda10-1",
            "file": "src/app/core/stores/site-document/form-filler/adapters/template-menu.adapter.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Store, StoreDef } from \"@ngneat/elf\";\r\nimport { entitiesPropsFactory, selectAllEntities, setEntities } from \"@ngneat/elf-entities\";\r\nimport { pipeTap } from \"src/app/shared/rxjs\";\r\n\r\nexport interface TemplateMenuItem {\r\n  Id: number;\r\n  Title: string;\r\n  SiteDocumentType: number;\r\n  RevNo: number;\r\n}\r\n\r\nconst { templateMenuEntitiesRef, withTemplateMenuEntities } = entitiesPropsFactory(\"templateMenu\");\r\n\r\nexport { withTemplateMenuEntities }\r\n\r\nexport function templateMenuAdapter(store: Store<StoreDef>) {\r\n  return {\r\n    selectTemplateMenu: () => store.pipe(selectAllEntities({ ref: templateMenuEntitiesRef })),\r\n    setTemplateMenu: pipeTap<TemplateMenuItem[]>(templates => store.update(setEntities(templates, { ref: templateMenuEntitiesRef })))\r\n  }\r\n}",
            "properties": [
                {
                    "name": "Id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 6
                },
                {
                    "name": "RevNo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "SiteDocumentType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 8
                },
                {
                    "name": "Title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 7
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "TemplateMenuItem-1"
        },
        {
            "name": "User",
            "id": "interface-User-d9c4e58eb5e3ed0204b1567826f19b300f2ed701d45ff500e4041032f49807e638d2317ce8199f5ff1b284addc3b0f51613cd29a6feea064f155875afa1b3a74",
            "file": "src/app/core/stores/user/user.store.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\r\nimport { inject, Injectable } from \"@angular/core\";\r\nimport { createStore, propsFactory } from \"@ngneat/elf\";\r\nimport { localStorageStrategy, persistState } from \"@ngneat/elf-persist-state\";\r\nimport { combineLatest, Observable, switchMap } from \"rxjs\";\r\nimport { getDeviceString, getDeviceUuid } from \"src/app/shared/plugins/device.plugin\";\r\nimport { pipeTap, selector } from \"src/app/shared/rxjs\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\nexport interface User {\r\n  Id: number,\r\n  LastName: string,\r\n  FirstName: string,\r\n  CompanyId: number,\r\n  CompanyName: string,\r\n  Colour: string,\r\n  FontColour: string,\r\n  Token: string,\r\n  Pin: string,\r\n  Site: Site,\r\n  DocumentListingTab: \"Recent\" | \"Pinned\" | \"Issued\",\r\n  IsInSupervisorRole: boolean,\r\n  HasRegisteredPlayerId: number,\r\n  HasAssets: boolean,\r\n  HasAssetCreation: boolean,\r\n  HasDocQrCodes: boolean,\r\n  HasHadWifiPreferenceChecked: boolean,\r\n  HasUpdateableDocs: boolean,\r\n  HasDocQueues: boolean,\r\n  HasCompanies: boolean,\r\n  HasDataTouchAreas: boolean,\r\n  HasQueueSupervisors: boolean,\r\n  HasCategoryActioners: boolean,\r\n  UserSites: Site[],\r\n  UserCompanies: Company[],\r\n  HasPlanningMeeting: boolean,\r\n  HasReviewMeeting: boolean,\r\n  HasCollabPlanning: boolean,\r\n  HasRandomOperativebarcodes: boolean,\r\n  HasLiveQueues: boolean,\r\n  HasResAreas:boolean,\r\n  HasHideOperativeScan: boolean,\r\n  HasSites: boolean,\r\n  HasDocDrop: boolean,\r\n  HasBasicOpInfo: boolean,\r\n  HasSimpleSwipes: boolean,\r\n  HasProjectsOnDocDrop: boolean,\r\n  HasCustomLookups: boolean,\r\n  HasTemplateSender: boolean,\r\n  HasMyOpInfo: boolean,\r\n  HasViewDocumentAsSinglePage: boolean,\r\n  HasShowParentAnswersOnChildDoc: boolean,\r\n  HasCompanySelectWithOtherOption:boolean,\r\n  HideSearchOnOperativeInfo: boolean,\r\n  HideSearchOnOperativeAccess: boolean,\r\n  CanAddOperativesToDocsByName: boolean,\r\n  HasRamsList: boolean,\r\n  CanAddAsssetsToDocsByName: boolean,\r\n  ShowWeightingsOnApp: boolean,\r\n  TemplatesLastUpdate: Date,\r\n  Url: string,\r\n  UseFingerReader: boolean,\r\n  SelectedSite?: Site,\r\n  NavTab: \"Modules\" | \"Documents\",\r\n  NumberOfTemplates: number,\r\n  DownloadedTemplates: number,\r\n  //PermittedCategories: DocCategory[],\r\n  HasOperativeInfo: boolean,\r\n  CanOffHireAssets: boolean,\r\n  CanViewOtherOperativeInfo: boolean,\r\n  CanModifyOperativeQRs: boolean,\r\n  CanAddQRsToAssets: boolean\r\n}\r\n\r\nexport interface Site {\r\n  Id: number,\r\n  Name: string\r\n}\r\n\r\nexport interface Company {\r\n  Id: number,\r\n  Text: string\r\n}\r\n\r\nconst {\r\n  withAppUser, \r\n  selectAppUser, \r\n  setAppUser\r\n} = propsFactory(\"appUser\", { initialValue: null as User | null });\r\n\r\nconst store = createStore(\r\n  { name: \"user\" },\r\n  withAppUser()\r\n);\r\n\r\nconst userSelector = selector(store.pipe(selectAppUser()));\r\nconst sites$ = userSelector(user => user?.UserSites || []);\r\n\r\nconst setAppUserUpdate = pipeTap<User>(user => store.update(setAppUser(user)));\r\n\r\npersistState(store, {\r\n  key: \"user\",\r\n  storage: localStorageStrategy\r\n});\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class UserStore {\r\n  httpClient = inject(HttpClient);\r\n\r\n  user$ = store.pipe(selectAppUser());\r\n  sites$ = sites$;\r\n  companies$ = userSelector(user => user?.UserCompanies || []);\r\n\r\n  getUserRequest$ = (action$: Observable<{ token: string, pin: string }>) => combineLatest({\r\n    login: action$,\r\n    deviceId: getDeviceUuid(),\r\n    deviceString: getDeviceString() \r\n  }).pipe(\r\n    switchMap(({ login, deviceId, deviceString }) => this.httpClient.post<User>(`${environment.siteDocsApi}/LoginApi/LoginSiteDocumentsApp`, {\r\n      deviceId,\r\n      deviceString\r\n    }, {\r\n      headers: {\r\n        appToken: login.token,\r\n        appPin: login.pin\r\n      }\r\n    })),\r\n    setAppUserUpdate()\r\n  );\r\n}",
            "properties": [
                {
                    "name": "CanAddAsssetsToDocsByName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "CanAddOperativesToDocsByName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "CanAddQRsToAssets",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 72
                },
                {
                    "name": "CanModifyOperativeQRs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 71
                },
                {
                    "name": "CanOffHireAssets",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 69
                },
                {
                    "name": "CanViewOtherOperativeInfo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 70
                },
                {
                    "name": "Colour",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 16
                },
                {
                    "name": "CompanyId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 14
                },
                {
                    "name": "CompanyName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 15
                },
                {
                    "name": "DocumentListingTab",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"Recent\" | \"Pinned\" | \"Issued\"",
                    "optional": false,
                    "description": "",
                    "line": 21
                },
                {
                    "name": "DownloadedTemplates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 66
                },
                {
                    "name": "FirstName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "FontColour",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "HasAssetCreation",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 25
                },
                {
                    "name": "HasAssets",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "HasBasicOpInfo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "HasCategoryActioners",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 33
                },
                {
                    "name": "HasCollabPlanning",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "HasCompanies",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 30
                },
                {
                    "name": "HasCompanySelectWithOtherOption",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 53
                },
                {
                    "name": "HasCustomLookups",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 48
                },
                {
                    "name": "HasDataTouchAreas",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "HasDocDrop",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 44
                },
                {
                    "name": "HasDocQrCodes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 26
                },
                {
                    "name": "HasDocQueues",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "HasHadWifiPreferenceChecked",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "HasHideOperativeScan",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 42
                },
                {
                    "name": "HasLiveQueues",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "HasMyOpInfo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "HasOperativeInfo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 68
                },
                {
                    "name": "HasPlanningMeeting",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "HasProjectsOnDocDrop",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 47
                },
                {
                    "name": "HasQueueSupervisors",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 32
                },
                {
                    "name": "HasRamsList",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "HasRandomOperativebarcodes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "HasRegisteredPlayerId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "HasResAreas",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "HasReviewMeeting",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "HasShowParentAnswersOnChildDoc",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "HasSimpleSwipes",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "HasSites",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "HasTemplateSender",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "HasUpdateableDocs",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "HasViewDocumentAsSinglePage",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 51
                },
                {
                    "name": "HideSearchOnOperativeAccess",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 55
                },
                {
                    "name": "HideSearchOnOperativeInfo",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "Id",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 11
                },
                {
                    "name": "IsInSupervisorRole",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "LastName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 12
                },
                {
                    "name": "NavTab",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"Modules\" | \"Documents\"",
                    "optional": false,
                    "description": "",
                    "line": 64
                },
                {
                    "name": "NumberOfTemplates",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "number",
                    "optional": false,
                    "description": "",
                    "line": 65
                },
                {
                    "name": "Pin",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 19
                },
                {
                    "name": "SelectedSite",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Site",
                    "optional": true,
                    "description": "",
                    "line": 63
                },
                {
                    "name": "ShowWeightingsOnApp",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 59
                },
                {
                    "name": "Site",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Site",
                    "optional": false,
                    "description": "",
                    "line": 20
                },
                {
                    "name": "TemplatesLastUpdate",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Date",
                    "optional": false,
                    "description": "",
                    "line": 60
                },
                {
                    "name": "Token",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 18
                },
                {
                    "name": "Url",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "UseFingerReader",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "UserCompanies",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Company[]",
                    "optional": false,
                    "description": "",
                    "line": 35
                },
                {
                    "name": "UserSites",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Site[]",
                    "optional": false,
                    "description": "",
                    "line": 34
                }
            ],
            "indexSignatures": [],
            "kind": 165,
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "AssetStore",
            "id": "injectable-AssetStore-1a8a17aa73c85a4e408758989ea79251b2d6e599a31e4e4b38ed3a1a49d368ac6ec9dac1d94753d285c727f5cbbeba800edee9ced646f4d648a86c129b6f8abe",
            "file": "src/app/core/stores/asset/asset.store.ts",
            "properties": [
                {
                    "name": "assets$",
                    "defaultValue": "store.pipe(selectAllEntities())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\r\nimport { createStore } from \"@ngneat/elf\";\r\nimport { selectAllEntities, withEntities } from \"@ngneat/elf-entities\";\r\n\r\nexport interface Asset {\r\n  Id : number,\r\n  Registration: string\r\n}\r\n\r\nconst store = createStore(\r\n  { name: \"assets\" },\r\n  withEntities<Asset, \"Id\">({ idKey: \"Id\" })\r\n);\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class AssetStore {\r\n  assets$ = store.pipe(selectAllEntities());\r\n}\r\n",
            "type": "injectable"
        },
        {
            "name": "CategoryActionersStore",
            "id": "injectable-CategoryActionersStore-42f16afc6748431c0a69b740335336a0f23d0c571b1bc3521bef9b27932b93f2ff8f2f0b9fc2e210b44b0585b64faeac40950e5e9a9fac61b7bfb6c4642715ff",
            "file": "src/app/core/stores/category-actioners/category-actioners.store.ts",
            "properties": [
                {
                    "name": "categoryActioners$",
                    "defaultValue": "store.pipe(selectAllEntities())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "categoryActionersById$",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 23
                },
                {
                    "name": "downloadCategoryActioners$",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                },
                {
                    "name": "http",
                    "defaultValue": "inject(HttpClient)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 20
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable, inject } from \"@angular/core\";\r\nimport { createStore } from \"@ngneat/elf\";\r\nimport { selectAllEntities, withEntities } from \"@ngneat/elf-entities\";\r\nimport { map } from \"rxjs\";\r\n\r\nexport interface CategoryActioner {\r\n  Id: number,\r\n  Name: string,\r\n  CategoryId: number\r\n}\r\n\r\nconst store = createStore(\r\n  { name: \"site-documents\" },\r\n  withEntities<CategoryActioner, \"Id\">({ idKey: \"Id\" })\r\n);\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class CategoryActionersStore {\r\n  http = inject(HttpClient);\r\n\r\n  categoryActioners$ = store.pipe(selectAllEntities());\r\n  categoryActionersById$ = (categoryId: number) => this.categoryActioners$.pipe(\r\n    map(catActioners => catActioners.filter(ca => ca.CategoryId === categoryId))\r\n  );\r\n\r\n  downloadCategoryActioners$ = (siteId: number) => this.http.get<CategoryActioner[]>(\"api/LoginApi/GetCategoryActioners\", {\r\n    params: {\r\n      siteId: siteId.toString()\r\n    }\r\n  });\r\n}\r\n",
            "type": "injectable"
        },
        {
            "name": "DocumentBuilderRoute",
            "id": "injectable-DocumentBuilderRoute-3fc9e85893f28f54772834cb9bb8af2b75ed7702a62cdb8e95295f3d0d8f9e892738c2ae7aed232c57b6bd70a870491ebf15b145d62b4c41dc94f9b3a5520040",
            "file": "src/app/core/pages/document-builder/document-builder.route.ts",
            "properties": [
                {
                    "name": "documentIds$",
                    "defaultValue": "this.route.queryParams.pipe(\r\n    map(params => JSON.parse(params[\"ids\"]) as number[])\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9
                },
                {
                    "name": "lastDocumentId$",
                    "defaultValue": "this.documentIds$.pipe(\r\n    map(ids => ids[ids.length - 1] || 0),\r\n    filter(id => id > 0)\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                },
                {
                    "name": "route",
                    "defaultValue": "inject(ActivatedRoute)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 7,
                    "modifierKind": [
                        122,
                        144
                    ]
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable, inject } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { filter, map } from \"rxjs\";\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class DocumentBuilderRoute {\r\n  protected readonly route = inject(ActivatedRoute);\r\n  \r\n  documentIds$ = this.route.queryParams.pipe(\r\n    map(params => JSON.parse(params[\"ids\"]) as number[])\r\n  );\r\n\r\n  lastDocumentId$ = this.documentIds$.pipe(\r\n    map(ids => ids[ids.length - 1] || 0),\r\n    filter(id => id > 0)\r\n  );\r\n}",
            "type": "injectable"
        },
        {
            "name": "FormFillerStore",
            "id": "injectable-FormFillerStore-c2be98fffa7ec3ef9d374c97515526030466fc8b8f692ec4c721d9c75e06b55b91db2588bc54399f129804f9964bc9e7d2971d09806048451193ca2c25e1224b",
            "file": "src/app/core/stores/site-document/form-filler/form-filler.store.ts",
            "properties": [
                {
                    "name": "getTemplateRequest$",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 37
                },
                {
                    "name": "getTemplatesRequest$",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 46
                },
                {
                    "name": "http",
                    "defaultValue": "inject(HttpClient)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 33,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "submitDocument$",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "writingDocument$",
                    "defaultValue": "selectWritingDocument()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 35
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\r\nimport { inject, Injectable } from \"@angular/core\";\r\nimport { createStore } from \"@ngneat/elf\";\r\nimport { entitiesPropsFactory } from \"@ngneat/elf-entities\";\r\nimport { Observable, switchMap } from \"rxjs\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { withWritingDocument } from \"../props\";\r\nimport { writingDocumentAdapter } from \"../adapters/writing-document.adapter\";\r\nimport { SiteDocument } from \"../models\";\r\n\r\nexport interface TemplateMenuItem {\r\n  Id: number;\r\n  Title: string;\r\n  SiteDocumentType: number;\r\n  RevNo: number;\r\n}\r\n\r\nconst { withTemplateMenuEntities } = entitiesPropsFactory(\"templateMenu\");\r\n\r\nconst store = createStore(\r\n  { name: \"form-filler\" },\r\n  withWritingDocument(null as SiteDocument | null),\r\n  withTemplateMenuEntities<TemplateMenuItem, \"Id\">({ idKey: \"Id\", initialValue: [] })\r\n);\r\n\r\nconst { \r\n  selectWritingDocument, \r\n  setWritingDocument \r\n} = writingDocumentAdapter(store);\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class FormFillerStore {\r\n  protected http = inject(HttpClient);\r\n\r\n  writingDocument$ = selectWritingDocument();\r\n\r\n  getTemplateRequest$ = (action$: Observable<number>) => action$.pipe(\r\n    switchMap(id => this.http.get<SiteDocument>(`${environment.siteDocsApi}/TemplateApi/GetDocumentTemplate`, {\r\n      params: {\r\n        id: id!.toString()\r\n      }\r\n    })),\r\n    setWritingDocument()\r\n  );\r\n\r\n  getTemplatesRequest$ = () => this.http.get<SiteDocument[]>(`${environment.siteDocsApi}/TemplateApi/`).pipe(\r\n    \r\n  );\r\n\r\n  submitDocument$ = (action$: Observable<SiteDocument>) => action$.pipe(\r\n    switchMap(doc => this.http.post<number>(`${environment.siteDocsApi}/TemplateApi/UploadDocument`, doc))\r\n  );\r\n}",
            "type": "injectable"
        },
        {
            "name": "LiveQueuesStore",
            "id": "injectable-LiveQueuesStore-6ae04e27af71dc6fe72681cc0f7599954569a976ca8f41fd2987179a13271d2ad1cd908773969b69b1112191fcf8eb5a96be7ee5e391f9ae0412b85cc6edfb1e",
            "file": "src/app/core/stores/live-queues/live-queues.store.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\r\n\r\n// const store = createStore(\r\n//   { name: \"live-queues\" },\r\n//   withProps<{ hideEmptyQueues: boolean }>({\r\n//     hideEmptyQueues: false\r\n//   })\r\n// );\r\n\r\n// const toggleHideEmptyQueues = () => store.update(\r\n//   setProp(\"hideEmptyQueues\", prop => !prop)\r\n// );\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class LiveQueuesStore {\r\n  \r\n}\r\n",
            "type": "injectable"
        },
        {
            "name": "OneSignalService",
            "id": "injectable-OneSignalService-46c025d481e6a4ace2167dfff7f2c154709c9de0f0250d36c02ff704af5c0a183ac99699a5c6a67f74957ffe71ee3d543e2844ff238727205c0b77d88c35213f",
            "file": "src/app/shared/services/onesignal/onesignal.service.ts",
            "properties": [
                {
                    "name": "notificationReceived$",
                    "defaultValue": "new Subject<NotificationReceivedEvent>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13,
                    "modifierKind": [
                        122
                    ]
                },
                {
                    "name": "toastCtrl",
                    "defaultValue": "inject(ToastController)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 12,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methods": [
                {
                    "name": "startup",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { inject, Injectable } from \"@angular/core\";\r\nimport { Device } from \"@capacitor/device\";\r\nimport { ToastController } from \"@ionic/angular\";\r\nimport OneSignal from \"onesignal-cordova-plugin\";\r\nimport NotificationReceivedEvent from \"onesignal-cordova-plugin/dist/NotificationReceivedEvent\";\r\nimport { map, Subject, switchMap, tap } from \"rxjs\";\r\n\r\n@Injectable({\r\n  providedIn: \"root\"\r\n})\r\nexport class OneSignalService {\r\n  protected toastCtrl = inject(ToastController);\r\n  protected notificationReceived$ = new Subject<NotificationReceivedEvent>();\r\n\r\n  async startup() {\r\n    const device = await Device.getInfo();\r\n\r\n    if (device.platform === \"web\")\r\n      return;\r\n\r\n    this.notificationReceived$.pipe(\r\n      map(nr => nr.getNotification()),\r\n      switchMap(notification => this.toastCtrl.create({\r\n        header: notification.title,\r\n        message: notification.body,\r\n        duration: 5000,\r\n        position: \"top\"\r\n      })),\r\n      tap(toast => toast.present())\r\n    )\r\n    .subscribe();\r\n\r\n    OneSignal.setAppId(\"\");\r\n\r\n    OneSignal.promptForPushNotificationsWithUserResponse(() => \r\n      OneSignal.setNotificationWillShowInForegroundHandler(notification => this.notificationReceived$.next(notification))\r\n    );\r\n  }\r\n}\r\n",
            "type": "injectable"
        },
        {
            "name": "OperativesStore",
            "id": "injectable-OperativesStore-91556e30f45bb35500235156580cdd5001d82990d959ec1360343f8ea5e07f00f6aabfb8f55e3b3890c5062d28956f08d90c0ad3f60c9686df6f84eab48733ab",
            "file": "src/app/core/stores/operative/operatives.store.ts",
            "properties": [
                {
                    "name": "addOperative",
                    "defaultValue": "addOperative",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 79
                },
                {
                    "name": "getSearchResults",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 82
                },
                {
                    "name": "httpClient",
                    "defaultValue": "inject(HttpClient)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 73
                },
                {
                    "name": "operatives$",
                    "defaultValue": "operatives$()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 75
                },
                {
                    "name": "searchResults$",
                    "defaultValue": "searchResults$()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 76
                },
                {
                    "name": "searchResultsIsPending$",
                    "defaultValue": "store.pipe(selectIsRequestPending(\"operativesSearch\"))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 77
                },
                {
                    "name": "setSearchResults",
                    "defaultValue": "setSearchResults",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 80
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable, inject } from \"@angular/core\"\r\nimport { createStore } from \"@ngneat/elf\";\r\nimport { addEntities, withEntities } from \"@ngneat/elf-entities\";\r\nimport { localStorageStrategy, persistState } from \"@ngneat/elf-persist-state\";\r\nimport { searchResultsAdapter } from \"src/app/shared/states/search-results.adapter\";\r\nimport { operativesAdapter } from \"./adapters/operatives.adapter\";\r\nimport { tap } from \"rxjs\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { environment } from \"src/environments/environment\";\r\nimport { createRequestsStatusOperator, selectIsRequestPending, updateRequestStatus, withRequestsStatus } from \"@ngneat/elf-requests\";\r\n\r\nexport interface Operative {\r\n  ID: number,\r\n  Name: string\r\n}\r\n\r\nexport interface OperativeSearchParams {\r\n  search: string,\r\n  noAppLimit: boolean,\r\n  siteId?: number\r\n}\r\n\r\nexport interface OperativeSearchResult {\r\n  ID: number,\r\n  Name: string,\r\n  CompanyName: string,\r\n  HasQRCode: boolean,\r\n  HasAppAccess: boolean\r\n}\r\n\r\nconst {\r\n  SearchResultEntitiesRef,\r\n  withSearchResultEntities,\r\n  searchResultsAdapt\r\n} = searchResultsAdapter();\r\n\r\n// function withTapUpdate(): PropsFactory<{ tapUpdate: object }, EmptyConfig> {\r\n//   return {\r\n//     props: {\r\n//       tapUpdate: pipe(\r\n//         tap()\r\n//       )\r\n//     }\r\n//   }\r\n// }\r\n\r\nconst store = createStore(\r\n  { name: \"operatives\" },\r\n  withEntities<Operative, \"ID\">({ idKey: \"ID\" }),\r\n  withSearchResultEntities<OperativeSearchResult, \"ID\">({ idKey: \"ID\" }),\r\n  withRequestsStatus<\"operativesSearch\">()\r\n);\r\n\r\nconst { \r\n  operatives$, \r\n  addOperative,\r\n  searchResults$,\r\n  setSearchResults\r\n} = {\r\n  ...operativesAdapter(store),\r\n  ...searchResultsAdapt(store)\r\n}\r\n\r\nconst trackRequestStatus = createRequestsStatusOperator(store);\r\n\r\npersistState(store, {\r\n  key: \"operatives\",\r\n  storage: localStorageStrategy\r\n});\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class OperativesStore {\r\n  httpClient = inject(HttpClient);\r\n\r\n  operatives$ = operatives$();\r\n  searchResults$ = searchResults$();\r\n  searchResultsIsPending$ = store.pipe(selectIsRequestPending(\"operativesSearch\"));\r\n\r\n  addOperative = addOperative;\r\n  setSearchResults = setSearchResults;\r\n\r\n  getSearchResults = (params: OperativeSearchParams) => this.httpClient.get<OperativeSearchResult[]>(`${environment.siteDocsApi}/OperativeApi/GetOperativesByName`, {\r\n    params: {\r\n      search: params.search,\r\n      noAppLimit: params.noAppLimit,\r\n      siteId: params.siteId?.toString() || \"null\"\r\n    }\r\n  }).pipe(\r\n    trackRequestStatus(\"operativesSearch\"),\r\n    tap(searchResults => store.update(\r\n      addEntities(searchResults, { ref: SearchResultEntitiesRef }),\r\n      updateRequestStatus(\"operativesSearch\", \"success\")\r\n    ))\r\n  );\r\n}",
            "type": "injectable"
        },
        {
            "name": "ResponsibilityAreaTypesStore",
            "id": "injectable-ResponsibilityAreaTypesStore-939de3da069ba66b6240a9296476df2f670a51cbe802dc1846bbf6fbfea2389c84b5753e87e9023e3428fa08653289eeb418e48939e792a252b3ed0722c45877",
            "file": "src/app/core/stores/responsibility-area-types/responsibility-area-types.store.ts",
            "properties": [
                {
                    "name": "responsibilityAreaTypeById$",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "responsibilityAreaTypes$",
                    "defaultValue": "store.pipe(selectAllEntities())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 27
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\r\nimport { createStore } from \"@ngneat/elf\";\r\nimport { selectAllEntities, withEntities } from \"@ngneat/elf-entities\";\r\nimport { map } from \"rxjs\";\r\n\r\nexport interface ResponsibilityArea {\r\n  Id: number,\r\n  Name: string,\r\n  DocResAreaTypeId: number,\r\n  SiteId?: number\r\n}\r\n\r\nexport interface ResponsibilityAreaType {\r\n  Id: number,\r\n  TypeName: string,\r\n  AppQuestionText: string,\r\n  Areas: ResponsibilityArea[]\r\n}\r\n\r\nconst store = createStore(\r\n  { name: \"responsibility-area-types\" },\r\n  withEntities<ResponsibilityAreaType, \"Id\">({ idKey: \"Id\" })\r\n);\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class ResponsibilityAreaTypesStore {\r\n  responsibilityAreaTypes$ = store.pipe(selectAllEntities());\r\n  responsibilityAreaTypeById$ = (id: number) => this.responsibilityAreaTypes$.pipe(\r\n    map(resAreaTypes => resAreaTypes.find(t => t.Id === id))\r\n  );\r\n}\r\n",
            "type": "injectable"
        },
        {
            "name": "SiteDocumentImageStore",
            "id": "injectable-SiteDocumentImageStore-5e3bce50f5da91d19f468f57c0510bc0c96ddb8bd6bc9a2b6d3258d722107c267ee5f013f4ce297f8258c0da0d91e2a2f8102fc9389fe0d4a9acf128aed2ab4f",
            "file": "src/app/core/stores/site-document-image/site-document-image.store.ts",
            "properties": [],
            "methods": [
                {
                    "name": "useImages",
                    "args": [
                        {
                            "name": "document",
                            "type": "SiteDocument",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "{}",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "document",
                            "type": "SiteDocument",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\nimport { createStore } from \"@ngneat/elf\";\nimport { addEntities, deleteEntitiesByPredicate, selectAllEntitiesApply, withEntities } from \"@ngneat/elf-entities\";\nimport { SiteDocument, SiteDocumentImage } from \"../site-document/models/site-document.model\";\n\nconst store = createStore(\n  { name: \"site-document-image\" }, \n  withEntities<SiteDocumentImage, \"DocumentId\">({ idKey: \"DocumentId\" })\n);\n\n@Injectable({ providedIn: \"root\" })\nexport class SiteDocumentImageStore {\n  useImages(document: SiteDocument) {\n    return [\n      store.pipe(\n        selectAllEntitiesApply({\n          filterEntity: e => e.DocumentId === document.DocumentID\n        })\n      ),\n      \n      (images: string[]) => store.update(\n        deleteEntitiesByPredicate(e => e.DocumentId === document.DocumentID),\n        addEntities(images.map((img, idx) => \n          ({\n            DocumentId: document.DocumentID,\n            DocumentSubmissionId: 1,\n            Base64: img,\n            ImageNo: idx\n          })\n        ))\n      )\n    ]\n  }\n}\n",
            "type": "injectable"
        },
        {
            "name": "SiteDocumentStore",
            "id": "injectable-SiteDocumentStore-32acf99a56bcc331853319c5ceb3f3197263b857f3ecaefa5c6fc3969a4c55da811f630092fdc9227bec9b13f4233f929b40434265d03612bc184655db0f6b6b",
            "file": "src/app/core/stores/site-document/site-document.store.ts",
            "properties": [
                {
                    "name": "templates$",
                    "defaultValue": "store.pipe(selectAllEntities())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from \"@angular/core\";\r\nimport { createStore } from \"@ngneat/elf\";\r\nimport { selectAllEntities, withEntities } from \"@ngneat/elf-entities\";\r\nimport { SiteDocument } from \"./models\";\r\n\r\nconst store = createStore(\r\n  { name: \"site-documents\" },\r\n  withEntities<SiteDocument, \"DocumentID\">({ idKey: \"DocumentID\" })\r\n);\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class SiteDocumentStore {\r\n  templates$ = store.pipe(selectAllEntities());\r\n}",
            "type": "injectable"
        },
        {
            "name": "UserStore",
            "id": "injectable-UserStore-d9c4e58eb5e3ed0204b1567826f19b300f2ed701d45ff500e4041032f49807e638d2317ce8199f5ff1b284addc3b0f51613cd29a6feea064f155875afa1b3a74",
            "file": "src/app/core/stores/user/user.store.ts",
            "properties": [
                {
                    "name": "companies$",
                    "defaultValue": "userSelector(user => user?.UserCompanies || [])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 112
                },
                {
                    "name": "getUserRequest$",
                    "defaultValue": "() => {...}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 114
                },
                {
                    "name": "httpClient",
                    "defaultValue": "inject(HttpClient)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 108
                },
                {
                    "name": "sites$",
                    "defaultValue": "sites$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 111
                },
                {
                    "name": "user$",
                    "defaultValue": "store.pipe(selectAppUser())",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 110
                }
            ],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { HttpClient } from \"@angular/common/http\";\r\nimport { inject, Injectable } from \"@angular/core\";\r\nimport { createStore, propsFactory } from \"@ngneat/elf\";\r\nimport { localStorageStrategy, persistState } from \"@ngneat/elf-persist-state\";\r\nimport { combineLatest, Observable, switchMap } from \"rxjs\";\r\nimport { getDeviceString, getDeviceUuid } from \"src/app/shared/plugins/device.plugin\";\r\nimport { pipeTap, selector } from \"src/app/shared/rxjs\";\r\nimport { environment } from \"src/environments/environment\";\r\n\r\nexport interface User {\r\n  Id: number,\r\n  LastName: string,\r\n  FirstName: string,\r\n  CompanyId: number,\r\n  CompanyName: string,\r\n  Colour: string,\r\n  FontColour: string,\r\n  Token: string,\r\n  Pin: string,\r\n  Site: Site,\r\n  DocumentListingTab: \"Recent\" | \"Pinned\" | \"Issued\",\r\n  IsInSupervisorRole: boolean,\r\n  HasRegisteredPlayerId: number,\r\n  HasAssets: boolean,\r\n  HasAssetCreation: boolean,\r\n  HasDocQrCodes: boolean,\r\n  HasHadWifiPreferenceChecked: boolean,\r\n  HasUpdateableDocs: boolean,\r\n  HasDocQueues: boolean,\r\n  HasCompanies: boolean,\r\n  HasDataTouchAreas: boolean,\r\n  HasQueueSupervisors: boolean,\r\n  HasCategoryActioners: boolean,\r\n  UserSites: Site[],\r\n  UserCompanies: Company[],\r\n  HasPlanningMeeting: boolean,\r\n  HasReviewMeeting: boolean,\r\n  HasCollabPlanning: boolean,\r\n  HasRandomOperativebarcodes: boolean,\r\n  HasLiveQueues: boolean,\r\n  HasResAreas:boolean,\r\n  HasHideOperativeScan: boolean,\r\n  HasSites: boolean,\r\n  HasDocDrop: boolean,\r\n  HasBasicOpInfo: boolean,\r\n  HasSimpleSwipes: boolean,\r\n  HasProjectsOnDocDrop: boolean,\r\n  HasCustomLookups: boolean,\r\n  HasTemplateSender: boolean,\r\n  HasMyOpInfo: boolean,\r\n  HasViewDocumentAsSinglePage: boolean,\r\n  HasShowParentAnswersOnChildDoc: boolean,\r\n  HasCompanySelectWithOtherOption:boolean,\r\n  HideSearchOnOperativeInfo: boolean,\r\n  HideSearchOnOperativeAccess: boolean,\r\n  CanAddOperativesToDocsByName: boolean,\r\n  HasRamsList: boolean,\r\n  CanAddAsssetsToDocsByName: boolean,\r\n  ShowWeightingsOnApp: boolean,\r\n  TemplatesLastUpdate: Date,\r\n  Url: string,\r\n  UseFingerReader: boolean,\r\n  SelectedSite?: Site,\r\n  NavTab: \"Modules\" | \"Documents\",\r\n  NumberOfTemplates: number,\r\n  DownloadedTemplates: number,\r\n  //PermittedCategories: DocCategory[],\r\n  HasOperativeInfo: boolean,\r\n  CanOffHireAssets: boolean,\r\n  CanViewOtherOperativeInfo: boolean,\r\n  CanModifyOperativeQRs: boolean,\r\n  CanAddQRsToAssets: boolean\r\n}\r\n\r\nexport interface Site {\r\n  Id: number,\r\n  Name: string\r\n}\r\n\r\nexport interface Company {\r\n  Id: number,\r\n  Text: string\r\n}\r\n\r\nconst {\r\n  withAppUser, \r\n  selectAppUser, \r\n  setAppUser\r\n} = propsFactory(\"appUser\", { initialValue: null as User | null });\r\n\r\nconst store = createStore(\r\n  { name: \"user\" },\r\n  withAppUser()\r\n);\r\n\r\nconst userSelector = selector(store.pipe(selectAppUser()));\r\nconst sites$ = userSelector(user => user?.UserSites || []);\r\n\r\nconst setAppUserUpdate = pipeTap<User>(user => store.update(setAppUser(user)));\r\n\r\npersistState(store, {\r\n  key: \"user\",\r\n  storage: localStorageStrategy\r\n});\r\n\r\n@Injectable({ providedIn: \"root\" })\r\nexport class UserStore {\r\n  httpClient = inject(HttpClient);\r\n\r\n  user$ = store.pipe(selectAppUser());\r\n  sites$ = sites$;\r\n  companies$ = userSelector(user => user?.UserCompanies || []);\r\n\r\n  getUserRequest$ = (action$: Observable<{ token: string, pin: string }>) => combineLatest({\r\n    login: action$,\r\n    deviceId: getDeviceUuid(),\r\n    deviceString: getDeviceString() \r\n  }).pipe(\r\n    switchMap(({ login, deviceId, deviceString }) => this.httpClient.post<User>(`${environment.siteDocsApi}/LoginApi/LoginSiteDocumentsApp`, {\r\n      deviceId,\r\n      deviceString\r\n    }, {\r\n      headers: {\r\n        appToken: login.token,\r\n        appPin: login.pin\r\n      }\r\n    })),\r\n    setAppUserUpdate()\r\n  );\r\n}",
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [
        {
            "name": "BarcodeScannerDirective",
            "id": "directive-BarcodeScannerDirective-2090b1d2d924f19a05479ab3d246af7c86f50045098dc549f9e2c808faee7a81e5eca4f1374938fec331f42702743a3ad29903ae67ac4a0e9c689e5d6e91c260",
            "file": "src/app/shared/directives/barcode-scanner/barcode-scanner.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, EventEmitter, HostListener, Input, Output } from \"@angular/core\";\r\nimport { BarcodeScanner, ScanOptions } from \"@capacitor-community/barcode-scanner\";\r\n\r\n@Directive({\r\n  selector: \"[barcode-scanner]\",\r\n  standalone: true\r\n})\r\nexport class BarcodeScannerDirective {\r\n  @Input(\"barcode-scanner\")\r\n  options: ScanOptions = {}\r\n\r\n  @Output(\"scan\") \r\n  scan = new EventEmitter<string>();\r\n\r\n  @HostListener(\"click\")\r\n  async scanCode() {\r\n    await BarcodeScanner.hideBackground();\r\n    const res = await BarcodeScanner.startScan({ targetedFormats: [] });\r\n    \r\n    if (res.hasContent)\r\n      this.scan.emit(res.content);\r\n  }\r\n}\r\n",
            "selector": "[barcode-scanner]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "barcode-scanner",
                    "defaultValue": "{}",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "ScanOptions",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "scan",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "EventEmitter"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "click",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "scanCode",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 16,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'click'"
                        }
                    ],
                    "modifierKind": [
                        131
                    ]
                }
            ]
        },
        {
            "name": "CameraDirective",
            "id": "directive-CameraDirective-637db5314fa9eef57df799c7f8e7e0a437194d3710096ceac8d6b475feac7693a8a247268000989ab19ddba736ec18271c19b62d59c2e4d81bdb5d1115764f09",
            "file": "src/app/shared/directives/camera/camera.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, EventEmitter, HostBinding, Input, Output } from \"@angular/core\";\r\nimport { Camera, ImageOptions } from \"@capacitor/camera\";\r\nimport { CameraResultType, Photo } from \"@capacitor/camera/dist/esm/definitions\";\r\n\r\n@Directive({\r\n  selector: \"[camera]\",\r\n  standalone: true\r\n})\r\nexport class CameraDirective {\r\n  @Input(\"camera\")\r\n  options: ImageOptions = {\r\n    resultType: CameraResultType.Base64\r\n  };\r\n\r\n  @Output()\r\n  takePhoto = new EventEmitter<Photo>();\r\n\r\n  @HostBinding(\"click\")\r\n  async take() {\r\n    const photo = await Camera.getPhoto(this.options);\r\n    this.takePhoto.emit(photo);\r\n  }\r\n}\r\n",
            "selector": "[camera]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "camera",
                    "defaultValue": "{\r\n    resultType: CameraResultType.Base64\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 11,
                    "type": "ImageOptions",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "takePhoto",
                    "defaultValue": "new EventEmitter<Photo>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "EventEmitter"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "click",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "() => any",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "take",
                    "args": [],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 19,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'click'"
                        }
                    ],
                    "modifierKind": [
                        131
                    ]
                }
            ]
        },
        {
            "name": "DateDirective",
            "id": "directive-DateDirective-ed7c05613ff3036a98ba6f6b01b7905c09f43c85fce214f484e8bd4aa52de348fe1e0ff96a598fdca7586f51c4f1557922a41b0f2e6eb1e2f12975b8608bd303",
            "file": "src/app/shared/directives/date/date.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, ElementRef, EventEmitter, HostListener, inject, Input, Output } from \"@angular/core\";\r\nimport { formatISO, parseISO } from \"date-fns\";\r\n\r\n@Directive({\r\n  selector: \"[date]\",\r\n  standalone: true\r\n})\r\nexport class DateDirective {\r\n  protected element: Element & { value: string } = inject(ElementRef).nativeElement;\r\n  \r\n  @Input(\"date\")\r\n  date!: Date;\r\n  \r\n  @Output()\r\n  dateChange = new EventEmitter<Date>();\r\n\r\n  \r\n  ngOnChanges() {\r\n    this.element.value = formatISO(this.date);\r\n  }\r\n\r\n  @HostListener(\"change\")\r\n  @HostListener(\"ionChange\")\r\n  change() {\r\n    this.date = parseISO(this.element.value);\r\n    this.dateChange.emit(this.date);\r\n  }\r\n}\r\n",
            "selector": "[date]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "date",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 12,
                    "type": "Date",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "dateChange",
                    "defaultValue": "new EventEmitter<Date>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "EventEmitter"
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [
                {
                    "name": "change",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24
                },
                {
                    "name": "ionChange",
                    "args": [],
                    "argsDecorator": [],
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24
                }
            ],
            "propertiesClass": [
                {
                    "name": "element",
                    "defaultValue": "inject(ElementRef).nativeElement",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 9,
                    "modifierKind": [
                        122
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "change",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'change'"
                        },
                        {
                            "name": "HostListener",
                            "stringifiedArguments": "'ionChange'"
                        }
                    ]
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ]
        },
        {
            "name": "PhotoViewerDirective",
            "id": "directive-PhotoViewerDirective-95e560abab13b269266e477e2a243003be7b81bb057bd0f0a9d17bab884f6267d581d1034dc26453f0fb226e763bcff8340a963790ed069a24cb8d3140a69495",
            "file": "src/app/shared/directives/photo-viewer/photo-viewer.directive.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Directive, HostBinding, Input } from \"@angular/core\";\r\nimport { PhotoViewer } from \"@capacitor-community/photoviewer\";\r\n\r\n@Directive({\r\n  selector: \"[photo-viewer]\",\r\n  standalone: true\r\n})\r\nexport class PhotoViewerDirective {\r\n  @Input(\"photo-viewer\")\r\n  url!: string;\r\n\r\n  @HostBinding(\"click\")\r\n  view() {\r\n    PhotoViewer.show({\r\n      images: [{ url: this.url }]\r\n    });\r\n  }\r\n}\r\n",
            "selector": "[photo-viewer]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "photo-viewer",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 10,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [
                {
                    "name": "click",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "() => void",
                    "decorators": []
                }
            ],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "view",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 13,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "decorators": [
                        {
                            "name": "HostBinding",
                            "stringifiedArguments": "'click'"
                        }
                    ]
                }
            ]
        },
        {
            "name": "QuestionTemplateDirective",
            "id": "directive-QuestionTemplateDirective-35eb87d34141dd19046bcfc7075089195c7a6537a77793fcbfde92f026994ed08933fe9e7f5800976336d5708c16ef94f5ded3710728b14dce2d1ac3bc5a2b82",
            "file": "src/app/core/pages/document-builder/components/document-section/document-section.component.ts",
            "type": "directive",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { NgTemplateOutlet } from \"@angular/common\";\r\nimport { ChangeDetectionStrategy, Component, ContentChild, Directive, Input, TemplateRef } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question, Section } from \"src/app/core/stores/site-document/models\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\n\r\n@Directive({\r\n  selector: \"ng-template[questions]\",\r\n  standalone: true\r\n})\r\nexport class QuestionTemplateDirective {\r\n  @Input()\r\n  questions!: Question[];\r\n\r\n  static ngTemplateContextGuard(dir: QuestionTemplateDirective, ctx: unknown): ctx is { $implicit: Question } {\r\n    return true;\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: \"document-section[section]\",\r\n  template: `\r\n    <ion-label>{{ section.SectionTitle }}</ion-label>\r\n    <ng-container *rxIf=\"section.IsRepeatable\">\r\n      <ion-button color=\"secondary\" fill=\"clear\">\r\n        <ion-icon name=\"duplicate-outline\" />\r\n      </ion-button>\r\n      <ion-button color=\"secondary\" fill=\"clear\">\r\n        <ion-icon name=\"remove-circle-outline\" />\r\n      </ion-button>\r\n    </ng-container>\r\n\r\n    <ng-container *rxFor=\"let question of section.Questions\">\r\n      <ng-container *ngTemplateOutlet=\"questions; context: { $implicit: question }\" />\r\n    </ng-container>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    NgTemplateOutlet,\r\n    QuestionTemplateDirective\r\n  ]\r\n})\r\nexport class DocumentSectionComponent {\r\n  @Input()\r\n  section!: Section;\r\n\r\n  @ContentChild(QuestionTemplateDirective, { read: TemplateRef }) \r\n  questions!: TemplateRef<unknown>;\r\n}\r\n",
            "selector": "ng-template[questions]",
            "providers": [],
            "inputsClass": [
                {
                    "name": "questions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "Question[]",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngTemplateContextGuard",
                    "args": [
                        {
                            "name": "dir",
                            "type": "QuestionTemplateDirective",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "ctx",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "literal type",
                    "typeParameters": [],
                    "line": 15,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        124
                    ],
                    "jsdoctags": [
                        {
                            "name": "dir",
                            "type": "QuestionTemplateDirective",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "ctx",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        }
    ],
    "components": [
        {
            "name": "ActionerSelectComponent",
            "id": "component-ActionerSelectComponent-4e57d1598f2c6023741fbd66ff6ab66c041d8d4fc24c9ffc8a3807a46306fbfb999c9e2ccb1f17ecff242c217a689e60f9b57929e96e0e4139f603acdf68f9cb",
            "file": "src/app/core/pages/document-builder/components/input-types/actioner-select/actioner-select.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "actioner-select",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-card>\n  <ion-card-header>\n    <ion-card-title class=\"text-center\">{{ title || \"To Action / Attention Of\" }}</ion-card-title>\n  </ion-card-header>\n  <ion-card-content>\n    <ion-list>\n      <ion-item [id]=\"id\" button>\n        <ion-label *rxLet=\"selectedActioner$; let actioner\" class=\"ion-text-wrap\">{{ actioner?.Name || \"Select an Actioner\" }}</ion-label>\n        <ion-icon name=\"person-outline\" slot=\"start\" />\n      </ion-item>\n      <operative-list-modal [trigger]=\"id\" />\n    </ion-list>\n  </ion-card-content>\n</ion-card>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "actionerId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "hideMyself",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "actionerIdChange",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "id",
                    "defaultValue": "crypto.randomUUID()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                },
                {
                    "name": "operatives$",
                    "defaultValue": "this.operativesStore.operatives$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "operativesStore",
                    "defaultValue": "inject(OperativesStore)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 36
                },
                {
                    "name": "selectedActioner$",
                    "defaultValue": "merge(\r\n    this.afterViewInit$, \r\n    this.input$(\"actionerId\"), \r\n    this.actionerIdChange\r\n  ).pipe(\r\n    switchMap(() => this.operatives$),\r\n    map(operatives => operatives.find(o => o.ID === this.actionerId) || null)\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Operative | null>",
                    "optional": false,
                    "description": "",
                    "line": 54
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, inject } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Observable, map, merge, switchMap } from \"rxjs\";\r\nimport { Operative, OperativesStore } from \"src/app/core/stores/operative/operatives.store\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { AngularComponent, withAfterViewInit, withOnChanges } from \"src/app/shared/lifecycles\";\r\nimport { OperativeListModal } from \"src/app/shared/modals/operative-list/operative-list.modal\";\r\n\r\n@Component({\r\n  selector: \"actioner-select\",\r\n  template: `\r\n    <ion-card>\r\n      <ion-card-header>\r\n        <ion-card-title class=\"text-center\">{{ title || \"To Action / Attention Of\" }}</ion-card-title>\r\n      </ion-card-header>\r\n      <ion-card-content>\r\n        <ion-list>\r\n          <ion-item [id]=\"id\" button>\r\n            <ion-label *rxLet=\"selectedActioner$; let actioner\" class=\"ion-text-wrap\">{{ actioner?.Name || \"Select an Actioner\" }}</ion-label>\r\n            <ion-icon name=\"person-outline\" slot=\"start\" />\r\n          </ion-item>\r\n          <operative-list-modal [trigger]=\"id\" />\r\n        </ion-list>\r\n      </ion-card-content>\r\n    </ion-card>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    OperativeListModal\r\n  ]\r\n})\r\nexport class ActionerSelectComponent extends AngularComponent(withAfterViewInit, withOnChanges) {\r\n  operativesStore = inject(OperativesStore);\r\n\r\n  operatives$ = this.operativesStore.operatives$;\r\n\r\n  id = crypto.randomUUID();\r\n\r\n  @Input()\r\n  title?: string;\r\n\r\n  @Input()\r\n  hideMyself: boolean = false;\r\n\r\n  @Input()\r\n  actionerId?: number;\r\n\r\n  @Output()\r\n  actionerIdChange = new EventEmitter<number>();\r\n\r\n  selectedActioner$: Observable<Operative | null> = merge(\r\n    this.afterViewInit$, \r\n    this.input$(\"actionerId\"), \r\n    this.actionerIdChange\r\n  ).pipe(\r\n    switchMap(() => this.operatives$),\r\n    map(operatives => operatives.find(o => o.ID === this.actionerId) || null)\r\n  );\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "AppComponent",
            "id": "component-AppComponent-1ec040a91f41102ea933f46462e206d3a941e35a0d50f1652261905e96af137ae536ab5179c199c7069e97e9ab1b58a16b836b6235b5b11f562d4a0515565fb7",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-app>\n  <ion-router-outlet></ion-router-outlet>\n</ion-app>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  template: `\r\n    <ion-app>\r\n      <ion-router-outlet></ion-router-outlet>\r\n    </ion-app>\r\n  `,\r\n  standalone: true,\r\n  imports: [IonicModule],\r\n})\r\nexport class AppComponent {\r\n  constructor() {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 14
            }
        },
        {
            "name": "AssetListComponent",
            "id": "component-AssetListComponent-31465a9ed91c3313d678ae08ce96e59b31c04dd448a1b0d75a0d9b6ed7713974eac75b55cddab976bc2f7ca8da4c79959ece0589a93011d0619c678036aa8808",
            "file": "src/app/core/pages/document-builder/components/question-types/17-asset-list/asset-list.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "asset-list-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text>{{ question.QuestionText }}</question-text>\n    <ion-button *rxIf=\"isMobileApp\" fill=\"clear\" slot=\"end\">\n      <ion-icon name=\"scan-outline\" slots=\"icon-only\" />\n    </ion-button>\n    <ion-button fill=\"clear\" slot=\"end\">\n      <ion-icon name=\"search-outline\" slot=\"icon-only\" />\n    </ion-button>\n  </ion-item>\n</ion-list>\n\n<ion-list>\n  <ion-item-sliding *rxFor=\"let asset of question.Assets; last as isLast\">\n    <ion-item [lines]=\"isLast ? 'none' : 'inset'\" button>\n      <ion-label>{{ asset.AssetID }}: {{ asset.Name }}</ion-label>\n    </ion-item>\n\n    <ion-item-options side=\"end\">\n      <ion-item-option color=\"danger\">\n        <ion-icon name=\"trash-outline\" slot=\"icon-only\" />\n      </ion-item-option>\n    </ion-item-options>\n  </ion-item-sliding>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "isMobileApp",
                    "defaultValue": "isMobileApp()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 49
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { isMobileApp } from \"src/app/shared/plugins/platform.plugin\";\r\nimport { QuestionTextComponent } from \"../extras\";\r\n\r\n@Component({\r\n  selector: \"asset-list-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text>{{ question.QuestionText }}</question-text>\r\n        <ion-button *rxIf=\"isMobileApp\" fill=\"clear\" slot=\"end\">\r\n          <ion-icon name=\"scan-outline\" slots=\"icon-only\" />\r\n        </ion-button>\r\n        <ion-button fill=\"clear\" slot=\"end\">\r\n          <ion-icon name=\"search-outline\" slot=\"icon-only\" />\r\n        </ion-button>\r\n      </ion-item>\r\n    </ion-list>\r\n\r\n    <ion-list>\r\n      <ion-item-sliding *rxFor=\"let asset of question.Assets; last as isLast\">\r\n        <ion-item [lines]=\"isLast ? 'none' : 'inset'\" button>\r\n          <ion-label>{{ asset.AssetID }}: {{ asset.Name }}</ion-label>\r\n        </ion-item>\r\n\r\n        <ion-item-options side=\"end\">\r\n          <ion-item-option color=\"danger\">\r\n            <ion-icon name=\"trash-outline\" slot=\"icon-only\" />\r\n          </ion-item-option>\r\n        </ion-item-options>\r\n      </ion-item-sliding>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    QuestionTextComponent\r\n  ]\r\n})\r\nexport class AssetListComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n\r\n  isMobileApp = isMobileApp();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "AssetListModal",
            "id": "component-AssetListModal-ae9ac2c328d1a76de62f81c74ae979fb334976ef1584ddc11734f2c1e3dc1f22e4326eab731712a65a9978045bdf08400cea38c327f14b5937e7393f5727cca8",
            "file": "src/app/shared/modals/asset-list/asset-list.modal.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "asset-list-modal",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-modal #modal [trigger]=\"trigger\" [isOpen]=\"isOpen\">\n  <ng-template>\n    <ion-header>\n      <ion-toolbar>\n        <ion-title class=\"ion-text-center\">Select an Asset</ion-title>\n        <ion-buttons slot=\"end\">\n          <ion-button (click)=\"modal.dismiss()\" [unpatch]>\n            <ion-icon name=\"close-outline\" slot=\"icon-only\" />\n          </ion-button>\n        </ion-buttons>\n      </ion-toolbar>\n\n      <ion-toolbar>\n        <ion-segment [(ngModel)]=\"segment\" class=\"w-full\">\n          <ion-segment-button value=\"local\">\n            <ion-icon name=\"phone-portrait-outline\" />\n          </ion-segment-button>\n          <ion-segment-button value=\"online\">\n            <ion-icon name=\"wifi-outline\" />\n          </ion-segment-button>\n        </ion-segment>\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content [ngSwitch]=\"segment\" class=\"ion-padding\">\n      <local-asset-search *ngSwitchCase=\"'local'\" />\n      <online-asset-search *ngSwitchCase=\"'online'\" />\n    </ion-content>\n  </ng-template>\n</ion-modal>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 57,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "segment",
                    "defaultValue": "\"local\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"local\" | \"online\"",
                    "optional": false,
                    "description": "",
                    "line": 59
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { importNgSwitch, importRxTemplate } from \"../../imports\";\r\nimport { LocalAssetSearchComponent, OnlineAssetSearchComponent } from \"./components\";\r\nimport { FormsModule } from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: \"asset-list-modal\",\r\n  template: `\r\n    <ion-modal #modal [trigger]=\"trigger\" [isOpen]=\"isOpen\">\r\n      <ng-template>\r\n        <ion-header>\r\n          <ion-toolbar>\r\n            <ion-title class=\"ion-text-center\">Select an Asset</ion-title>\r\n            <ion-buttons slot=\"end\">\r\n              <ion-button (click)=\"modal.dismiss()\" [unpatch]>\r\n                <ion-icon name=\"close-outline\" slot=\"icon-only\" />\r\n              </ion-button>\r\n            </ion-buttons>\r\n          </ion-toolbar>\r\n\r\n          <ion-toolbar>\r\n            <ion-segment [(ngModel)]=\"segment\" class=\"w-full\">\r\n              <ion-segment-button value=\"local\">\r\n                <ion-icon name=\"phone-portrait-outline\" />\r\n              </ion-segment-button>\r\n              <ion-segment-button value=\"online\">\r\n                <ion-icon name=\"wifi-outline\" />\r\n              </ion-segment-button>\r\n            </ion-segment>\r\n          </ion-toolbar>\r\n        </ion-header>\r\n\r\n        <ion-content [ngSwitch]=\"segment\" class=\"ion-padding\">\r\n          <local-asset-search *ngSwitchCase=\"'local'\" />\r\n          <online-asset-search *ngSwitchCase=\"'online'\" />\r\n        </ion-content>\r\n      </ng-template>\r\n    </ion-modal>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    ...importNgSwitch(),\r\n    FormsModule,\r\n    LocalAssetSearchComponent,\r\n    OnlineAssetSearchComponent\r\n  ]\r\n})\r\nexport class AssetListModal {\r\n  @Input({ required: true })\r\n  trigger!: string;\r\n\r\n  @Input()\r\n  isOpen: boolean = false;\r\n\r\n  segment: \"local\" | \"online\" = \"local\";\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CameraCaptureComponent",
            "id": "component-CameraCaptureComponent-af9e57c9b92cc8de63227127edf71224f0bbd66bccf43835cf3c367ecf92823e4eb0f03af2269bb33b7661faf9cb1644d207d55cd1680e99bf6202a3c064d3c9",
            "file": "src/app/core/pages/document-builder/components/question-types/extras/camera-capture/camera-capture.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "camera-capture",
            "styleUrls": [],
            "styles": [],
            "template": "<if [condition]=\"base64Img == null\">\n  <camera show (takePhoto)=\"take($event)\" fill=\"clear\">\n    <ion-icon name=\"camera-outline\" slot=\"icon-only\" />\n  </camera>\n\n  <ng-container else>\n    <ion-button [photo-viewer]=\"base64Img!\" [unpatch] fill=\"clear\">\n      <ion-icon name=\"eye-outline\" slot=\"icon-only\" />\n    </ion-button>\n    <ion-button (click)=\"remove()\" fill=\"clear\" color=\"danger\">\n      <ion-icon name=\"close-outline\" slot=\"icon-only\" />\n    </ion-button>\n  </ng-container>\n</if>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "base64Img",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "string | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "base64ImgChange",
                    "defaultValue": "new EventEmitter<string | null>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "remove",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 48,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "take",
                    "args": [
                        {
                            "name": "base64Img",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 43,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "base64Img",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { CameraComponent, IfComponent } from \"src/app/shared/components\";\r\nimport { PhotoViewerDirective } from \"src/app/shared/directives\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\n\r\n@Component({\r\n  selector: \"camera-capture\",\r\n  template: `\r\n    <if [condition]=\"base64Img == null\">\r\n      <camera show (takePhoto)=\"take($event)\" fill=\"clear\">\r\n        <ion-icon name=\"camera-outline\" slot=\"icon-only\" />\r\n      </camera>\r\n\r\n      <ng-container else>\r\n        <ion-button [photo-viewer]=\"base64Img!\" [unpatch] fill=\"clear\">\r\n          <ion-icon name=\"eye-outline\" slot=\"icon-only\" />\r\n        </ion-button>\r\n        <ion-button (click)=\"remove()\" fill=\"clear\" color=\"danger\">\r\n          <ion-icon name=\"close-outline\" slot=\"icon-only\" />\r\n        </ion-button>\r\n      </ng-container>\r\n    </if>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    IfComponent,\r\n    CameraComponent,\r\n    PhotoViewerDirective\r\n  ]\r\n})\r\nexport class CameraCaptureComponent {\r\n\r\n  @Input()\r\n  base64Img: string | null = null;\r\n\r\n  @Output()\r\n  base64ImgChange = new EventEmitter<string | null>();\r\n\r\n  take(base64Img: string) {\r\n    this.base64Img = base64Img || null;\r\n    this.base64ImgChange.emit(this.base64Img);\r\n  }\r\n\r\n  remove() {\r\n    this.base64Img = null;\r\n    this.base64ImgChange.emit(this.base64Img);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CameraComponent",
            "id": "component-CameraComponent-6f8532a748e6ec9fc34ab7db3c12d4110eb76c3856778a620fb9a48b8b424d7618dfac67fd62134c6a1df8befe31b8c90018171d87c3a30d0be21d8a810d400c",
            "file": "src/app/shared/components/camera/camera.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "camera",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-button [fill]=\"fill\" [expand]=\"expand\" [color]=\"color\">\n  <if [condition]=\"isMobileApp\">\n    <div show [camera]=\"options\" (takePhoto)=\"take($event)\"></div>\n    <upload else (uploadFiles)=\"upload($event)\" accept=\"image/*\" />\n  </if>\n  <ng-content></ng-content>\n</ion-button>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "color",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "expand",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "\"block\" | \"full\"",
                    "decorators": []
                },
                {
                    "name": "fill",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "\"clear\" | \"outline\" | \"solid\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "takePhoto",
                    "defaultValue": "new EventEmitter<string>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "isMobileApp",
                    "defaultValue": "isMobileApp()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 45
                },
                {
                    "name": "options",
                    "defaultValue": "{\r\n    resultType: CameraResultType.Base64\r\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ImageOptions",
                    "optional": false,
                    "description": "",
                    "line": 47
                }
            ],
            "methodsClass": [
                {
                    "name": "take",
                    "args": [
                        {
                            "name": "photo",
                            "type": "Photo",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 51,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "photo",
                            "type": "Photo",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "upload",
                    "args": [
                        {
                            "name": "files",
                            "type": "DataUrlFile[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 55,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "files",
                            "type": "DataUrlFile[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { importRxTemplate } from \"../../imports\";\r\nimport { isMobileApp } from \"../../plugins/platform.plugin\";\r\nimport { IfComponent } from \"../if/if.component\";\r\nimport { UploadComponent } from \"../upload/upload.component\";\r\nimport { CameraDirective } from \"../../directives\";\r\nimport { CameraResultType, ImageOptions, Photo } from \"@capacitor/camera\";\r\nimport { DataUrlFile } from \"../../models/files/data-url-file.model\";\r\n\r\n@Component({\r\n  selector: \"camera\",\r\n  template: `\r\n    <ion-button [fill]=\"fill\" [expand]=\"expand\" [color]=\"color\">\r\n      <if [condition]=\"isMobileApp\">\r\n        <div show [camera]=\"options\" (takePhoto)=\"take($event)\"></div>\r\n        <upload else (uploadFiles)=\"upload($event)\" accept=\"image/*\" />\r\n      </if>\r\n      <ng-content></ng-content>\r\n    </ion-button>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule, \r\n    ...importRxTemplate(),\r\n    CameraDirective,\r\n    IfComponent,\r\n    UploadComponent\r\n  ]\r\n})\r\nexport class CameraComponent {\r\n  @Input()\r\n  fill?: \"clear\" | \"outline\" | \"solid\";\r\n\r\n  @Input()\r\n  expand?: \"block\" | \"full\";\r\n\r\n  @Input()\r\n  color?: string;\r\n\r\n  @Output()\r\n  takePhoto = new EventEmitter<string>();\r\n  \r\n  isMobileApp = isMobileApp();\r\n\r\n  options: ImageOptions = {\r\n    resultType: CameraResultType.Base64\r\n  };\r\n\r\n  take(photo: Photo) {\r\n    this.takePhoto.emit(photo.base64String);\r\n  }\r\n\r\n  upload(files: DataUrlFile[]) {\r\n    if (files[0] != null)\r\n      this.takePhoto.emit(files[0].dataUrl);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CascadeSelectComponent",
            "id": "component-CascadeSelectComponent-2a19c1a42a397b2781e05e16cf0c849d28d620607ab7861dac46b0eda2d32c563300eda460de63632dcb5aa925d39f47812a880ddf50b9ef1f23565770993f70",
            "file": "src/app/core/pages/document-builder/components/question-types/13-cascade-select/cascade-select.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cascade-select-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n    <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\n    <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\n  </ion-item>\n  <selectable\n    placeholder=\"Select\"\n    [title]=\"question.QuestionText\"\n    [items]=\"question.Options\"\n    itemText=\"Text\"\n    [canClear]=\"!question.Required\" />\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.CascadeOptionsText }}</question-text>\n  </ion-item>\n  <selectable\n    placeholder=\"Select\"\n    [title]=\"question.CascadeOptionsText\"\n    [items]=\"question.CascadeOptions\"\n    itemText=\"Text\"\n    [canClear]=\"!question.Required\" />\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\nimport { SelectableComponent } from \"src/app/shared/components\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\n\r\n@Component({\r\n  selector: \"cascade-select-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n        <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\r\n        <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\r\n      </ion-item>\r\n      <selectable \r\n        placeholder=\"Select\"\r\n        [title]=\"question.QuestionText\"\r\n        [items]=\"question.Options\"\r\n        itemText=\"Text\"\r\n        [canClear]=\"!question.Required\" />\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.CascadeOptionsText }}</question-text>\r\n      </ion-item>\r\n      <selectable\r\n        placeholder=\"Select\"\r\n        [title]=\"question.CascadeOptionsText\"\r\n        [items]=\"question.CascadeOptions\"\r\n        itemText=\"Text\"\r\n        [canClear]=\"!question.Required\" />\r\n    </ion-list>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  standalone: true,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    QuestionTextComponent,\r\n    SelectableComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent\r\n  ]\r\n})\r\nexport class CascadeSelectComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CascadeSelectTextComponent",
            "id": "component-CascadeSelectTextComponent-f9bb713b39f889e86603ef965e46a1f473968b67065676f9c19f83dd6ba303f459ace5e7fe45403cb1c5812d2d41e6a422cbb0f53c4e78a3683288ecefc29a51",
            "file": "src/app/core/pages/document-builder/components/question-types/30-cascade-select-text/cascade-select-text.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "cascade-select-text-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n    <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\n    <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\n  </ion-item>\n  <selectable\n    placeholder=\"Select\"\n    [title]=\"question.QuestionText\"\n    [items]=\"question.Options\"\n    itemText=\"Text\"\n    [canClear]=\"!question.Required\" />\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.CascadeOptionsText }}</question-text>\n  </ion-item>\n  <selectable\n    placeholder=\"Select\"\n    [title]=\"question.CascadeOptionsText\"\n    [items]=\"question.CascadeOptions\"\n    itemText=\"Text\"\n    [canClear]=\"!question.Required\" />\n  <ion-item>\n    <ion-input\n      [label]=\"question.CommentsText || 'Comments'\"\n      labelPlacement=\"floating\"\n      type=\"text\" />\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 53,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\nimport { SelectableComponent } from \"src/app/shared/components\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\n\r\n@Component({\r\n  selector: \"cascade-select-text-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n        <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\r\n        <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\r\n      </ion-item>\r\n      <selectable \r\n        placeholder=\"Select\"\r\n        [title]=\"question.QuestionText\"\r\n        [items]=\"question.Options\"\r\n        itemText=\"Text\"\r\n        [canClear]=\"!question.Required\" />\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.CascadeOptionsText }}</question-text>\r\n      </ion-item>\r\n      <selectable\r\n        placeholder=\"Select\"\r\n        [title]=\"question.CascadeOptionsText\"\r\n        [items]=\"question.CascadeOptions\"\r\n        itemText=\"Text\"\r\n        [canClear]=\"!question.Required\" />\r\n      <ion-item>\r\n        <ion-input \r\n          [label]=\"question.CommentsText || 'Comments'\" \r\n          labelPlacement=\"floating\" \r\n          type=\"text\" />\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  standalone: true,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    QuestionTextComponent,\r\n    SelectableComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent\r\n  ]\r\n})\r\nexport class CascadeSelectTextComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CategoryActionerSelectComponent",
            "id": "component-CategoryActionerSelectComponent-813e46f9ae4b5532e0206445899d0a2e70cd8912fd59e0e9c9486e199d382d4a3a26b8cbbaf4a0419430e948522a7ebd796da44840b436975c940e8c65c6e40f",
            "file": "src/app/core/pages/document-builder/components/input-types/category-actioner-select/category-actioner-select.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "category-actioner-select",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-card>\n  <ion-card-header>\n    <ion-card-title class=\"text-center\">{{ title || \"Category Actioner\" }}</ion-card-title>\n  </ion-card-header>\n  <ion-card-content>\n    <ion-list>\n      <selectable\n        [title]=\"title || 'Category Actioner'\"\n        placeholder=\"Actioner\"\n        [value]=\"selectedActioner$ | push\"\n        [items]=\"visibleCatActioners$ | push\"\n        itemText=\"Name\" />\n    </ion-list>\n  </ion-card-content>\n</ion-card>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "hideMyself",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "string",
                    "decorators": []
                },
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "number",
                    "decorators": []
                },
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 51,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "actionerIdChange",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 54,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "categoryActioners$",
                    "defaultValue": "merge(\r\n    this.afterViewInit$, \r\n    this.input$(\"categoryId\")\r\n  ).pipe(\r\n    switchMap(() => this.categoryActionersStore.categoryActionersById$(this.categoryId))\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<CategoryActioner[]>",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "categoryActionersStore",
                    "defaultValue": "inject(CategoryActionersStore)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39
                },
                {
                    "name": "selectedActioner$",
                    "defaultValue": "merge(this.afterViewInit$, this.input$(\"actionerId\")).pipe(\r\n    switchMap(() => this.categoryActioners$),\r\n    map(catActioners => catActioners.find(ca => ca.Id === this.actionerId) || null)\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<CategoryActioner | null>",
                    "optional": false,
                    "description": "",
                    "line": 79
                },
                {
                    "name": "user$",
                    "defaultValue": "this.userStore.user$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "userStore",
                    "defaultValue": "inject(UserStore)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                },
                {
                    "name": "visibleCatActioners$",
                    "defaultValue": "merge(\r\n    this.afterViewInit$,\r\n    this.input$(\"hideMyself\")\r\n  ).pipe(\r\n    switchMap(() => combineLatest({\r\n      user: this.user$,\r\n      catActioners: this.categoryActioners$\r\n    })),\r\n    map(({ user, catActioners }) => this.hideMyself \r\n      ? catActioners.filter(ca => ca.Id === user!.Id)\r\n      : catActioners\r\n    )\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<CategoryActioner[]>",
                    "optional": false,
                    "description": "",
                    "line": 65
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, inject } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Observable, combineLatest, map, merge, switchMap } from \"rxjs\";\r\nimport { CategoryActioner, CategoryActionersStore } from \"src/app/core/stores/category-actioners/category-actioners.store\";\r\nimport { UserStore } from \"src/app/core/stores/user/user.store\";\r\nimport { SelectableComponent } from \"src/app/shared/components\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { AngularComponent, withAfterViewInit, withOnChanges } from \"src/app/shared/lifecycles\";\r\n\r\n@Component({\r\n  selector: \"category-actioner-select\",\r\n  template: `\r\n    <ion-card>\r\n      <ion-card-header>\r\n        <ion-card-title class=\"text-center\">{{ title || \"Category Actioner\" }}</ion-card-title>\r\n      </ion-card-header>\r\n      <ion-card-content>\r\n        <ion-list>\r\n          <selectable \r\n            [title]=\"title || 'Category Actioner'\"\r\n            placeholder=\"Actioner\"\r\n            [value]=\"selectedActioner$ | push\"\r\n            [items]=\"visibleCatActioners$ | push\"\r\n            itemText=\"Name\" />\r\n        </ion-list>\r\n      </ion-card-content>\r\n    </ion-card>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    SelectableComponent\r\n  ]\r\n})\r\nexport class CategoryActionerSelectComponent extends AngularComponent(withAfterViewInit, withOnChanges) {\r\n  userStore = inject(UserStore);\r\n  categoryActionersStore = inject(CategoryActionersStore);\r\n  \r\n  @Input()\r\n  title?: string;\r\n\r\n  @Input()\r\n  hideMyself: boolean = false;\r\n\r\n  @Input({ required: true })\r\n  categoryId!: number;\r\n\r\n  @Input({ required: true })\r\n  actionerId?: number;\r\n\r\n  @Output()\r\n  actionerIdChange = new EventEmitter<number>();\r\n\r\n  user$ = this.userStore.user$;\r\n\r\n  categoryActioners$: Observable<CategoryActioner[]> = merge(\r\n    this.afterViewInit$, \r\n    this.input$(\"categoryId\")\r\n  ).pipe(\r\n    switchMap(() => this.categoryActionersStore.categoryActionersById$(this.categoryId))\r\n  );\r\n\r\n  visibleCatActioners$: Observable<CategoryActioner[]> = merge(\r\n    this.afterViewInit$,\r\n    this.input$(\"hideMyself\")\r\n  ).pipe(\r\n    switchMap(() => combineLatest({\r\n      user: this.user$,\r\n      catActioners: this.categoryActioners$\r\n    })),\r\n    map(({ user, catActioners }) => this.hideMyself \r\n      ? catActioners.filter(ca => ca.Id === user!.Id)\r\n      : catActioners\r\n    )\r\n  );\r\n\r\n  selectedActioner$: Observable<CategoryActioner | null> = merge(this.afterViewInit$, this.input$(\"actionerId\")).pipe(\r\n    switchMap(() => this.categoryActioners$),\r\n    map(catActioners => catActioners.find(ca => ca.Id === this.actionerId) || null)\r\n  );\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CheckboxComponent",
            "id": "component-CheckboxComponent-681b08dd2d6c84492f17ed4f2e4cfbad76cfde84db122c1db2f62ed629ad6da996de5324d7e6a1f743a057f0aa204e737c94fdc78ef977f9ad0239393fbe0eff",
            "file": "src/app/core/pages/document-builder/components/question-types/01-checkbox/checkbox.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "checkbox-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-item lines=\"none\">\n  <ion-checkbox [(ngModel)]=\"question.YesNoNA\" aria-label=\"\" slot=\"start\" />\n  <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n  <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\n  <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\n</ion-item>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\nimport { FormsModule } from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: 'checkbox-question',\r\n  template: `\r\n    <ion-item lines=\"none\">\r\n      <ion-checkbox [(ngModel)]=\"question.YesNoNA\" aria-label=\"\" slot=\"start\" />\r\n      <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n      <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\r\n      <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\r\n    </ion-item>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    FormsModule,\r\n    ...importRxTemplate(),\r\n    QuestionTextComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent\r\n  ]\r\n})\r\nexport class CheckboxComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CheckboxTextboxComponent",
            "id": "component-CheckboxTextboxComponent-df280acb245ae18795d093d576844aeaddab2c1c201b567876ca5931630ec097a67c3e67cd59de231bd1a576c34917373a641597b8db627b995f24a043a7d305",
            "file": "src/app/core/pages/document-builder/components/question-types/06-checkbox-textbox/checkbox-textbox.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "checkbox-question-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <ion-checkbox [(ngModel)]=\"question.YesNoNA\" aria-label=\"\" slot=\"start\"></ion-checkbox>\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n    <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\n    <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\n  </ion-item>\n\n  <ion-textarea [(ngModel)]=\"question.AnswerText\" label=\"text:\" labelPlacement=\"stacked\" rows=\"3\" fill=\"outline\" />\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\nimport { FormsModule } from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: \"checkbox-question-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <ion-checkbox [(ngModel)]=\"question.YesNoNA\" aria-label=\"\" slot=\"start\"></ion-checkbox>\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n        <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\r\n        <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\r\n      </ion-item>\r\n\r\n      <ion-textarea [(ngModel)]=\"question.AnswerText\" label=\"text:\" labelPlacement=\"stacked\" rows=\"3\" fill=\"outline\" />\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    FormsModule,\r\n    QuestionTextComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent,\r\n  ]\r\n})\r\nexport class CheckboxTextboxComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ChildDocumentCardComponent",
            "id": "component-ChildDocumentCardComponent-aab23fd00ec0aa75dfb7bb2c48659d33597ee4344914fef2da02c39e0dd71c84420c27cbdf7125433929124c9b88ab3f279b656307370650163cc944991e9610",
            "file": "src/app/core/pages/document-builder/components/child-document-card/child-document-card.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "child-document-card[document]",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-list-header>Action Document</ion-list-header>\n  <ion-item lines=\"none\">\n    <ion-label class=\"ion-text-wrap\">\n      {{ childTemplate.DocumentTitle }}\n    </ion-label>\n    <ion-button (click)=\"open()\">\n      <ion-icon name=\"pencil-outline\" slot=\"icon-only\" />\n    </ion-button>\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "SiteDocument",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "open",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 28,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { SiteDocument } from \"src/app/core/stores/site-document/models\";\r\n\r\n@Component({\r\n  selector: \"child-document-card[document]\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-list-header>Action Document</ion-list-header>\r\n      <ion-item lines=\"none\">\r\n        <ion-label class=\"ion-text-wrap\">\r\n          {{ childTemplate.DocumentTitle }}\r\n        </ion-label>\r\n        <ion-button (click)=\"open()\">\r\n          <ion-icon name=\"pencil-outline\" slot=\"icon-only\" />\r\n        </ion-button>\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [IonicModule]\r\n})\r\nexport class ChildDocumentCardComponent {\r\n  @Input({ required: true })\r\n  childTemplate!: SiteDocument;\r\n\r\n  open() {}\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "CompanyActionerSelectComponent",
            "id": "component-CompanyActionerSelectComponent-32447ed7d49aed1cadc69c2dc92d78b4100f4a6af0bf08d4fe729ae0a153b869760a0e27103c2d16fc256003308d0e1c45933fab71b04740814bda45cb254442",
            "file": "src/app/core/pages/document-builder/components/input-types/company-actioner-select/company-actioner-select.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "company-actioner-select",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-card>\n  <ion-card-header>\n    <ion-card-title class=\"text-center\">{{ title || \"Company Actioners\" }}</ion-card-title>\n  </ion-card-header>\n  <ion-card-content>\n    <ion-list>\n      <selectable\n        [title]=\"title || 'Company Actioners'\"\n        placeholder=\"Actioners\"\n        [items]=\"companies$ | push\"\n        [value]=\"selectedCompany$ | push\"\n        (valueChange)=\"companyChange($event)\"\n        itemText=\"Text\"\n        [canClear]=\"false\" />\n    </ion-list>\n  </ion-card-content>\n</ion-card>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "companyId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "companyIdChange",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "companies$",
                    "defaultValue": "this.userStore.companies$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "selectedCompany$",
                    "defaultValue": "merge(this.afterViewInit$, this.input$(\"companyId\")).pipe(\r\n    switchMap(() => this.companies$),\r\n    map(companies => companies.find(c => c.Id === this.companyId) || null)\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Company | null>",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "userStore",
                    "defaultValue": "inject(UserStore)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 39
                }
            ],
            "methodsClass": [
                {
                    "name": "companyChange",
                    "args": [
                        {
                            "name": "company",
                            "type": "Company | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 57,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "company",
                            "type": "Company | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, inject } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Observable, map, merge, switchMap } from \"rxjs\";\r\nimport { Company, UserStore } from \"src/app/core/stores/user/user.store\";\r\nimport { SelectableComponent } from \"src/app/shared/components/selectable/selectable.component\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { AngularComponent, withAfterViewInit, withOnChanges } from \"src/app/shared/lifecycles\";\r\n\r\n@Component({\r\n  selector: \"company-actioner-select\",\r\n  template: `\r\n    <ion-card>\r\n      <ion-card-header>\r\n        <ion-card-title class=\"text-center\">{{ title || \"Company Actioners\" }}</ion-card-title>\r\n      </ion-card-header>\r\n      <ion-card-content>\r\n        <ion-list>\r\n          <selectable \r\n            [title]=\"title || 'Company Actioners'\" \r\n            placeholder=\"Actioners\" \r\n            [items]=\"companies$ | push\"\r\n            [value]=\"selectedCompany$ | push\"\r\n            (valueChange)=\"companyChange($event)\"\r\n            itemText=\"Text\"\r\n            [canClear]=\"false\" />\r\n        </ion-list>\r\n      </ion-card-content>\r\n    </ion-card>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule, \r\n    ...importRxTemplate(),\r\n    SelectableComponent\r\n  ]\r\n})\r\nexport class CompanyActionerSelectComponent extends AngularComponent(withAfterViewInit, withOnChanges) {\r\n  userStore = inject(UserStore);\r\n\r\n  companies$ = this.userStore.companies$;\r\n\r\n  @Input()\r\n  title?: string;\r\n\r\n  @Input()\r\n  companyId?: number;\r\n\r\n  @Output()\r\n  companyIdChange = new EventEmitter<number>();\r\n\r\n  selectedCompany$: Observable<Company | null> = merge(this.afterViewInit$, this.input$(\"companyId\")).pipe(\r\n    switchMap(() => this.companies$),\r\n    map(companies => companies.find(c => c.Id === this.companyId) || null)\r\n  );\r\n\r\n  companyChange(company: Company | null) {\r\n    this.companyId = company!.Id;\r\n    this.companyIdChange.emit(this.companyId);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "DateComponent",
            "id": "component-DateComponent-5437733ea1ae509f77a2584eb49b159f0f3021b1de4f5052029b01c4a02e6950e8b5748d9eb9e7f0c9948a9b45915822d911fbb0e82403a92374ce195d19e242",
            "file": "src/app/core/pages/document-builder/components/question-types/08-date/date.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "date-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n  </ion-item>\n  <datetime-picker [(datetime)]=\"question.DateAndTime\" presentation=\"date\" />\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { DatetimePickerComponent } from \"src/app/shared/components/datetime-picker/datetime-picker.component\";\r\nimport { QuestionTextComponent } from \"../extras\";\r\n\r\n@Component({\r\n  selector: \"date-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n      </ion-item>\r\n      <datetime-picker [(datetime)]=\"question.DateAndTime\" presentation=\"date\" />\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    QuestionTextComponent,\r\n    DatetimePickerComponent\r\n  ]\r\n})\r\nexport class DateComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "DatetimeComponent",
            "id": "component-DatetimeComponent-2922a1b9dbeb211fd7b3175ceeeb5bdd9f047dc81bb5e7516cb1deeead11cce83a856a1be06449a0f0ed4c9f3c2e88f8ce949ffd576f0161ecbae8b0b8fe1533",
            "file": "src/app/core/pages/document-builder/components/question-types/09-datetime/datetime.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "datetime-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n  </ion-item>\n  <datetime-picker [(datetime)]=\"question.DateAndTime\" />\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 27,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { DatetimePickerComponent } from \"src/app/shared/components/datetime-picker/datetime-picker.component\";\r\nimport { QuestionTextComponent } from \"../extras\";\r\n\r\n@Component({\r\n  selector: \"datetime-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n      </ion-item>\r\n      <datetime-picker [(datetime)]=\"question.DateAndTime\" />\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    QuestionTextComponent,\r\n    DatetimePickerComponent\r\n  ]\r\n})\r\nexport class DatetimeComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "DatetimePickerComponent",
            "id": "component-DatetimePickerComponent-badde4f56b9a4711a1254571b1c8561f94792ba39aa0e7623023ef5c40b2963a9baebd52188418ed58f293f53577e7b5e92ca64b8e240cc6a405873d16168dca",
            "file": "src/app/shared/components/datetime-picker/datetime-picker.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "datetime-picker",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-item [id]=\"id\" [unpatch] button>\n  <ion-label *rxIf=\"presentation === 'date'\">{{ datetime | utcDate }}</ion-label>\n  <ion-label *rxIf=\"presentation !== 'date'\">{{ datetime | utcDateTime }}</ion-label>\n</ion-item>\n\n<ion-popover [trigger]=\"id\" triggerAction=\"click\" size=\"auto\">\n  <ng-template>\n    <ion-content>\n      <ion-datetime\n        [(date)]=\"datetime\"\n        (ionChange)=\"datetimeChange.emit(datetime)\"\n        [presentation]=\"presentation\" />\n    </ion-content>\n  </ng-template>\n</ion-popover>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "datetime",
                    "defaultValue": "new Date()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "any",
                    "decorators": []
                },
                {
                    "name": "presentation",
                    "defaultValue": "\"date-time\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 50,
                    "type": "\"date\" | \"date-time\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "datetimeChange",
                    "defaultValue": "new EventEmitter<Date>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "id",
                    "defaultValue": "crypto.randomUUID()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 41
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { IfModule } from \"@rx-angular/template/if\";\r\nimport { UnpatchModule } from \"@rx-angular/template/unpatch\";\r\nimport { DateDirective } from \"../../directives/date/date.directive\";\r\nimport { UtcDatePipe, UtcDateTimePipe } from \"../../pipes\";\r\n\r\n@Component({\r\n  selector: \"datetime-picker\",\r\n  template: `\r\n    <ion-item [id]=\"id\" [unpatch] button>\r\n      <ion-label *rxIf=\"presentation === 'date'\">{{ datetime | utcDate }}</ion-label>\r\n      <ion-label *rxIf=\"presentation !== 'date'\">{{ datetime | utcDateTime }}</ion-label>\r\n    </ion-item>\r\n\r\n    <ion-popover [trigger]=\"id\" triggerAction=\"click\" size=\"auto\">\r\n      <ng-template>\r\n        <ion-content>\r\n          <ion-datetime \r\n            [(date)]=\"datetime\" \r\n            (ionChange)=\"datetimeChange.emit(datetime)\" \r\n            [presentation]=\"presentation\" />\r\n        </ion-content>\r\n      </ng-template>\r\n    </ion-popover>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    FormsModule,\r\n    IfModule,\r\n    UnpatchModule,\r\n    UtcDatePipe,\r\n    UtcDateTimePipe,\r\n    DateDirective\r\n  ]\r\n})\r\nexport class DatetimePickerComponent {\r\n  id = crypto.randomUUID();\r\n  \r\n  @Input()\r\n  datetime = new Date();\r\n\r\n  @Output()\r\n  datetimeChange = new EventEmitter<Date>();\r\n\r\n  @Input()\r\n  presentation: \"date\" | \"date-time\" = \"date-time\";\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "DocumentBuilderPage",
            "id": "component-DocumentBuilderPage-2df28686e66f02fe2bd53e97fc7503fb236f7288d2e54527740f15e0a30d882006c6fbf72f21c6592ce0977f558f2e1a4092d3ee82c381ec572d47e10f984eb3",
            "file": "src/app/core/pages/document-builder/document-builder.page.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-document-builder",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-header>\n  <ion-toolbar *rxIf=\"document$; let document\">\n    <ion-title class=\"ion-text-center ion-text-wrap\">\n      {{ document.DocumentTitle }}\n    </ion-title>\n    <ion-buttons *rxIf=\"isMobileApp\" slot=\"end\">\n      <if [condition]=\"document.Pinned\">\n        <ion-button [unpatch] show color=\"primary\">\n          <ion-icon name=\"bookmark\" />\n        </ion-button>\n\n        <ion-button [unpatch] else>\n          <ion-icon name=\"bookmark-outline\" />\n        </ion-button>\n      </if>\n    </ion-buttons>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content *rxIf=\"document$; let document\" class=\"ion-padding\">\n  <actioner-select\n     *rxIf=\"document.CanAddActionerFromApp\"\n     [(actionerId)]=\"document.CurrentActionerOperativeID\"\n     [title]=\"document.MetaData.ActionerText\"\n     [hideMyself]=\"document.MetaData.CannotAddSelfAsActioner || false\" />\n\n  <category-actioner-select\n    *rxIf=\"document.CanAddCategoryActioner && document.DocumentCategory != null\"\n    [title]=\"document.MetaData.ActionerText\"\n    [(actionerId)]=\"document.CurrentActionerOperativeID\"\n    [categoryId]=\"document.DocumentCategory\"\n    [hideMyself]=\"document.MetaData.CannotAddSelfAsActioner || false\" />\n\n  <company-actioner-select\n    *rxIf=\"document.CanHaveCompanyActioner\"\n    [title]=\"document.MetaData.ActionerText\"\n    [(companyId)]=\"document.CompanyActionerId\" />\n\n  <queue-select\n    *rxIf=\"document.Queues && document.Queues.length > 0\"\n    [queueId]=\"document.AutoQueueID\" />\n\n  <site-select\n    *rxIf=\"document.MetaData?.HasSiteList\"\n    [title]=\"document.MetaData.SiteListTitle\"\n    [(siteId)]=\"document.SiteId\" />\n\n  <queue-duration *rxIf=\"document.CanHaveQueueDuration\" />\n\n  <document-page *rxFor=\"let page of document.Pages; index as idx\" [page]=\"page\" [hidden]=\"pageIndex.isNotNumber$(idx) | push\">\n    <document-section *rxFor=\"let section of page.Sections\" [section]=\"section\">\n      <ng-template [ngSwitch]=\"section.SectionQuestiontype\" [questions]=\"section.Questions\" let-question>\n        <label-question *ngSwitchCase=\"QuestionType.Label\" [question]=\"question\" />\n        <checkbox-question *ngSwitchCase=\"QuestionType.Checkbox\" [question]=\"question\" />\n        <radio-group-question *ngSwitchCase=\"QuestionType.RadioGroup\" [section]=\"section\" [question]=\"question\" />\n        <radio-table-question\n          *rxIf=\"section.SectionQuestiontype === QuestionType.RadioGroup && document.MetaData.UsesRadioGroupTable\"\n          [question]=\"question\" />\n        <textarea-question *ngSwitchCase=\"QuestionType.TextArea\" [question]=\"question\" />\n        <select-question *ngSwitchCase=\"QuestionType.Select\" [question]=\"question\" />\n        <checkbox-question *ngSwitchCase=\"QuestionType.CheckboxTextbox\" [question]=\"question\" />\n        <radio-group-textbox-question *ngSwitchCase=\"QuestionType.RadioGroupTextbox\" [question]=\"question\" [section]=\"section\" />\n        <radio-table-textbox-question\n          *rxIf=\"section.SectionQuestiontype === QuestionType.RadioGroupTextbox && document.MetaData.UsesRadioGroupTable\"\n          [question]=\"question\" />\n        <date-question *ngSwitchCase=\"QuestionType.Date\" [question]=\"question\" />\n        <datetime-question *ngSwitchCase=\"QuestionType.DateTime\" [question]=\"question\" />\n        <operative-list-question *ngSwitchCase=\"QuestionType.OperativeList\" [question]=\"question\" />\n        <number-question *ngSwitchCase=\"QuestionType.Number\" [question]=\"question\" />\n        <asset-list-question *ngSwitchCase=\"QuestionType.AssetList\" [question]=\"question\" />\n        <linked-dates-question *ngSwitchCase=\"QuestionType.LinkedDates\" [question]=\"question\" />\n        <signature-question *ngSwitchCase=\"QuestionType.Signature\" [question]=\"question\" />\n        <select-text-question *ngSwitchCase=\"QuestionType.SelectText\" [question]=\"question\" />\n        <time-question *ngSwitchCase=\"QuestionType.Time\" [question]=\"question\" />\n      </ng-template>\n    </document-section>\n  </document-page>\n\n  <remain-anonymous *rxIf=\"document.AllowAnon\" [(isTicked)]=\"document.RemainAnon\" />\n\n  <ion-button\n    (click)=\"submit(document)\"\n    [unpatch]\n    class=\"ion-margin-vertical\"\n    expand=\"full\">\n    Submit\n  </ion-button>\n</ion-content>\n\n<ng-container *rxIf=\"document$; let document\">\n  <ion-footer *rxLet=\"pageIndex.value$; let idx\">\n    <ion-button\n      *rxIf=\"idx > 0\"\n      (click)=\"pageIndex.decrement()\"\n      class=\"float-left\">\n      Back\n    </ion-button>\n    <ion-button\n      *rxIf=\"idx < document.Pages.length - 1\"\n      (click)=\"pageIndex.increment()\"\n      class=\"float-right\">\n      Next\n    </ion-button>\n  </ion-footer>\n</ng-container>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "document$",
                    "defaultValue": "merge(\r\n    this.formFillerStore.getTemplateRequest$(this.route.lastDocumentId$),\r\n  ).pipe(\r\n    takeUntilDestroyed(),\r\n    switchMap(() => this.formFillerStore.writingDocument$),\r\n    shareReplay()\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 147
                },
                {
                    "name": "formFillerStore",
                    "defaultValue": "inject(FormFillerStore)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 142,
                    "modifierKind": [
                        122,
                        144
                    ]
                },
                {
                    "name": "isMobileApp",
                    "defaultValue": "isMobileApp()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 145
                },
                {
                    "name": "pageIndex",
                    "defaultValue": "numberState({\r\n    name: \"PageIndex\",\r\n    initialValue: 0,\r\n    props: state => ({\r\n      isNotNumber$: (page: number) => state.is$(idx => idx !== page),\r\n      isGreaterThan0$: () => state.is$(idx => idx > 0),\r\n      isLessThanDocumentLength$: () => this.document$.pipe(\r\n        filter(doc => doc != null),\r\n        switchMap(doc => state.is$(idx => idx < doc!.Pages.length))\r\n      )\r\n    })\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 160
                },
                {
                    "name": "QuestionType",
                    "defaultValue": "QuestionType",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 144
                },
                {
                    "name": "route",
                    "defaultValue": "inject(DocumentBuilderRoute)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 141,
                    "modifierKind": [
                        122,
                        144
                    ]
                },
                {
                    "name": "submit",
                    "defaultValue": "reaction<SiteDocument>(document$ => this.formFillerStore.submitDocument$(document$).pipe(\r\n    takeUntilDestroyed(),\r\n    clickReaction()\r\n  ))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 155
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, inject } from \"@angular/core\";\r\nimport { takeUntilDestroyed } from \"@angular/core/rxjs-interop\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { filter, merge, shareReplay, switchMap } from \"rxjs\";\r\nimport { IfComponent } from \"src/app/shared/components\";\r\nimport { importNgSwitch, importRxTemplate } from \"src/app/shared/imports\";\r\nimport { FormFillerStore } from \"../../stores/site-document/form-filler/form-filler.store\";\r\nimport { DocumentPageComponent, DocumentSectionComponent, QuestionTemplateDirective, importInputTypes, importQuestionTypes } from \"./components\";\r\nimport { clickReaction, reaction } from \"src/app/shared/reactions\";\r\nimport { QuestionType, SiteDocument } from \"../../stores/site-document/models\";\r\nimport { isMobileApp } from \"src/app/shared/plugins/platform.plugin\";\r\nimport { numberState } from \"src/app/shared/states/number.state\";\r\nimport { DocumentBuilderRoute } from \"./document-builder.route\";\r\nimport { importDocumentBuilderModals } from \"./modals\";\r\n\r\n@Component({\r\n  selector: 'app-document-builder',\r\n  template: `\r\n    <ion-header>\r\n      <ion-toolbar *rxIf=\"document$; let document\">\r\n        <ion-title class=\"ion-text-center ion-text-wrap\">\r\n          {{ document.DocumentTitle }}\r\n        </ion-title>\r\n        <ion-buttons *rxIf=\"isMobileApp\" slot=\"end\">\r\n          <if [condition]=\"document.Pinned\">\r\n            <ion-button [unpatch] show color=\"primary\">\r\n              <ion-icon name=\"bookmark\" />\r\n            </ion-button>\r\n\r\n            <ion-button [unpatch] else>\r\n              <ion-icon name=\"bookmark-outline\" />\r\n            </ion-button>\r\n          </if>\r\n        </ion-buttons>\r\n      </ion-toolbar>\r\n    </ion-header>\r\n\r\n    <ion-content *rxIf=\"document$; let document\" class=\"ion-padding\">\r\n      <actioner-select\r\n         *rxIf=\"document.CanAddActionerFromApp\"\r\n         [(actionerId)]=\"document.CurrentActionerOperativeID\"\r\n         [title]=\"document.MetaData.ActionerText\"\r\n         [hideMyself]=\"document.MetaData.CannotAddSelfAsActioner || false\" />\r\n      \r\n      <category-actioner-select \r\n        *rxIf=\"document.CanAddCategoryActioner && document.DocumentCategory != null\" \r\n        [title]=\"document.MetaData.ActionerText\"\r\n        [(actionerId)]=\"document.CurrentActionerOperativeID\"\r\n        [categoryId]=\"document.DocumentCategory\"\r\n        [hideMyself]=\"document.MetaData.CannotAddSelfAsActioner || false\" />\r\n      \r\n      <company-actioner-select \r\n        *rxIf=\"document.CanHaveCompanyActioner\"\r\n        [title]=\"document.MetaData.ActionerText\"\r\n        [(companyId)]=\"document.CompanyActionerId\" />\r\n      \r\n      <queue-select \r\n        *rxIf=\"document.Queues && document.Queues.length > 0\"\r\n        [queueId]=\"document.AutoQueueID\" />\r\n      \r\n      <site-select \r\n        *rxIf=\"document.MetaData?.HasSiteList\"\r\n        [title]=\"document.MetaData.SiteListTitle\"\r\n        [(siteId)]=\"document.SiteId\" />\r\n      \r\n      <queue-duration *rxIf=\"document.CanHaveQueueDuration\" />\r\n\r\n      <document-page *rxFor=\"let page of document.Pages; index as idx\" [page]=\"page\" [hidden]=\"pageIndex.isNotNumber$(idx) | push\">\r\n        <document-section *rxFor=\"let section of page.Sections\" [section]=\"section\">\r\n          <ng-template [ngSwitch]=\"section.SectionQuestiontype\" [questions]=\"section.Questions\" let-question>\r\n            <label-question *ngSwitchCase=\"QuestionType.Label\" [question]=\"question\" />\r\n            <checkbox-question *ngSwitchCase=\"QuestionType.Checkbox\" [question]=\"question\" />\r\n            <radio-group-question *ngSwitchCase=\"QuestionType.RadioGroup\" [section]=\"section\" [question]=\"question\" />\r\n            <radio-table-question \r\n              *rxIf=\"section.SectionQuestiontype === QuestionType.RadioGroup && document.MetaData.UsesRadioGroupTable\" \r\n              [question]=\"question\" />\r\n            <textarea-question *ngSwitchCase=\"QuestionType.TextArea\" [question]=\"question\" />\r\n            <select-question *ngSwitchCase=\"QuestionType.Select\" [question]=\"question\" />\r\n            <checkbox-question *ngSwitchCase=\"QuestionType.CheckboxTextbox\" [question]=\"question\" />\r\n            <radio-group-textbox-question *ngSwitchCase=\"QuestionType.RadioGroupTextbox\" [question]=\"question\" [section]=\"section\" />\r\n            <radio-table-textbox-question \r\n              *rxIf=\"section.SectionQuestiontype === QuestionType.RadioGroupTextbox && document.MetaData.UsesRadioGroupTable\" \r\n              [question]=\"question\" />\r\n            <date-question *ngSwitchCase=\"QuestionType.Date\" [question]=\"question\" />\r\n            <datetime-question *ngSwitchCase=\"QuestionType.DateTime\" [question]=\"question\" />\r\n            <operative-list-question *ngSwitchCase=\"QuestionType.OperativeList\" [question]=\"question\" />\r\n            <number-question *ngSwitchCase=\"QuestionType.Number\" [question]=\"question\" />\r\n            <asset-list-question *ngSwitchCase=\"QuestionType.AssetList\" [question]=\"question\" />\r\n            <linked-dates-question *ngSwitchCase=\"QuestionType.LinkedDates\" [question]=\"question\" />\r\n            <signature-question *ngSwitchCase=\"QuestionType.Signature\" [question]=\"question\" />\r\n            <select-text-question *ngSwitchCase=\"QuestionType.SelectText\" [question]=\"question\" />\r\n            <time-question *ngSwitchCase=\"QuestionType.Time\" [question]=\"question\" />\r\n          </ng-template>\r\n        </document-section>\r\n      </document-page>\r\n\r\n      <remain-anonymous *rxIf=\"document.AllowAnon\" [(isTicked)]=\"document.RemainAnon\" />\r\n\r\n      <ion-button\r\n        (click)=\"submit(document)\"\r\n        [unpatch] \r\n        class=\"ion-margin-vertical\" \r\n        expand=\"full\">\r\n        Submit\r\n      </ion-button>\r\n    </ion-content>\r\n\r\n    <ng-container *rxIf=\"document$; let document\">\r\n      <ion-footer *rxLet=\"pageIndex.value$; let idx\">\r\n        <ion-button \r\n          *rxIf=\"idx > 0\" \r\n          (click)=\"pageIndex.decrement()\"\r\n          class=\"float-left\">\r\n          Back\r\n        </ion-button>\r\n        <ion-button \r\n          *rxIf=\"idx < document.Pages.length - 1\" \r\n          (click)=\"pageIndex.increment()\"\r\n          class=\"float-right\">\r\n          Next\r\n        </ion-button>\r\n      </ion-footer>\r\n    </ng-container>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    ...importNgSwitch(),\r\n    IfComponent,\r\n    DocumentPageComponent,\r\n    DocumentSectionComponent,\r\n    QuestionTemplateDirective,\r\n    ...importInputTypes(),\r\n    ...importQuestionTypes(),\r\n    ...importDocumentBuilderModals()\r\n  ]\r\n})\r\nexport class DocumentBuilderPage {\r\n  protected readonly route = inject(DocumentBuilderRoute);\r\n  protected readonly formFillerStore = inject(FormFillerStore);\r\n\r\n  QuestionType = QuestionType;\r\n  isMobileApp = isMobileApp();\r\n\r\n  document$ = merge(\r\n    this.formFillerStore.getTemplateRequest$(this.route.lastDocumentId$),\r\n  ).pipe(\r\n    takeUntilDestroyed(),\r\n    switchMap(() => this.formFillerStore.writingDocument$),\r\n    shareReplay()\r\n  );\r\n\r\n  submit = reaction<SiteDocument>(document$ => this.formFillerStore.submitDocument$(document$).pipe(\r\n    takeUntilDestroyed(),\r\n    clickReaction()\r\n  ));\r\n\r\n  pageIndex = numberState({\r\n    name: \"PageIndex\",\r\n    initialValue: 0,\r\n    props: state => ({\r\n      isNotNumber$: (page: number) => state.is$(idx => idx !== page),\r\n      isGreaterThan0$: () => state.is$(idx => idx > 0),\r\n      isLessThanDocumentLength$: () => this.document$.pipe(\r\n        filter(doc => doc != null),\r\n        switchMap(doc => state.is$(idx => idx < doc!.Pages.length))\r\n      )\r\n    })\r\n  })\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "DocumentImageUploadComponent",
            "id": "component-DocumentImageUploadComponent-2362c2bfb40a6c36887cb67b958fbee26022b580d89650ae07bdd7b1192afe2e19fb6615e2c474e3afcc5fc41d1b2a01c79682e234e6402bcae8e779f48d34af",
            "file": "src/app/core/pages/document-builder/components/input-types/document-image-upload/document-image-upload.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "document-image-upload",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-button [id]=\"id\" expand=\"block\" fill=\"outline\">\n  Document Images\n  <if [condition]=\"images.length > 0\">\n    <span show>({{ images.length }})</span>\n    <ion-icon else name=\"images-outline\" slot=\"end\" />\n  </if>\n</ion-button>\n\n<ion-modal #modal [trigger]=\"id\">\n  <ng-template>\n    <ion-header>\n      <ion-toolbar>\n        <ion-title class=\"text-center\">Images</ion-title>\n        <ion-buttons slot=\"end\">\n          <ion-button (click)=\"modal.dismiss()\">\n            <ion-icon name=\"close-outline\" slot=\"icon-only\" />\n          </ion-button>\n        </ion-buttons>\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content class=\"ion-padding\">\n      <if [condition]=\"images.length === 0\">\n        <p show class=\"text-center\">\n          Use camera and gallery buttons to add images\n        </p>\n\n        <ion-grid else>\n          <ion-row>\n            <ion-col *rxFor=\"let img of images\" size=\"6\" sizeMd=\"4\" sizeLg=\"3\">\n              <ion-fab vertical=\"top\" horizontal=\"end\">\n                <ion-fab-button (click)=\"remove(img)\" size=\"small\" color=\"danger\">\n                  <ion-icon name=\"close-outline\" />\n                </ion-fab-button>\n              </ion-fab>\n\n              <ion-img [src]=\"img\" />\n            </ion-col>\n          </ion-row>\n        </ion-grid>\n      </if>\n\n      <ion-fab vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\">\n        <if [condition]=\"isMobileApp\">\n          <ng-container show>\n            <ion-fab-button [camera]=\"cameraOptions\" (takePhoto)=\"addPhoto($event)\" class=\"ion-margin-vertical\">\n              <ion-icon name=\"camera-outline\" />\n            </ion-fab-button>\n\n            <ion-fab-button [camera]=\"galleryOptions\" (takePhoto)=\"addPhoto($event)\" class=\"ion-margin-vertical\">\n              <ion-icon name=\"image-outline\" />\n            </ion-fab-button>\n          </ng-container>\n\n          <ion-fab-button else>\n            <upload (uploadFiles)=\"uploads($event)\" accept=\"image/*\" />\n            <ion-icon name=\"camera-outline\" />\n          </ion-fab-button>\n        </if>\n      </ion-fab>\n    </ion-content>\n  </ng-template>\n</ion-modal>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "document",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 100,
                    "type": "SiteDocument",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "cameraOptions",
                    "defaultValue": "{\n    resultType: CameraResultType.Base64\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ImageOptions",
                    "optional": false,
                    "description": "",
                    "line": 102
                },
                {
                    "name": "docImages$",
                    "defaultValue": "this.input$(\"document\").pipe(\n    map(() => this.document.DocumentGroup)\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<string>",
                    "optional": false,
                    "description": "",
                    "line": 111
                },
                {
                    "name": "galleryOptions",
                    "defaultValue": "{\n    resultType: CameraResultType.Base64,\n    source: CameraSource.Photos\n  }",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ImageOptions",
                    "optional": false,
                    "description": "",
                    "line": 106
                },
                {
                    "name": "id",
                    "defaultValue": "crypto.randomUUID()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 94
                },
                {
                    "name": "images",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string[]",
                    "optional": false,
                    "description": "",
                    "line": 97
                },
                {
                    "name": "isMobileApp",
                    "defaultValue": "isMobileApp()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 95
                },
                {
                    "name": "siteDocumentImageStore",
                    "defaultValue": "inject(SiteDocumentImageStore)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 92
                }
            ],
            "methodsClass": [
                {
                    "name": "addPhoto",
                    "args": [
                        {
                            "name": "photo",
                            "type": "Photo",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 115,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "photo",
                            "type": "Photo",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "remove",
                    "args": [
                        {
                            "name": "img",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 129,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "img",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "uploads",
                    "args": [
                        {
                            "name": "files",
                            "type": "DataUrlFile[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 122,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "files",
                            "type": "DataUrlFile[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input, inject } from \"@angular/core\";\nimport { CameraResultType, CameraSource, ImageOptions, Photo } from \"@capacitor/camera\";\nimport { IonicModule } from \"@ionic/angular\";\nimport { Observable, map } from \"rxjs\";\nimport { SiteDocumentImageStore } from \"src/app/core/stores/site-document-image/site-document-image.store\";\nimport { SiteDocument } from \"src/app/core/stores/site-document/models\";\nimport { IfComponent, UploadComponent } from \"src/app/shared/components\";\nimport { CameraDirective } from \"src/app/shared/directives\";\nimport { importRxTemplate } from \"src/app/shared/imports\";\nimport { AngularComponent, withOnChanges } from \"src/app/shared/lifecycles\";\nimport { DataUrlFile } from \"src/app/shared/models/files/data-url-file.model\";\nimport { isMobileApp } from \"src/app/shared/plugins/platform.plugin\";\n\n@Component({\n  selector: \"document-image-upload\",\n  template: `\n    <ion-button [id]=\"id\" expand=\"block\" fill=\"outline\">\n      Document Images\n      <if [condition]=\"images.length > 0\">\n        <span show>({{ images.length }})</span>\n        <ion-icon else name=\"images-outline\" slot=\"end\" />\n      </if>\n    </ion-button>\n\n    <ion-modal #modal [trigger]=\"id\">\n      <ng-template>\n        <ion-header>\n          <ion-toolbar>\n            <ion-title class=\"text-center\">Images</ion-title>\n            <ion-buttons slot=\"end\">\n              <ion-button (click)=\"modal.dismiss()\">\n                <ion-icon name=\"close-outline\" slot=\"icon-only\" />\n              </ion-button>\n            </ion-buttons>\n          </ion-toolbar>\n        </ion-header>\n\n        <ion-content class=\"ion-padding\">\n          <if [condition]=\"images.length === 0\">\n            <p show class=\"text-center\">\n              Use camera and gallery buttons to add images\n            </p>\n\n            <ion-grid else>\n              <ion-row>\n                <ion-col *rxFor=\"let img of images\" size=\"6\" sizeMd=\"4\" sizeLg=\"3\">\n                  <ion-fab vertical=\"top\" horizontal=\"end\">\n                    <ion-fab-button (click)=\"remove(img)\" size=\"small\" color=\"danger\">\n                      <ion-icon name=\"close-outline\" />\n                    </ion-fab-button>\n                  </ion-fab>\n\n                  <ion-img [src]=\"img\" />\n                </ion-col>\n              </ion-row>\n            </ion-grid>\n          </if>\n\n          <ion-fab vertical=\"bottom\" horizontal=\"end\" slot=\"fixed\">\n            <if [condition]=\"isMobileApp\">\n              <ng-container show>\n                <ion-fab-button [camera]=\"cameraOptions\" (takePhoto)=\"addPhoto($event)\" class=\"ion-margin-vertical\">\n                  <ion-icon name=\"camera-outline\" />\n                </ion-fab-button>\n\n                <ion-fab-button [camera]=\"galleryOptions\" (takePhoto)=\"addPhoto($event)\" class=\"ion-margin-vertical\">\n                  <ion-icon name=\"image-outline\" />\n                </ion-fab-button>\n              </ng-container>\n\n              <ion-fab-button else>\n                <upload (uploadFiles)=\"uploads($event)\" accept=\"image/*\" />\n                <ion-icon name=\"camera-outline\" />\n              </ion-fab-button>\n            </if>\n          </ion-fab>\n        </ion-content>\n      </ng-template>\n    </ion-modal>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  standalone: true,\n  imports: [\n    IonicModule,\n    ...importRxTemplate(),\n    IfComponent,\n    UploadComponent,\n    CameraDirective\n  ]\n})\nexport class DocumentImageUploadComponent extends AngularComponent(withOnChanges) {\n  siteDocumentImageStore = inject(SiteDocumentImageStore);\n\n  id = crypto.randomUUID();\n  isMobileApp = isMobileApp();\n\n  images: string[] = [];\n\n  @Input()\n  document!: SiteDocument;\n\n  cameraOptions: ImageOptions = {\n    resultType: CameraResultType.Base64\n  }\n\n  galleryOptions: ImageOptions = {\n    resultType: CameraResultType.Base64,\n    source: CameraSource.Photos\n  }\n\n  docImages$: Observable<string> = this.input$(\"document\").pipe(\n    map(() => this.document.DocumentGroup)\n  );\n\n  addPhoto(photo: Photo) {\n    this.images = [\n      ...this.images,\n      photo.base64String as string\n    ]\n  }\n\n  uploads(files: DataUrlFile[]) {\n    this.images = [\n      ...this.images,\n      ...files.map(f => f.dataUrl)\n    ];\n  }\n\n  remove(img: string) {\n    this.images = this.images.filter(i => i !== img);\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "DocumentPageComponent",
            "id": "component-DocumentPageComponent-cf6c3498d6824a4897791e44dc28e02e847141672bb3fbe2f5a1ae80dad1c3b4bf508e5f24f3b201a16141afed55b51e82bae30b7548eed25bf5c096023c73ba",
            "file": "src/app/core/pages/document-builder/components/document-page/document-page.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "document-page[page]",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-item lines=\"none\">\n  <ion-label>{{ page.PageTitle }}</ion-label>\n</ion-item>\n<ng-content></ng-content>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "page",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "Page",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Page } from \"src/app/core/stores/site-document/models\";\r\n\r\n@Component({\r\n  selector: \"document-page[page]\",\r\n  template: `\r\n    <ion-item lines=\"none\">\r\n      <ion-label>{{ page.PageTitle }}</ion-label>\r\n    </ion-item>\r\n    <ng-content></ng-content>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [IonicModule]\r\n})\r\nexport class DocumentPageComponent {\r\n  @Input()\r\n  page!: Page;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "DocumentSectionComponent",
            "id": "component-DocumentSectionComponent-35eb87d34141dd19046bcfc7075089195c7a6537a77793fcbfde92f026994ed08933fe9e7f5800976336d5708c16ef94f5ded3710728b14dce2d1ac3bc5a2b82",
            "file": "src/app/core/pages/document-builder/components/document-section/document-section.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "document-section[section]",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-label>{{ section.SectionTitle }}</ion-label>\n<ng-container *rxIf=\"section.IsRepeatable\">\n  <ion-button color=\"secondary\" fill=\"clear\">\n    <ion-icon name=\"duplicate-outline\" />\n  </ion-button>\n  <ion-button color=\"secondary\" fill=\"clear\">\n    <ion-icon name=\"remove-circle-outline\" />\n  </ion-button>\n</ng-container>\n\n<ng-container *rxFor=\"let question of section.Questions\">\n  <ng-container *ngTemplateOutlet=\"questions; context: { $implicit: question }\" />\n</ng-container>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "section",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "Section",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "questions",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TemplateRef<>",
                    "optional": false,
                    "description": "",
                    "line": 51,
                    "decorators": [
                        {
                            "name": "ContentChild",
                            "stringifiedArguments": "QuestionTemplateDirective, {read: TemplateRef}"
                        }
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { NgTemplateOutlet } from \"@angular/common\";\r\nimport { ChangeDetectionStrategy, Component, ContentChild, Directive, Input, TemplateRef } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question, Section } from \"src/app/core/stores/site-document/models\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\n\r\n@Directive({\r\n  selector: \"ng-template[questions]\",\r\n  standalone: true\r\n})\r\nexport class QuestionTemplateDirective {\r\n  @Input()\r\n  questions!: Question[];\r\n\r\n  static ngTemplateContextGuard(dir: QuestionTemplateDirective, ctx: unknown): ctx is { $implicit: Question } {\r\n    return true;\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: \"document-section[section]\",\r\n  template: `\r\n    <ion-label>{{ section.SectionTitle }}</ion-label>\r\n    <ng-container *rxIf=\"section.IsRepeatable\">\r\n      <ion-button color=\"secondary\" fill=\"clear\">\r\n        <ion-icon name=\"duplicate-outline\" />\r\n      </ion-button>\r\n      <ion-button color=\"secondary\" fill=\"clear\">\r\n        <ion-icon name=\"remove-circle-outline\" />\r\n      </ion-button>\r\n    </ng-container>\r\n\r\n    <ng-container *rxFor=\"let question of section.Questions\">\r\n      <ng-container *ngTemplateOutlet=\"questions; context: { $implicit: question }\" />\r\n    </ng-container>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    NgTemplateOutlet,\r\n    QuestionTemplateDirective\r\n  ]\r\n})\r\nexport class DocumentSectionComponent {\r\n  @Input()\r\n  section!: Section;\r\n\r\n  @ContentChild(QuestionTemplateDirective, { read: TemplateRef }) \r\n  questions!: TemplateRef<unknown>;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "DocumentSummaryModal",
            "id": "component-DocumentSummaryModal-8e1e9c378f02fc2400200b2d02718daf04d2a580a6120b5842a6a564baabe5781ba960b6c4a98544fecabefdfd26cf49eaccacc5fca72f61ae6d025e78aa9b6d",
            "file": "src/app/core/pages/document-builder/modals/document-summary/document-summary.modal.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "document-summary-modal",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-modal #modal [trigger]=\"trigger\" [isOpen]=\"isOpen\">\n  <ng-template>\n    <ion-header>\n      <ion-toolbar>\n        <ion-title class=\"text-center\">Summary</ion-title>\n        <ion-buttons slot=\"end\">\n          <ion-button (click)=\"modal.dismiss()\" [unpatch]>\n            <ion-icon name=\"close-outline\" slot=\"icon-only\" />\n          </ion-button>\n        </ion-buttons>\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content class=\"ion-padding\">\n      <ion-item *rxIf=\"document.CurrentActionerOperativeID != null\" lines=\"none\">\n        <ion-label>\n          <h3>{{ document.MetaData.ActionerText || \"Actioner\" }}</h3>\n          <p>{{ document.CurrentActionerOperativeID }}</p>\n        </ion-label>\n      </ion-item>\n\n      <ion-item *rxIf=\"document.CompanyActionerId != null\" lines=\"none\">\n        <ion-label>\n          <h3>{{ document.MetaData.ActionerText || \"Company Actioner\" }}</h3>\n          <p>{{ document.CompanyActionerId }}</p>\n        </ion-label>\n      </ion-item>\n\n      <ion-item *rxIf=\"document.AutoQueueID != null\" lines=\"none\">\n        <ion-label>\n          <h3>Queue</h3>\n          <p>{{ document.CompanyActionerId }}</p>\n        </ion-label>\n      </ion-item>\n\n      <ion-item *rxIf=\"document.SiteId != null\" lines=\"none\">\n        <ion-label>\n          <h3>{{ document.MetaData.SiteListTitle || \"Site\" }}</h3>\n          <p>{{ document.SiteId }}</p>\n        </ion-label>\n      </ion-item>\n\n      <ion-item *rxIf=\"document.QueueDuration != null\" lines=\"none\">\n        <ion-label>\n          <h3>Queue Duration</h3>\n          <p>{{ document.QueueDuration.Value }} ({{ document.QueueDuration.Type }})</p>\n        </ion-label>\n      </ion-item>\n\n      <ion-item *rxIf=\"document.RemainAnon\" lines=\"none\">\n        <ion-checkbox checked disabled=\"true\">Remain Anonymous?</ion-checkbox>\n      </ion-item>\n    </ion-content>\n\n    <ion-footer>\n      <ion-grid>\n        <ion-row>\n          <ion-col>\n            <ion-button (click)=\"modal.dismiss()\" color=\"danger\" expand=\"full\">Cancel</ion-button>\n          </ion-col>\n          <ion-col>\n            <ion-button expand=\"full\">Submit</ion-button>\n          </ion-col>\n        </ion-row>\n      </ion-grid>\n    </ion-footer>\n  </ng-template>\n</ion-modal>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 90,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 87,
                    "type": "string",
                    "decorators": []
                },
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 93,
                    "type": "SiteDocument",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\nimport { IonicModule } from \"@ionic/angular\";\nimport { SiteDocument } from \"src/app/core/stores/site-document/models\";\nimport { importRxTemplate } from \"src/app/shared/imports\";\n\n@Component({\n  selector: \"document-summary-modal\",\n  template: `\n    <ion-modal #modal [trigger]=\"trigger\" [isOpen]=\"isOpen\">\n      <ng-template>\n        <ion-header>\n          <ion-toolbar>\n            <ion-title class=\"text-center\">Summary</ion-title>\n            <ion-buttons slot=\"end\">\n              <ion-button (click)=\"modal.dismiss()\" [unpatch]>\n                <ion-icon name=\"close-outline\" slot=\"icon-only\" />\n              </ion-button>\n            </ion-buttons>\n          </ion-toolbar>\n        </ion-header>\n\n        <ion-content class=\"ion-padding\">\n          <ion-item *rxIf=\"document.CurrentActionerOperativeID != null\" lines=\"none\">\n            <ion-label>\n              <h3>{{ document.MetaData.ActionerText || \"Actioner\" }}</h3>\n              <p>{{ document.CurrentActionerOperativeID }}</p>\n            </ion-label>\n          </ion-item>\n        \n          <ion-item *rxIf=\"document.CompanyActionerId != null\" lines=\"none\">\n            <ion-label>\n              <h3>{{ document.MetaData.ActionerText || \"Company Actioner\" }}</h3>\n              <p>{{ document.CompanyActionerId }}</p>\n            </ion-label>\n          </ion-item>\n\n          <ion-item *rxIf=\"document.AutoQueueID != null\" lines=\"none\">\n            <ion-label>\n              <h3>Queue</h3>\n              <p>{{ document.CompanyActionerId }}</p>\n            </ion-label>\n          </ion-item>\n\n          <ion-item *rxIf=\"document.SiteId != null\" lines=\"none\">\n            <ion-label>\n              <h3>{{ document.MetaData.SiteListTitle || \"Site\" }}</h3>\n              <p>{{ document.SiteId }}</p>\n            </ion-label>\n          </ion-item>\n\n          <ion-item *rxIf=\"document.QueueDuration != null\" lines=\"none\">\n            <ion-label>\n              <h3>Queue Duration</h3>\n              <p>{{ document.QueueDuration.Value }} ({{ document.QueueDuration.Type }})</p>\n            </ion-label>\n          </ion-item>\n\n          <ion-item *rxIf=\"document.RemainAnon\" lines=\"none\">\n            <ion-checkbox checked disabled=\"true\">Remain Anonymous?</ion-checkbox>\n          </ion-item>\n        </ion-content>\n\n        <ion-footer>\n          <ion-grid>\n            <ion-row>\n              <ion-col>\n                <ion-button (click)=\"modal.dismiss()\" color=\"danger\" expand=\"full\">Cancel</ion-button>\n              </ion-col>\n              <ion-col>\n                <ion-button expand=\"full\">Submit</ion-button>\n              </ion-col>\n            </ion-row>\n          </ion-grid>\n        </ion-footer>\n      </ng-template>\n    </ion-modal>\n  `,\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    IonicModule,\n    importRxTemplate(),\n  ]\n})\nexport class DocumentSummaryModal {\n  @Input({ required: true })\n  trigger!: string;\n\n  @Input()\n  isOpen: boolean = false;\n\n  @Input({ required: true })\n  document!: SiteDocument;\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "FileUploadComponent",
            "id": "component-FileUploadComponent-d28a3239cabdddcef5eb1e1d49591978374b5620072fa2e9bf2c77fffa2d28c0c5cbe1a7e0bcf1a8db74225e9a4e81da0b09e51fec3634c1161035a7a54b0798",
            "file": "src/app/core/pages/document-builder/components/question-types/extras/file-upload/file-upload.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "file-upload",
            "styleUrls": [],
            "styles": [],
            "template": "<if [condition]=\"filename == null\">\n  <ion-button show fill=\"clear\">\n    <upload (uploadFiles)=\"upload($event)\" />\n    <ion-icon name=\"cloud-upload-outline\" />\n  </ion-button>\n\n  <ion-button else (click)=\"clear()\" fill=\"clear\" color=\"danger\">\n    <ion-icon name=\"trash-bin-outline\" />\n  </ion-button>\n</if>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "dataUrl",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 31
                },
                {
                    "name": "filename",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string | null",
                    "optional": false,
                    "description": "",
                    "line": 30
                }
            ],
            "methodsClass": [
                {
                    "name": "clear",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 40,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "upload",
                    "args": [
                        {
                            "name": "files",
                            "type": "DataUrlFile[]",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 33,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "files",
                            "type": "DataUrlFile[]",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { IfComponent } from \"src/app/shared/components/if/if.component\";\r\nimport { UploadComponent } from \"src/app/shared/components/upload/upload.component\";\r\nimport { DataUrlFile } from \"src/app/shared/models/files/data-url-file.model\";\r\n\r\n@Component({\r\n  selector: \"file-upload\",\r\n  template: `\r\n    <if [condition]=\"filename == null\">\r\n      <ion-button show fill=\"clear\">\r\n        <upload (uploadFiles)=\"upload($event)\" />\r\n        <ion-icon name=\"cloud-upload-outline\" />\r\n      </ion-button>\r\n\r\n      <ion-button else (click)=\"clear()\" fill=\"clear\" color=\"danger\">\r\n        <ion-icon name=\"trash-bin-outline\" />\r\n      </ion-button>\r\n    </if>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    IfComponent,\r\n    UploadComponent\r\n  ]\r\n})\r\nexport class FileUploadComponent {\r\n  filename: string | null = null;\r\n  dataUrl: string | null = null;\r\n\r\n  upload(files: DataUrlFile[]) {\r\n    if (files[0] != null) {\r\n      this.filename = files[0].name;\r\n      this.dataUrl = files[0].dataUrl;\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    this.filename = null;\r\n    this.dataUrl = null;\r\n  }\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "IfComponent",
            "id": "component-IfComponent-49aa754341c7260171827bb660f161dbc2cc054df9a2edc53d486634bcdfeb60fd1a43c68a9da347701b763984c5664e1ab2191d5e90d9a9956f3dea2dad9706",
            "file": "src/app/shared/components/if/if.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "if",
            "styleUrls": [],
            "styles": [
                "\n    :host { display: contents }\n  "
            ],
            "template": "<ng-content *rxIf=\"condition\" select=\"[show]\"></ng-content>\n<ng-content *rxIf=\"!condition\" select=\"[else]\"></ng-content>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "boolean | ObservableInput<boolean>",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { RxIf } from \"@rx-angular/template/if\";\r\nimport { ObservableInput } from \"rxjs\";\r\n\r\n@Component({\r\n  selector: 'if',\r\n  styles: [`\r\n    :host { display: contents }\r\n  `],\r\n  template:`\r\n    <ng-content *rxIf=\"condition\" select=\"[show]\"></ng-content>\r\n    <ng-content *rxIf=\"!condition\" select=\"[else]\"></ng-content>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [RxIf]\r\n})\r\nexport class IfComponent {\r\n  @Input({ required: true }) condition!: boolean | ObservableInput<boolean>;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n    :host { display: contents }\n  \n"
        },
        {
            "name": "LabelComponent",
            "id": "component-LabelComponent-760195a4dcb49ceb49001ba02f11ccfd4472848a8515131d0a8337466656d03b779b41b70692d15d1d36ddfee30c6ebb382e2cc5796202052896b67f58d0271c",
            "file": "src/app/core/pages/document-builder/components/question-types/00-label/label.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "label-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-item lines=\"none\">\n  <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n  <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\n  <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\n</ion-item>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\n\r\n@Component({\r\n  selector: 'label-question',\r\n  template: `\r\n    <ion-item lines=\"none\">\r\n      <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n      <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\r\n      <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\r\n    </ion-item>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    QuestionTextComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent\r\n  ]\r\n})\r\nexport class LabelComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "LinkedBoolComponent",
            "id": "component-LinkedBoolComponent-35c394d1f7d8162420250fcdf452917d1cbcea4322a16af91fd8af3fdb9f2d9180af86da479b95319ae7c1ba11bdeff169b73abf5305e75e4c8949f113bd1d09",
            "file": "src/app/core/pages/document-builder/components/question-types/16-linked-bool/linked-bool.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "linked-bool-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n    <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\n    <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\n  </ion-item>\n\n  <ion-item lines=\"none\">\n    <ion-label>{{ section.TableTitles[1] }}</ion-label>\n    <ion-checkbox [(ngModel)]=\"question.YesNoNA\" slot=\"end\" />\n  </ion-item>\n\n  <ion-item>\n    <ion-label>{{ section.TableTitles[2] }}</ion-label>\n    <ion-checkbox [disabled]=\"!question.YesNoNA\" slot=\"end\" />\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "Question",
                    "decorators": []
                },
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "Section",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question, Section } from \"src/app/core/stores/site-document/models\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\n\r\n@Component({\r\n  selector: \"linked-bool-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n        <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\r\n        <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\r\n      </ion-item>\r\n\r\n      <ion-item lines=\"none\">\r\n        <ion-label>{{ section.TableTitles[1] }}</ion-label>\r\n        <ion-checkbox [(ngModel)]=\"question.YesNoNA\" slot=\"end\" />\r\n      </ion-item>\r\n\r\n      <ion-item>\r\n        <ion-label>{{ section.TableTitles[2] }}</ion-label>\r\n        <ion-checkbox [disabled]=\"!question.YesNoNA\" slot=\"end\" />\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  standalone: true,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    FormsModule,\r\n    QuestionTextComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent\r\n  ]\r\n})\r\nexport class LinkedBoolComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n\r\n  @Input({ required: true })\r\n  section!: Section;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "LinkedDatesComponent",
            "id": "component-LinkedDatesComponent-ab717f0ec08cef6380abe629277444e244fd6f1973e0295fb6dc09544f40b4e4f0d3cda5b3e7225ca8825c26afea69d88930eaae996ff02fb4b50664f315ff53",
            "file": "src/app/core/pages/document-builder/components/question-types/18-linked-dates/linked-dates.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "linked-dates-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n  </ion-item>\n  <datetime-picker [(datetime)]=\"question.DateAndTime\" presentation=\"date\" />\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.CascadeOptionsText }}</question-text>\n  </ion-item>\n  <datetime-picker [(datetime)]=\"question.DateAndTime2\" presentation=\"date\" />\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 31,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { DatetimePickerComponent } from \"src/app/shared/components/datetime-picker/datetime-picker.component\";\r\nimport { QuestionTextComponent } from \"../extras\";\r\n\r\n@Component({\r\n  selector: \"linked-dates-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n      </ion-item>\r\n      <datetime-picker [(datetime)]=\"question.DateAndTime\" presentation=\"date\" />\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.CascadeOptionsText }}</question-text>\r\n      </ion-item>\r\n      <datetime-picker [(datetime)]=\"question.DateAndTime2\" presentation=\"date\" />\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    QuestionTextComponent,\r\n    DatetimePickerComponent\r\n  ]\r\n})\r\nexport class LinkedDatesComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "LinkedTimeComponent",
            "id": "component-LinkedTimeComponent-02426ce7e93287fe8cc8e5b44d11c253d4fe0f3c59db4a197f46edd32e663a7142721137436fbac986bdfb43bc9e026c5745194a7acea8f5bcaeceeed7bf9b96",
            "file": "src/app/core/pages/document-builder/components/question-types/33-linked-time/linked-time.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "linked-time",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { QuestionTextComponent } from \"../extras\";\r\n\r\n@Component({\r\n  selector: \"linked-time\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [IonicModule, QuestionTextComponent]\r\n})\r\nexport class LinkedTimeComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "LocalAssetSearchComponent",
            "id": "component-LocalAssetSearchComponent-621cf88dc79f592acc345cb36b9d0988abf7621146e87c6b2cab84aa6b88050cf04126daa7567b84287835d3b76400fe71227c77ec26c3882f15a76f00dbbf45",
            "file": "src/app/shared/modals/asset-list/components/local-asset-search/local-asset-search.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "local-asset-search",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-searchbar class=\"animate__animated animate__fadeIn\" />\n\n<ion-list>\n  <ion-item-sliding *rxFor=\"let asset of assets$\">\n    <ion-item button>\n      {{ asset.Id }} - {{ asset.Registration }}\n    </ion-item>\n    <ion-item-options side=\"end\">\n      <ion-item-options color=\"danger\">\n        <ion-icon name=\"trash-bin-outline\" />\n      </ion-item-options>\n    </ion-item-options>\n  </ion-item-sliding>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [
                {
                    "name": "select",
                    "defaultValue": "new EventEmitter<Asset>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "assets$",
                    "defaultValue": "this.assetStore.assets$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 34
                },
                {
                    "name": "assetStore",
                    "defaultValue": "inject(AssetStore)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 32
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Output, inject } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Asset, AssetStore } from \"src/app/core/stores/asset/asset.store\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\n\r\n@Component({\r\n  selector: \"local-asset-search\",\r\n  template: `\r\n    <ion-searchbar class=\"animate__animated animate__fadeIn\" />\r\n\r\n    <ion-list>\r\n      <ion-item-sliding *rxFor=\"let asset of assets$\">\r\n        <ion-item button>\r\n          {{ asset.Id }} - {{ asset.Registration }}\r\n        </ion-item>\r\n        <ion-item-options side=\"end\">\r\n          <ion-item-options color=\"danger\">\r\n            <ion-icon name=\"trash-bin-outline\" />\r\n          </ion-item-options>\r\n        </ion-item-options>\r\n      </ion-item-sliding>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate()\r\n  ]\r\n})\r\nexport class LocalAssetSearchComponent {\r\n  assetStore = inject(AssetStore);\r\n\r\n  assets$ = this.assetStore.assets$;\r\n\r\n  @Output()\r\n  select = new EventEmitter<Asset>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "LocalOperativeSearchComponent",
            "id": "component-LocalOperativeSearchComponent-1214c42650c724cef52a7764e0f1b0b321bdeff87305b5427de9b8430f0c4b662a4c3db8945271b2246702c620e79ff37603a4ba66d23c40ceddfa1b36b263d9",
            "file": "src/app/shared/modals/operative-list/components/local-operative-search/local-operative-search.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "local-operative-search",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-searchbar class=\"animate__animated animate__fadeIn\" />\n\n<ion-list *rxLet=\"user$; let user\">\n  <ion-item\n    *rxIf=\"!hideMyself && user != null\"\n    (click)=\"select.emit({ ID: user.Id, Name: user.FirstName + ' ' + user.LastName })\"\n    button>\n      {{ user.Id }} - {{ user.FirstName }} {{ user.LastName }}\n  </ion-item>\n  <ion-item-sliding *rxFor=\"let op of operatives$; last as isLast\">\n    <ion-item button>\n      {{ op.ID }} - {{ op.Name }}\n    </ion-item>\n    <ion-item-options side=\"end\">\n      <ion-item-option color=\"danger\">\n        <ion-icon name=\"trash-bin-outline\" />\n      </ion-item-option>\n    </ion-item-options>\n  </ion-item-sliding>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "hideMyself",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 47,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "select",
                    "defaultValue": "new EventEmitter<Operative>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "operatives$",
                    "defaultValue": "this.operativesStore.operatives$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 50
                },
                {
                    "name": "operativesStore",
                    "defaultValue": "inject(OperativesStore)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 41
                },
                {
                    "name": "user$",
                    "defaultValue": "this.userStore.user$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 49
                },
                {
                    "name": "userStore",
                    "defaultValue": "inject(UserStore)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 40
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, inject, Input, Output } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Operative, OperativesStore } from \"src/app/core/stores/operative/operatives.store\";\r\nimport { UserStore } from \"src/app/core/stores/user/user.store\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { AngularComponent } from \"src/app/shared/lifecycles\";\r\n\r\n@Component({\r\n  selector: \"local-operative-search\",\r\n  template: `\r\n    <ion-searchbar class=\"animate__animated animate__fadeIn\" />\r\n\r\n    <ion-list *rxLet=\"user$; let user\">\r\n      <ion-item \r\n        *rxIf=\"!hideMyself && user != null\"\r\n        (click)=\"select.emit({ ID: user.Id, Name: user.FirstName + ' ' + user.LastName })\"\r\n        button>\r\n          {{ user.Id }} - {{ user.FirstName }} {{ user.LastName }}\r\n      </ion-item>\r\n      <ion-item-sliding *rxFor=\"let op of operatives$; last as isLast\">\r\n        <ion-item button>\r\n          {{ op.ID }} - {{ op.Name }}\r\n        </ion-item>\r\n        <ion-item-options side=\"end\">\r\n          <ion-item-option color=\"danger\">\r\n            <ion-icon name=\"trash-bin-outline\" />\r\n          </ion-item-option>\r\n        </ion-item-options>\r\n      </ion-item-sliding>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n  ]\r\n})\r\nexport class LocalOperativeSearchComponent extends AngularComponent() {\r\n  userStore = inject(UserStore);\r\n  operativesStore = inject(OperativesStore);\r\n\r\n  @Output()\r\n  select = new EventEmitter<Operative>();\r\n\r\n  @Input()\r\n  hideMyself: boolean = false;\r\n\r\n  user$ = this.userStore.user$;\r\n  operatives$ = this.operativesStore.operatives$;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "MultiCheckboxSectionComponent",
            "id": "component-MultiCheckboxSectionComponent-8f30c35d153309e593777efa9689afd18153cc225dbb05944297041ab17f0b8470198bfce27cdcd9708688174214286a2530b9482f8372b6f0227f3ab15222f7",
            "file": "src/app/core/pages/document-builder/components/multi-checkbox-section/multi-checkbox-section.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "multi-checkbox-modal",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item [id]=\"id\" detail=\"false\" button>\n    <ion-label>{{ section.TableTitles[0] }}</ion-label>\n    <ion-icon name=\"create-outline\" slot=\"end\"></ion-icon>\n  </ion-item>\n</ion-list>\n\n<ion-list class=\"h-80\">\n  <rx-virtual-scroll-viewport autosize>\n    <ion-item *rxVirtualFor=\"let question of selectedQuestions$\" class=\"w-full\">\n      {{ question.QuestionText }}\n    </ion-item>\n  </rx-virtual-scroll-viewport>\n</ion-list>\n\n<ion-modal #modal [trigger]=\"id\">\n  <ng-template>\n    <ion-header>\n      <ion-toolbar>\n        <ion-title class=\"text-center\">Select Responses</ion-title>\n        <ion-buttons slot=\"end\">\n          <ion-button (click)=\"modal.dismiss(); questions$.next(section.Questions)\">\n            <ion-icon name=\"close-outline\" slot=\"icon-only\" />\n          </ion-button>\n        </ion-buttons>\n      </ion-toolbar>\n      <ion-toolbar>\n        <ion-searchbar\n          [(ngModel)]=\"searchValue\"\n          debounce=\"300\"\n          placeholder=\"Search\" />\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content>\n      <ion-list class=\"h-full\">\n        <rx-virtual-scroll-viewport [itemSize]=\"50\">\n          <checkbox-question\n            *rxVirtualFor=\"let question of section.Questions\n              | fuse: {\n                search: searchValue,\n                keys: ['QuestionText']\n              }\"\n            class=\"w-full\"\n            [question]=\"question\" />\n        </rx-virtual-scroll-viewport>\n      </ion-list>\n    </ion-content>\n  </ng-template>\n</ion-modal>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 80,
                    "type": "Section",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "id",
                    "defaultValue": "crypto.randomUUID()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 77
                },
                {
                    "name": "questions$",
                    "defaultValue": "new BehaviorSubject<Question[]>([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 84
                },
                {
                    "name": "searchValue",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 82
                },
                {
                    "name": "selectedQuestions$",
                    "defaultValue": "this.questions$.pipe(\n    map(questions => questions.filter(q => q.YesNoNA))\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 85
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { IonicModule } from \"@ionic/angular\";\nimport { importRxTemplate, importRxVirtualScroll } from \"src/app/shared/imports\";\nimport { CheckboxComponent } from \"../question-types/01-checkbox/checkbox.component\";\nimport { FusePipe } from \"src/app/shared/pipes\";\nimport { Question, Section } from \"src/app/core/stores/site-document/models\";\nimport { BehaviorSubject, map } from \"rxjs\";\nimport { AutoSizeVirtualScrollStrategy, FixedSizeVirtualScrollStrategy } from \"@rx-angular/template/experimental/virtual-scrolling\";\n\n@Component({\n  selector: \"multi-checkbox-modal\",\n  template: `\n    <ion-list>\n      <ion-item [id]=\"id\" detail=\"false\" button>\n        <ion-label>{{ section.TableTitles[0] }}</ion-label>\n        <ion-icon name=\"create-outline\" slot=\"end\"></ion-icon>\n      </ion-item>\n    </ion-list>\n\n    <ion-list class=\"h-80\">\n      <rx-virtual-scroll-viewport autosize>\n        <ion-item *rxVirtualFor=\"let question of selectedQuestions$\" class=\"w-full\">\n          {{ question.QuestionText }}\n        </ion-item>\n      </rx-virtual-scroll-viewport>\n    </ion-list>\n\n    <ion-modal #modal [trigger]=\"id\">\n      <ng-template>\n        <ion-header>\n          <ion-toolbar>\n            <ion-title class=\"text-center\">Select Responses</ion-title>\n            <ion-buttons slot=\"end\">\n              <ion-button (click)=\"modal.dismiss(); questions$.next(section.Questions)\">\n                <ion-icon name=\"close-outline\" slot=\"icon-only\" />\n              </ion-button>\n            </ion-buttons>\n          </ion-toolbar>\n          <ion-toolbar>\n            <ion-searchbar \n              [(ngModel)]=\"searchValue\"\n              debounce=\"300\" \n              placeholder=\"Search\" />\n          </ion-toolbar>\n        </ion-header>\n\n        <ion-content>\n          <ion-list class=\"h-full\">\n            <rx-virtual-scroll-viewport [itemSize]=\"50\">\n              <checkbox-question \n                *rxVirtualFor=\"let question of section.Questions\n                  | fuse: {\n                    search: searchValue,\n                    keys: ['QuestionText']\n                  }\" \n                class=\"w-full\"\n                [question]=\"question\" />\n            </rx-virtual-scroll-viewport>\n          </ion-list>\n        </ion-content>\n      </ng-template>\n    </ion-modal>\n  `,\n  standalone: true,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  imports: [\n    IonicModule,\n    ...importRxTemplate(),\n    ...importRxVirtualScroll(FixedSizeVirtualScrollStrategy, AutoSizeVirtualScrollStrategy),\n    FormsModule,\n    CheckboxComponent,\n    FusePipe\n  ]\n})\nexport class MultiCheckboxSectionComponent {\n  id = crypto.randomUUID();\n\n  @Input({ required: true })\n  section!: Section;\n\n  searchValue: string = \"\";\n\n  questions$ = new BehaviorSubject<Question[]>([]);\n  selectedQuestions$ = this.questions$.pipe(\n    map(questions => questions.filter(q => q.YesNoNA))\n  );\n}\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "MultiSelectableComponent",
            "id": "component-MultiSelectableComponent-b59bc2641d1c1929799484baf4548b2875e2225c7a2b3b2b30b35e973318830de7f72b3fab96a74ab73dfb906e5560f8d034793b9fe305eb2a7d1213972ec176",
            "file": "src/app/shared/components/multi-selectable/multi-selectable.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "multi-selectable",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-item [id]=\"id\" detail=\"false\" button>\n  <ion-label [color]=\"values.length > 0 ? 'medium' : ''\" class=\"ion-text-wrap\">\n    <if [condition]=\"values.length === 0\">\n      <ion-label show color=\"medium\" class=\"ion-text-wrap\">{{ placeholder }}</ion-label>\n      <ion-label else>\n        <p *rxFor=\"let text of selectedTexts\">{{ text }}</p>\n      </ion-label>\n    </if>\n  </ion-label>\n  <ion-button *rxIf=\"canClear && values.length > 0\" (click)=\"$event.stopPropagation(); values = []; valuesChange.emit([])\" fill=\"clear\">\n    <ion-icon name=\"close-outline\" color=\"danger\" slot=\"icon-only\" />\n  </ion-button>\n  <ion-icon name=\"caret-down-outline\" slot=\"end\" />\n</ion-item>\n\n<ion-modal #modal [trigger]=\"id\">\n  <ng-template>\n    <ion-header>\n      <ion-toolbar>\n        <ion-buttons slot=\"start\">\n          <ion-button (click)=\"modal.dismiss()\" [unpatch] fill=\"clear\">\n            <ion-icon name=\"arrow-back-outline\" slot=\"icon-only\" />\n          </ion-button>\n        </ion-buttons>\n        <ion-title class=\"ion-text-center\">{{ title }}</ion-title>\n      </ion-toolbar>\n      <ion-toolbar>\n        <ion-searchbar [(ngModel)]=\"searchValue\" placeholder=\"Search\" />\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content>\n      <ion-list class=\"h-full\">\n        <rx-virtual-scroll-viewport [itemSize]=\"50\">\n          <ion-item\n            *rxVirtualFor=\"let item of items | fuse: {\n              search: searchValue,\n              keys: itemText != null\n                ? [itemText]\n                : []\n            };\n            last as isLast\"\n            (click)=\"select(item)\"\n            [lines]=\"isLast ? 'none' : 'inset'\"\n            button>\n            <ion-label class=\"ion-text-wrap\">{{ itemText != null ? item[itemText] : item }}</ion-label>\n            <ion-icon\n              *rxIf=\"selectedValues.includes(itemVal != null ? item[itemVal].toString() : item.toString())\"\n              name=\"checkmark-outline\"\n              slot=\"end\" />\n          </ion-item>\n        </rx-virtual-scroll-viewport>\n      </ion-list>\n    </ion-content>\n  </ng-template>\n</ion-modal>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "canClear",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 115,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 88,
                    "type": "T[]",
                    "decorators": []
                },
                {
                    "name": "itemText",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 91,
                    "type": " | null",
                    "decorators": []
                },
                {
                    "name": "itemVal",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 94,
                    "type": " | null",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 82,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "searchValue",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 118,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 85,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "values",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 97,
                    "type": "T[]",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "valuesChange",
                    "defaultValue": "new EventEmitter<T[]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 112,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "id",
                    "defaultValue": "crypto.randomUUID()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 79
                }
            ],
            "methodsClass": [
                {
                    "name": "select",
                    "args": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 120,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "item",
                            "type": "T",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { importRxFixedVirtualScroll, importRxTemplate } from \"../../imports\";\r\nimport { FusePipe } from \"../../pipes\";\r\nimport { IfComponent } from \"../if/if.component\";\r\n\r\n@Component({\r\n  selector: \"multi-selectable\",\r\n  template: `\r\n    <ion-item [id]=\"id\" detail=\"false\" button>\r\n      <ion-label [color]=\"values.length > 0 ? 'medium' : ''\" class=\"ion-text-wrap\">\r\n        <if [condition]=\"values.length === 0\">\r\n          <ion-label show color=\"medium\" class=\"ion-text-wrap\">{{ placeholder }}</ion-label>\r\n          <ion-label else>\r\n            <p *rxFor=\"let text of selectedTexts\">{{ text }}</p>\r\n          </ion-label>\r\n        </if>\r\n      </ion-label>\r\n      <ion-button *rxIf=\"canClear && values.length > 0\" (click)=\"$event.stopPropagation(); values = []; valuesChange.emit([])\" fill=\"clear\">\r\n        <ion-icon name=\"close-outline\" color=\"danger\" slot=\"icon-only\" />\r\n      </ion-button>\r\n      <ion-icon name=\"caret-down-outline\" slot=\"end\" />\r\n    </ion-item>\r\n\r\n    <ion-modal #modal [trigger]=\"id\">\r\n      <ng-template>\r\n        <ion-header>\r\n          <ion-toolbar>\r\n            <ion-buttons slot=\"start\">\r\n              <ion-button (click)=\"modal.dismiss()\" [unpatch] fill=\"clear\">\r\n                <ion-icon name=\"arrow-back-outline\" slot=\"icon-only\" />\r\n              </ion-button>\r\n            </ion-buttons>\r\n            <ion-title class=\"ion-text-center\">{{ title }}</ion-title>\r\n          </ion-toolbar>\r\n          <ion-toolbar>\r\n            <ion-searchbar [(ngModel)]=\"searchValue\" placeholder=\"Search\" />\r\n          </ion-toolbar>\r\n        </ion-header>\r\n\r\n        <ion-content>\r\n          <ion-list class=\"h-full\">\r\n            <rx-virtual-scroll-viewport [itemSize]=\"50\">\r\n              <ion-item \r\n                *rxVirtualFor=\"let item of items | fuse: { \r\n                  search: searchValue,\r\n                  keys: itemText != null \r\n                    ? [itemText]\r\n                    : []\r\n                }; \r\n                last as isLast\" \r\n                (click)=\"select(item)\"\r\n                [lines]=\"isLast ? 'none' : 'inset'\" \r\n                button>\r\n                <ion-label class=\"ion-text-wrap\">{{ itemText != null ? item[itemText] : item }}</ion-label>\r\n                <ion-icon \r\n                  *rxIf=\"selectedValues.includes(itemVal != null ? item[itemVal].toString() : item.toString())\" \r\n                  name=\"checkmark-outline\" \r\n                  slot=\"end\" />\r\n              </ion-item>\r\n            </rx-virtual-scroll-viewport>\r\n          </ion-list>\r\n        </ion-content>\r\n      </ng-template>\r\n    </ion-modal>\r\n  `,\r\n  standalone: true,\r\n  imports: [\r\n    IonicModule,\r\n    IfComponent,\r\n    ...importRxTemplate(),\r\n    ...importRxFixedVirtualScroll(),\r\n    FormsModule,\r\n    FusePipe\r\n  ]\r\n})\r\nexport class MultiSelectableComponent<T extends { [key: string]: object } = {}> {\r\n  id = crypto.randomUUID();\r\n\r\n  @Input()\r\n  placeholder: string = \"\";\r\n\r\n  @Input()\r\n  title: string = \"\";\r\n\r\n  @Input()\r\n  items: T[] = [];\r\n  \r\n  @Input()\r\n  itemText: keyof T | null = null;\r\n\r\n  @Input()\r\n  itemVal: keyof T | null = null;\r\n\r\n  @Input()\r\n  values: T[] = [];\r\n\r\n  get selectedValues() {\r\n    return this.itemVal != null\r\n      ? this.values.map(val => val[this.itemVal as keyof T] + \"\")\r\n      : this.values.map(val => val + \"\");\r\n  }\r\n\r\n  get selectedTexts() {\r\n    return this.itemText != null\r\n      ? this.values.map(val => val[this.itemText as keyof T] + \"\")\r\n      : this.values.map(val => val + \"\");\r\n  }\r\n\r\n  @Output()\r\n  valuesChange = new EventEmitter<T[]>();\r\n\r\n  @Input()\r\n  canClear: boolean = true;\r\n\r\n  @Input()\r\n  searchValue: string = \"\";\r\n\r\n  select(item: T) {\r\n    const val = this.itemVal != null\r\n      ? item[this.itemVal as keyof T] + \"\"\r\n      : item + \"\";\r\n\r\n    this.values = this.selectedValues.includes(val)\r\n      ? this.values.filter(itemVal => this.itemVal != null \r\n        ? (itemVal[this.itemVal] + \"\") !== val\r\n        : (itemVal + \"\") !== val\r\n      )\r\n    : [...this.values, item];\r\n\r\n    this.valuesChange.emit(this.values);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "accessors": {
                "selectedValues": {
                    "name": "selectedValues",
                    "getSignature": {
                        "name": "selectedValues",
                        "type": "",
                        "returnType": "",
                        "line": 99
                    }
                },
                "selectedTexts": {
                    "name": "selectedTexts",
                    "getSignature": {
                        "name": "selectedTexts",
                        "type": "",
                        "returnType": "",
                        "line": 105
                    }
                }
            }
        },
        {
            "name": "NumberComponent",
            "id": "component-NumberComponent-3fd7ce1071cba04200e0441a915355cd5cf48981dc75fdd7933b95b5f370662674938d8b1e8a58f0cb9e95efc1b418c508fe1a003e36e0a6c9e1dd43c236a641",
            "file": "src/app/core/pages/document-builder/components/question-types/12-number/number.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "number-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n    <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\n    <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\n  </ion-item>\n\n  <ion-item>\n    <ion-input label=\"\" type=\"number\" [(ngModel)]=\"question.NumberVal\" />\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 36,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\nimport { FormsModule } from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: \"number-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n        <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\r\n        <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\r\n      </ion-item>\r\n\r\n      <ion-item>\r\n        <ion-input label=\"\" type=\"number\" [(ngModel)]=\"question.NumberVal\" />\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  standalone: true,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    FormsModule,\r\n    QuestionTextComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent\r\n  ]\r\n})\r\nexport class NumberComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "OnlineAssetSearchComponent",
            "id": "component-OnlineAssetSearchComponent-991890c81a2de15644554db93c9cd72d7494663f29776af66e0a7dccc5b64b22baa7343cf79dfc736d07ff5ce5b4638241a2eafd392243019fbc326ff801fde2",
            "file": "src/app/shared/modals/asset-list/components/online-asset-search/online-asset-search.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "online-asset-search",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-searchbar [(ngModel)]=\"searchRegistration\" />\n\n<if [condition]=\"searchIsPending\">\n  <ion-list show>\n    <ion-item lines=\"none\">\n      <ion-skeleton-text [animated]=\"true\" />\n    </ion-item>\n    <ion-item lines=\"none\">\n      <ion-skeleton-text [animated]=\"true\" />\n    </ion-item>\n    <ion-item lines=\"none\">\n      <ion-skeleton-text [animated]=\"true\" />\n    </ion-item>\n    <ion-item lines=\"none\">\n      <ion-skeleton-text [animated]=\"true\" />\n    </ion-item>\n  </ion-list>\n\n  <ion-list else class=\"h-full\">\n    <rx-virtual-scroll-viewport [itemSize]=\"50\">\n      <ion-item\n        *rxVirtualFor=\"let asset of assets$; last as isLast\"\n        class=\"w-full\"\n        [lines]=\"isLast ? 'none' : 'inset'\"\n        button>\n        {{ asset.Id }} - {{ asset.Registration }}\n      </ion-item>\n    </rx-virtual-scroll-viewport>\n  </ion-list>\n</if>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "assets$",
                    "defaultValue": "new Subject<Asset[]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 59
                },
                {
                    "name": "search",
                    "defaultValue": "reaction($entered => $entered.pipe(\r\n    takeUntilDestroyed()\r\n  ))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 61
                },
                {
                    "name": "searchIsPending",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "boolean",
                    "optional": false,
                    "description": "",
                    "line": 57
                },
                {
                    "name": "searchRegistration",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 56
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component } from \"@angular/core\";\r\nimport { takeUntilDestroyed } from \"@angular/core/rxjs-interop\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Subject } from \"rxjs\";\r\nimport { Asset } from \"src/app/core/stores/asset/asset.store\";\r\nimport { IfComponent } from \"src/app/shared/components\";\r\nimport { importRxFixedVirtualScroll, importRxTemplate } from \"src/app/shared/imports\";\r\nimport { reaction } from \"src/app/shared/reactions\";\r\n\r\n@Component({\r\n  selector: \"online-asset-search\",\r\n  template: `\r\n    <ion-searchbar [(ngModel)]=\"searchRegistration\" />\r\n    \r\n    <if [condition]=\"searchIsPending\">\r\n      <ion-list show>\r\n        <ion-item lines=\"none\">\r\n          <ion-skeleton-text [animated]=\"true\" />\r\n        </ion-item>\r\n        <ion-item lines=\"none\">\r\n          <ion-skeleton-text [animated]=\"true\" />\r\n        </ion-item>\r\n        <ion-item lines=\"none\">\r\n          <ion-skeleton-text [animated]=\"true\" />\r\n        </ion-item>\r\n        <ion-item lines=\"none\">\r\n          <ion-skeleton-text [animated]=\"true\" />\r\n        </ion-item>\r\n      </ion-list>\r\n\r\n      <ion-list else class=\"h-full\">\r\n        <rx-virtual-scroll-viewport [itemSize]=\"50\">\r\n          <ion-item \r\n            *rxVirtualFor=\"let asset of assets$; last as isLast\"\r\n            class=\"w-full\" \r\n            [lines]=\"isLast ? 'none' : 'inset'\" \r\n            button>\r\n            {{ asset.Id }} - {{ asset.Registration }}\r\n          </ion-item>\r\n        </rx-virtual-scroll-viewport>\r\n      </ion-list>\r\n    </if>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    ...importRxFixedVirtualScroll(),\r\n    FormsModule,\r\n    IfComponent\r\n  ]\r\n})\r\nexport class OnlineAssetSearchComponent {\r\n  searchRegistration: string = \"\";\r\n  searchIsPending: boolean = false;\r\n\r\n  assets$ = new Subject<Asset[]>();\r\n\r\n  search = reaction($entered => $entered.pipe(\r\n    takeUntilDestroyed()\r\n  ));\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "OnlineOperativeSearchComponent",
            "id": "component-OnlineOperativeSearchComponent-419b8a60d5095b95eb65c5035273a9659325a3ba135bf5e66e5f8b2658fdb0a9e2caa1a20e2c465a217fdb8311aec2012c36ead9f5fd5a8f709fb3badbdccde1",
            "file": "src/app/shared/modals/operative-list/components/online-operative-search/online-operative-search.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "online-operative-search",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-searchbar [(ngModel)]=\"searchName\" (keyup.enter)=\"search()\" />\n\n<if [condition]=\"searchResultsIsPending$ | push\">\n  <ion-list show>\n    <ion-item lines=\"none\">\n      <ion-skeleton-text [animated]=\"true\" />\n    </ion-item>\n    <ion-item lines=\"none\">\n      <ion-skeleton-text [animated]=\"true\" />\n    </ion-item>\n    <ion-item lines=\"none\">\n      <ion-skeleton-text [animated]=\"true\" />\n    </ion-item>\n    <ion-item lines=\"none\">\n      <ion-skeleton-text [animated]=\"true\" />\n    </ion-item>\n  </ion-list>\n\n  <ion-list else class=\"h-full\">\n    <rx-virtual-scroll-viewport [itemSize]=\"50\">\n      <ion-item\n        *rxVirtualFor=\"let op of searchResults$; last as isLast\"\n        class=\"w-full\"\n        [lines]=\"isLast ? 'none' : 'inset'\"\n        button>\n        {{ op.ID }} - {{ op.Name }}\n      </ion-item>\n    </rx-virtual-scroll-viewport>\n  </ion-list>\n</if>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "noAppLimit",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 62,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "operativesStore",
                    "defaultValue": "inject(OperativesStore)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "search",
                    "defaultValue": "reaction($entered => $entered.pipe(\r\n    takeUntilDestroyed(),\r\n    switchMap(() => this.operativesStore.getSearchResults({ search: this.searchName, noAppLimit: this.noAppLimit }))\r\n  ))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 66
                },
                {
                    "name": "searchName",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 64
                },
                {
                    "name": "searchResults$",
                    "defaultValue": "this.operativesStore.searchResults$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 58
                },
                {
                    "name": "searchResultsIsPending$",
                    "defaultValue": "this.operativesStore.searchResultsIsPending$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 59
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input, inject } from \"@angular/core\";\r\nimport { takeUntilDestroyed } from '@angular/core/rxjs-interop';\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { importRxTemplate, importRxFixedVirtualScroll } from \"src/app/shared/imports\";\r\nimport { OperativesStore } from \"src/app/core/stores/operative/operatives.store\";\r\nimport { reaction } from \"src/app/shared/reactions\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { switchMap } from \"rxjs\";\r\nimport { IfComponent } from \"src/app/shared/components\";\r\n\r\n@Component({\r\n  selector: \"online-operative-search\",\r\n  template: `\r\n    <ion-searchbar [(ngModel)]=\"searchName\" (keyup.enter)=\"search()\" />\r\n\r\n    <if [condition]=\"searchResultsIsPending$ | push\">\r\n      <ion-list show>\r\n        <ion-item lines=\"none\">\r\n          <ion-skeleton-text [animated]=\"true\" />\r\n        </ion-item>\r\n        <ion-item lines=\"none\">\r\n          <ion-skeleton-text [animated]=\"true\" />\r\n        </ion-item>\r\n        <ion-item lines=\"none\">\r\n          <ion-skeleton-text [animated]=\"true\" />\r\n        </ion-item>\r\n        <ion-item lines=\"none\">\r\n          <ion-skeleton-text [animated]=\"true\" />\r\n        </ion-item>\r\n      </ion-list>\r\n\r\n      <ion-list else class=\"h-full\">\r\n        <rx-virtual-scroll-viewport [itemSize]=\"50\">\r\n          <ion-item \r\n            *rxVirtualFor=\"let op of searchResults$; last as isLast\"\r\n            class=\"w-full\"\r\n            [lines]=\"isLast ? 'none' : 'inset'\"\r\n            button>\r\n            {{ op.ID }} - {{ op.Name }}\r\n          </ion-item>\r\n        </rx-virtual-scroll-viewport>\r\n      </ion-list>\r\n    </if>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    ...importRxFixedVirtualScroll(),\r\n    FormsModule,\r\n    IfComponent\r\n  ]\r\n})\r\nexport class OnlineOperativeSearchComponent {\r\n  operativesStore = inject(OperativesStore);\r\n\r\n  searchResults$ = this.operativesStore.searchResults$;\r\n  searchResultsIsPending$ = this.operativesStore.searchResultsIsPending$;\r\n\r\n  @Input()\r\n  noAppLimit: boolean = true;\r\n\r\n  searchName: string = \"\";\r\n  \r\n  search = reaction($entered => $entered.pipe(\r\n    takeUntilDestroyed(),\r\n    switchMap(() => this.operativesStore.getSearchResults({ search: this.searchName, noAppLimit: this.noAppLimit }))\r\n  ));\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "OperativeListComponent",
            "id": "component-OperativeListComponent-d83ba31d8e5e799a208a692003bf527eb9e978df4f6eb6062253a858fe24fda78e19d9fb06a25395c07d052008a3d74450162c00777507ed2ff49ccce10e957a",
            "file": "src/app/core/pages/document-builder/components/question-types/10-operative-list/operative-list.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "operative-list-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text>{{ question.QuestionText }}</question-text>\n    <ion-button *rxIf=\"isMobileApp\" fill=\"clear\" slot=\"end\">\n      <ion-icon name=\"scan-outline\" slot=\"icon-only\" />\n    </ion-button>\n    <ion-button [id]=\"id\" fill=\"clear\" color=\"secondary\" slot=\"end\">\n      <ion-icon name=\"search-outline\" slot=\"icon-only\" />\n    </ion-button>\n\n    <operative-list-modal [trigger]=\"id\" />\n  </ion-item>\n</ion-list>\n\n<ion-list>\n  <ion-item-sliding *rxFor=\"let operative of question.Operatives; last as isLast\">\n    <ion-item [lines]=\"isLast ? 'none' : 'inset'\">\n      {{ operative.AttendeeID }}: {{ operative.Name }}\n    </ion-item>\n\n    <ion-item-options side=\"end\">\n      <ion-item-option color=\"danger\">\n        <ion-icon name=\"trash-outline\" slot=\"icon-only\" />\n      </ion-item-option>\n    </ion-item-options>\n  </ion-item-sliding>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "id",
                    "defaultValue": "crypto.randomUUID()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 52
                },
                {
                    "name": "isMobileApp",
                    "defaultValue": "isMobileApp()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 57
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { BarcodeScannerDirective } from \"src/app/shared/directives\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { isMobileApp } from \"src/app/shared/plugins/platform.plugin\";\r\nimport { QuestionTextComponent } from \"../extras\";\r\nimport { OperativeListModal } from \"src/app/shared/modals/operative-list/operative-list.modal\";\r\n\r\n@Component({\r\n  selector: \"operative-list-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text>{{ question.QuestionText }}</question-text>\r\n        <ion-button *rxIf=\"isMobileApp\" fill=\"clear\" slot=\"end\">\r\n          <ion-icon name=\"scan-outline\" slot=\"icon-only\" />\r\n        </ion-button>\r\n        <ion-button [id]=\"id\" fill=\"clear\" color=\"secondary\" slot=\"end\">\r\n          <ion-icon name=\"search-outline\" slot=\"icon-only\" />\r\n        </ion-button>\r\n\r\n        <operative-list-modal [trigger]=\"id\" />\r\n      </ion-item>\r\n    </ion-list>\r\n\r\n    <ion-list>\r\n      <ion-item-sliding *rxFor=\"let operative of question.Operatives; last as isLast\">\r\n        <ion-item [lines]=\"isLast ? 'none' : 'inset'\">\r\n          {{ operative.AttendeeID }}: {{ operative.Name }}\r\n        </ion-item>\r\n\r\n        <ion-item-options side=\"end\">\r\n          <ion-item-option color=\"danger\">\r\n            <ion-icon name=\"trash-outline\" slot=\"icon-only\" />\r\n          </ion-item-option>\r\n        </ion-item-options>\r\n      </ion-item-sliding>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule, \r\n    ...importRxTemplate(),\r\n    OperativeListModal,\r\n    BarcodeScannerDirective,\r\n    QuestionTextComponent\r\n  ]\r\n})\r\nexport class OperativeListComponent {\r\n  id = crypto.randomUUID();\r\n\r\n  @Input({ required: true })\r\n  question!: Question;\r\n\r\n  isMobileApp = isMobileApp();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "OperativeListModal",
            "id": "component-OperativeListModal-428fb93511e6aaf720415b9789c90aa020b28f7275b78c853663a42ccdc6a05bcbcb451c41fba115e6094eb5236e17fd19641dc049cfedb07a879cbe90e9829b",
            "file": "src/app/shared/modals/operative-list/operative-list.modal.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "operative-list-modal",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-modal #modal [trigger]=\"trigger\" [isOpen]=\"isOpen\">\n  <ng-template>\n    <ion-header>\n      <ion-toolbar>\n        <ion-title class=\"ion-text-center\">Select an Operative</ion-title>\n        <ion-buttons slot=\"end\">\n          <ion-button (click)=\"modal.dismiss()\" [unpatch]>\n            <ion-icon name=\"close-outline\" slot=\"icon-only\" />\n          </ion-button>\n        </ion-buttons>\n      </ion-toolbar>\n\n      <ion-toolbar>\n        <ion-segment [(ngModel)]=\"segment\" class=\"w-full\">\n          <ion-segment-button value=\"local\">\n            <ion-icon name=\"phone-portrait-outline\" />\n          </ion-segment-button>\n          <ion-segment-button value=\"online\">\n            <ion-icon name=\"wifi-outline\" />\n          </ion-segment-button>\n        </ion-segment>\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content [ngSwitch]=\"segment\" class=\"ion-padding\">\n      <local-operative-search *ngSwitchCase=\"'local'\" [hideMyself]=\"hideMyself\" />\n      <online-operative-search *ngSwitchCase=\"'online'\" />\n    </ion-content>\n  </ng-template>\n</ion-modal>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "hideMyself",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 61,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "isOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 58,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 55,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "operativeChange",
                    "defaultValue": "new EventEmitter<Operative>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 66,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "segment",
                    "defaultValue": "\"local\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "\"local\" | \"online\"",
                    "optional": false,
                    "description": "",
                    "line": 63
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { importNgSwitch, importRxTemplate } from \"../../imports\";\r\nimport { LocalOperativeSearchComponent, OnlineOperativeSearchComponent } from \"./components\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { Operative } from \"src/app/core/stores/operative/operatives.store\";\r\n\r\n@Component({\r\n  selector: \"operative-list-modal\",\r\n  template: `\r\n    <ion-modal #modal [trigger]=\"trigger\" [isOpen]=\"isOpen\">\r\n      <ng-template>\r\n        <ion-header>\r\n          <ion-toolbar>\r\n            <ion-title class=\"ion-text-center\">Select an Operative</ion-title>\r\n            <ion-buttons slot=\"end\">\r\n              <ion-button (click)=\"modal.dismiss()\" [unpatch]>\r\n                <ion-icon name=\"close-outline\" slot=\"icon-only\" />\r\n              </ion-button>\r\n            </ion-buttons>\r\n          </ion-toolbar>\r\n\r\n          <ion-toolbar>\r\n            <ion-segment [(ngModel)]=\"segment\" class=\"w-full\">\r\n              <ion-segment-button value=\"local\">\r\n                <ion-icon name=\"phone-portrait-outline\" />\r\n              </ion-segment-button>\r\n              <ion-segment-button value=\"online\">\r\n                <ion-icon name=\"wifi-outline\" />\r\n              </ion-segment-button>\r\n            </ion-segment>\r\n          </ion-toolbar>\r\n        </ion-header>\r\n      \r\n        <ion-content [ngSwitch]=\"segment\" class=\"ion-padding\">\r\n          <local-operative-search *ngSwitchCase=\"'local'\" [hideMyself]=\"hideMyself\" />\r\n          <online-operative-search *ngSwitchCase=\"'online'\" />\r\n        </ion-content>\r\n      </ng-template>\r\n    </ion-modal>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    FormsModule,\r\n    ...importRxTemplate(),\r\n    ...importNgSwitch(),\r\n    LocalOperativeSearchComponent,\r\n    OnlineOperativeSearchComponent\r\n  ]\r\n})\r\nexport class OperativeListModal {\r\n  @Input({ required: true })\r\n  trigger!: string;\r\n  \r\n  @Input()\r\n  isOpen: boolean = false;\r\n\r\n  @Input()\r\n  hideMyself: boolean = false;\r\n\r\n  segment: \"local\" | \"online\" = \"local\"\r\n\r\n  @Output()\r\n  operativeChange = new EventEmitter<Operative>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "QuestionTextComponent",
            "id": "component-QuestionTextComponent-efba3a76ed75b15a5f1a29d14085f495ba7c23b0d69572524ed799486cb10a6a9c8213a644994acae4cf84059b086a2211c9fbc6be4607a1f7122915094e5164",
            "file": "src/app/core/pages/document-builder/components/question-types/extras/question-text/question-text.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "question-text",
            "styleUrls": [],
            "styles": [],
            "template": "<p class=\"ion-text-wrap\">\n  <ng-content></ng-content>\n  <span *rxIf=\"required\" class=\"text-red-500\">*</span>\n</p>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "required",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\n\r\n@Component({\r\n  selector: \"question-text\",\r\n  template: `\r\n    <p class=\"ion-text-wrap\">\r\n      <ng-content></ng-content>\r\n      <span *rxIf=\"required\" class=\"text-red-500\">*</span>\r\n    </p>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [...importRxTemplate()]\r\n})\r\nexport class QuestionTextComponent {\r\n  @Input()\r\n  required: boolean = false;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "QueueDurationComponent",
            "id": "component-QueueDurationComponent-07c5474b6f03bbc8431ae6da27501efeef90da7a479d0575d00a27358f59d54d5cd65d2aec34ce3936cfb6e2a14734b2a2b0068a65be0ca29cee8bd776a7b358",
            "file": "src/app/core/pages/document-builder/components/input-types/queue-duration/queue-duration.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "queue-duration",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-card>\n  <ion-card-header>\n    <ion-card-title class=\"text-center\">Queue Duration</ion-card-title>\n  </ion-card-header>\n  <ion-card-content>\n    <ion-grid>\n      <ion-row>\n        <ion-col>\n          <ion-input [(ngModel)]=\"duration\" (ionChange)=\"durationChange.emit(duration)\" label=\"Duration\" labelPlacement=\"floating\" type=\"number\" min=\"0\" />\n        </ion-col>\n        <ion-col>\n          <ion-select [(ngModel)]=\"type\" (ionChange)=\"typeChange.emit(type)\" interface=\"popover\" label=\"Type\" labelPlacement=\"floating\">\n            <ion-select-option value=\"Mins\">Minutes</ion-select-option>\n            <ion-select-option value=\"Hours\">Hours</ion-select-option>\n            <ion-select-option value=\"Days\">Days</ion-select-option>\n          </ion-select>\n        </ion-col>\n      </ion-row>\n    </ion-grid>\n  </ion-card-content>\n</ion-card>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "duration",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "type",
                    "defaultValue": "\"Mins\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 45,
                    "type": "\"Mins\" | \"Hours\" | \"Days\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "durationChange",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 42,
                    "type": "EventEmitter"
                },
                {
                    "name": "typeChange",
                    "defaultValue": "new EventEmitter<\"Mins\" | \"Hours\" | \"Days\">()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 48,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\n\r\n@Component({\r\n  selector: \"queue-duration\",\r\n  template: `\r\n    <ion-card>\r\n      <ion-card-header>\r\n        <ion-card-title class=\"text-center\">Queue Duration</ion-card-title>\r\n      </ion-card-header>\r\n      <ion-card-content>\r\n        <ion-grid>\r\n          <ion-row>\r\n            <ion-col>\r\n              <ion-input [(ngModel)]=\"duration\" (ionChange)=\"durationChange.emit(duration)\" label=\"Duration\" labelPlacement=\"floating\" type=\"number\" min=\"0\" />\r\n            </ion-col>\r\n            <ion-col>\r\n              <ion-select [(ngModel)]=\"type\" (ionChange)=\"typeChange.emit(type)\" interface=\"popover\" label=\"Type\" labelPlacement=\"floating\">\r\n                <ion-select-option value=\"Mins\">Minutes</ion-select-option>\r\n                <ion-select-option value=\"Hours\">Hours</ion-select-option>\r\n                <ion-select-option value=\"Days\">Days</ion-select-option>\r\n              </ion-select>\r\n            </ion-col>\r\n          </ion-row>\r\n        </ion-grid>\r\n      </ion-card-content>\r\n    </ion-card>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    FormsModule\r\n  ]\r\n})\r\nexport class QueueDurationComponent {\r\n  @Input()\r\n  duration?: number;\r\n\r\n  @Output()\r\n  durationChange = new EventEmitter<number>();\r\n\r\n  @Input()\r\n  type: \"Mins\" | \"Hours\" | \"Days\" = \"Mins\";\r\n\r\n  @Output()\r\n  typeChange = new EventEmitter<\"Mins\" | \"Hours\" | \"Days\">();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "QueueSelectComponent",
            "id": "component-QueueSelectComponent-f3e37e36427cca2ac912d36cc34d9617645e86b016d9696eefe8a328228cd01c488cace8719ffe82d91705a376aab4916408003d25b57532bb9053caaf18187b",
            "file": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "queue-select",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-card>\n  <ion-card-header>\n    <ion-card-title class=\"text-center\">{{ title }}</ion-card-title>\n  </ion-card-header>\n\n  <ion-card-content>\n    <ion-list>\n      <selectable\n        [title]=\"title\"\n        placeholder=\"Queues\"\n        [value]=\"queue$ | push\"\n        (valueChange)=\"queueIdChange.emit($event!.id)\"\n        [items]=\"queues\"\n        itemText=\"name\"\n        [canClear]=\"false\" />\n    </ion-list>\n  </ion-card-content>\n</ion-card>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "queueId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "queues",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "Array<literal type>",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "\"Select Queue\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "queueIdChange",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "queue$",
                    "defaultValue": "merge(\r\n    this.afterViewInit$,\r\n    this.input$(\"queueId\")\r\n  ).pipe(\r\n    map(() => this.queues.find(q => q.id === this.queueId) || null)\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<literal type | null>",
                    "optional": false,
                    "description": "",
                    "line": 54
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { AsyncPipe } from \"@angular/common\";\r\nimport { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { map, merge, Observable } from \"rxjs\";\r\nimport { SelectableComponent } from \"src/app/shared/components/selectable/selectable.component\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { AngularComponent, withAfterViewInit, withOnChanges } from \"src/app/shared/lifecycles\";\r\n\r\n@Component({\r\n  selector: \"queue-select\",\r\n  template: `\r\n    <ion-card>\r\n      <ion-card-header>\r\n        <ion-card-title class=\"text-center\">{{ title }}</ion-card-title>\r\n      </ion-card-header>\r\n\r\n      <ion-card-content>\r\n        <ion-list>\r\n          <selectable \r\n            [title]=\"title\"\r\n            placeholder=\"Queues\"\r\n            [value]=\"queue$ | push\"\r\n            (valueChange)=\"queueIdChange.emit($event!.id)\"\r\n            [items]=\"queues\" \r\n            itemText=\"name\"\r\n            [canClear]=\"false\" />\r\n        </ion-list>\r\n      </ion-card-content>\r\n    </ion-card>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    SelectableComponent,\r\n    AsyncPipe\r\n  ]\r\n})\r\nexport class QueueSelectComponent extends AngularComponent(withAfterViewInit, withOnChanges) {\r\n\r\n  @Input()\r\n  title: string = \"Select Queue\";\r\n\r\n  @Input()\r\n  queues: Array<{ id: number, name: string }> = [];\r\n\r\n  @Input()\r\n  queueId?: number;\r\n\r\n  @Output()\r\n  queueIdChange = new EventEmitter<number>();\r\n\r\n  queue$: Observable<{ id: number, name: string } | null> = merge(\r\n    this.afterViewInit$,\r\n    this.input$(\"queueId\")\r\n  ).pipe(\r\n    map(() => this.queues.find(q => q.id === this.queueId) || null)\r\n  );\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "RadioGroupComponent",
            "id": "component-RadioGroupComponent-e33dceba8aac81c3e47c84d9ef6e26153de0f2d2b6ae7c886f331f75e8826be45de0bc03cffaac8c272d44889360e73f5516b277abf92e47466ebbb3defdccfb",
            "file": "src/app/core/pages/document-builder/components/question-types/02-radio-group/radio-group.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "radio-group-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-item class=\"ion-no-padding\" lines=\"none\">\n  <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n  <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\n  <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\n</ion-item>\n\n<ion-list>\n  <ion-radio-group [(ngModel)]=\"question.YesNoNA\">\n    <ion-item>\n      <ion-radio color=\"success\" [value]=\"true\">{{ section.TableTitles[0] || \"\" }}</ion-radio>\n    </ion-item>\n\n    <ion-item>\n      <ion-radio color=\"danger\" [value]=\"false\">{{ section.TableTitles[1] || \"\" }}</ion-radio>\n    </ion-item>\n\n    <ion-item>\n      <ion-radio [value]=\"null\">{{ section.TableTitles[2] || \"\" }}</ion-radio>\n    </ion-item>\n  </ion-radio-group>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "Section",
                    "decorators": []
                },
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\nimport { Question, Section } from \"src/app/core/stores/site-document/models\";\r\nimport { FormsModule } from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: \"radio-group-question\",\r\n  template: `\r\n    <ion-item class=\"ion-no-padding\" lines=\"none\">\r\n      <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n      <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\r\n      <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\r\n    </ion-item>\r\n\r\n    <ion-list>\r\n      <ion-radio-group [(ngModel)]=\"question.YesNoNA\">\r\n        <ion-item>\r\n          <ion-radio color=\"success\" [value]=\"true\">{{ section.TableTitles[0] || \"\" }}</ion-radio>\r\n        </ion-item>\r\n\r\n        <ion-item>\r\n          <ion-radio color=\"danger\" [value]=\"false\">{{ section.TableTitles[1] || \"\" }}</ion-radio>\r\n        </ion-item>\r\n\r\n        <ion-item>\r\n          <ion-radio [value]=\"null\">{{ section.TableTitles[2] || \"\" }}</ion-radio>\r\n        </ion-item>\r\n      </ion-radio-group>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    FormsModule,\r\n    QuestionTextComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent\r\n  ]\r\n})\r\nexport class RadioGroupComponent {\r\n  @Input({ required: true })\r\n  section!: Section;\r\n  \r\n  @Input({ required: true })\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "RadioGroupTextboxComponent",
            "id": "component-RadioGroupTextboxComponent-8cdbb4a2003fad7fc83652d045a469c07724769ff3e0995a31823c77bdc692e875749286b7587d091c4fa18fea8419591237c23a062640e3fb42f015687a6570",
            "file": "src/app/core/pages/document-builder/components/question-types/07-radio-group-textbox/radio-group-textbox.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "radio-group-textbox-question",
            "styleUrls": [],
            "styles": [],
            "template": "<radio-group-question [section]=\"section\" [question]=\"question\"></radio-group-question>\n<ion-textarea label=\"\" rows=\"4\" fill=\"outline\" />\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "Section",
                    "decorators": []
                },
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { RadioGroupComponent } from \"../02-radio-group/radio-group.component\";\r\nimport { Question, Section } from \"src/app/core/stores/site-document/models\";\r\n\r\n@Component({\r\n  selector: \"radio-group-textbox-question\",\r\n  template: `\r\n    <radio-group-question [section]=\"section\" [question]=\"question\"></radio-group-question>\r\n    <ion-textarea label=\"\" rows=\"4\" fill=\"outline\" />\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    RadioGroupComponent\r\n  ]\r\n})\r\nexport class RadioGroupTextboxComponent {\r\n  @Input({ required: true })\r\n  section!: Section;\r\n\r\n  @Input({ required: true })\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "RadioTableComponent",
            "id": "component-RadioTableComponent-8567cf1964e78feb740791dae9c00a4f80b1ae79a018277987e39cff31b3d6f21236bf0017b1136adc835e8150d0e7e288681aff679de05c0c9e1d97993c8bc5",
            "file": "src/app/core/pages/document-builder/components/question-types/02-radio-table/radio-table.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "radio-table-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-row>\n  <ion-col class=\"flex items-center\" size=\"2\">\n    <ion-label>\n      <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n    </ion-label>\n  </ion-col>\n  <ion-radio-group class=\"contents\">\n    <ion-col class=\"flex justify-center items-center\" size=\"1\">\n      <ion-radio aria-label=\"\" color=\"success\" [value]=\"true\"></ion-radio>\n    </ion-col>\n    <ion-col class=\"flex justify-center items-center\" size=\"1\">\n      <ion-radio aria-label=\"\" color=\"danger\" [value]=\"false\"></ion-radio>\n    </ion-col>\n    <ion-col class=\"flex justify-center items-center\" size=\"1\">\n      <ion-radio aria-label=\"\" [value]=\"null\"></ion-radio>\n    </ion-col>\n  </ion-radio-group>\n  <ion-col size=\"1\">\n    <camera-capture *rxIf=\"question.CanHaveImg\" />\n    <file-upload *rxIf=\"question.CanHaveFiles\" />\n  </ion-col>\n</ion-row>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 43,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\n\r\n@Component({\r\n  selector: \"radio-table-question\",\r\n  template: `\r\n    <ion-row>\r\n      <ion-col class=\"flex items-center\" size=\"2\">\r\n        <ion-label>\r\n          <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n        </ion-label>\r\n      </ion-col>\r\n      <ion-radio-group class=\"contents\">\r\n        <ion-col class=\"flex justify-center items-center\" size=\"1\">\r\n          <ion-radio aria-label=\"\" color=\"success\" [value]=\"true\"></ion-radio>\r\n        </ion-col>\r\n        <ion-col class=\"flex justify-center items-center\" size=\"1\">\r\n          <ion-radio aria-label=\"\" color=\"danger\" [value]=\"false\"></ion-radio>\r\n        </ion-col>\r\n        <ion-col class=\"flex justify-center items-center\" size=\"1\">\r\n          <ion-radio aria-label=\"\" [value]=\"null\"></ion-radio>\r\n        </ion-col>\r\n      </ion-radio-group>\r\n      <ion-col size=\"1\">\r\n        <camera-capture *rxIf=\"question.CanHaveImg\" />\r\n        <file-upload *rxIf=\"question.CanHaveFiles\" />\r\n      </ion-col>\r\n    </ion-row>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    QuestionTextComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent\r\n  ]\r\n})\r\nexport class RadioTableComponent {  \r\n  @Input({ required: true })\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "RadioTableTextboxComponent",
            "id": "component-RadioTableTextboxComponent-9a7521447a673e40f648ec070e2b0878cb1ad319723042cbe21e3165cd45889a211da4d2ac7cea57d04f1a1fa5c8ceddfbc16c69471675ab5c48af9ed04152d4",
            "file": "src/app/core/pages/document-builder/components/question-types/07-radio-table-textbox/radio-table-textbox.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "radio-table-textbox-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-row>\n  <ion-col class=\"flex items-center\" size=\"2\">\n    <ion-label>\n      <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n    </ion-label>\n  </ion-col>\n  <ion-radio-group class=\"contents\">\n    <ion-col class=\"flex justify-center items-center\" size=\"1\">\n      <ion-radio aria-label=\"\" color=\"success\" [value]=\"true\"></ion-radio>\n    </ion-col>\n    <ion-col class=\"flex justify-center items-center\" size=\"1\">\n      <ion-radio aria-label=\"\" color=\"danger\" [value]=\"false\"></ion-radio>\n    </ion-col>\n    <ion-col class=\"flex justify-center items-center\" size=\"1\">\n      <ion-radio aria-label=\"\" [value]=\"null\"></ion-radio>\n    </ion-col>\n  </ion-radio-group>\n  <ion-col size=\"2\">\n    <ion-textarea label=\"\" rows=\"4\" fill=\"outline\" />\n  </ion-col>\n</ion-row>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 40,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { QuestionTextComponent } from \"../extras\";\r\n\r\n@Component({\r\n  selector: \"radio-table-textbox-question\",\r\n  template: `\r\n    <ion-row>\r\n      <ion-col class=\"flex items-center\" size=\"2\">\r\n        <ion-label>\r\n          <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n        </ion-label>\r\n      </ion-col>\r\n      <ion-radio-group class=\"contents\">\r\n        <ion-col class=\"flex justify-center items-center\" size=\"1\">\r\n          <ion-radio aria-label=\"\" color=\"success\" [value]=\"true\"></ion-radio>\r\n        </ion-col>\r\n        <ion-col class=\"flex justify-center items-center\" size=\"1\">\r\n          <ion-radio aria-label=\"\" color=\"danger\" [value]=\"false\"></ion-radio>\r\n        </ion-col>\r\n        <ion-col class=\"flex justify-center items-center\" size=\"1\">\r\n          <ion-radio aria-label=\"\" [value]=\"null\"></ion-radio>\r\n        </ion-col>\r\n      </ion-radio-group>\r\n      <ion-col size=\"2\">\r\n        <ion-textarea label=\"\" rows=\"4\" fill=\"outline\" />\r\n      </ion-col>\r\n    </ion-row>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule, \r\n    QuestionTextComponent\r\n  ]\r\n})\r\nexport class RadioTableTextboxComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ReactiveComponent",
            "id": "component-ReactiveComponent-3edee08a67bd62b84355990c3fa0d2326fbdef1bfc74c8ebb7e263cf1cc243da4c6839b49a57dcd2e39af23bde763d8b52210e3ffe2380e6f3ce36abbf2c1525",
            "file": "src/app/shared/lifecycles/lifecycle-component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "styleUrls": [],
            "styles": [],
            "template": "",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from \"@angular/core\";\r\nimport { flow } from \"lodash-es\";\r\n\r\nexport type ReactiveConstructor = new (...args: any[]) => {};\r\n\r\n@Component({ template: \"\" })\r\nclass ReactiveComponent {};\r\n\r\nfunction withNoop<TBase extends ReactiveConstructor>(Base: TBase) {\r\n  return class extends Base {}\r\n}\r\n\r\ntype AnyFunction = (...args: any) => any;\r\n\r\nexport function AngularComponent<T1 extends AnyFunction>(h1: T1): ReturnType<T1>\r\nexport function AngularComponent<T1 extends AnyFunction, T2 extends AnyFunction>(h1: T1, h2: T2): ReturnType<T1> & ReturnType<T2>\r\nexport function AngularComponent<T1 extends AnyFunction, T2 extends AnyFunction, T3 extends AnyFunction>(h1: T1, h2: T2, h3: T3): ReturnType<T1> & ReturnType<T2> & ReturnType<T3>\r\nexport function AngularComponent<T1 extends AnyFunction, T2 extends AnyFunction, T3 extends AnyFunction, T4 extends AnyFunction>(h1: T1, h2: T2, h3: T3, h4: T4): ReturnType<T1> & ReturnType<T2> & ReturnType<T3> & ReturnType<T4>\r\nexport function AngularComponent<T1 extends AnyFunction, T2 extends AnyFunction, T3 extends AnyFunction, T4 extends AnyFunction, T5 extends AnyFunction>(h1: T1, h2: T2, h3: T3, h4: T4, h5: T5): ReturnType<T1> & ReturnType<T2> & ReturnType<T3> & ReturnType<T4> & ReturnType<T5>\r\nexport function AngularComponent<T1 extends AnyFunction, T2 extends AnyFunction, T3 extends AnyFunction, T4 extends AnyFunction, T5 extends AnyFunction, T6 extends AnyFunction>(h1: T1, h2: T2, h3: T3, h4: T4, h5: T5, h6: T6): ReturnType<T1> & ReturnType<T2> & ReturnType<T3> & ReturnType<T4> & ReturnType<T5> & ReturnType<T6>\r\nexport function AngularComponent(): ReturnType<typeof withNoop> & ReactiveComponent;\r\nexport function AngularComponent(...args: AnyFunction[]): any {\r\n  if (args == null || args.length === 0) return ReactiveComponent;\r\n\r\n  const withHooks = flow(args);\r\n  return withHooks(ReactiveComponent); \r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "RegistrationPage",
            "id": "component-RegistrationPage-cfaccfce30fc641c32b54c909d0d8be6e7f1f2d338722ae3b5e601f28b5a88bd715040310d7fd0cbae0861a53873aa1ddbb7ee4895853afd676fb9cac1214eb6",
            "file": "src/app/core/pages/registration/registration.page.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-registration",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-header>\n  <ion-toolbar>\n    <ion-title class=\"ion-text-center ion-text-wrap animate__animated animate__fadeInLeft animate__faster\">Site Documents Registration</ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content [formGroup]=\"form\" class=\"ion-padding animate__animated animate__fadeInLeft animate__faster\">\n  <ion-list>\n    <ion-item>\n      <ion-input\n        label=\"Registration Code\"\n        labelPlacement=\"floating\"\n        formControlName=\"token\"\n        type=\"text\"\n        clearInput />\n    </ion-item>\n    <ion-item>\n      <ion-input\n        label=\"Pin\"\n        labelPlacement=\"floating\"\n        formControlName=\"pin\"\n        type=\"tel\"\n        clearInput />\n    </ion-item>\n  </ion-list>\n\n  <ion-button\n    *rxLet=\"form.invalid$; let isInvalid\"\n    [disabled]=\"isInvalid\"\n    (click)=\"submit()\"\n    [unpatch]\n    expand=\"full\">\n    Submit\n  </ion-button>\n</ion-content>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "form",
                    "defaultValue": "new FormGroup({\r\n    token: new FormControl(\"\", [\r\n      Validators.required\r\n    ]),\r\n    pin: new FormControl(\"\", [\r\n      Validators.required,\r\n      Validators.minLength(4)\r\n    ])\r\n  })",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 62
                },
                {
                    "name": "submit",
                    "defaultValue": "reaction(click$ => click$.pipe(\r\n    takeUntilDestroyed(),\r\n    clickReaction(),\r\n    switchMap(() => this.userStore.getUserRequest$(this.form.value$))\r\n  ))",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 72
                },
                {
                    "name": "userStore",
                    "defaultValue": "inject(UserStore)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 60
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, inject } from \"@angular/core\";\r\nimport { takeUntilDestroyed } from \"@angular/core/rxjs-interop\";\r\nimport { ReactiveFormsModule, Validators } from \"@angular/forms\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { FormGroup, FormControl } from \"@ngneat/reactive-forms\";\r\nimport { AngularComponent } from \"src/app/shared/lifecycles\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { UserStore } from \"../../stores/user/user.store\";\r\nimport { switchMap } from \"rxjs\";\r\nimport { clickReaction, reaction } from \"src/app/shared/reactions\";\r\n\r\n@Component({\r\n  selector: \"app-registration\",\r\n  template: `\r\n    <ion-header>\r\n      <ion-toolbar>\r\n        <ion-title class=\"ion-text-center ion-text-wrap animate__animated animate__fadeInLeft animate__faster\">Site Documents Registration</ion-title>\r\n      </ion-toolbar>\r\n    </ion-header>\r\n\r\n    <ion-content [formGroup]=\"form\" class=\"ion-padding animate__animated animate__fadeInLeft animate__faster\">\r\n      <ion-list>\r\n        <ion-item>\r\n          <ion-input \r\n            label=\"Registration Code\" \r\n            labelPlacement=\"floating\"\r\n            formControlName=\"token\"\r\n            type=\"text\" \r\n            clearInput />\r\n        </ion-item>\r\n        <ion-item>\r\n          <ion-input \r\n            label=\"Pin\"\r\n            labelPlacement=\"floating\"\r\n            formControlName=\"pin\" \r\n            type=\"tel\" \r\n            clearInput />\r\n        </ion-item>\r\n      </ion-list>\r\n\r\n      <ion-button \r\n        *rxLet=\"form.invalid$; let isInvalid\" \r\n        [disabled]=\"isInvalid\"\r\n        (click)=\"submit()\"\r\n        [unpatch]\r\n        expand=\"full\">\r\n        Submit\r\n      </ion-button>\r\n    </ion-content>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class RegistrationPage extends AngularComponent() {\r\n  userStore = inject(UserStore);\r\n\r\n  form = new FormGroup({\r\n    token: new FormControl(\"\", [\r\n      Validators.required\r\n    ]),\r\n    pin: new FormControl(\"\", [\r\n      Validators.required,\r\n      Validators.minLength(4)\r\n    ])\r\n  });\r\n\r\n  submit = reaction(click$ => click$.pipe(\r\n    takeUntilDestroyed(),\r\n    clickReaction(),\r\n    switchMap(() => this.userStore.getUserRequest$(this.form.value$))\r\n  ));\r\n}",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "RemainAnonymousComponent",
            "id": "component-RemainAnonymousComponent-deec727657d3bd327b4c7dff596e01c111ec7bc5b03faaddc4611c82cc9e3a8f2aeff97b4791b5e0ea06e77c3558d48ac01b81a005eeb1d69e7065660468437d",
            "file": "src/app/core/pages/document-builder/components/input-types/remain-anonymous/remain-anonymous.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "remain-anonymous",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item>\n    <ion-checkbox [(ngModel)]=\"isTicked\" (ionChange)=\"isTickedChange.emit(isTicked)\">\n      Remain Anonymous?\n    </ion-checkbox>\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isTicked",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "boolean",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "isTickedChange",
                    "defaultValue": "new EventEmitter<boolean>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 28,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\n\r\n@Component({\r\n  selector: \"remain-anonymous\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item>\r\n        <ion-checkbox [(ngModel)]=\"isTicked\" (ionChange)=\"isTickedChange.emit(isTicked)\">\r\n          Remain Anonymous?\r\n        </ion-checkbox>\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    FormsModule\r\n  ]\r\n})\r\nexport class RemainAnonymousComponent {\r\n  @Input()\r\n  isTicked: boolean = false;\r\n\r\n  @Output()\r\n  isTickedChange = new EventEmitter<boolean>();\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "ResponsibilityAreaSelectComponent",
            "id": "component-ResponsibilityAreaSelectComponent-1c8531da35e1b49ea119cb4c5d9670e6e0e628b14db150e832ae773ad455b80e851f17a4be500853861d5e0e9fdacfeec90e981383eba28a9cb42daf8f39ab80",
            "file": "src/app/core/pages/document-builder/components/input-types/responsibility-area-select/responsibility-area-select.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "responsibility-area-select[resposibilityTypeId]",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-card *rxLet=\"responsibilityAreaType$; let rat\">\n  <ion-card-header *rxIf=\"rat != null\">\n    <ion-card-title class=\"text-center\">\n      {{ rat.AppQuestionText }}\n    </ion-card-title>\n  </ion-card-header>\n  <ion-card-content>\n    <if [condition]=\"rat != null && rat.Areas.length > 0\">\n      <selectable\n        show\n        title=\"Responsibility Types\"\n        placeholder=\"Select\"\n        [items]=\"rat?.Areas || []\"\n        itemText=\"Name\"\n        (valueChange)=\"responsibilityAreaTypeIdChange.emit($event!.Id)\"\n        [canClear]=\"false\" />\n      <span else>\n        No areas found For Document Responsibility Area Type.\n        Document will not be able to be submitted. Please update lists and try again.\n      </span>\n    </if>\n  </ion-card-content>\n</ion-card>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "responsibilityAreaTypeId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "responsibilityAreaTypeIdChange",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "responsibilityAreaType$",
                    "defaultValue": "merge(this.afterViewInit$, this.input$(\"responsibilityAreaTypeId\")).pipe(\r\n    switchMap(() => this.responsibilityAreaTypesStore.responsibilityAreaTypeById$(this.responsibilityAreaTypeId))\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<ResponsibilityAreaType | undefined>",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "responsibilityAreaTypesStore",
                    "defaultValue": "inject(ResponsibilityAreaTypesStore)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 46
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, inject } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Observable, merge, switchMap } from \"rxjs\";\r\nimport { ResponsibilityAreaType, ResponsibilityAreaTypesStore } from \"src/app/core/stores/responsibility-area-types/responsibility-area-types.store\";\r\nimport { IfComponent, SelectableComponent } from \"src/app/shared/components\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { AngularComponent, withAfterViewInit, withOnChanges } from \"src/app/shared/lifecycles\";\r\n\r\n@Component({\r\n  selector: \"responsibility-area-select[resposibilityTypeId]\",\r\n  template: `\r\n    <ion-card *rxLet=\"responsibilityAreaType$; let rat\">\r\n      <ion-card-header *rxIf=\"rat != null\">\r\n        <ion-card-title class=\"text-center\">\r\n          {{ rat.AppQuestionText }}\r\n        </ion-card-title>\r\n      </ion-card-header>\r\n      <ion-card-content>\r\n        <if [condition]=\"rat != null && rat.Areas.length > 0\">\r\n          <selectable \r\n            show \r\n            title=\"Responsibility Types\"\r\n            placeholder=\"Select\"\r\n            [items]=\"rat?.Areas || []\"\r\n            itemText=\"Name\"\r\n            (valueChange)=\"responsibilityAreaTypeIdChange.emit($event!.Id)\"\r\n            [canClear]=\"false\" />\r\n          <span else>\r\n            No areas found For Document Responsibility Area Type. \r\n            Document will not be able to be submitted. Please update lists and try again.\r\n          </span>\r\n        </if>\r\n      </ion-card-content>\r\n    </ion-card>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    SelectableComponent,\r\n    IfComponent\r\n  ]\r\n})\r\nexport class ResponsibilityAreaSelectComponent extends AngularComponent(withAfterViewInit, withOnChanges) {\r\n  responsibilityAreaTypesStore = inject(ResponsibilityAreaTypesStore);\r\n\r\n  @Input()\r\n  responsibilityAreaTypeId!: number;\r\n\r\n  @Output()\r\n  responsibilityAreaTypeIdChange = new EventEmitter<number>();\r\n\r\n  responsibilityAreaType$: Observable<ResponsibilityAreaType | undefined> = merge(this.afterViewInit$, this.input$(\"responsibilityAreaTypeId\")).pipe(\r\n    switchMap(() => this.responsibilityAreaTypesStore.responsibilityAreaTypeById$(this.responsibilityAreaTypeId))\r\n  );\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SelectableComponent",
            "id": "component-SelectableComponent-0f8d74089ff0cccb589d352e6f858465fb177a3455e4b6dd663adfd9d4ba09837d04e652bb6f614fd13341e380a2c7e4f416f547b75fbfb50ee6bb239e10f994",
            "file": "src/app/shared/components/selectable/selectable.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "selectable",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-item [id]=\"id\" detail=\"false\" button>\n  <ion-label [color]=\"value == null ? 'medium' : ''\" class=\"ion-text-wrap\">\n  {{\n    value == null\n      ? placeholder\n      : itemText != null\n        ? value[itemText]\n        : value\n  }}\n  </ion-label>\n  <ion-button *rxIf=\"canClear && value != null\" (click)=\"$event.stopPropagation(); value = null; valueChange.emit(null)\" fill=\"clear\">\n    <ion-icon name=\"close-outline\" color=\"danger\" slot=\"icon-only\" />\n  </ion-button>\n  <ion-icon name=\"caret-down-outline\" slot=\"end\" />\n</ion-item>\n\n<ion-modal #modal [trigger]=\"id\">\n  <ng-template>\n    <ion-header>\n      <ion-toolbar>\n        <ion-buttons slot=\"start\">\n          <ion-button (click)=\"modal.dismiss()\" [unpatch] fill=\"clear\">\n            <ion-icon name=\"arrow-back-outline\" slot=\"icon-only\" />\n          </ion-button>\n        </ion-buttons>\n        <ion-title class=\"ion-text-center\">{{ title }}</ion-title>\n      </ion-toolbar>\n      <ion-toolbar>\n        <ion-searchbar\n          [(ngModel)]=\"searchValue\"\n          debounce=\"300\"\n          placeholder=\"Search\" />\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content>\n      <ion-list class=\"h-full\">\n        <rx-virtual-scroll-viewport [itemSize]=\"50\">\n          <ion-item\n            *rxVirtualFor=\"let item of items\n              | fuse: {\n                search: searchValue,\n                keys: itemText != null\n                  ? [itemText]\n                  : []\n              };\n              last as isLast\"\n            class=\"w-full\"\n            (click)=\"\n              value = item;\n              valueChange.emit(item);\n              modal.dismiss()\"\n            [lines]=\"isLast\n              ? 'none'\n              : 'inset'\"\n            [unpatch]\n            button>\n            <ion-label class=\"ion-text-wrap\">{{ itemText != null ? item[itemText] : item }}</ion-label>\n          </ion-item>\n        </rx-virtual-scroll-viewport>\n      </ion-list>\n    </ion-content>\n  </ng-template>\n</ion-modal>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "canClear",
                    "defaultValue": "true",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 106,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "items",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 94,
                    "type": "T[]",
                    "decorators": []
                },
                {
                    "name": "itemText",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 97,
                    "type": " | null",
                    "decorators": []
                },
                {
                    "name": "placeholder",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 88,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "title",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 91,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "value",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 100,
                    "type": "T | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "valueChange",
                    "defaultValue": "new EventEmitter<T | null>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 103,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "id",
                    "defaultValue": "crypto.randomUUID()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 85
                },
                {
                    "name": "searchValue",
                    "defaultValue": "\"\"",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 108
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { importRxFixedVirtualScroll, importRxTemplate } from \"../../imports\";\r\nimport { FusePipe } from \"../../pipes\";\r\n\r\n@Component({\r\n  selector: \"selectable\",\r\n  template: `\r\n    <ion-item [id]=\"id\" detail=\"false\" button>\r\n      <ion-label [color]=\"value == null ? 'medium' : ''\" class=\"ion-text-wrap\">\r\n      {{ \r\n        value == null \r\n          ? placeholder\r\n          : itemText != null\r\n            ? value[itemText]\r\n            : value\r\n      }}\r\n      </ion-label>\r\n      <ion-button *rxIf=\"canClear && value != null\" (click)=\"$event.stopPropagation(); value = null; valueChange.emit(null)\" fill=\"clear\">\r\n        <ion-icon name=\"close-outline\" color=\"danger\" slot=\"icon-only\" />\r\n      </ion-button>\r\n      <ion-icon name=\"caret-down-outline\" slot=\"end\" />\r\n    </ion-item>\r\n\r\n    <ion-modal #modal [trigger]=\"id\">\r\n      <ng-template>\r\n        <ion-header>\r\n          <ion-toolbar>\r\n            <ion-buttons slot=\"start\">\r\n              <ion-button (click)=\"modal.dismiss()\" [unpatch] fill=\"clear\">\r\n                <ion-icon name=\"arrow-back-outline\" slot=\"icon-only\" />\r\n              </ion-button>\r\n            </ion-buttons>\r\n            <ion-title class=\"ion-text-center\">{{ title }}</ion-title>\r\n          </ion-toolbar>\r\n          <ion-toolbar>\r\n            <ion-searchbar \r\n              [(ngModel)]=\"searchValue\"\r\n              debounce=\"300\" \r\n              placeholder=\"Search\" />\r\n          </ion-toolbar>\r\n        </ion-header>\r\n\r\n        <ion-content>\r\n          <ion-list class=\"h-full\">\r\n            <rx-virtual-scroll-viewport [itemSize]=\"50\">\r\n              <ion-item \r\n                *rxVirtualFor=\"let item of items \r\n                  | fuse: {\r\n                    search: searchValue,\r\n                    keys: itemText != null \r\n                      ? [itemText]\r\n                      : []\r\n                  }; \r\n                  last as isLast\" \r\n                class=\"w-full\"\r\n                (click)=\"\r\n                  value = item; \r\n                  valueChange.emit(item); \r\n                  modal.dismiss()\"\r\n                [lines]=\"isLast \r\n                  ? 'none' \r\n                  : 'inset'\" \r\n                [unpatch] \r\n                button>\r\n                <ion-label class=\"ion-text-wrap\">{{ itemText != null ? item[itemText] : item }}</ion-label>\r\n              </ion-item>\r\n            </rx-virtual-scroll-viewport>\r\n          </ion-list>\r\n        </ion-content>\r\n      </ng-template>\r\n    </ion-modal>\r\n  `,\r\n  standalone: true,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    ...importRxFixedVirtualScroll(),\r\n    FormsModule,\r\n    FusePipe\r\n  ]\r\n})\r\nexport class SelectableComponent<T = unknown> {\r\n  id = crypto.randomUUID();\r\n\r\n  @Input()\r\n  placeholder: string = \"\";\r\n\r\n  @Input()\r\n  title: string = \"\";\r\n\r\n  @Input()\r\n  items: T[] = [];\r\n\r\n  @Input()\r\n  itemText: keyof T | null = null;\r\n\r\n  @Input()\r\n  value: T | null = null;\r\n\r\n  @Output()\r\n  valueChange = new EventEmitter<T | null>();\r\n\r\n  @Input()\r\n  canClear: boolean = true;\r\n\r\n  searchValue: string = \"\";\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SelectComponent",
            "id": "component-SelectComponent-5659262166755eb019ff290f8b3bb63c1466e83fb98dd7552370ffaa16fddbd9796c148aa688b3ae012c3c4cdd7d4f03f514263b2ca81031b1ca1c1d9225883e",
            "file": "src/app/core/pages/document-builder/components/question-types/05-select/select.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "select-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n    <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\n    <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\n  </ion-item>\n  <selectable\n    placeholder=\"Select\"\n    [title]=\"question.QuestionText\"\n    [items]=\"question.Options\"\n    itemText=\"Text\"\n    [canClear]=\"!question.Required\" />\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 38,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { SelectableComponent } from \"src/app/shared/components/selectable/selectable.component\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\n\r\n@Component({\r\n  selector: \"select-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n        <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\r\n        <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\r\n      </ion-item>\r\n      <selectable \r\n        placeholder=\"Select\"\r\n        [title]=\"question.QuestionText\"\r\n        [items]=\"question.Options\"\r\n        itemText=\"Text\"\r\n        [canClear]=\"!question.Required\" />\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    QuestionTextComponent,\r\n    SelectableComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent\r\n  ]\r\n})\r\nexport class SelectComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SelectTextComponent",
            "id": "component-SelectTextComponent-4346a777489a5b92f000c95ac28a519f6a981a0d4d399bfd6adc122cd3a9898246c9430b1e403f2fbbf596ee205d0ef57dcfe1e82fdfba6e93f4b9fd424acd42",
            "file": "src/app/core/pages/document-builder/components/question-types/29-select-text/select-text.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "select-text-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n    <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\n    <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\n  </ion-item>\n  <selectable\n    placeholder=\"Select\"\n    [title]=\"question.QuestionText\"\n    [items]=\"question.Options\"\n    itemText=\"Text\"\n    [canClear]=\"!question.Required\" />\n  <ion-textarea class=\"ion-margin-top\" label=\"Comments\" labelPlacement=\"floating\" rows=\"4\" type=\"text\" fill=\"outline\" />\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 39,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { SelectableComponent } from \"src/app/shared/components/selectable/selectable.component\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\n\r\n@Component({\r\n  selector: \"select-text-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n        <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\r\n        <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\r\n      </ion-item>\r\n      <selectable \r\n        placeholder=\"Select\"\r\n        [title]=\"question.QuestionText\"\r\n        [items]=\"question.Options\"\r\n        itemText=\"Text\"\r\n        [canClear]=\"!question.Required\" />\r\n      <ion-textarea class=\"ion-margin-top\" label=\"Comments\" labelPlacement=\"floating\" rows=\"4\" type=\"text\" fill=\"outline\" />\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    QuestionTextComponent,\r\n    SelectableComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent\r\n  ]\r\n})\r\nexport class SelectTextComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SignatureComponent",
            "id": "component-SignatureComponent-984cc1ebc92fc7d9b01abf2620ec85d1ac74ce2f71db3ad610014550cdf057e9a25bbbb8e40400dfcc9ad314716ec586b2a1e24f3129ddab72e04308c97bb6d4",
            "file": "src/app/core/pages/document-builder/components/question-types/19-signature/signature.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "signature-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n  </ion-item>\n\n  <ion-item>\n    <ion-input label=\"Print\" labelPlacement=\"floating\" [(ngModel)]=\"question.AnswerText\" type=\"text\" />\n    <ion-button [id]=\"id\" fill=\"clear\" slot=\"end\">\n      <ion-icon name=\"create-outline\" slot=\"icon-only\" />\n    </ion-button>\n  </ion-item>\n</ion-list>\n\n<ion-modal #modal [trigger]=\"id\">\n  <ng-template>\n    <ion-header>\n      <ion-toolbar>\n        <ion-buttons slot=\"start\">\n          <ion-button (click)=\"modal.dismiss()\" [unpatch] fill=\"clear\">\n            <ion-icon name=\"arrow-back-outline\" slot=\"icon-only\" />\n          </ion-button>\n        </ion-buttons>\n        <ion-title class=\"text-center\">Signature</ion-title>\n      </ion-toolbar>\n    </ion-header>\n    <ion-content></ion-content>\n    <ion-footer>\n      <ion-grid>\n        <ion-row>\n          <ion-col>\n            <ion-button color=\"danger\" expand=\"full\">\n              Clear\n            </ion-button>\n          </ion-col>\n          <ion-col>\n            <ion-button color=\"secondary\" expand=\"full\">\n              Save\n            </ion-button>\n          </ion-col>\n        </ion-row>\n      </ion-grid>\n    </ion-footer>\n  </ng-template>\n</ion-modal>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 69,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "id",
                    "defaultValue": "crypto.randomUUID()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 66
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { QuestionTextComponent } from \"../extras\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\n\r\n@Component({\r\n  selector: \"signature-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n      </ion-item>\r\n\r\n      <ion-item>\r\n        <ion-input label=\"Print\" labelPlacement=\"floating\" [(ngModel)]=\"question.AnswerText\" type=\"text\" />\r\n        <ion-button [id]=\"id\" fill=\"clear\" slot=\"end\">\r\n          <ion-icon name=\"create-outline\" slot=\"icon-only\" />\r\n        </ion-button>\r\n      </ion-item>\r\n    </ion-list>\r\n\r\n    <ion-modal #modal [trigger]=\"id\">\r\n      <ng-template>\r\n        <ion-header>\r\n          <ion-toolbar>\r\n            <ion-buttons slot=\"start\">\r\n              <ion-button (click)=\"modal.dismiss()\" [unpatch] fill=\"clear\">\r\n                <ion-icon name=\"arrow-back-outline\" slot=\"icon-only\" />\r\n              </ion-button>\r\n            </ion-buttons>\r\n            <ion-title class=\"text-center\">Signature</ion-title>\r\n          </ion-toolbar>\r\n        </ion-header>\r\n        <ion-content></ion-content>\r\n        <ion-footer>\r\n          <ion-grid>\r\n            <ion-row>\r\n              <ion-col>\r\n                <ion-button color=\"danger\" expand=\"full\">\r\n                  Clear\r\n                </ion-button>\r\n              </ion-col>\r\n              <ion-col>\r\n                <ion-button color=\"secondary\" expand=\"full\">\r\n                  Save\r\n                </ion-button>\r\n              </ion-col>\r\n            </ion-row>\r\n          </ion-grid>\r\n        </ion-footer>\r\n      </ng-template>\r\n    </ion-modal>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    FormsModule,\r\n    QuestionTextComponent\r\n  ]\r\n})\r\nexport class SignatureComponent {\r\n  id = crypto.randomUUID();\r\n  \r\n  @Input({ required: true })\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "SiteSelectComponent",
            "id": "component-SiteSelectComponent-64b9edcae517b03def8d32a5e26d6fd3c663bfcc28de64fb430f8087a98a338becb7cc3840361e0e6aeec60b13c872e3cc13b21f253ec4be5f0e8df65cb8a9c3",
            "file": "src/app/core/pages/document-builder/components/input-types/site-select/site-select.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "site-select",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-card>\n  <ion-card-header>\n    <ion-card-title class=\"text-center\">{{ title || \"Select a site\" }}</ion-card-title>\n    <p *rxIf=\"isMobileApp\" class=\"text-center\">\n      <b>Setting site only attaches site on to this document and does not change site in settings</b>\n    </p>\n  </ion-card-header>\n  <ion-card-content>\n    <selectable\n      [title]=\"title || 'Select a site'\"\n      placeholder=\"Select Site\"\n      [items]=\"sites$ | push\"\n      itemText=\"Name\"\n      [value]=\"selectedSite$ | push\"\n      (valueChange)=\"siteChange($event)\"\n      [canClear]=\"false\" />\n  </ion-card-content>\n</ion-card>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "siteId",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 49,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "title",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 46,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "siteIdChange",
                    "defaultValue": "new EventEmitter<number>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 52,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "isMobileApp",
                    "defaultValue": "isMobileApp()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 43
                },
                {
                    "name": "selectedSite$",
                    "defaultValue": "merge(this.afterViewInit$, this.input$(\"siteId\")).pipe(\r\n    switchMap(() => this.sites$),\r\n    map(sites => sites.find(s => s.Id === this.siteId) || null)\r\n  )",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Site | null>",
                    "optional": false,
                    "description": "",
                    "line": 56
                },
                {
                    "name": "sites$",
                    "defaultValue": "this.userStore.sites$",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 54
                },
                {
                    "name": "userStore",
                    "defaultValue": "inject(UserStore)",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 41
                }
            ],
            "methodsClass": [
                {
                    "name": "siteChange",
                    "args": [
                        {
                            "name": "site",
                            "type": "Site | null",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 61,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "site",
                            "type": "Site | null",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output, inject } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Observable, map, merge, switchMap } from \"rxjs\";\r\nimport { Site, UserStore } from \"src/app/core/stores/user/user.store\";\r\nimport { SelectableComponent } from \"src/app/shared/components\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { AngularComponent, withAfterViewInit, withOnChanges } from \"src/app/shared/lifecycles\";\r\nimport { isMobileApp } from \"src/app/shared/plugins/platform.plugin\";\r\n\r\n@Component({\r\n  selector: \"site-select\",\r\n  template: `\r\n    <ion-card>\r\n      <ion-card-header>\r\n        <ion-card-title class=\"text-center\">{{ title || \"Select a site\" }}</ion-card-title>\r\n        <p *rxIf=\"isMobileApp\" class=\"text-center\">\r\n          <b>Setting site only attaches site on to this document and does not change site in settings</b>\r\n        </p>\r\n      </ion-card-header>\r\n      <ion-card-content>\r\n        <selectable \r\n          [title]=\"title || 'Select a site'\" \r\n          placeholder=\"Select Site\"\r\n          [items]=\"sites$ | push\"\r\n          itemText=\"Name\"\r\n          [value]=\"selectedSite$ | push\"\r\n          (valueChange)=\"siteChange($event)\"\r\n          [canClear]=\"false\" />\r\n      </ion-card-content>\r\n    </ion-card>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    SelectableComponent\r\n  ]\r\n})\r\nexport class SiteSelectComponent extends AngularComponent(withAfterViewInit, withOnChanges) {\r\n  userStore = inject(UserStore);\r\n\r\n  isMobileApp = isMobileApp();\r\n\r\n  @Input()\r\n  title?: string;\r\n\r\n  @Input()\r\n  siteId?: number;\r\n\r\n  @Output()\r\n  siteIdChange = new EventEmitter<number>();\r\n\r\n  sites$ = this.userStore.sites$;\r\n\r\n  selectedSite$: Observable<Site | null> = merge(this.afterViewInit$, this.input$(\"siteId\")).pipe(\r\n    switchMap(() => this.sites$),\r\n    map(sites => sites.find(s => s.Id === this.siteId) || null)\r\n  );\r\n\r\n  siteChange(site: Site | null) {\r\n    this.siteId = site!.Id;\r\n    this.siteIdChange.emit(this.siteId);\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "TemplateMenuModal",
            "id": "component-TemplateMenuModal-d84007cc7ca14743aa3ff2addf8c239e37ec5663baef71c7e3c8a8fa75588385fef981ed3c5c41ddd5ea87ee3fb99c60a4d10121654805c51a3e0977938aec93",
            "file": "src/app/core/pages/document-builder/modals/template-menu/template-menu.modal.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "template-menu-modal[trigger]",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-modal #modal [trigger]=\"trigger\" [isOpen]=\"isOpen\">\n  <ng-template>\n    <ion-header>\n      <ion-toolbar>\n        <ion-title class=\"text-center\">Templates</ion-title>\n        <ion-buttons slot=\"end\">\n          <ion-button (click)=\"modal.dismiss()\">\n            <ion-icon name=\"close-outline\" slot=\"icon-only\" />\n          </ion-button>\n        </ion-buttons>\n      </ion-toolbar>\n    </ion-header>\n\n    <ion-content class=\"ion-padding\">\n\n    </ion-content>\n  </ng-template>\n</ion-modal>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "isOpen",
                    "defaultValue": "false",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 37,
                    "type": "boolean",
                    "decorators": []
                },
                {
                    "name": "trigger",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 34,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\n\r\n@Component({\r\n  selector: \"template-menu-modal[trigger]\",\r\n  template: `\r\n    <ion-modal #modal [trigger]=\"trigger\" [isOpen]=\"isOpen\">\r\n      <ng-template>\r\n        <ion-header>\r\n          <ion-toolbar>\r\n            <ion-title class=\"text-center\">Templates</ion-title>\r\n            <ion-buttons slot=\"end\">\r\n              <ion-button (click)=\"modal.dismiss()\">\r\n                <ion-icon name=\"close-outline\" slot=\"icon-only\" />\r\n              </ion-button>\r\n            </ion-buttons>\r\n          </ion-toolbar>\r\n        </ion-header>\r\n\r\n        <ion-content class=\"ion-padding\">\r\n\r\n        </ion-content>\r\n      </ng-template>\r\n    </ion-modal>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n  ]\r\n})\r\nexport class TemplateMenuModal {\r\n  @Input()\r\n  trigger!: string;\r\n\r\n  @Input()\r\n  isOpen: boolean = false;\r\n\r\n  \r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "TextareaComponent",
            "id": "component-TextareaComponent-f7bf373922d7b4ed2483ff48f54cc3b8b83687b04957e243ea032ae26eef05077536c18ec9ff3296110bf04c278f2cf525827ba9daf2b9aec6069aa3b2afaeca",
            "file": "src/app/core/pages/document-builder/components/question-types/04-textarea/textarea.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "textarea-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">\n      {{ question.QuestionText }}\n    </question-text>\n    <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\n    <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\n  </ion-item>\n  <ion-item>\n    <ion-textarea label=\"\" rows=\"6\" fill=\"outline\" />\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\n\r\n@Component({\r\n  selector: \"textarea-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">\r\n          {{ question.QuestionText }}\r\n        </question-text>\r\n        <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\r\n        <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\r\n      </ion-item>\r\n      <ion-item>\r\n        <ion-textarea label=\"\" rows=\"6\" fill=\"outline\" />\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    QuestionTextComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent\r\n  ]\r\n})\r\nexport class TextareaComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "TextboxComponent",
            "id": "component-TextboxComponent-57a25038eeba19611006bf857b9638da926b0f9d4bb4587e4fd56be5d19b482cab51c43e83b402901c1b1a86e15088444826e9d6573de20d6dc96490f176837d",
            "file": "src/app/core/pages/document-builder/components/question-types/03-textbox/textbox.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "textbox-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\n    <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\n    <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\n  </ion-item>\n  <ion-item>\n    <ion-input label=\"\" type=\"text\" [(ngModel)]=\"question.AnswerText\" />\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 35,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { importRxTemplate } from \"src/app/shared/imports\";\r\nimport { CameraCaptureComponent, FileUploadComponent, QuestionTextComponent } from \"../extras\";\r\nimport { FormsModule } from \"@angular/forms\";\r\n\r\n@Component({\r\n  selector: \"textbox-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">{{ question.QuestionText }}</question-text>\r\n        <camera-capture *rxIf=\"question.CanHaveImg\" class=\"ion-no-margin\" slot=\"end\" />\r\n        <file-upload *rxIf=\"question.CanHaveFiles\" class=\"ion-no-margin\" slot=\"end\" />\r\n      </ion-item>\r\n      <ion-item>\r\n        <ion-input label=\"\" type=\"text\" [(ngModel)]=\"question.AnswerText\" />\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    ...importRxTemplate(),\r\n    FormsModule,\r\n    QuestionTextComponent,\r\n    CameraCaptureComponent,\r\n    FileUploadComponent\r\n  ]\r\n})\r\nexport class TextboxComponent {\r\n  @Input({ required: true })\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "TimeComponent",
            "id": "component-TimeComponent-0a5c7eccb27512611bfcc112a370a8fca63e2fbdb87f548390c5273f091aa2215af358fefc56a561777a8eb551bbd660b7234930daaa98cf2f16b42369f3c70b",
            "file": "src/app/core/pages/document-builder/components/question-types/32-time/time.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "time-question",
            "styleUrls": [],
            "styles": [],
            "template": "<ion-list>\n  <ion-item lines=\"none\">\n    <question-text [required]=\"question.Required\">\n      {{ question.QuestionText }}\n    </question-text>\n  </ion-item>\n\n  <ion-item>\n\n  </ion-item>\n</ion-list>\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 32,
                    "type": "Question",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "id",
                    "defaultValue": "crypto.randomUUID()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 29
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input } from \"@angular/core\";\r\nimport { IonicModule } from \"@ionic/angular\";\r\nimport { Question } from \"src/app/core/stores/site-document/models\";\r\nimport { QuestionTextComponent } from \"../extras\";\r\n\r\n@Component({\r\n  selector: \"time-question\",\r\n  template: `\r\n    <ion-list>\r\n      <ion-item lines=\"none\">\r\n        <question-text [required]=\"question.Required\">\r\n          {{ question.QuestionText }}\r\n        </question-text>\r\n      </ion-item>\r\n\r\n      <ion-item>\r\n\r\n      </ion-item>\r\n    </ion-list>\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  imports: [\r\n    IonicModule,\r\n    QuestionTextComponent\r\n  ]\r\n})\r\nexport class TimeComponent {\r\n  id = crypto.randomUUID();\r\n\r\n  @Input({ required: true })\r\n  question!: Question;\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": ""
        },
        {
            "name": "UploadComponent",
            "id": "component-UploadComponent-9bdfc515ee078304738e96a6fa751b5b54e8db9b4a42faa2f1703f1d312a03405fb72df6d18b764d03066c760d6b2df90bb12446f8cf074825b1332c0b1204c1",
            "file": "src/app/shared/components/upload/upload.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "upload",
            "styleUrls": [],
            "styles": [
                "\n    :host { display: contents }\n  "
            ],
            "template": "<label [for]=\"id\" class=\"w-full h-full fixed cursor-pointer\"></label>\n<input [id]=\"id\" type=\"file\" [accept]=\"accept\" (change)=\"take($event)\" class=\"hidden\" />\n",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "accept",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 41,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "uploadFiles",
                    "defaultValue": "new EventEmitter<DataUrlFile[]>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 44,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [
                {
                    "name": "id",
                    "defaultValue": "crypto.randomUUID()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "optional": false,
                    "description": "",
                    "line": 38
                }
            ],
            "methodsClass": [
                {
                    "name": "take",
                    "args": [
                        {
                            "name": "ev",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 46,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "modifierKind": [
                        131
                    ],
                    "jsdoctags": [
                        {
                            "name": "ev",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from \"@angular/core\";\r\nimport { TargetEvent } from \"../../models/events/target-event.model\";\r\nimport { DataUrlFile } from \"../../models/files/data-url-file.model\";\r\n\r\nfunction fileReader(): FileReader {\r\n  const fileReader = new FileReader();\r\n  const zoneOriginalInstance = (fileReader as any)[\"__zone_symbol__originalInstance\"];\r\n  return zoneOriginalInstance || fileReader;\r\n}\r\n\r\nfunction fileToDataUrlFile(file: File): Promise<DataUrlFile> {\r\n  const reader = fileReader();\r\n  return new Promise(resolve => {\r\n    reader.onload = (event) => resolve({ \r\n      name: file.name, \r\n      lastModified: file.lastModified, \r\n      size: file.size, \r\n      type: file.type, \r\n      dataUrl: event.target!.result as string \r\n    })//resolve(event.target!.result as string);\r\n    reader.readAsDataURL(file);\r\n  });\r\n}\r\n\r\n@Component({\r\n  selector: \"upload\",\r\n  styles: [`\r\n    :host { display: contents }\r\n  `],\r\n  template: `\r\n    <label [for]=\"id\" class=\"w-full h-full fixed cursor-pointer\"></label>\r\n    <input [id]=\"id\" type=\"file\" [accept]=\"accept\" (change)=\"take($event)\" class=\"hidden\" />\r\n  `,\r\n  standalone: true,\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class UploadComponent {\r\n  id = crypto.randomUUID();\r\n\r\n  @Input()\r\n  accept?: string;\r\n\r\n  @Output()\r\n  uploadFiles = new EventEmitter<DataUrlFile[]>();\r\n\r\n  async take(ev: unknown) {\r\n    const event = ev as TargetEvent<{ files: File[], value: null }>;\r\n    const files: File[] = [...event.target.files];\r\n\r\n    const dataUrlFiles = await Promise.all(files.map(fileToDataUrlFile));\r\n    this.uploadFiles.emit(dataUrlFiles);\r\n    event.target.value = null;\r\n  }\r\n}\r\n",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "\n    :host { display: contents }\n  \n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "DateOnly",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/datetime-picker/datetime-picker.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/registration/registration.page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/camera/camera.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/datetime-picker/datetime-picker.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/multi-selectable/multi-selectable.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/selectable/selectable.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modals/asset-list/asset-list.modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modals/operative-list/operative-list.modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/multi-checkbox-section/multi-checkbox-section.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/modals/document-summary/document-summary.modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modals/operative-list/components/local-operative-search/local-operative-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modals/operative-list/components/online-operative-search/online-operative-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/actioner-select/actioner-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/company-actioner-select/company-actioner-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/document-image-upload/document-image-upload.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/queue-duration/queue-duration.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/remain-anonymous/remain-anonymous.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/responsibility-area-select/responsibility-area-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/site-select/site-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/00-label/label.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/01-checkbox/checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/02-radio-group/radio-group.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/02-radio-table/radio-table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/03-textbox/textbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/04-textarea/textarea.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/07-radio-group-textbox/radio-group-textbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/05-select/select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/06-checkbox-textbox/checkbox-textbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/07-radio-table-textbox/radio-table-textbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/08-date/date.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/10-operative-list/operative-list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/09-datetime/datetime.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/12-number/number.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/13-cascade-select/cascade-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/17-asset-list/asset-list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/16-linked-bool/linked-bool.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/19-signature/signature.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/18-linked-dates/linked-dates.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/29-select-text/select-text.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/30-cascade-select-text/cascade-select-text.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/extras/camera-capture/camera-capture.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Default",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/extras/file-upload/file-upload.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "defaultDoc",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "SiteDocument",
                "defaultValue": "{\r\n  ...defaultSiteDocument,\r\n  DocumentTitle: faker.lorem.word(),\r\n  Pages: [\r\n    {\r\n      PageID: 1,\r\n      PageTitle: faker.lorem.word(),\r\n      Sections: Object\r\n        .values(QuestionType)\r\n        .filter(qt => typeof qt === \"number\")\r\n        .map((qt, idx) => \r\n          ({\r\n            ...defaultSection,\r\n            SectionID: idx,\r\n            SectionNo: idx,\r\n            SectionTitle: \"\",\r\n            SectionQuestiontype: qt as QuestionType,\r\n            Questions: [\r\n              {\r\n                ...defaultQuestion,\r\n                QuestionText: QuestionType[qt as number].toString()\r\n              }\r\n            ]\r\n          })\r\n        )\r\n    }\r\n  ]\r\n}"
            },
            {
                "name": "defaultDoc",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/modals/document-summary/document-summary.modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "SiteDocument",
                "defaultValue": "{\r\n  ...defaultSiteDocument,\r\n  DocumentTitle: faker.lorem.word(),\r\n  RemainAnon: true,\r\n  CurrentActionerOperativeID: 1,\r\n  CompanyActionerId: 1,\r\n  SiteId: 1,\r\n  AutoQueueID: 1,\r\n  QueueDuration: {\r\n    Value: 6,\r\n    Type: \"Hours\"\r\n  },\r\n  MetaData: {\r\n    ActionerText: \"Pick your actioner\",\r\n    SiteListTitle: \"Pick your site\"\r\n  },\r\n  Pages: [\r\n    {\r\n      PageID: 1,\r\n      PageTitle: faker.lorem.word(),\r\n      Sections: Object\r\n        .values(QuestionType)\r\n        .filter(qt => typeof qt === \"number\")\r\n        .map((qt, idx) => \r\n          ({\r\n            ...defaultSection,\r\n            SectionID: idx,\r\n            SectionNo: idx,\r\n            SectionTitle: \"\",\r\n            SectionQuestiontype: qt as QuestionType,\r\n            Questions: [\r\n              {\r\n                ...defaultQuestion,\r\n                QuestionText: QuestionType[qt as number].toString()\r\n              }\r\n            ]\r\n          })\r\n        )\r\n    }\r\n  ]\r\n}"
            },
            {
                "name": "DocumentWithAllPermissionsTurnedOn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "DocumentWithMultiplePages",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "docWithAllPermissionsOn",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "SiteDocument",
                "defaultValue": "{\r\n  ...defaultSiteDocument,\r\n  DocumentTitle: faker.lorem.word(),\r\n  Pages: [\r\n    {\r\n      PageID: 1,\r\n      PageTitle: faker.lorem.word(),\r\n      Sections: Object\r\n        .values(QuestionType)\r\n        .filter(qt => typeof qt === \"number\")\r\n        .map((qt, idx) => \r\n          ({\r\n            ...defaultSection,\r\n            SectionID: idx,\r\n            SectionNo: idx,\r\n            SectionTitle: \"\",\r\n            SectionQuestiontype: qt as QuestionType,\r\n            Questions: [\r\n              {\r\n                ...defaultQuestion,\r\n                QuestionText: QuestionType[qt as number].toString()\r\n              }\r\n            ]\r\n          })\r\n        )\r\n    }\r\n  ],\r\n  Queues: Array\r\n    .from({ length: 5 })\r\n    .map((val, idx) => \r\n      ({\r\n        Key: idx.toString(),\r\n        Value: faker.lorem.word()\r\n      })\r\n  ),\r\n  CanAddAsset: true,\r\n  CanAddOperative: true,\r\n  CanCreateHotspot: true,\r\n  CanAddActionerFromApp: true,\r\n  CanAddCategoryActioner: true,\r\n  CanCreateAssetsFromDocument: true,\r\n  CanHaveCompanyActioner: true,\r\n  CanHaveDocLevelPhotoRoll: true,\r\n  CanHaveDocumentLevelImages: true,\r\n  CanHaveQueueDuration: true,\r\n  ShowDocLevelPhotoButtonAtStartOfDoc: true,\r\n  CanBeAddedToHotspot: true,\r\n  CanBeSavedAsDraft: true,\r\n  AllowAnon: true,\r\n  RemainAnon: false,\r\n  MetaData: {\r\n    ActionerText: faker.lorem.word(),\r\n    CanBeEditableDocument: true,\r\n    CannotAddSelfAsActioner: true,\r\n    HasSiteList: true,\r\n    ColourHex: faker.color.rgb({ prefix: \"\", casing: \"upper\" }),\r\n    QueueSelectorTitle: faker.lorem.word()\r\n  }\r\n}"
            },
            {
                "name": "docWithMultiplePages",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "SiteDocument",
                "defaultValue": "{\r\n  ...defaultSiteDocument,\r\n  DocumentTitle: faker.lorem.word(),\r\n  Pages: Object\r\n    .values(QuestionType)\r\n    .filter(qt => typeof qt === \"number\")\r\n    .map((qt, idx) => \r\n      ({\r\n        PageID: idx,\r\n        PageTitle: \"\",\r\n        Sections: [\r\n          {\r\n            ...defaultSection,\r\n            SectionID: idx,\r\n            SectionNo: idx,\r\n            SectionTitle: \"\",\r\n            SectionQuestiontype: qt as QuestionType,\r\n            Questions: [\r\n              {\r\n                ...defaultQuestion,\r\n                QuestionText: QuestionType[qt as number].toString()\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      })\r\n  )\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.prod.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: true,\r\n  siteDocsApi: \"http://localhost:3002/api\",\r\n  apiTimeout: 60000\r\n}"
            },
            {
                "name": "environment",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/environments/environment.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  production: false,\r\n  siteDocsApi: \"http://localhost:3002/api\",\r\n  apiTimeout: 60000\r\n}"
            },
            {
                "name": "formFillerRouteMock",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<DocumentBuilderRoute>",
                "defaultValue": "{\r\n  documentIds$: of([29]),\r\n  lastDocumentId$: of(29)\r\n}"
            },
            {
                "name": "formFillerStoreMock",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<FormFillerStore>",
                "defaultValue": "{\r\n  writingDocument$: new Subject<SiteDocument>(),\r\n  submitDocument$: (action$: Observable<SiteDocument>) => of(),\r\n  getTemplateRequest$: (action$: Observable<number>) => of()\r\n}"
            },
            {
                "name": "getDeviceString",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/plugins/device.plugin.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize(async () => {\r\n  const info = await Device.getInfo();\r\n  return `${info.model}@${info.platform}@${info.osVersion}`;\r\n})"
            },
            {
                "name": "getDeviceUuid",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/plugins/device.plugin.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize(async () => {\r\n  const { uuid } = await Device.getId();\r\n  return uuid;\r\n})"
            },
            {
                "name": "isMobileApp",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/plugins/platform.plugin.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "memoize(() => {\r\n  const platform = inject(Platform);\r\n\r\n  return platform.is(\"cordova\");\r\n})"
            },
            {
                "name": "NoResponsibilityAreasExample",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/responsibility-area-select/responsibility-area-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "ObjectSelectable",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/selectable/selectable.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({}) as StoryFn<SelectableComponent<{ name: string }>>"
            },
            {
                "name": "operatives",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modals/operative-list/operative-list.modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Operative[]",
                "defaultValue": "Array\r\n  .from({ length: 3 })\r\n  .map((val, idx) => \r\n    ({\r\n      ID: idx + 2,\r\n      Name: faker.name.fullName()\r\n    })\r\n  )"
            },
            {
                "name": "operatives",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modals/operative-list/components/local-operative-search/local-operative-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Operative[]",
                "defaultValue": "Array\r\n  .from({ length: 3 })\r\n  .map((val, idx) => \r\n    ({\r\n      ID: idx + 2,\r\n      Name: faker.name.fullName()\r\n    })\r\n  )"
            },
            {
                "name": "operativesStore",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modals/operative-list/operative-list.modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Pick<OperativesStore, \"operatives$\" | \"searchResults$\" | \"searchResultsIsPending$\" | \"getSearchResults\">",
                "defaultValue": "{\r\n  operatives$: of(operatives),\r\n  searchResults$: of<OperativeSearchResult[]>(searchResults),\r\n  searchResultsIsPending$: of(false),\r\n  getSearchResults: () => of(searchResults)\r\n}"
            },
            {
                "name": "Prepopulated",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "PrepopulatedCompany",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/company-actioner-select/company-actioner-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "PrepopulatedSelectable",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/selectable/selectable.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "PrepopulatedSite",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/site-select/site-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "preview",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": ".storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Preview",
                "defaultValue": "{\r\n  globalTypes: {\r\n    iosMode: {\r\n      name: \"IOS Mode\",\r\n      defaultValue: false\r\n    }\r\n  },\r\n  parameters: {\r\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\r\n    controls: {\r\n      matchers: {\r\n        color: /(background|color)$/i,\r\n        date: /Date$/,\r\n      },\r\n    },\r\n  },\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        importProvidersFrom(IonicModule.forRoot({})),\r\n        provideHttpClient(),\r\n        provideHttpClientTesting()\r\n      ]\r\n    }),\r\n    componentWrapperDecorator(story => `<ion-app>${story}</ion-app>`)\r\n  ]\r\n}"
            },
            {
                "name": "queues",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Array\r\n  .from({ length: 10 })\r\n  .map((val, idx) => \r\n    ({\r\n      id: idx,\r\n      name: faker.lorem.word()\r\n    })\r\n  )"
            },
            {
                "name": "resAreaType",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/responsibility-area-select/responsibility-area-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ResponsibilityAreaType",
                "defaultValue": "{\r\n  Id: 1,\r\n  AppQuestionText: faker.lorem.words(),\r\n  TypeName: faker.lorem.word(),\r\n  Areas: Array\r\n    .from({ length: 10 })\r\n    .map((val, idx) => \r\n      ({\r\n        Id: idx,\r\n        Name: faker.commerce.department(),\r\n        DocResAreaTypeId: +faker.random.numeric()\r\n      })\r\n    )\r\n}"
            },
            {
                "name": "responsibilityAreaTypesStore",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/responsibility-area-select/responsibility-area-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<ResponsibilityAreaTypesStore>",
                "defaultValue": "{\r\n  responsibilityAreaTypeById$: () => of(resAreaType)\r\n}"
            },
            {
                "name": "searchResults",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modals/operative-list/operative-list.modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "OperativeSearchResult[]",
                "defaultValue": "Array\r\n  .from({ length: 10 })\r\n  .map((val, idx) => \r\n    ({\r\n      ID: idx + 1,\r\n      Name: faker.name.fullName(),\r\n      CompanyName: faker.company.name(),\r\n      HasAppAccess: true,\r\n      HasQRCode: true\r\n    })\r\n  )"
            },
            {
                "name": "setAppUserUpdate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/user/user.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "pipeTap<User>(user => store.update(setAppUser(user)))"
            },
            {
                "name": "sites$",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/user/user.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "userSelector(user => user?.UserSites || [])"
            },
            {
                "name": "store",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/asset/asset.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createStore(\r\n  { name: \"assets\" },\r\n  withEntities<Asset, \"Id\">({ idKey: \"Id\" })\r\n)"
            },
            {
                "name": "store",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/category-actioners/category-actioners.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createStore(\r\n  { name: \"site-documents\" },\r\n  withEntities<CategoryActioner, \"Id\">({ idKey: \"Id\" })\r\n)"
            },
            {
                "name": "store",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/operative/operatives.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createStore(\r\n  { name: \"operatives\" },\r\n  withEntities<Operative, \"ID\">({ idKey: \"ID\" }),\r\n  withSearchResultEntities<OperativeSearchResult, \"ID\">({ idKey: \"ID\" }),\r\n  withRequestsStatus<\"operativesSearch\">()\r\n)"
            },
            {
                "name": "store",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/responsibility-area-types/responsibility-area-types.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createStore(\r\n  { name: \"responsibility-area-types\" },\r\n  withEntities<ResponsibilityAreaType, \"Id\">({ idKey: \"Id\" })\r\n)"
            },
            {
                "name": "store",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/site-document/site-document.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createStore(\r\n  { name: \"site-documents\" },\r\n  withEntities<SiteDocument, \"DocumentID\">({ idKey: \"DocumentID\" })\r\n)"
            },
            {
                "name": "store",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/site-document-image/site-document-image.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createStore(\n  { name: \"site-document-image\" }, \n  withEntities<SiteDocumentImage, \"DocumentId\">({ idKey: \"DocumentId\" })\n)"
            },
            {
                "name": "store",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/user/user.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createStore(\r\n  { name: \"user\" },\r\n  withAppUser()\r\n)"
            },
            {
                "name": "store",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/site-document/form-filler/form-filler.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createStore(\r\n  { name: \"form-filler\" },\r\n  withWritingDocument(null as SiteDocument | null),\r\n  withTemplateMenuEntities<TemplateMenuItem, \"Id\">({ idKey: \"Id\", initialValue: [] })\r\n)"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<DocumentBuilderPage>",
                "defaultValue": "(args: DocumentBuilderPage) => ({\r\n  props: args,\r\n  styles: [`\r\n    app-document-builder { display: contents; }\r\n  `]\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/registration/registration.page.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<RegistrationPage>",
                "defaultValue": "(args: RegistrationPage) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/camera/camera.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<CameraComponent>",
                "defaultValue": "(args: CameraComponent) => ({\r\n  props: args,\r\n  template: `\r\n    <camera [fill]=\"fill\" [expand]=\"expand\" [color]=\"color\">\r\n      Add Image\r\n    </camera>\r\n  `\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/datetime-picker/datetime-picker.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<DatetimePickerComponent>",
                "defaultValue": "(args: DatetimePickerComponent) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/multi-selectable/multi-selectable.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<MultiSelectableComponent>",
                "defaultValue": "(args: MultiSelectableComponent) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/components/selectable/selectable.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<SelectableComponent>",
                "defaultValue": "(args: SelectableComponent) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modals/asset-list/asset-list.modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<AssetListModal>",
                "defaultValue": "(args: AssetListModal) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modals/operative-list/operative-list.modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<OperativeListModal>",
                "defaultValue": "(args: OperativeListModal) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/multi-checkbox-section/multi-checkbox-section.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<MultiCheckboxSectionComponent>",
                "defaultValue": "args => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/modals/document-summary/document-summary.modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<DocumentSummaryModal>",
                "defaultValue": "args => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modals/operative-list/components/local-operative-search/local-operative-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<LocalOperativeSearchComponent>",
                "defaultValue": "(args: LocalOperativeSearchComponent) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modals/operative-list/components/online-operative-search/online-operative-search.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<OnlineOperativeSearchComponent>",
                "defaultValue": "args => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/actioner-select/actioner-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<ActionerSelectComponent>",
                "defaultValue": "(args: ActionerSelectComponent) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/company-actioner-select/company-actioner-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<CompanyActionerSelectComponent>",
                "defaultValue": "args => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/document-image-upload/document-image-upload.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<DocumentImageUploadComponent>",
                "defaultValue": "args => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/queue-duration/queue-duration.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<QueueDurationComponent>",
                "defaultValue": "(args: QueueDurationComponent) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/remain-anonymous/remain-anonymous.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<RemainAnonymousComponent>",
                "defaultValue": "(args: RemainAnonymousComponent) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<QueueSelectComponent>",
                "defaultValue": "(args: QueueSelectComponent) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/responsibility-area-select/responsibility-area-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<ResponsibilityAreaSelectComponent>",
                "defaultValue": "args => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/site-select/site-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<SiteSelectComponent>",
                "defaultValue": "args => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/00-label/label.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/01-checkbox/checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      YesNoNA: args[\"question.YesNoNA\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/02-radio-group/radio-group.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      YesNoNA: args[\"question.YesNoNA\"] === \"Yes\" ? true \r\n        : args[\"question.YesNoNA\"] === \"No\" ? false\r\n        : args[\"question.YesNoNA\"] === \"NA\" ? null\r\n        : args[\"question.YesNoNA\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    },\r\n    section: {\r\n      ...defaultSection,\r\n      TableTitles: args[\"section.TableTitles\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/02-radio-table/radio-table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      YesNoNA: args[\"question.YesNoNA\"] === \"Yes\" ? true \r\n        : args[\"question.YesNoNA\"] === \"No\" ? false\r\n        : args[\"question.YesNoNA\"] === \"NA\" ? null\r\n        : args[\"question.YesNoNA\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/03-textbox/textbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      AnswerText: args[\"question.AnswerText\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/04-textarea/textarea.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      AnswerText: args[\"question.AnswerText\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/07-radio-group-textbox/radio-group-textbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      YesNoNA: args[\"question.YesNoNA\"] === \"Yes\" ? true \r\n        : args[\"question.YesNoNA\"] === \"No\" ? false\r\n        : args[\"question.YesNoNA\"] === \"NA\" ? null\r\n        : args[\"question.YesNoNA\"],\r\n      AnswerText: args[\"question.AnswerText\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    },\r\n    section: {\r\n      ...defaultSection,\r\n      TableTitles: args[\"section.TableTitles\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/05-select/select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      Options: args[\"question.Options\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/06-checkbox-textbox/checkbox-textbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      YesNoNA: args[\"question.YesNoNA\"],\r\n      AnswerText: args[\"question.AnswerText\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/07-radio-table-textbox/radio-table-textbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      YesNoNA: args[\"question.YesNoNA\"] === \"Yes\" ? true \r\n        : args[\"question.YesNoNA\"] === \"No\" ? false\r\n        : args[\"question.YesNoNA\"] === \"NA\" ? null\r\n        : args[\"question.YesNoNA\"],\r\n      AnswerText: args[\"question.AnswerText\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/08-date/date.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      DateAndTime: args[\"question.DateAndTime\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/10-operative-list/operative-list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Operatives: args[\"question.Operatives\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/09-datetime/datetime.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      DateAndTime: args[\"question.DateAndTime\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/12-number/number.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      NumberVal: args[\"question.NumberVal\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/13-cascade-select/cascade-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      Options: args[\"question.Options\"],\r\n      CascadeOptions: args[\"question.CascadeOptions\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/17-asset-list/asset-list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Assets: args[\"question.Assets\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/16-linked-bool/linked-bool.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      YesNoNA: args[\"question.YesNoNA\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    },\r\n    section: {\r\n      ...defaultSection,\r\n      TableTitles: args[\"section.TableTitles\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/19-signature/signature.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      AnswerText: args[\"question.AnswerText\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/18-linked-dates/linked-dates.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      CascadeOptionsText: args[\"question.CascadeOptionsText\"],\r\n      Required: args[\"question.Required\"],\r\n      DateAndTime: args[\"question.DateAndTime\"],\r\n      DateAndTime2: args[\"question.DateAndTime2\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/29-select-text/select-text.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      AnswerText: args[\"question.AnswerText\"],\r\n      Options: args[\"question.Options\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/30-cascade-select-text/cascade-select-text.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<Story>",
                "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      CommentsText: args[\"question.CommentsText\"],\r\n      Required: args[\"question.Required\"],\r\n      Options: args[\"question.Options\"],\r\n      CascadeOptions: args[\"question.CascadeOptions\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/extras/camera-capture/camera-capture.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<CameraCaptureComponent>",
                "defaultValue": "(args: CameraCaptureComponent) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/question-types/extras/file-upload/file-upload.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StoryFn<FileUploadComponent>",
                "defaultValue": "(args: FileUploadComponent) => ({\r\n  props: args\r\n})"
            },
            {
                "name": "trackRequestStatus",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/operative/operatives.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "createRequestsStatusOperator(store)"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/states/search-results.adapter.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "entitiesPropsFactory(\"SearchResult\")"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/operative/operatives.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "searchResultsAdapter()"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/operative/operatives.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\r\n  ...operativesAdapter(store),\r\n  ...searchResultsAdapt(store)\r\n}"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/user/user.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "propsFactory(\"appUser\", { initialValue: null as User | null })"
            },
            {
                "name": "userSelector",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/user/user.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "selector(store.pipe(selectAppUser()))"
            },
            {
                "name": "userStore",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/shared/modals/operative-list/operative-list.modal.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Pick<UserStore, user$>",
                "defaultValue": "{\r\n  user$: of(defaultUser)\r\n}"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/site-document/adapters/writing-document.adapter.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "propsFactory(\"writingDocument\", { initialValue: null as SiteDocument | null })"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/site-document/form-filler/form-filler.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "entitiesPropsFactory(\"templateMenu\")"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/site-document/form-filler/form-filler.store.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "writingDocumentAdapter(store)"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/site-document/props/writing-document.props.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "propsFactory(\"writingDocument\", { initialValue: null as SiteDocument | null })"
            },
            {
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/stores/site-document/form-filler/adapters/template-menu.adapter.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "entitiesPropsFactory(\"templateMenu\")"
            },
            {
                "name": "userStoreMock",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/company-actioner-select/company-actioner-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<UserStore>",
                "defaultValue": "{\r\n  companies$: of<Company[]>(Array\r\n    .from({ length: 10 })\r\n    .map((val, idx) => \r\n      ({\r\n        Id: idx,\r\n        Text: faker.company.name()\r\n      })\r\n  ))\r\n}"
            },
            {
                "name": "userStoreMock",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/core/pages/document-builder/components/input-types/site-select/site-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Partial<UserStore>",
                "defaultValue": "{\r\n  sites$: of(Array\r\n    .from({ length: 10 })\r\n    .map((val, idx) => \r\n      ({\r\n        Id: idx,\r\n        Name: faker.company.name()\r\n      })\r\n  ))\r\n}"
            }
        ],
        "functions": [
            {
                "name": "AngularComponent",
                "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "ReturnType<T1>",
                "jsdoctags": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "AngularComponent",
                "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "AngularComponent",
                "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h3",
                        "type": "T3",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h3",
                        "type": "T3",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "AngularComponent",
                "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h3",
                        "type": "T3",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h4",
                        "type": "T4",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h3",
                        "type": "T3",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h4",
                        "type": "T4",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "AngularComponent",
                "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h3",
                        "type": "T3",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h4",
                        "type": "T4",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h5",
                        "type": "T5",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h3",
                        "type": "T3",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h4",
                        "type": "T4",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h5",
                        "type": "T5",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "AngularComponent",
                "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h3",
                        "type": "T3",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h4",
                        "type": "T4",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h5",
                        "type": "T5",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "h6",
                        "type": "T6",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "h1",
                        "type": "T1",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h2",
                        "type": "T2",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h3",
                        "type": "T3",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h4",
                        "type": "T4",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h5",
                        "type": "T5",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "h6",
                        "type": "T6",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "AngularComponent",
                "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "AngularComponent",
                "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "args",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "dotDotDotToken": true
                    }
                ],
                "returnType": "any",
                "jsdoctags": [
                    {
                        "name": "args",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "dotDotDotToken": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "booleanState",
                "file": "src/app/shared/states/boolean.state.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "name",
                        "type": "AdapterConfig<boolean, BooleanState, TProps>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "131f6c6a-3e6f-4797-be7c-5d4faca4122f",
                        "destructuredParameter": true
                    },
                    {
                        "name": "initialValue",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "131f6c6a-3e6f-4797-be7c-5d4faca4122f",
                        "destructuredParameter": true
                    },
                    {
                        "name": "props",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "131f6c6a-3e6f-4797-be7c-5d4faca4122f",
                        "destructuredParameter": true
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "name",
                        "type": "AdapterConfig<boolean, BooleanState, TProps>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "131f6c6a-3e6f-4797-be7c-5d4faca4122f",
                        "destructuredParameter": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "initialValue",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "131f6c6a-3e6f-4797-be7c-5d4faca4122f",
                        "destructuredParameter": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "props",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "131f6c6a-3e6f-4797-be7c-5d4faca4122f",
                        "destructuredParameter": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "clickReaction",
                "file": "src/app/shared/reactions/click.reaction.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "createWaitForSelector",
                "file": "src/app/shared/testing/wait-for.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "spectator",
                        "type": "Spectator",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "WaitForSelector",
                "jsdoctags": [
                    {
                        "name": "spectator",
                        "type": "Spectator",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "fileReader",
                "file": "src/app/shared/components/upload/upload.component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "FileReader"
            },
            {
                "name": "fileToDataUrlFile",
                "file": "src/app/shared/components/upload/upload.component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "file",
                        "type": "File",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Promise<DataUrlFile>",
                "jsdoctags": [
                    {
                        "name": "file",
                        "type": "File",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "ifBiometricsIsAvailable",
                "file": "src/app/shared/plugins/biometric.plugin.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "importDocumentBuilderModals",
                "file": "src/app/core/pages/document-builder/modals/document-builder-modals.import.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "importInputTypes",
                "file": "src/app/core/pages/document-builder/components/input-types/input-types.import.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "importNgSwitch",
                "file": "src/app/shared/imports/ng-switch.import.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "importQuestionTypes",
                "file": "src/app/core/pages/document-builder/components/question-types/question-types.import.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "importRxAutoVirtualScroll",
                "file": "src/app/shared/imports/rx-template.import.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Visit for more information: <a href=\"https://www.rx-angular.io/docs/template/api/virtual-scrolling#autosizevirtualscrollstrategy\">https://www.rx-angular.io/docs/template/api/virtual-scrolling#autosizevirtualscrollstrategy</a></p>\n",
                "args": []
            },
            {
                "name": "importRxDynamicVirtualScroll",
                "file": "src/app/shared/imports/rx-template.import.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Visit for more information: <a href=\"https://www.rx-angular.io/docs/template/api/virtual-scrolling#dynamicsizevirtualscrollstrategy\">https://www.rx-angular.io/docs/template/api/virtual-scrolling#dynamicsizevirtualscrollstrategy</a></p>\n",
                "args": []
            },
            {
                "name": "importRxFixedVirtualScroll",
                "file": "src/app/shared/imports/rx-template.import.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Visit for more information: <a href=\"https://www.rx-angular.io/docs/template/api/virtual-scrolling#fixedsizevirtualscrollstrategy\">https://www.rx-angular.io/docs/template/api/virtual-scrolling#fixedsizevirtualscrollstrategy</a></p>\n",
                "args": []
            },
            {
                "name": "importRxTemplate",
                "file": "src/app/shared/imports/rx-template.import.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "<p>Documentation can be found here: <a href=\"https://www.rx-angular.io/docs/template\">https://www.rx-angular.io/docs/template</a></p>\n",
                "args": []
            },
            {
                "name": "importRxVirtualScroll",
                "file": "src/app/shared/imports/rx-template.import.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "providers",
                        "type": "Array",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "dotDotDotToken": true
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "providers",
                        "type": "Array",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "dotDotDotToken": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "isBiometricAvailable",
                "file": "src/app/shared/plugins/biometric.plugin.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "isNull",
                "file": "src/app/shared/operators/rxjs/is-null.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "numberState",
                "file": "src/app/shared/states/number.state.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "name",
                        "type": "AdapterConfig<number, NumberState, TProps>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "a3202ad1-5c19-4eb5-aede-a0bed6ae6e65",
                        "destructuredParameter": true
                    },
                    {
                        "name": "initialValue",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "a3202ad1-5c19-4eb5-aede-a0bed6ae6e65",
                        "destructuredParameter": true
                    },
                    {
                        "name": "props",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "a3202ad1-5c19-4eb5-aede-a0bed6ae6e65",
                        "destructuredParameter": true
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "name",
                        "type": "AdapterConfig<number, NumberState, TProps>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "a3202ad1-5c19-4eb5-aede-a0bed6ae6e65",
                        "destructuredParameter": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "initialValue",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "a3202ad1-5c19-4eb5-aede-a0bed6ae6e65",
                        "destructuredParameter": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "props",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "a3202ad1-5c19-4eb5-aede-a0bed6ae6e65",
                        "destructuredParameter": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "operativesAdapter",
                "file": "src/app/core/stores/operative/adapters/operatives.adapter.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "operativeSearchAdapter",
                "file": "src/app/core/stores/operative/adapters/operatives.adapter.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "store",
                        "type": "AdapterTarget<TState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "cc43b5fa-8013-47a4-b8fb-f1b3e4fced94",
                        "destructuredParameter": true
                    },
                    {
                        "name": "ref",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "cc43b5fa-8013-47a4-b8fb-f1b3e4fced94",
                        "destructuredParameter": true
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "AdapterTarget<TState>",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "cc43b5fa-8013-47a4-b8fb-f1b3e4fced94",
                        "destructuredParameter": true,
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "ref",
                        "type": "",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "destrucuredGroupId": "cc43b5fa-8013-47a4-b8fb-f1b3e4fced94",
                        "destructuredParameter": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "pipeTap",
                "file": "src/app/shared/rxjs/pipes/pipe-tap.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "action",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "action",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "reaction",
                "file": "src/app/shared/reactions/reaction.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "fn",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "fn",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "searchResultsAdapt",
                "file": "src/app/shared/states/search-results.adapter.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "searchResultsAdapter",
                "file": "src/app/shared/states/search-results.adapter.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": []
            },
            {
                "name": "selector",
                "file": "src/app/shared/rxjs/selector.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "observable",
                        "type": "Observable",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "observable",
                        "type": "Observable",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "templateMenuAdapter",
                "file": "src/app/core/stores/site-document/form-filler/adapters/template-menu.adapter.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "verifyIdentity",
                "file": "src/app/shared/plugins/biometric.plugin.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "options",
                        "type": "BiometricOptions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "options",
                        "type": "BiometricOptions",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "optional": true,
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "withAfterViewInit",
                "file": "src/app/shared/lifecycles/angular/with-after-view-init.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "withIonViewDidEnter",
                "file": "src/app/shared/lifecycles/ionic/with-ion-view-did-enter.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "withIonViewDidLeave",
                "file": "src/app/shared/lifecycles/ionic/with-ion-view-did-leave.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "withIonViewWillEnter",
                "file": "src/app/shared/lifecycles/ionic/with-ion-view-will-enter.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "withIonViewWillLeave",
                "file": "src/app/shared/lifecycles/ionic/with-ion-view-will-leave.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "withNoop",
                "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "withOnChanges",
                "file": "src/app/shared/lifecycles/angular/with-on-changes.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "withOnInit",
                "file": "src/app/shared/lifecycles/angular/with-on-init.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "Base",
                        "type": "TBase",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "writingDocumentActions",
                "file": "src/app/core/stores/site-document/props/writing-document.props.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "writingDocumentAdapter",
                "file": "src/app/core/stores/site-document/adapters/writing-document.adapter.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "jsdoctags": [
                    {
                        "name": "store",
                        "type": "Store",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "AnyFunction",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "function",
                "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 178
            },
            {
                "name": "Prefix",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/shared/types/prefix.type.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 194
            },
            {
                "name": "ReactiveConstructor",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 179
            },
            {
                "name": "SearchEntitiesRef",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "EntitiesRef<SearchResultEntities | SearchResultIds | idKeySearchResult>",
                "file": "src/app/core/stores/operative/adapters/operatives.adapter.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 177
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/00-label/label.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/01-checkbox/checkbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/02-radio-group/radio-group.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/02-radio-table/radio-table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/03-textbox/textbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/04-textarea/textarea.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/07-radio-group-textbox/radio-group-textbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/05-select/select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/06-checkbox-textbox/checkbox-textbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/07-radio-table-textbox/radio-table-textbox.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/08-date/date.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/10-operative-list/operative-list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/09-datetime/datetime.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/12-number/number.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/13-cascade-select/cascade-select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/17-asset-list/asset-list.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/16-linked-bool/linked-bool.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/19-signature/signature.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/18-linked-dates/linked-dates.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/29-select-text/select-text.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/app/core/pages/document-builder/components/question-types/30-cascade-select-text/cascade-select-text.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "WaitForSelector",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "function",
                "file": "src/app/shared/testing/wait-for.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 178
            }
        ],
        "enumerations": [
            {
                "name": "QuestionType",
                "childs": [
                    {
                        "name": "Label",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 0
                    },
                    {
                        "name": "Checkbox",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 1
                    },
                    {
                        "name": "RadioGroup",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 2
                    },
                    {
                        "name": "Textbox",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 3
                    },
                    {
                        "name": "TextArea",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 4
                    },
                    {
                        "name": "Select",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 5
                    },
                    {
                        "name": "CheckboxTextbox",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 6
                    },
                    {
                        "name": "RadioGroupTextbox",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 7
                    },
                    {
                        "name": "Date",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 8
                    },
                    {
                        "name": "DateTime",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 9
                    },
                    {
                        "name": "OperativeList",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 10
                    },
                    {
                        "name": "WallOfText",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 11
                    },
                    {
                        "name": "Number",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 12
                    },
                    {
                        "name": "CascadeDropdown",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 13
                    },
                    {
                        "name": "LinkedBool",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 16
                    },
                    {
                        "name": "AssetList",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 17
                    },
                    {
                        "name": "LinkedDates",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 18
                    },
                    {
                        "name": "Signature",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 19
                    },
                    {
                        "name": "CompanySelect",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 21
                    },
                    {
                        "name": "AreaSelect",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 22
                    },
                    {
                        "name": "AssetGroupsAndTypes",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 25
                    },
                    {
                        "name": "AssetInspectionSchedule",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 26
                    },
                    {
                        "name": "ProjectSelect",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 27
                    },
                    {
                        "name": "RamsSelect",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 28
                    },
                    {
                        "name": "SelectText",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 29
                    },
                    {
                        "name": "CascadeDropdownText",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 30
                    },
                    {
                        "name": "MultiCascade",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 31
                    },
                    {
                        "name": "Time",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 32
                    },
                    {
                        "name": "LinkedTimes",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 33
                    },
                    {
                        "name": "HRASelect",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 34
                    },
                    {
                        "name": "MultiCheckbox",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 35
                    },
                    {
                        "name": "LinkedDateAndTime",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "value": 36
                    }
                ],
                "ctype": "miscellaneous",
                "subtype": "enum",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "file": "src/app/core/stores/site-document/models/site-document.model.ts"
            }
        ],
        "groupedVariables": {
            "src/app/shared/components/datetime-picker/datetime-picker.component.stories.ts": [
                {
                    "name": "DateOnly",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/datetime-picker/datetime-picker.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/datetime-picker/datetime-picker.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/datetime-picker/datetime-picker.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<DatetimePickerComponent>",
                    "defaultValue": "(args: DatetimePickerComponent) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/document-builder.page.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "defaultDoc",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SiteDocument",
                    "defaultValue": "{\r\n  ...defaultSiteDocument,\r\n  DocumentTitle: faker.lorem.word(),\r\n  Pages: [\r\n    {\r\n      PageID: 1,\r\n      PageTitle: faker.lorem.word(),\r\n      Sections: Object\r\n        .values(QuestionType)\r\n        .filter(qt => typeof qt === \"number\")\r\n        .map((qt, idx) => \r\n          ({\r\n            ...defaultSection,\r\n            SectionID: idx,\r\n            SectionNo: idx,\r\n            SectionTitle: \"\",\r\n            SectionQuestiontype: qt as QuestionType,\r\n            Questions: [\r\n              {\r\n                ...defaultQuestion,\r\n                QuestionText: QuestionType[qt as number].toString()\r\n              }\r\n            ]\r\n          })\r\n        )\r\n    }\r\n  ]\r\n}"
                },
                {
                    "name": "DocumentWithAllPermissionsTurnedOn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "DocumentWithMultiplePages",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "docWithAllPermissionsOn",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SiteDocument",
                    "defaultValue": "{\r\n  ...defaultSiteDocument,\r\n  DocumentTitle: faker.lorem.word(),\r\n  Pages: [\r\n    {\r\n      PageID: 1,\r\n      PageTitle: faker.lorem.word(),\r\n      Sections: Object\r\n        .values(QuestionType)\r\n        .filter(qt => typeof qt === \"number\")\r\n        .map((qt, idx) => \r\n          ({\r\n            ...defaultSection,\r\n            SectionID: idx,\r\n            SectionNo: idx,\r\n            SectionTitle: \"\",\r\n            SectionQuestiontype: qt as QuestionType,\r\n            Questions: [\r\n              {\r\n                ...defaultQuestion,\r\n                QuestionText: QuestionType[qt as number].toString()\r\n              }\r\n            ]\r\n          })\r\n        )\r\n    }\r\n  ],\r\n  Queues: Array\r\n    .from({ length: 5 })\r\n    .map((val, idx) => \r\n      ({\r\n        Key: idx.toString(),\r\n        Value: faker.lorem.word()\r\n      })\r\n  ),\r\n  CanAddAsset: true,\r\n  CanAddOperative: true,\r\n  CanCreateHotspot: true,\r\n  CanAddActionerFromApp: true,\r\n  CanAddCategoryActioner: true,\r\n  CanCreateAssetsFromDocument: true,\r\n  CanHaveCompanyActioner: true,\r\n  CanHaveDocLevelPhotoRoll: true,\r\n  CanHaveDocumentLevelImages: true,\r\n  CanHaveQueueDuration: true,\r\n  ShowDocLevelPhotoButtonAtStartOfDoc: true,\r\n  CanBeAddedToHotspot: true,\r\n  CanBeSavedAsDraft: true,\r\n  AllowAnon: true,\r\n  RemainAnon: false,\r\n  MetaData: {\r\n    ActionerText: faker.lorem.word(),\r\n    CanBeEditableDocument: true,\r\n    CannotAddSelfAsActioner: true,\r\n    HasSiteList: true,\r\n    ColourHex: faker.color.rgb({ prefix: \"\", casing: \"upper\" }),\r\n    QueueSelectorTitle: faker.lorem.word()\r\n  }\r\n}"
                },
                {
                    "name": "docWithMultiplePages",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SiteDocument",
                    "defaultValue": "{\r\n  ...defaultSiteDocument,\r\n  DocumentTitle: faker.lorem.word(),\r\n  Pages: Object\r\n    .values(QuestionType)\r\n    .filter(qt => typeof qt === \"number\")\r\n    .map((qt, idx) => \r\n      ({\r\n        PageID: idx,\r\n        PageTitle: \"\",\r\n        Sections: [\r\n          {\r\n            ...defaultSection,\r\n            SectionID: idx,\r\n            SectionNo: idx,\r\n            SectionTitle: \"\",\r\n            SectionQuestiontype: qt as QuestionType,\r\n            Questions: [\r\n              {\r\n                ...defaultQuestion,\r\n                QuestionText: QuestionType[qt as number].toString()\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      })\r\n  )\r\n}"
                },
                {
                    "name": "formFillerRouteMock",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<DocumentBuilderRoute>",
                    "defaultValue": "{\r\n  documentIds$: of([29]),\r\n  lastDocumentId$: of(29)\r\n}"
                },
                {
                    "name": "formFillerStoreMock",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<FormFillerStore>",
                    "defaultValue": "{\r\n  writingDocument$: new Subject<SiteDocument>(),\r\n  submitDocument$: (action$: Observable<SiteDocument>) => of(),\r\n  getTemplateRequest$: (action$: Observable<number>) => of()\r\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<DocumentBuilderPage>",
                    "defaultValue": "(args: DocumentBuilderPage) => ({\r\n  props: args,\r\n  styles: [`\r\n    app-document-builder { display: contents; }\r\n  `]\r\n})"
                }
            ],
            "src/app/core/pages/registration/registration.page.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/registration/registration.page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/registration/registration.page.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<RegistrationPage>",
                    "defaultValue": "(args: RegistrationPage) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/shared/components/camera/camera.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/camera/camera.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/camera/camera.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<CameraComponent>",
                    "defaultValue": "(args: CameraComponent) => ({\r\n  props: args,\r\n  template: `\r\n    <camera [fill]=\"fill\" [expand]=\"expand\" [color]=\"color\">\r\n      Add Image\r\n    </camera>\r\n  `\r\n})"
                }
            ],
            "src/app/shared/components/multi-selectable/multi-selectable.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/multi-selectable/multi-selectable.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/multi-selectable/multi-selectable.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<MultiSelectableComponent>",
                    "defaultValue": "(args: MultiSelectableComponent) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/shared/components/selectable/selectable.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/selectable/selectable.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "ObjectSelectable",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/selectable/selectable.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({}) as StoryFn<SelectableComponent<{ name: string }>>"
                },
                {
                    "name": "PrepopulatedSelectable",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/selectable/selectable.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/components/selectable/selectable.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<SelectableComponent>",
                    "defaultValue": "(args: SelectableComponent) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/shared/modals/asset-list/asset-list.modal.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modals/asset-list/asset-list.modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modals/asset-list/asset-list.modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<AssetListModal>",
                    "defaultValue": "(args: AssetListModal) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/shared/modals/operative-list/operative-list.modal.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modals/operative-list/operative-list.modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "operatives",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modals/operative-list/operative-list.modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Operative[]",
                    "defaultValue": "Array\r\n  .from({ length: 3 })\r\n  .map((val, idx) => \r\n    ({\r\n      ID: idx + 2,\r\n      Name: faker.name.fullName()\r\n    })\r\n  )"
                },
                {
                    "name": "operativesStore",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modals/operative-list/operative-list.modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Pick<OperativesStore, \"operatives$\" | \"searchResults$\" | \"searchResultsIsPending$\" | \"getSearchResults\">",
                    "defaultValue": "{\r\n  operatives$: of(operatives),\r\n  searchResults$: of<OperativeSearchResult[]>(searchResults),\r\n  searchResultsIsPending$: of(false),\r\n  getSearchResults: () => of(searchResults)\r\n}"
                },
                {
                    "name": "searchResults",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modals/operative-list/operative-list.modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "OperativeSearchResult[]",
                    "defaultValue": "Array\r\n  .from({ length: 10 })\r\n  .map((val, idx) => \r\n    ({\r\n      ID: idx + 1,\r\n      Name: faker.name.fullName(),\r\n      CompanyName: faker.company.name(),\r\n      HasAppAccess: true,\r\n      HasQRCode: true\r\n    })\r\n  )"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modals/operative-list/operative-list.modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<OperativeListModal>",
                    "defaultValue": "(args: OperativeListModal) => ({\r\n  props: args\r\n})"
                },
                {
                    "name": "userStore",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modals/operative-list/operative-list.modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Pick<UserStore, user$>",
                    "defaultValue": "{\r\n  user$: of(defaultUser)\r\n}"
                }
            ],
            "src/app/core/pages/document-builder/components/multi-checkbox-section/multi-checkbox-section.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/multi-checkbox-section/multi-checkbox-section.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/multi-checkbox-section/multi-checkbox-section.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<MultiCheckboxSectionComponent>",
                    "defaultValue": "args => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/modals/document-summary/document-summary.modal.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/modals/document-summary/document-summary.modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "defaultDoc",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/modals/document-summary/document-summary.modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "SiteDocument",
                    "defaultValue": "{\r\n  ...defaultSiteDocument,\r\n  DocumentTitle: faker.lorem.word(),\r\n  RemainAnon: true,\r\n  CurrentActionerOperativeID: 1,\r\n  CompanyActionerId: 1,\r\n  SiteId: 1,\r\n  AutoQueueID: 1,\r\n  QueueDuration: {\r\n    Value: 6,\r\n    Type: \"Hours\"\r\n  },\r\n  MetaData: {\r\n    ActionerText: \"Pick your actioner\",\r\n    SiteListTitle: \"Pick your site\"\r\n  },\r\n  Pages: [\r\n    {\r\n      PageID: 1,\r\n      PageTitle: faker.lorem.word(),\r\n      Sections: Object\r\n        .values(QuestionType)\r\n        .filter(qt => typeof qt === \"number\")\r\n        .map((qt, idx) => \r\n          ({\r\n            ...defaultSection,\r\n            SectionID: idx,\r\n            SectionNo: idx,\r\n            SectionTitle: \"\",\r\n            SectionQuestiontype: qt as QuestionType,\r\n            Questions: [\r\n              {\r\n                ...defaultQuestion,\r\n                QuestionText: QuestionType[qt as number].toString()\r\n              }\r\n            ]\r\n          })\r\n        )\r\n    }\r\n  ]\r\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/modals/document-summary/document-summary.modal.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<DocumentSummaryModal>",
                    "defaultValue": "args => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/shared/modals/operative-list/components/local-operative-search/local-operative-search.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modals/operative-list/components/local-operative-search/local-operative-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "operatives",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modals/operative-list/components/local-operative-search/local-operative-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Operative[]",
                    "defaultValue": "Array\r\n  .from({ length: 3 })\r\n  .map((val, idx) => \r\n    ({\r\n      ID: idx + 2,\r\n      Name: faker.name.fullName()\r\n    })\r\n  )"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modals/operative-list/components/local-operative-search/local-operative-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<LocalOperativeSearchComponent>",
                    "defaultValue": "(args: LocalOperativeSearchComponent) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/shared/modals/operative-list/components/online-operative-search/online-operative-search.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modals/operative-list/components/online-operative-search/online-operative-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/modals/operative-list/components/online-operative-search/online-operative-search.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<OnlineOperativeSearchComponent>",
                    "defaultValue": "args => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/input-types/actioner-select/actioner-select.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/actioner-select/actioner-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/actioner-select/actioner-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<ActionerSelectComponent>",
                    "defaultValue": "(args: ActionerSelectComponent) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/input-types/company-actioner-select/company-actioner-select.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/company-actioner-select/company-actioner-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "PrepopulatedCompany",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/company-actioner-select/company-actioner-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/company-actioner-select/company-actioner-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<CompanyActionerSelectComponent>",
                    "defaultValue": "args => ({\r\n  props: args\r\n})"
                },
                {
                    "name": "userStoreMock",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/company-actioner-select/company-actioner-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<UserStore>",
                    "defaultValue": "{\r\n  companies$: of<Company[]>(Array\r\n    .from({ length: 10 })\r\n    .map((val, idx) => \r\n      ({\r\n        Id: idx,\r\n        Text: faker.company.name()\r\n      })\r\n  ))\r\n}"
                }
            ],
            "src/app/core/pages/document-builder/components/input-types/document-image-upload/document-image-upload.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/document-image-upload/document-image-upload.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/document-image-upload/document-image-upload.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<DocumentImageUploadComponent>",
                    "defaultValue": "args => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/input-types/queue-duration/queue-duration.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/queue-duration/queue-duration.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/queue-duration/queue-duration.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<QueueDurationComponent>",
                    "defaultValue": "(args: QueueDurationComponent) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/input-types/remain-anonymous/remain-anonymous.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/remain-anonymous/remain-anonymous.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/remain-anonymous/remain-anonymous.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<RemainAnonymousComponent>",
                    "defaultValue": "(args: RemainAnonymousComponent) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Prepopulated",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "queues",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Array\r\n  .from({ length: 10 })\r\n  .map((val, idx) => \r\n    ({\r\n      id: idx,\r\n      name: faker.lorem.word()\r\n    })\r\n  )"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<QueueSelectComponent>",
                    "defaultValue": "(args: QueueSelectComponent) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/input-types/responsibility-area-select/responsibility-area-select.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/responsibility-area-select/responsibility-area-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "NoResponsibilityAreasExample",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/responsibility-area-select/responsibility-area-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "resAreaType",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/responsibility-area-select/responsibility-area-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ResponsibilityAreaType",
                    "defaultValue": "{\r\n  Id: 1,\r\n  AppQuestionText: faker.lorem.words(),\r\n  TypeName: faker.lorem.word(),\r\n  Areas: Array\r\n    .from({ length: 10 })\r\n    .map((val, idx) => \r\n      ({\r\n        Id: idx,\r\n        Name: faker.commerce.department(),\r\n        DocResAreaTypeId: +faker.random.numeric()\r\n      })\r\n    )\r\n}"
                },
                {
                    "name": "responsibilityAreaTypesStore",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/responsibility-area-select/responsibility-area-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<ResponsibilityAreaTypesStore>",
                    "defaultValue": "{\r\n  responsibilityAreaTypeById$: () => of(resAreaType)\r\n}"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/responsibility-area-select/responsibility-area-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<ResponsibilityAreaSelectComponent>",
                    "defaultValue": "args => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/input-types/site-select/site-select.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/site-select/site-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "PrepopulatedSite",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/site-select/site-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/site-select/site-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<SiteSelectComponent>",
                    "defaultValue": "args => ({\r\n  props: args\r\n})"
                },
                {
                    "name": "userStoreMock",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/input-types/site-select/site-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Partial<UserStore>",
                    "defaultValue": "{\r\n  sites$: of(Array\r\n    .from({ length: 10 })\r\n    .map((val, idx) => \r\n      ({\r\n        Id: idx,\r\n        Name: faker.company.name()\r\n      })\r\n  ))\r\n}"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/00-label/label.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/00-label/label.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/00-label/label.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/01-checkbox/checkbox.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/01-checkbox/checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/01-checkbox/checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      YesNoNA: args[\"question.YesNoNA\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/02-radio-group/radio-group.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/02-radio-group/radio-group.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/02-radio-group/radio-group.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      YesNoNA: args[\"question.YesNoNA\"] === \"Yes\" ? true \r\n        : args[\"question.YesNoNA\"] === \"No\" ? false\r\n        : args[\"question.YesNoNA\"] === \"NA\" ? null\r\n        : args[\"question.YesNoNA\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    },\r\n    section: {\r\n      ...defaultSection,\r\n      TableTitles: args[\"section.TableTitles\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/02-radio-table/radio-table.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/02-radio-table/radio-table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/02-radio-table/radio-table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      YesNoNA: args[\"question.YesNoNA\"] === \"Yes\" ? true \r\n        : args[\"question.YesNoNA\"] === \"No\" ? false\r\n        : args[\"question.YesNoNA\"] === \"NA\" ? null\r\n        : args[\"question.YesNoNA\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/03-textbox/textbox.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/03-textbox/textbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/03-textbox/textbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      AnswerText: args[\"question.AnswerText\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/04-textarea/textarea.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/04-textarea/textarea.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/04-textarea/textarea.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      AnswerText: args[\"question.AnswerText\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/07-radio-group-textbox/radio-group-textbox.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/07-radio-group-textbox/radio-group-textbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/07-radio-group-textbox/radio-group-textbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      YesNoNA: args[\"question.YesNoNA\"] === \"Yes\" ? true \r\n        : args[\"question.YesNoNA\"] === \"No\" ? false\r\n        : args[\"question.YesNoNA\"] === \"NA\" ? null\r\n        : args[\"question.YesNoNA\"],\r\n      AnswerText: args[\"question.AnswerText\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    },\r\n    section: {\r\n      ...defaultSection,\r\n      TableTitles: args[\"section.TableTitles\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/05-select/select.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/05-select/select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/05-select/select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      Options: args[\"question.Options\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/06-checkbox-textbox/checkbox-textbox.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/06-checkbox-textbox/checkbox-textbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/06-checkbox-textbox/checkbox-textbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      YesNoNA: args[\"question.YesNoNA\"],\r\n      AnswerText: args[\"question.AnswerText\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/07-radio-table-textbox/radio-table-textbox.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/07-radio-table-textbox/radio-table-textbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/07-radio-table-textbox/radio-table-textbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      YesNoNA: args[\"question.YesNoNA\"] === \"Yes\" ? true \r\n        : args[\"question.YesNoNA\"] === \"No\" ? false\r\n        : args[\"question.YesNoNA\"] === \"NA\" ? null\r\n        : args[\"question.YesNoNA\"],\r\n      AnswerText: args[\"question.AnswerText\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/08-date/date.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/08-date/date.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/08-date/date.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      DateAndTime: args[\"question.DateAndTime\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/10-operative-list/operative-list.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/10-operative-list/operative-list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/10-operative-list/operative-list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Operatives: args[\"question.Operatives\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/09-datetime/datetime.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/09-datetime/datetime.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/09-datetime/datetime.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      DateAndTime: args[\"question.DateAndTime\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/12-number/number.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/12-number/number.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/12-number/number.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      NumberVal: args[\"question.NumberVal\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/13-cascade-select/cascade-select.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/13-cascade-select/cascade-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/13-cascade-select/cascade-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      Options: args[\"question.Options\"],\r\n      CascadeOptions: args[\"question.CascadeOptions\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/17-asset-list/asset-list.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/17-asset-list/asset-list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/17-asset-list/asset-list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Assets: args[\"question.Assets\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/16-linked-bool/linked-bool.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/16-linked-bool/linked-bool.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/16-linked-bool/linked-bool.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      YesNoNA: args[\"question.YesNoNA\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    },\r\n    section: {\r\n      ...defaultSection,\r\n      TableTitles: args[\"section.TableTitles\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/19-signature/signature.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/19-signature/signature.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/19-signature/signature.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      AnswerText: args[\"question.AnswerText\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/18-linked-dates/linked-dates.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/18-linked-dates/linked-dates.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/18-linked-dates/linked-dates.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      CascadeOptionsText: args[\"question.CascadeOptionsText\"],\r\n      Required: args[\"question.Required\"],\r\n      DateAndTime: args[\"question.DateAndTime\"],\r\n      DateAndTime2: args[\"question.DateAndTime2\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/29-select-text/select-text.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/29-select-text/select-text.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/29-select-text/select-text.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      Required: args[\"question.Required\"],\r\n      AnswerText: args[\"question.AnswerText\"],\r\n      Options: args[\"question.Options\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/30-cascade-select-text/cascade-select-text.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/30-cascade-select-text/cascade-select-text.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/30-cascade-select-text/cascade-select-text.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<Story>",
                    "defaultValue": "args => ({\r\n  props: {\r\n    ...args,\r\n    question: {\r\n      ...defaultQuestion,\r\n      QuestionText: args[\"question.QuestionText\"],\r\n      CommentsText: args[\"question.CommentsText\"],\r\n      Required: args[\"question.Required\"],\r\n      Options: args[\"question.Options\"],\r\n      CascadeOptions: args[\"question.CascadeOptions\"],\r\n      CanHaveImg: args[\"question.CanHaveImg\"],\r\n      CanHaveFiles: args[\"question.CanHaveFiles\"]\r\n    }\r\n  }\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/extras/camera-capture/camera-capture.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/extras/camera-capture/camera-capture.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/extras/camera-capture/camera-capture.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<CameraCaptureComponent>",
                    "defaultValue": "(args: CameraCaptureComponent) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/extras/file-upload/file-upload.component.stories.ts": [
                {
                    "name": "Default",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/extras/file-upload/file-upload.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/pages/document-builder/components/question-types/extras/file-upload/file-upload.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StoryFn<FileUploadComponent>",
                    "defaultValue": "(args: FileUploadComponent) => ({\r\n  props: args\r\n})"
                }
            ],
            "src/environments/environment.prod.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.prod.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: true,\r\n  siteDocsApi: \"http://localhost:3002/api\",\r\n  apiTimeout: 60000\r\n}"
                }
            ],
            "src/environments/environment.ts": [
                {
                    "name": "environment",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/environments/environment.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  production: false,\r\n  siteDocsApi: \"http://localhost:3002/api\",\r\n  apiTimeout: 60000\r\n}"
                }
            ],
            "src/app/shared/plugins/device.plugin.ts": [
                {
                    "name": "getDeviceString",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/plugins/device.plugin.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize(async () => {\r\n  const info = await Device.getInfo();\r\n  return `${info.model}@${info.platform}@${info.osVersion}`;\r\n})"
                },
                {
                    "name": "getDeviceUuid",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/plugins/device.plugin.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize(async () => {\r\n  const { uuid } = await Device.getId();\r\n  return uuid;\r\n})"
                }
            ],
            "src/app/shared/plugins/platform.plugin.ts": [
                {
                    "name": "isMobileApp",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/plugins/platform.plugin.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "memoize(() => {\r\n  const platform = inject(Platform);\r\n\r\n  return platform.is(\"cordova\");\r\n})"
                }
            ],
            ".storybook/preview.ts": [
                {
                    "name": "preview",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": ".storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Preview",
                    "defaultValue": "{\r\n  globalTypes: {\r\n    iosMode: {\r\n      name: \"IOS Mode\",\r\n      defaultValue: false\r\n    }\r\n  },\r\n  parameters: {\r\n    actions: { argTypesRegex: \"^on[A-Z].*\" },\r\n    controls: {\r\n      matchers: {\r\n        color: /(background|color)$/i,\r\n        date: /Date$/,\r\n      },\r\n    },\r\n  },\r\n  decorators: [\r\n    applicationConfig({\r\n      providers: [\r\n        importProvidersFrom(IonicModule.forRoot({})),\r\n        provideHttpClient(),\r\n        provideHttpClientTesting()\r\n      ]\r\n    }),\r\n    componentWrapperDecorator(story => `<ion-app>${story}</ion-app>`)\r\n  ]\r\n}"
                }
            ],
            "src/app/core/stores/user/user.store.ts": [
                {
                    "name": "setAppUserUpdate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/user/user.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "pipeTap<User>(user => store.update(setAppUser(user)))"
                },
                {
                    "name": "sites$",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/user/user.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "userSelector(user => user?.UserSites || [])"
                },
                {
                    "name": "store",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/user/user.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createStore(\r\n  { name: \"user\" },\r\n  withAppUser()\r\n)"
                },
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/user/user.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "propsFactory(\"appUser\", { initialValue: null as User | null })"
                },
                {
                    "name": "userSelector",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/user/user.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "selector(store.pipe(selectAppUser()))"
                }
            ],
            "src/app/core/stores/asset/asset.store.ts": [
                {
                    "name": "store",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/asset/asset.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createStore(\r\n  { name: \"assets\" },\r\n  withEntities<Asset, \"Id\">({ idKey: \"Id\" })\r\n)"
                }
            ],
            "src/app/core/stores/category-actioners/category-actioners.store.ts": [
                {
                    "name": "store",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/category-actioners/category-actioners.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createStore(\r\n  { name: \"site-documents\" },\r\n  withEntities<CategoryActioner, \"Id\">({ idKey: \"Id\" })\r\n)"
                }
            ],
            "src/app/core/stores/operative/operatives.store.ts": [
                {
                    "name": "store",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/operative/operatives.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createStore(\r\n  { name: \"operatives\" },\r\n  withEntities<Operative, \"ID\">({ idKey: \"ID\" }),\r\n  withSearchResultEntities<OperativeSearchResult, \"ID\">({ idKey: \"ID\" }),\r\n  withRequestsStatus<\"operativesSearch\">()\r\n)"
                },
                {
                    "name": "trackRequestStatus",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/operative/operatives.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createRequestsStatusOperator(store)"
                },
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/operative/operatives.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "searchResultsAdapter()"
                },
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/operative/operatives.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\r\n  ...operativesAdapter(store),\r\n  ...searchResultsAdapt(store)\r\n}"
                }
            ],
            "src/app/core/stores/responsibility-area-types/responsibility-area-types.store.ts": [
                {
                    "name": "store",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/responsibility-area-types/responsibility-area-types.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createStore(\r\n  { name: \"responsibility-area-types\" },\r\n  withEntities<ResponsibilityAreaType, \"Id\">({ idKey: \"Id\" })\r\n)"
                }
            ],
            "src/app/core/stores/site-document/site-document.store.ts": [
                {
                    "name": "store",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/site-document/site-document.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createStore(\r\n  { name: \"site-documents\" },\r\n  withEntities<SiteDocument, \"DocumentID\">({ idKey: \"DocumentID\" })\r\n)"
                }
            ],
            "src/app/core/stores/site-document-image/site-document-image.store.ts": [
                {
                    "name": "store",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/site-document-image/site-document-image.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createStore(\n  { name: \"site-document-image\" }, \n  withEntities<SiteDocumentImage, \"DocumentId\">({ idKey: \"DocumentId\" })\n)"
                }
            ],
            "src/app/core/stores/site-document/form-filler/form-filler.store.ts": [
                {
                    "name": "store",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/site-document/form-filler/form-filler.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "createStore(\r\n  { name: \"form-filler\" },\r\n  withWritingDocument(null as SiteDocument | null),\r\n  withTemplateMenuEntities<TemplateMenuItem, \"Id\">({ idKey: \"Id\", initialValue: [] })\r\n)"
                },
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/site-document/form-filler/form-filler.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "entitiesPropsFactory(\"templateMenu\")"
                },
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/site-document/form-filler/form-filler.store.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "writingDocumentAdapter(store)"
                }
            ],
            "src/app/shared/states/search-results.adapter.ts": [
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/shared/states/search-results.adapter.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "entitiesPropsFactory(\"SearchResult\")"
                }
            ],
            "src/app/core/stores/site-document/adapters/writing-document.adapter.ts": [
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/site-document/adapters/writing-document.adapter.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "propsFactory(\"writingDocument\", { initialValue: null as SiteDocument | null })"
                }
            ],
            "src/app/core/stores/site-document/props/writing-document.props.ts": [
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/site-document/props/writing-document.props.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "propsFactory(\"writingDocument\", { initialValue: null as SiteDocument | null })"
                }
            ],
            "src/app/core/stores/site-document/form-filler/adapters/template-menu.adapter.ts": [
                {
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/core/stores/site-document/form-filler/adapters/template-menu.adapter.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "entitiesPropsFactory(\"templateMenu\")"
                }
            ]
        },
        "groupedFunctions": {
            "src/app/shared/lifecycles/lifecycle-component.ts": [
                {
                    "name": "AngularComponent",
                    "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "ReturnType<T1>",
                    "jsdoctags": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "AngularComponent",
                    "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "AngularComponent",
                    "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h3",
                            "type": "T3",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h3",
                            "type": "T3",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "AngularComponent",
                    "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h3",
                            "type": "T3",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h4",
                            "type": "T4",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h3",
                            "type": "T3",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h4",
                            "type": "T4",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "AngularComponent",
                    "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h3",
                            "type": "T3",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h4",
                            "type": "T4",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h5",
                            "type": "T5",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h3",
                            "type": "T3",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h4",
                            "type": "T4",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h5",
                            "type": "T5",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "AngularComponent",
                    "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h3",
                            "type": "T3",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h4",
                            "type": "T4",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h5",
                            "type": "T5",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "h6",
                            "type": "T6",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "h1",
                            "type": "T1",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h2",
                            "type": "T2",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h3",
                            "type": "T3",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h4",
                            "type": "T4",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h5",
                            "type": "T5",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "h6",
                            "type": "T6",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "AngularComponent",
                    "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                },
                {
                    "name": "AngularComponent",
                    "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "args",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true
                        }
                    ],
                    "returnType": "any",
                    "jsdoctags": [
                        {
                            "name": "args",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "withNoop",
                    "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/states/boolean.state.ts": [
                {
                    "name": "booleanState",
                    "file": "src/app/shared/states/boolean.state.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "name",
                            "type": "AdapterConfig<boolean, BooleanState, TProps>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "131f6c6a-3e6f-4797-be7c-5d4faca4122f",
                            "destructuredParameter": true
                        },
                        {
                            "name": "initialValue",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "131f6c6a-3e6f-4797-be7c-5d4faca4122f",
                            "destructuredParameter": true
                        },
                        {
                            "name": "props",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "131f6c6a-3e6f-4797-be7c-5d4faca4122f",
                            "destructuredParameter": true
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "AdapterConfig<boolean, BooleanState, TProps>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "131f6c6a-3e6f-4797-be7c-5d4faca4122f",
                            "destructuredParameter": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "initialValue",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "131f6c6a-3e6f-4797-be7c-5d4faca4122f",
                            "destructuredParameter": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "props",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "131f6c6a-3e6f-4797-be7c-5d4faca4122f",
                            "destructuredParameter": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/reactions/click.reaction.ts": [
                {
                    "name": "clickReaction",
                    "file": "src/app/shared/reactions/click.reaction.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ],
            "src/app/shared/testing/wait-for.ts": [
                {
                    "name": "createWaitForSelector",
                    "file": "src/app/shared/testing/wait-for.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "spectator",
                            "type": "Spectator",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "WaitForSelector",
                    "jsdoctags": [
                        {
                            "name": "spectator",
                            "type": "Spectator",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/components/upload/upload.component.ts": [
                {
                    "name": "fileReader",
                    "file": "src/app/shared/components/upload/upload.component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "FileReader"
                },
                {
                    "name": "fileToDataUrlFile",
                    "file": "src/app/shared/components/upload/upload.component.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "file",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Promise<DataUrlFile>",
                    "jsdoctags": [
                        {
                            "name": "file",
                            "type": "File",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/plugins/biometric.plugin.ts": [
                {
                    "name": "ifBiometricsIsAvailable",
                    "file": "src/app/shared/plugins/biometric.plugin.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                },
                {
                    "name": "isBiometricAvailable",
                    "file": "src/app/shared/plugins/biometric.plugin.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                },
                {
                    "name": "verifyIdentity",
                    "file": "src/app/shared/plugins/biometric.plugin.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "options",
                            "type": "BiometricOptions",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "options",
                            "type": "BiometricOptions",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "optional": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/core/pages/document-builder/modals/document-builder-modals.import.ts": [
                {
                    "name": "importDocumentBuilderModals",
                    "file": "src/app/core/pages/document-builder/modals/document-builder-modals.import.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ],
            "src/app/core/pages/document-builder/components/input-types/input-types.import.ts": [
                {
                    "name": "importInputTypes",
                    "file": "src/app/core/pages/document-builder/components/input-types/input-types.import.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ],
            "src/app/shared/imports/ng-switch.import.ts": [
                {
                    "name": "importNgSwitch",
                    "file": "src/app/shared/imports/ng-switch.import.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/question-types.import.ts": [
                {
                    "name": "importQuestionTypes",
                    "file": "src/app/core/pages/document-builder/components/question-types/question-types.import.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ],
            "src/app/shared/imports/rx-template.import.ts": [
                {
                    "name": "importRxAutoVirtualScroll",
                    "file": "src/app/shared/imports/rx-template.import.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Visit for more information: <a href=\"https://www.rx-angular.io/docs/template/api/virtual-scrolling#autosizevirtualscrollstrategy\">https://www.rx-angular.io/docs/template/api/virtual-scrolling#autosizevirtualscrollstrategy</a></p>\n",
                    "args": []
                },
                {
                    "name": "importRxDynamicVirtualScroll",
                    "file": "src/app/shared/imports/rx-template.import.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Visit for more information: <a href=\"https://www.rx-angular.io/docs/template/api/virtual-scrolling#dynamicsizevirtualscrollstrategy\">https://www.rx-angular.io/docs/template/api/virtual-scrolling#dynamicsizevirtualscrollstrategy</a></p>\n",
                    "args": []
                },
                {
                    "name": "importRxFixedVirtualScroll",
                    "file": "src/app/shared/imports/rx-template.import.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Visit for more information: <a href=\"https://www.rx-angular.io/docs/template/api/virtual-scrolling#fixedsizevirtualscrollstrategy\">https://www.rx-angular.io/docs/template/api/virtual-scrolling#fixedsizevirtualscrollstrategy</a></p>\n",
                    "args": []
                },
                {
                    "name": "importRxTemplate",
                    "file": "src/app/shared/imports/rx-template.import.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "<p>Documentation can be found here: <a href=\"https://www.rx-angular.io/docs/template\">https://www.rx-angular.io/docs/template</a></p>\n",
                    "args": []
                },
                {
                    "name": "importRxVirtualScroll",
                    "file": "src/app/shared/imports/rx-template.import.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "providers",
                            "type": "Array",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "providers",
                            "type": "Array",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "dotDotDotToken": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/operators/rxjs/is-null.ts": [
                {
                    "name": "isNull",
                    "file": "src/app/shared/operators/rxjs/is-null.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ],
            "src/app/shared/states/number.state.ts": [
                {
                    "name": "numberState",
                    "file": "src/app/shared/states/number.state.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "name",
                            "type": "AdapterConfig<number, NumberState, TProps>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "a3202ad1-5c19-4eb5-aede-a0bed6ae6e65",
                            "destructuredParameter": true
                        },
                        {
                            "name": "initialValue",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "a3202ad1-5c19-4eb5-aede-a0bed6ae6e65",
                            "destructuredParameter": true
                        },
                        {
                            "name": "props",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "a3202ad1-5c19-4eb5-aede-a0bed6ae6e65",
                            "destructuredParameter": true
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "name",
                            "type": "AdapterConfig<number, NumberState, TProps>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "a3202ad1-5c19-4eb5-aede-a0bed6ae6e65",
                            "destructuredParameter": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "initialValue",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "a3202ad1-5c19-4eb5-aede-a0bed6ae6e65",
                            "destructuredParameter": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "props",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "a3202ad1-5c19-4eb5-aede-a0bed6ae6e65",
                            "destructuredParameter": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/core/stores/operative/adapters/operatives.adapter.ts": [
                {
                    "name": "operativesAdapter",
                    "file": "src/app/core/stores/operative/adapters/operatives.adapter.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "store",
                            "type": "Store",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "store",
                            "type": "Store",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "operativeSearchAdapter",
                    "file": "src/app/core/stores/operative/adapters/operatives.adapter.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "store",
                            "type": "AdapterTarget<TState>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "cc43b5fa-8013-47a4-b8fb-f1b3e4fced94",
                            "destructuredParameter": true
                        },
                        {
                            "name": "ref",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "cc43b5fa-8013-47a4-b8fb-f1b3e4fced94",
                            "destructuredParameter": true
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "store",
                            "type": "AdapterTarget<TState>",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "cc43b5fa-8013-47a4-b8fb-f1b3e4fced94",
                            "destructuredParameter": true,
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "ref",
                            "type": "",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "destrucuredGroupId": "cc43b5fa-8013-47a4-b8fb-f1b3e4fced94",
                            "destructuredParameter": true,
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/rxjs/pipes/pipe-tap.ts": [
                {
                    "name": "pipeTap",
                    "file": "src/app/shared/rxjs/pipes/pipe-tap.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "action",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "action",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/reactions/reaction.ts": [
                {
                    "name": "reaction",
                    "file": "src/app/shared/reactions/reaction.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "fn",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "fn",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/states/search-results.adapter.ts": [
                {
                    "name": "searchResultsAdapt",
                    "file": "src/app/shared/states/search-results.adapter.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "store",
                            "type": "Store",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "store",
                            "type": "Store",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "searchResultsAdapter",
                    "file": "src/app/shared/states/search-results.adapter.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": []
                }
            ],
            "src/app/shared/rxjs/selector.ts": [
                {
                    "name": "selector",
                    "file": "src/app/shared/rxjs/selector.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "observable",
                            "type": "Observable",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "observable",
                            "type": "Observable",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/core/stores/site-document/form-filler/adapters/template-menu.adapter.ts": [
                {
                    "name": "templateMenuAdapter",
                    "file": "src/app/core/stores/site-document/form-filler/adapters/template-menu.adapter.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "store",
                            "type": "Store",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "store",
                            "type": "Store",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/lifecycles/angular/with-after-view-init.ts": [
                {
                    "name": "withAfterViewInit",
                    "file": "src/app/shared/lifecycles/angular/with-after-view-init.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/lifecycles/ionic/with-ion-view-did-enter.ts": [
                {
                    "name": "withIonViewDidEnter",
                    "file": "src/app/shared/lifecycles/ionic/with-ion-view-did-enter.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/lifecycles/ionic/with-ion-view-did-leave.ts": [
                {
                    "name": "withIonViewDidLeave",
                    "file": "src/app/shared/lifecycles/ionic/with-ion-view-did-leave.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/lifecycles/ionic/with-ion-view-will-enter.ts": [
                {
                    "name": "withIonViewWillEnter",
                    "file": "src/app/shared/lifecycles/ionic/with-ion-view-will-enter.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/lifecycles/ionic/with-ion-view-will-leave.ts": [
                {
                    "name": "withIonViewWillLeave",
                    "file": "src/app/shared/lifecycles/ionic/with-ion-view-will-leave.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/lifecycles/angular/with-on-changes.ts": [
                {
                    "name": "withOnChanges",
                    "file": "src/app/shared/lifecycles/angular/with-on-changes.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/shared/lifecycles/angular/with-on-init.ts": [
                {
                    "name": "withOnInit",
                    "file": "src/app/shared/lifecycles/angular/with-on-init.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "Base",
                            "type": "TBase",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/core/stores/site-document/props/writing-document.props.ts": [
                {
                    "name": "writingDocumentActions",
                    "file": "src/app/core/stores/site-document/props/writing-document.props.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "store",
                            "type": "Store",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "store",
                            "type": "Store",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "src/app/core/stores/site-document/adapters/writing-document.adapter.ts": [
                {
                    "name": "writingDocumentAdapter",
                    "file": "src/app/core/stores/site-document/adapters/writing-document.adapter.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "store",
                            "type": "Store",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "jsdoctags": [
                        {
                            "name": "store",
                            "type": "Store",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {
            "src/app/core/stores/site-document/models/site-document.model.ts": [
                {
                    "name": "QuestionType",
                    "childs": [
                        {
                            "name": "Label",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 0
                        },
                        {
                            "name": "Checkbox",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 1
                        },
                        {
                            "name": "RadioGroup",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 2
                        },
                        {
                            "name": "Textbox",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 3
                        },
                        {
                            "name": "TextArea",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 4
                        },
                        {
                            "name": "Select",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 5
                        },
                        {
                            "name": "CheckboxTextbox",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 6
                        },
                        {
                            "name": "RadioGroupTextbox",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 7
                        },
                        {
                            "name": "Date",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 8
                        },
                        {
                            "name": "DateTime",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 9
                        },
                        {
                            "name": "OperativeList",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 10
                        },
                        {
                            "name": "WallOfText",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 11
                        },
                        {
                            "name": "Number",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 12
                        },
                        {
                            "name": "CascadeDropdown",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 13
                        },
                        {
                            "name": "LinkedBool",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 16
                        },
                        {
                            "name": "AssetList",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 17
                        },
                        {
                            "name": "LinkedDates",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 18
                        },
                        {
                            "name": "Signature",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 19
                        },
                        {
                            "name": "CompanySelect",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 21
                        },
                        {
                            "name": "AreaSelect",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 22
                        },
                        {
                            "name": "AssetGroupsAndTypes",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 25
                        },
                        {
                            "name": "AssetInspectionSchedule",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 26
                        },
                        {
                            "name": "ProjectSelect",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 27
                        },
                        {
                            "name": "RamsSelect",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 28
                        },
                        {
                            "name": "SelectText",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 29
                        },
                        {
                            "name": "CascadeDropdownText",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 30
                        },
                        {
                            "name": "MultiCascade",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 31
                        },
                        {
                            "name": "Time",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 32
                        },
                        {
                            "name": "LinkedTimes",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 33
                        },
                        {
                            "name": "HRASelect",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 34
                        },
                        {
                            "name": "MultiCheckbox",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 35
                        },
                        {
                            "name": "LinkedDateAndTime",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "value": 36
                        }
                    ],
                    "ctype": "miscellaneous",
                    "subtype": "enum",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "file": "src/app/core/stores/site-document/models/site-document.model.ts"
                }
            ]
        },
        "groupedTypeAliases": {
            "src/app/shared/lifecycles/lifecycle-component.ts": [
                {
                    "name": "AnyFunction",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "function",
                    "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 178
                },
                {
                    "name": "ReactiveConstructor",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/shared/lifecycles/lifecycle-component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 179
                }
            ],
            "src/app/shared/types/prefix.type.ts": [
                {
                    "name": "Prefix",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/shared/types/prefix.type.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 194
                }
            ],
            "src/app/core/stores/operative/adapters/operatives.adapter.ts": [
                {
                    "name": "SearchEntitiesRef",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "EntitiesRef<SearchResultEntities | SearchResultIds | idKeySearchResult>",
                    "file": "src/app/core/stores/operative/adapters/operatives.adapter.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 177
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/00-label/label.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/00-label/label.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/01-checkbox/checkbox.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/01-checkbox/checkbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/02-radio-group/radio-group.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/02-radio-group/radio-group.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/02-radio-table/radio-table.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/02-radio-table/radio-table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/03-textbox/textbox.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/03-textbox/textbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/04-textarea/textarea.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/04-textarea/textarea.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/07-radio-group-textbox/radio-group-textbox.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/07-radio-group-textbox/radio-group-textbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/05-select/select.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/05-select/select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/06-checkbox-textbox/checkbox-textbox.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/06-checkbox-textbox/checkbox-textbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/07-radio-table-textbox/radio-table-textbox.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/07-radio-table-textbox/radio-table-textbox.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/08-date/date.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/08-date/date.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/10-operative-list/operative-list.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/10-operative-list/operative-list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/09-datetime/datetime.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/09-datetime/datetime.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/12-number/number.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/12-number/number.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/13-cascade-select/cascade-select.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/13-cascade-select/cascade-select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/17-asset-list/asset-list.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/17-asset-list/asset-list.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/16-linked-bool/linked-bool.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/16-linked-bool/linked-bool.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/19-signature/signature.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/19-signature/signature.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/18-linked-dates/linked-dates.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/18-linked-dates/linked-dates.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/29-select-text/select-text.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/29-select-text/select-text.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/core/pages/document-builder/components/question-types/30-cascade-select-text/cascade-select-text.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/app/core/pages/document-builder/components/question-types/30-cascade-select-text/cascade-select-text.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/shared/testing/wait-for.ts": [
                {
                    "name": "WaitForSelector",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "function",
                    "file": "src/app/shared/testing/wait-for.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 178
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 1,
        "status": "low",
        "files": [
            {
                "filePath": ".storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "preview",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/child-document-card/child-document-card.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ChildDocumentCardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/document-page/document-page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DocumentPageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/document-section/document-section.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DocumentSectionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/document-section/document-section.component.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "QuestionTemplateDirective",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/actioner-select/actioner-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/actioner-select/actioner-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/actioner-select/actioner-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ActionerSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/category-actioner-select/category-actioner-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CategoryActionerSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/company-actioner-select/company-actioner-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/company-actioner-select/company-actioner-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PrepopulatedCompany",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/company-actioner-select/company-actioner-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/company-actioner-select/company-actioner-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "userStoreMock",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/company-actioner-select/company-actioner-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CompanyActionerSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/document-image-upload/document-image-upload.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/document-image-upload/document-image-upload.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/document-image-upload/document-image-upload.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DocumentImageUploadComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/input-types.import.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "importInputTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/queue-duration/queue-duration.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/queue-duration/queue-duration.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/queue-duration/queue-duration.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "QueueDurationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Prepopulated",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "queues",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/queue-select/queue-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "QueueSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/remain-anonymous/remain-anonymous.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/remain-anonymous/remain-anonymous.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/remain-anonymous/remain-anonymous.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RemainAnonymousComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/responsibility-area-select/responsibility-area-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/responsibility-area-select/responsibility-area-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NoResponsibilityAreasExample",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/responsibility-area-select/responsibility-area-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "resAreaType",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/responsibility-area-select/responsibility-area-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "responsibilityAreaTypesStore",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/responsibility-area-select/responsibility-area-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/responsibility-area-select/responsibility-area-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ResponsibilityAreaSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/site-select/site-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/site-select/site-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PrepopulatedSite",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/site-select/site-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/site-select/site-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "userStoreMock",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/input-types/site-select/site-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SiteSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/multi-checkbox-section/multi-checkbox-section.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/multi-checkbox-section/multi-checkbox-section.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/multi-checkbox-section/multi-checkbox-section.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MultiCheckboxSectionComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/00-label/label.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/00-label/label.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/00-label/label.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LabelComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/01-checkbox/checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/01-checkbox/checkbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/01-checkbox/checkbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/02-radio-group/radio-group.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/02-radio-group/radio-group.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/02-radio-group/radio-group.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RadioGroupComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/02-radio-table/radio-table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/02-radio-table/radio-table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/02-radio-table/radio-table.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RadioTableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/03-textbox/textbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/03-textbox/textbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/03-textbox/textbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/04-textarea/textarea.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/04-textarea/textarea.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/04-textarea/textarea.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextareaComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/05-select/select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/05-select/select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/05-select/select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/06-checkbox-textbox/checkbox-textbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/06-checkbox-textbox/checkbox-textbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/06-checkbox-textbox/checkbox-textbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CheckboxTextboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/07-radio-group-textbox/radio-group-textbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/07-radio-group-textbox/radio-group-textbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/07-radio-group-textbox/radio-group-textbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RadioGroupTextboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/07-radio-table-textbox/radio-table-textbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/07-radio-table-textbox/radio-table-textbox.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/07-radio-table-textbox/radio-table-textbox.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "RadioTableTextboxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/08-date/date.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/08-date/date.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/08-date/date.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DateComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/09-datetime/datetime.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/09-datetime/datetime.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/09-datetime/datetime.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DatetimeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/10-operative-list/operative-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/10-operative-list/operative-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/10-operative-list/operative-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OperativeListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/12-number/number.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/12-number/number.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/12-number/number.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "NumberComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/13-cascade-select/cascade-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/13-cascade-select/cascade-select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/13-cascade-select/cascade-select.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CascadeSelectComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/16-linked-bool/linked-bool.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/16-linked-bool/linked-bool.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/16-linked-bool/linked-bool.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LinkedBoolComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/17-asset-list/asset-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/17-asset-list/asset-list.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/17-asset-list/asset-list.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AssetListComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/18-linked-dates/linked-dates.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/18-linked-dates/linked-dates.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/18-linked-dates/linked-dates.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LinkedDatesComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/19-signature/signature.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/19-signature/signature.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/19-signature/signature.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SignatureComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/29-select-text/select-text.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/29-select-text/select-text.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/29-select-text/select-text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectTextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/30-cascade-select-text/cascade-select-text.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/30-cascade-select-text/cascade-select-text.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/30-cascade-select-text/cascade-select-text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CascadeSelectTextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/32-time/time.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TimeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/33-linked-time/linked-time.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LinkedTimeComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/extras/camera-capture/camera-capture.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/extras/camera-capture/camera-capture.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/extras/camera-capture/camera-capture.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CameraCaptureComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/extras/file-upload/file-upload.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/extras/file-upload/file-upload.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/extras/file-upload/file-upload.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "FileUploadComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/extras/question-text/question-text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "QuestionTextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/components/question-types/question-types.import.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "importQuestionTypes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultDoc",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DocumentWithAllPermissionsTurnedOn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DocumentWithMultiplePages",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "docWithAllPermissionsOn",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "docWithMultiplePages",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "formFillerRouteMock",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "formFillerStoreMock",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/document-builder.page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/document-builder.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "DocumentBuilderPage",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/document-builder.route.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "DocumentBuilderRoute",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/modals/document-builder-modals.import.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "importDocumentBuilderModals",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/modals/document-summary/document-summary.modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/modals/document-summary/document-summary.modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "defaultDoc",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/modals/document-summary/document-summary.modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/modals/document-summary/document-summary.modal.ts",
                "type": "component",
                "linktype": "component",
                "name": "DocumentSummaryModal",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/document-builder/modals/template-menu/template-menu.modal.ts",
                "type": "component",
                "linktype": "component",
                "name": "TemplateMenuModal",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/registration/registration.page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/registration/registration.page.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/pages/registration/registration.page.ts",
                "type": "component",
                "linktype": "component",
                "name": "RegistrationPage",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/asset/asset.store.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AssetStore",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/asset/asset.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Asset",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/asset/asset.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "store",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/category-actioners/category-actioners.store.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "CategoryActionersStore",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/category-actioners/category-actioners.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CategoryActioner",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/category-actioners/category-actioners.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "store",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/live-queues/live-queues.store.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "LiveQueuesStore",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/operative/adapters/operatives.adapter.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AdapterTarget",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/operative/adapters/operatives.adapter.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "EntitiesType",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/operative/adapters/operatives.adapter.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SearchEntitiesType",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/operative/adapters/operatives.adapter.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "operativesAdapter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/operative/adapters/operatives.adapter.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "operativeSearchAdapter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/operative/operatives.store.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "OperativesStore",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/operative/operatives.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Operative",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/operative/operatives.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "OperativeSearchParams",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/operative/operatives.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "OperativeSearchResult",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/operative/operatives.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "store",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/operative/operatives.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "trackRequestStatus",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/operative/operatives.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/operative/operatives.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/responsibility-area-types/responsibility-area-types.store.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "ResponsibilityAreaTypesStore",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/responsibility-area-types/responsibility-area-types.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ResponsibilityArea",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/responsibility-area-types/responsibility-area-types.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "ResponsibilityAreaType",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/responsibility-area-types/responsibility-area-types.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "store",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document-image/site-document-image.store.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SiteDocumentImageStore",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document-image/site-document-image.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "store",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/adapters/writing-document.adapter.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "writingDocumentAdapter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/adapters/writing-document.adapter.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/form-filler/adapters/template-menu.adapter.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TemplateMenuItem",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/form-filler/adapters/template-menu.adapter.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "templateMenuAdapter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/form-filler/adapters/template-menu.adapter.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/form-filler/form-filler.store.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "FormFillerStore",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/form-filler/form-filler.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TemplateMenuItem",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/form-filler/form-filler.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "store",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/form-filler/form-filler.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/form-filler/form-filler.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/models/site-document.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "CascadeOption",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/models/site-document.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Page",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/models/site-document.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Question",
                "coveragePercent": 0,
                "coverageCount": "0/19",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/models/site-document.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Section",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/models/site-document.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SelectOption",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/models/site-document.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SelectOptionMetaData",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/models/site-document.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SiteDocument",
                "coveragePercent": 0,
                "coverageCount": "0/29",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/models/site-document.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SiteDocumentAsset",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/models/site-document.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SiteDocumentImage",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/models/site-document.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SiteDocumentMetaData",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/models/site-document.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SiteDocumentOperative",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/props/writing-document.props.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "writingDocumentActions",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/props/writing-document.props.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/site-document.store.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SiteDocumentStore",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/site-document/site-document.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "store",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/user/user.store.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "UserStore",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/user/user.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Company",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/user/user.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "Site",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/user/user.store.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/62",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/user/user.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "setAppUserUpdate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/user/user.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "sites$",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/user/user.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "store",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/user/user.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/core/stores/user/user.store.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "userSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/camera/camera.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/camera/camera.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/camera/camera.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "CameraComponent",
                "coveragePercent": 0,
                "coverageCount": "0/9",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/datetime-picker/datetime-picker.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DateOnly",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/datetime-picker/datetime-picker.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/datetime-picker/datetime-picker.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/datetime-picker/datetime-picker.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DatetimePickerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/if/if.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IfComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/multi-selectable/multi-selectable.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/multi-selectable/multi-selectable.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/multi-selectable/multi-selectable.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "MultiSelectableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/selectable/selectable.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/selectable/selectable.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ObjectSelectable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/selectable/selectable.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "PrepopulatedSelectable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/selectable/selectable.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/selectable/selectable.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "SelectableComponent",
                "coveragePercent": 0,
                "coverageCount": "0/10",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/upload/upload.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "UploadComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/upload/upload.component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "fileReader",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/components/upload/upload.component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "fileToDataUrlFile",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/directives/barcode-scanner/barcode-scanner.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "BarcodeScannerDirective",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/directives/camera/camera.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "CameraDirective",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/directives/date/date.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "DateDirective",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/directives/photo-viewer/photo-viewer.directive.ts",
                "type": "directive",
                "linktype": "directive",
                "name": "PhotoViewerDirective",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/imports/ng-switch.import.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "importNgSwitch",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/imports/rx-template.import.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "importRxAutoVirtualScroll",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/imports/rx-template.import.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "importRxDynamicVirtualScroll",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/imports/rx-template.import.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "importRxFixedVirtualScroll",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/imports/rx-template.import.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "importRxTemplate",
                "coveragePercent": 100,
                "coverageCount": "1/1",
                "status": "very-good"
            },
            {
                "filePath": "src/app/shared/imports/rx-template.import.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "importRxVirtualScroll",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/angular/with-after-view-init.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "withAfterViewInit",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/angular/with-on-changes.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "withOnChanges",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/angular/with-on-init.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "withOnInit",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/ionic/with-ion-view-did-enter.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "withIonViewDidEnter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/ionic/with-ion-view-did-leave.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "withIonViewDidLeave",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/ionic/with-ion-view-will-enter.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "withIonViewWillEnter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/ionic/with-ion-view-will-leave.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "withIonViewWillLeave",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ReactiveComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "AngularComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "AngularComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "AngularComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "AngularComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "AngularComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "AngularComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "AngularComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "AngularComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/lifecycles/lifecycle-component.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "withNoop",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/asset-list/asset-list.modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/asset-list/asset-list.modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/asset-list/asset-list.modal.ts",
                "type": "component",
                "linktype": "component",
                "name": "AssetListModal",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/asset-list/components/local-asset-search/local-asset-search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LocalAssetSearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/asset-list/components/online-asset-search/online-asset-search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OnlineAssetSearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/operative-list/components/local-operative-search/local-operative-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/operative-list/components/local-operative-search/local-operative-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "operatives",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/operative-list/components/local-operative-search/local-operative-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/operative-list/components/local-operative-search/local-operative-search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LocalOperativeSearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/operative-list/components/online-operative-search/online-operative-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/operative-list/components/online-operative-search/online-operative-search.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/operative-list/components/online-operative-search/online-operative-search.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "OnlineOperativeSearchComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/operative-list/operative-list.modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Default",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/operative-list/operative-list.modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "operatives",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/operative-list/operative-list.modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "operativesStore",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/operative-list/operative-list.modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "searchResults",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/operative-list/operative-list.modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/operative-list/operative-list.modal.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "userStore",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/modals/operative-list/operative-list.modal.ts",
                "type": "component",
                "linktype": "component",
                "name": "OperativeListModal",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/events/target-event.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "TargetEvent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/models/files/data-url-file.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "DataUrlFile",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/operators/rxjs/is-null.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "isNull",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/pipes/fuse/fuse.pipe.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "FuseOptions",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/pipes/fuse/fuse.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "FusePipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/pipes/utc-date/utc-date.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "UtcDatePipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/pipes/utc-datetime/utc-date-time.pipe.ts",
                "type": "pipe",
                "linktype": "pipe",
                "name": "UtcDateTimePipe",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/plugins/biometric.plugin.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "ifBiometricsIsAvailable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/plugins/biometric.plugin.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "isBiometricAvailable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/plugins/biometric.plugin.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "verifyIdentity",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/plugins/device.plugin.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getDeviceString",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/plugins/device.plugin.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "getDeviceUuid",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/plugins/platform.plugin.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "isMobileApp",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/reactions/click.reaction.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "clickReaction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/reactions/reaction.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "reaction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/rxjs/pipes/pipe-tap.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "pipeTap",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/rxjs/selector.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "selector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/services/onesignal/onesignal.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "OneSignalService",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/states/adapter-config.model.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "AdapterConfig",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/states/boolean.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "BooleanState",
                "coveragePercent": 0,
                "coverageCount": "0/4",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/states/boolean.state.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "booleanState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/states/number.state.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "NumberState",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/states/number.state.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "numberState",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/states/search-results.adapter.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "SearchEntitiesType",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/states/search-results.adapter.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "searchResultsAdapt",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/states/search-results.adapter.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "searchResultsAdapter",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/states/search-results.adapter.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/shared/testing/wait-for.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "createWaitForSelector",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.prod.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/environments/environment.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "environment",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}